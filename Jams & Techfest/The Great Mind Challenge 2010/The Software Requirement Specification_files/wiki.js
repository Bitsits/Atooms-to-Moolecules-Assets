
var djConfig = {
   baseUrl: "/developerworks/mydeveloperworks/wikis/static/js/20101010.172603/dojo/",
   locale: "en",
   dojoBlankHtmlUrl: "/developerworks/mydeveloperworks/wikis/templates/blank.html",
   usePlainJson: true
};

var ibmConfig = {
   proxyURL: "/developerworks/mydeveloperworks/wikis/proxy/",
   contextRootEnabler: "/developerworks/mydeveloperworks/wikis/"
};
/*
	Copyright (c) 2004-2008, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/
/* JavaScript in the lconn, com, semtag, and quickr packages are (C) Copyright IBM Corp.  2008,2009  All Rights Reserved. */

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

(function(){
var _1=null;
if((_1||(typeof djConfig!="undefined"&&djConfig.scopeMap))&&(typeof window!="undefined")){
var _2="",_3="",_4="",_5={},_6={};
_1=_1||djConfig.scopeMap;
for(var i=0;i<_1.length;i++){
var _8=_1[i];
_2+="var "+_8[0]+" = {}; "+_8[1]+" = "+_8[0]+";"+_8[1]+"._scopeName = '"+_8[1]+"';";
_3+=(i==0?"":",")+_8[0];
_4+=(i==0?"":",")+_8[1];
_5[_8[0]]=_8[1];
_6[_8[1]]=_8[0];
}
eval(_2+"dojo._scopeArgs = ["+_4+"];");
dojo._scopePrefixArgs=_3;
dojo._scopePrefix="(function("+_3+"){";
dojo._scopeSuffix="})("+_4+")";
dojo._scopeMap=_5;
dojo._scopeMapRev=_6;
}
(function(){
if(this["navigator"]){
if(/3[\.0-9]+ Safari/.test(navigator.appVersion)&&this["console"]){
this.console={_c:this.console,log:function(s){
this._c.log(s);
},info:function(s){
this._c.info(s);
},error:function(s){
this._c.error(s);
},warn:function(s){
this._c.warn(s);
}};
}
}
if(!this["console"]){
this.console={};
}
var cn=["assert","count","debug","dir","dirxml","error","group","groupEnd","info","profile","profileEnd","time","timeEnd","trace","warn","log"];
var i=0,tn;
while((tn=cn[i++])){
if(!console[tn]){
(function(){
var tcn=tn+"";
console[tcn]=("log" in console)?function(){
var a=Array.apply({},arguments);
a.unshift(tcn+":");
console["log"](a.join(" "));
}:function(){
};
})();
}
}
if(typeof dojo=="undefined"){
this.dojo={_scopeName:"dojo",_scopePrefix:"",_scopePrefixArgs:"",_scopeSuffix:"",_scopeMap:{},_scopeMapRev:{}};
}
var d=dojo;
if(typeof dijit=="undefined"){
this.dijit={_scopeName:"dijit"};
}
if(typeof dojox=="undefined"){
this.dojox={_scopeName:"dojox"};
}
if(!d._scopeArgs){
d._scopeArgs=[dojo,dijit,dojox];
}
d.global=this;
d.config={isDebug:false,debugAtAllCosts:false};
if(typeof djConfig!="undefined"){
for(var opt in djConfig){
d.config[opt]=djConfig[opt];
}
}
var _14=["Browser","Rhino","Spidermonkey","Mobile"];
var t;
while((t=_14.shift())){
d["is"+t]=false;
}
dojo.locale=d.config.locale;
var rev="$Rev: 15997 $".match(/\d+/);
dojo.version={major:0,minor:0,patch:0,flag:"dev",revision:rev?+rev[0]:999999,toString:function(){
with(d.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
if(typeof OpenAjax!="undefined"){
OpenAjax.hub.registerLibrary(dojo._scopeName,"http://dojotoolkit.org",d.version.toString());
}
dojo._mixin=function(obj,_18){
var _19={};
for(var x in _18){
if(_19[x]===undefined||_19[x]!=_18[x]){
obj[x]=_18[x];
}
}
if(d["isIE"]&&_18){
var p=_18.toString;
if(typeof p=="function"&&p!=obj.toString&&p!=_19.toString&&p!="\nfunction toString() {\n    [native code]\n}\n"){
obj.toString=_18.toString;
}
}
return obj;
};
dojo.mixin=function(obj,_1d){
for(var i=1,l=arguments.length;i<l;i++){
d._mixin(obj,arguments[i]);
}
return obj;
};
dojo._getProp=function(_20,_21,_22){
var obj=_22||d.global;
for(var i=0,p;obj&&(p=_20[i]);i++){
if(i==0&&this._scopeMap[p]){
p=this._scopeMap[p];
}
obj=(p in obj?obj[p]:(_21?obj[p]={}:undefined));
}
return obj;
};
dojo.setObject=function(_26,_27,_28){
var _29=_26.split("."),p=_29.pop(),obj=d._getProp(_29,true,_28);
return obj&&p?(obj[p]=_27):undefined;
};
dojo.getObject=function(_2c,_2d,_2e){
return d._getProp(_2c.split("."),_2d,_2e);
};
dojo.exists=function(_2f,obj){
return !!d.getObject(_2f,false,obj);
};
dojo["eval"]=function(_31){
return d.global.eval?d.global.eval(_31):eval(_31);
};
d.deprecated=d.experimental=function(){
};
})();
(function(){
var d=dojo;
d.mixin(d,{_loadedModules:{},_inFlightCount:0,_hasResource:{},_modulePrefixes:{dojo:{name:"dojo",value:"."},doh:{name:"doh",value:"../util/doh"},tests:{name:"tests",value:"tests"}},_moduleHasPrefix:function(_33){
var mp=this._modulePrefixes;
return !!(mp[_33]&&mp[_33].value);
},_getModulePrefix:function(_35){
var mp=this._modulePrefixes;
if(this._moduleHasPrefix(_35)){
return mp[_35].value;
}
return _35;
},_loadedUrls:[],_postLoad:false,_loaders:[],_unloaders:[],_loadNotifying:false});
dojo._loadPath=function(_37,_38,cb){
var uri=((_37.charAt(0)=="/"||_37.match(/^\w+:/))?"":this.baseUrl)+_37;
try{
return !_38?this._loadUri(uri,cb):this._loadUriAndCheck(uri,_38,cb);
}
catch(e){
console.error(e);
return false;
}
};
dojo._loadUri=function(uri,cb){
if(this._loadedUrls[uri]){
return true;
}
var _3d=this._getText(uri,true);
if(!_3d){
return false;
}
this._loadedUrls[uri]=true;
this._loadedUrls.push(uri);
if(cb){
_3d="("+_3d+")";
}else{
_3d=this._scopePrefix+_3d+this._scopeSuffix;
}
if(d.isMoz){
_3d+="\r\n//@ sourceURL="+uri;
}
var _3e=d["eval"](_3d);
if(cb){
cb(_3e);
}
return true;
};
dojo._loadUriAndCheck=function(uri,_40,cb){
var ok=false;
try{
ok=this._loadUri(uri,cb);
}
catch(e){
console.error("failed loading "+uri+" with error: "+e);
}
return !!(ok&&this._loadedModules[_40]);
};
dojo.loaded=function(){
this._loadNotifying=true;
this._postLoad=true;
var mll=d._loaders;
this._loaders=[];
for(var x=0;x<mll.length;x++){
mll[x]();
}
this._loadNotifying=false;
if(d._postLoad&&d._inFlightCount==0&&mll.length){
d._callLoaded();
}
};
dojo.unloaded=function(){
var mll=this._unloaders;
while(mll.length){
(mll.pop())();
}
};
d._onto=function(arr,obj,fn){
if(!fn){
arr.push(obj);
}else{
if(fn){
var _49=(typeof fn=="string")?obj[fn]:fn;
arr.push(function(){
_49.call(obj);
});
}
}
};
dojo.addOnLoad=function(obj,_4b){
d._onto(d._loaders,obj,_4b);
if(d._postLoad&&d._inFlightCount==0&&!d._loadNotifying){
d._callLoaded();
}
};
var dca=d.config.addOnLoad;
if(dca){
d.addOnLoad[(dca instanceof Array?"apply":"call")](d,dca);
}
dojo.addOnUnload=function(obj,_4e){
d._onto(d._unloaders,obj,_4e);
};
dojo._modulesLoaded=function(){
if(d._postLoad){
return;
}
if(d._inFlightCount>0){
console.warn("files still in flight!");
return;
}
d._callLoaded();
};
dojo._callLoaded=function(){
if(typeof setTimeout=="object"||(dojo.config.useXDomain&&d.isOpera)){
if(dojo.isAIR){
setTimeout(function(){
dojo.loaded();
},0);
}else{
setTimeout(dojo._scopeName+".loaded();",0);
}
}else{
d.loaded();
}
};
dojo._getModuleSymbols=function(_4f){
var _50=_4f.split(".");
for(var i=_50.length;i>0;i--){
var _52=_50.slice(0,i).join(".");
if((i==1)&&!this._moduleHasPrefix(_52)){
_50[0]="../"+_50[0];
}else{
var _53=this._getModulePrefix(_52);
if(_53!=_52){
_50.splice(0,i,_53);
break;
}
}
}
return _50;
};
dojo._global_omit_module_check=false;
dojo.loadInit=function(_54){
_54();
};
dojo._loadModule=dojo.require=function(_55,_56){
_56=this._global_omit_module_check||_56;
var _57=this._loadedModules[_55];
if(_57){
return _57;
}
var _58=this._getModuleSymbols(_55).join("/")+".js";
var _59=(!_56)?_55:null;
var ok=this._loadPath(_58,_59);
if(!ok&&!_56){
throw new Error("Could not load '"+_55+"'; last tried '"+_58+"'");
}
if(!_56&&!this._isXDomain){
_57=this._loadedModules[_55];
if(!_57){
throw new Error("symbol '"+_55+"' is not defined after loading '"+_58+"'");
}
}
return _57;
};
dojo.provide=function(_5b){
_5b=_5b+"";
return (d._loadedModules[_5b]=d.getObject(_5b,true));
};
dojo.platformRequire=function(_5c){
var _5d=_5c.common||[];
var _5e=_5d.concat(_5c[d._name]||_5c["default"]||[]);
for(var x=0;x<_5e.length;x++){
var _60=_5e[x];
if(_60.constructor==Array){
d._loadModule.apply(d,_60);
}else{
d._loadModule(_60);
}
}
};
dojo.requireIf=function(_61,_62){
if(_61===true){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
d.require.apply(d,_63);
}
};
dojo.requireAfterIf=d.requireIf;
dojo.registerModulePath=function(_65,_66){
d._modulePrefixes[_65]={name:_65,value:_66};
};
dojo.requireLocalization=function(_67,_68,_69,_6a){
d.require("dojo.i18n");
d.i18n._requireLocalization.apply(d.hostenv,arguments);
};
var ore=new RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$");
var ire=new RegExp("^((([^\\[:]+):)?([^@]+)@)?(\\[([^\\]]+)\\]|([^\\[:]*))(:([0-9]+))?$");
dojo._Url=function(){
var n=null;
var _a=arguments;
var uri=[_a[0]];
for(var i=1;i<_a.length;i++){
if(!_a[i]){
continue;
}
var _71=new d._Url(_a[i]+"");
var _72=new d._Url(uri[0]+"");
if(_71.path==""&&!_71.scheme&&!_71.authority&&!_71.query){
if(_71.fragment!=n){
_72.fragment=_71.fragment;
}
_71=_72;
}else{
if(!_71.scheme){
_71.scheme=_72.scheme;
if(!_71.authority){
_71.authority=_72.authority;
if(_71.path.charAt(0)!="/"){
var _73=_72.path.substring(0,_72.path.lastIndexOf("/")+1)+_71.path;
var _74=_73.split("/");
for(var j=0;j<_74.length;j++){
if(_74[j]=="."){
if(j==_74.length-1){
_74[j]="";
}else{
_74.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&_74[0]=="")&&_74[j]==".."&&_74[j-1]!=".."){
if(j==(_74.length-1)){
_74.splice(j,1);
_74[j-1]="";
}else{
_74.splice(j-1,2);
j-=2;
}
}
}
}
_71.path=_74.join("/");
}
}
}
}
uri=[];
if(_71.scheme){
uri.push(_71.scheme,":");
}
if(_71.authority){
uri.push("//",_71.authority);
}
uri.push(_71.path);
if(_71.query){
uri.push("?",_71.query);
}
if(_71.fragment){
uri.push("#",_71.fragment);
}
}
this.uri=uri.join("");
var r=this.uri.match(ore);
this.scheme=r[2]||(r[1]?"":n);
this.authority=r[4]||(r[3]?"":n);
this.path=r[5];
this.query=r[7]||(r[6]?"":n);
this.fragment=r[9]||(r[8]?"":n);
if(this.authority!=n){
r=this.authority.match(ire);
this.user=r[3]||n;
this.password=r[4]||n;
this.host=r[6]||r[7];
this.port=r[9]||n;
}
};
dojo._Url.prototype.toString=function(){
return this.uri;
};
dojo.moduleUrl=function(_77,url){
var loc=d._getModuleSymbols(_77).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
var _7a=loc.indexOf(":");
if(loc.charAt(0)!="/"&&(_7a==-1||_7a>loc.indexOf("/"))){
loc=d.baseUrl+loc;
}
return new d._Url(loc,url);
};
})();
if(typeof window!="undefined"){
dojo.isBrowser=true;
dojo._name="browser";
(function(){
var d=dojo;
if(document&&document.getElementsByTagName){
var _7c=document.getElementsByTagName("script");
var _7d=/dojo(\.xd)?\.js(\W|$)/i;
for(var i=0;i<_7c.length;i++){
var src=_7c[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_7d);
if(m){
if(!d.config.baseUrl){
d.config.baseUrl=src.substring(0,m.index);
}
var cfg=_7c[i].getAttribute("djConfig");
if(cfg){
var _82=eval("({ "+cfg+" })");
for(var x in _82){
dojo.config[x]=_82[x];
}
}
break;
}
}
}
d.baseUrl=d.config.baseUrl;
var n=navigator;
var dua=n.userAgent;
var dav=n.appVersion;
var tv=parseFloat(dav);
if(dua.indexOf("Opera")>=0){
d.isOpera=tv;
}
var _88=Math.max(dav.indexOf("WebKit"),dav.indexOf("Safari"),0);
if(_88){
d.isSafari=parseFloat(dav.split("Version/")[1])||(parseFloat(dav.substr(_88+7))>419.3)?3:2;
}
if(dua.indexOf("AdobeAIR")>=0){
d.isAIR=1;
}
if(dav.indexOf("Konqueror")>=0||d.isSafari){
d.isKhtml=tv;
}
if(dua.indexOf("Gecko")>=0&&!d.isKhtml){
d.isMozilla=d.isMoz=tv;
}
if(d.isMoz){
d.isFF=parseFloat(dua.split("Firefox/")[1])||undefined;
}
if(document.all&&!d.isOpera){
d.isIE=parseFloat(dav.split("MSIE ")[1])||undefined;
}
if(dojo.isIE&&window.location.protocol==="file:"){
dojo.config.ieForceActiveXXhr=true;
}
var cm=document.compatMode;
d.isQuirks=cm=="BackCompat"||cm=="QuirksMode"||d.isIE<6;
d.locale=dojo.config.locale||(d.isIE?n.userLanguage:n.language).toLowerCase();
d._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
d._xhrObj=function(){
var _8a=null;
var _8b=null;
if(!dojo.isIE||!dojo.config.ieForceActiveXXhr){
try{
_8a=new XMLHttpRequest();
}
catch(e){
}
}
if(!_8a){
for(var i=0;i<3;++i){
var _8d=d._XMLHTTP_PROGIDS[i];
try{
_8a=new ActiveXObject(_8d);
}
catch(e){
_8b=e;
}
if(_8a){
d._XMLHTTP_PROGIDS=[_8d];
break;
}
}
}
if(!_8a){
throw new Error("XMLHTTP not available: "+_8b);
}
return _8a;
};
d._isDocumentOk=function(_8e){
var _8f=_8e.status||0;
return (_8f>=200&&_8f<300)||_8f==304||_8f==1223||(!_8f&&(location.protocol=="file:"||location.protocol=="chrome:"));
};
var _90=window.location+"";
var _91=document.getElementsByTagName("base");
var _92=(_91&&_91.length>0);
d._getText=function(uri,_94){
var _95=this._xhrObj();
if(!_92&&dojo._Url){
uri=(new dojo._Url(_90,uri)).toString();
}
if(d.config.cacheBust){
uri+="";
uri+=(uri.indexOf("?")==-1?"?":"&")+String(d.config.cacheBust).replace(/\W+/g,"");
}
_95.open("GET",uri,false);
try{
_95.send(null);
if(!d._isDocumentOk(_95)){
var err=Error("Unable to load "+uri+" status:"+_95.status);
err.status=_95.status;
err.responseText=_95.responseText;
throw err;
}
}
catch(e){
if(_94){
return null;
}
throw e;
}
return _95.responseText;
};
d._windowUnloaders=[];
d.windowUnloaded=function(){
var mll=this._windowUnloaders;
while(mll.length){
(mll.pop())();
}
};
d.addOnWindowUnload=function(obj,_99){
d._onto(d._windowUnloaders,obj,_99);
};
})();
dojo._initFired=false;
dojo._loadInit=function(e){
dojo._initFired=true;
var _9b=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_9b!="domcontentloaded"&&_9b!="load")){
return;
}
arguments.callee.initialized=true;
if("_khtmlTimer" in dojo){
clearInterval(dojo._khtmlTimer);
delete dojo._khtmlTimer;
}
if(dojo._inFlightCount==0){
dojo._modulesLoaded();
}
};
dojo._fakeLoadInit=function(){
dojo._loadInit({type:"load"});
};
if(!dojo.config.afterOnLoad){
if(document.addEventListener){
if(dojo.isOpera||dojo.isFF>=3||(dojo.isMoz&&dojo.config.enableMozDomContentLoaded===true)){
document.addEventListener("DOMContentLoaded",dojo._loadInit,null);
}
window.addEventListener("load",dojo._loadInit,null);
}
if(dojo.isAIR){
window.addEventListener("load",dojo._loadInit,null);
}else{
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
dojo._khtmlTimer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dojo._loadInit();
}
},10);
}
}
}
(function(){
var _w=window;
var _9d=function(_9e,fp){
var _a0=_w[_9e]||function(){
};
_w[_9e]=function(){
fp.apply(_w,arguments);
_a0.apply(_w,arguments);
};
};
if(dojo.isIE){
if(!dojo.config.afterOnLoad){
document.write("<scr"+"ipt defer src=\"//:\" "+"onreadystatechange=\"if(this.readyState=='complete'){"+dojo._scopeName+"._loadInit();}\">"+"</scr"+"ipt>");
}
try{
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
catch(e){
}
}
_9d("onbeforeunload",function(){
dojo.unloaded();
});
_9d("onunload",function(){
dojo.windowUnloaded();
});
})();
}
(function(){
var mp=dojo.config["modulePaths"];
if(mp){
for(var _a2 in mp){
dojo.registerModulePath(_a2,mp[_a2]);
}
}
})();
if(dojo.config.isDebug){
dojo.require("dojo._firebug.firebug");
}
if(dojo.config.debugAtAllCosts){
dojo.config.useXDomain=true;
dojo.require("dojo._base._loader.loader_xd");
dojo.require("dojo._base._loader.loader_debug");
dojo.require("dojo.i18n");
}
if(!dojo._hasResource["dojo._base.lang"]){
dojo._hasResource["dojo._base.lang"]=true;
dojo.provide("dojo._base.lang");
dojo.isString=function(it){
return !!arguments.length&&it!=null&&(typeof it=="string"||it instanceof String);
};
dojo.isArray=function(it){
return it&&(it instanceof Array||typeof it=="array");
};
dojo.isFunction=(function(){
var _a5=function(it){
return it&&(typeof it=="function"||it instanceof Function);
};
return dojo.isSafari?function(it){
if(typeof it=="function"&&it=="[object NodeList]"){
return false;
}
return _a5(it);
}:_a5;
})();
dojo.isObject=function(it){
return it!==undefined&&(it===null||typeof it=="object"||dojo.isArray(it)||dojo.isFunction(it));
};
dojo.isArrayLike=function(it){
var d=dojo;
return it&&it!==undefined&&!d.isString(it)&&!d.isFunction(it)&&!(it.tagName&&it.tagName.toLowerCase()=="form")&&(d.isArray(it)||isFinite(it.length));
};
dojo.isAlien=function(it){
return it&&!dojo.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.extend=function(_ac,_ad){
for(var i=1,l=arguments.length;i<l;i++){
dojo._mixin(_ac.prototype,arguments[i]);
}
return _ac;
};
dojo._hitchArgs=function(_b0,_b1){
var pre=dojo._toArray(arguments,2);
var _b3=dojo.isString(_b1);
return function(){
var _b4=dojo._toArray(arguments);
var f=_b3?(_b0||dojo.global)[_b1]:_b1;
return f&&f.apply(_b0||this,pre.concat(_b4));
};
};
dojo.hitch=function(_b6,_b7){
if(arguments.length>2){
return dojo._hitchArgs.apply(dojo,arguments);
}
if(!_b7){
_b7=_b6;
_b6=null;
}
if(dojo.isString(_b7)){
_b6=_b6||dojo.global;
if(!_b6[_b7]){
throw (["dojo.hitch: scope[\"",_b7,"\"] is null (scope=\"",_b6,"\")"].join(""));
}
return function(){
return _b6[_b7].apply(_b6,arguments||[]);
};
}
return !_b6?_b7:function(){
return _b7.apply(_b6,arguments||[]);
};
};
dojo.delegate=dojo._delegate=(function(){
function TMP(){
};
return function(obj,_b9){
TMP.prototype=obj;
var tmp=new TMP();
if(_b9){
dojo._mixin(tmp,_b9);
}
return tmp;
};
})();
(function(){
var _bb=function(obj,_bd,_be){
return (_be||[]).concat(Array.prototype.slice.call(obj,_bd||0));
};
var _bf=function(obj,_c1,_c2){
var arr=_c2||[];
for(var x=_c1||0;x<obj.length;x++){
arr.push(obj[x]);
}
return arr;
};
dojo._toArray=(!dojo.isIE)?_bb:function(obj){
return ((obj.item)?_bf:_bb).apply(this,arguments);
};
})();
dojo.partial=function(_c6){
var arr=[null];
return dojo.hitch.apply(dojo,arr.concat(dojo._toArray(arguments)));
};
dojo.clone=function(o){
if(!o){
return o;
}
if(dojo.isArray(o)){
var r=[];
for(var i=0;i<o.length;++i){
r.push(dojo.clone(o[i]));
}
return r;
}
if(!dojo.isObject(o)){
return o;
}
if(o.nodeType&&o.cloneNode){
return o.cloneNode(true);
}
if(o instanceof Date){
return new Date(o.getTime());
}
var r=new o.constructor();
for(var i in o){
if(!(i in r)||r[i]!=o[i]){
r[i]=dojo.clone(o[i]);
}
}
return r;
};
dojo.trim=function(str){
return str.replace(/^\s\s*/,"").replace(/\s\s*$/,"");
};
}
if(!dojo._hasResource["dojo._base.declare"]){
dojo._hasResource["dojo._base.declare"]=true;
dojo.provide("dojo._base.declare");
dojo.declare=function(_cc,_cd,_ce){
var dd=arguments.callee,_d0;
if(dojo.isArray(_cd)){
_d0=_cd;
_cd=_d0.shift();
}
if(_d0){
dojo.forEach(_d0,function(m){
if(!m){
throw (_cc+": mixin #"+i+" is null");
}
_cd=dd._delegate(_cd,m);
});
}
var _d2=dd._delegate(_cd);
_ce=_ce||{};
_d2.extend(_ce);
dojo.extend(_d2,{declaredClass:_cc,_constructor:_ce.constructor});
_d2.prototype.constructor=_d2;
return dojo.setObject(_cc,_d2);
};
dojo.mixin(dojo.declare,{_delegate:function(_d3,_d4){
var bp=(_d3||0).prototype,mp=(_d4||0).prototype,dd=dojo.declare;
var _d8=dd._makeCtor();
dojo.mixin(_d8,{superclass:bp,mixin:mp,extend:dd._extend});
if(_d3){
_d8.prototype=dojo._delegate(bp);
}
dojo.extend(_d8,dd._core,mp||0,{_constructor:null,preamble:null});
_d8.prototype.constructor=_d8;
_d8.prototype.declaredClass=(bp||0).declaredClass+"_"+(mp||0).declaredClass;
return _d8;
},_extend:function(_d9){
var i,fn;
for(i in _d9){
if(dojo.isFunction(fn=_d9[i])&&!0[i]){
fn.nom=i;
fn.ctor=this;
}
}
dojo.extend(this,_d9);
},_makeCtor:function(){
return function(){
this._construct(arguments);
};
},_core:{_construct:function(_dc){
var c=_dc.callee,s=c.superclass,ct=s&&s.constructor,m=c.mixin,mct=m&&m.constructor,a=_dc,ii,fn;
if(a[0]){
if(((fn=a[0].preamble))){
a=fn.apply(this,a)||a;
}
}
if((fn=c.prototype.preamble)){
a=fn.apply(this,a)||a;
}
if(ct&&ct.apply){
ct.apply(this,a);
}
if(mct&&mct.apply){
mct.apply(this,a);
}
if((ii=c.prototype._constructor)){
ii.apply(this,_dc);
}
if(this.constructor.prototype==c.prototype&&(ct=this.postscript)){
ct.apply(this,_dc);
}
},_findMixin:function(_e5){
var c=this.constructor,p,m;
while(c){
p=c.superclass;
m=c.mixin;
if(m==_e5||(m instanceof _e5.constructor)){
return p;
}
if(m&&m._findMixin&&(m=m._findMixin(_e5))){
return m;
}
c=p&&p.constructor;
}
},_findMethod:function(_e9,_ea,_eb,has){
var p=_eb,c,m,f;
do{
c=p.constructor;
m=c.mixin;
if(m&&(m=this._findMethod(_e9,_ea,m,has))){
return m;
}
if((f=p[_e9])&&(has==(f==_ea))){
return p;
}
p=c.superclass;
}while(p);
return !has&&(p=this._findMixin(_eb))&&this._findMethod(_e9,_ea,p,has);
},inherited:function(_f1,_f2,_f3){
var a=arguments;
if(!dojo.isString(a[0])){
_f3=_f2;
_f2=_f1;
_f1=_f2.callee.nom;
}
a=_f3||_f2;
var c=_f2.callee,p=this.constructor.prototype,fn,mp;
if(this[_f1]!=c||p[_f1]==c){
mp=(c.ctor||0).superclass||this._findMethod(_f1,c,p,true);
if(!mp){
throw (this.declaredClass+": inherited method \""+_f1+"\" mismatch");
}
p=this._findMethod(_f1,c,mp,false);
}
fn=p&&p[_f1];
if(!fn){
throw (mp.declaredClass+": inherited method \""+_f1+"\" not found");
}
return fn.apply(this,a);
}}});
}
if(!dojo._hasResource["dojo._base.connect"]){
dojo._hasResource["dojo._base.connect"]=true;
dojo.provide("dojo._base.connect");
dojo._listener={getDispatcher:function(){
return function(){
var ap=Array.prototype,c=arguments.callee,ls=c._listeners,t=c.target;
var r=t&&t.apply(this,arguments);
var lls;
lls=[].concat(ls);
for(var i in lls){
if(!(i in ap)){
lls[i].apply(this,arguments);
}
}
return r;
};
},add:function(_100,_101,_102){
_100=_100||dojo.global;
var f=_100[_101];
if(!f||!f._listeners){
var d=dojo._listener.getDispatcher();
d.target=f;
d._listeners=[];
f=_100[_101]=d;
}
return f._listeners.push(_102);
},remove:function(_105,_106,_107){
var f=(_105||dojo.global)[_106];
if(f&&f._listeners&&_107--){
delete f._listeners[_107];
}
}};
dojo.connect=function(obj,_10a,_10b,_10c,_10d){
var a=arguments,args=[],i=0;
args.push(dojo.isString(a[0])?null:a[i++],a[i++]);
var a1=a[i+1];
args.push(dojo.isString(a1)||dojo.isFunction(a1)?a[i++]:null,a[i++]);
for(var l=a.length;i<l;i++){
args.push(a[i]);
}
return dojo._connect.apply(this,args);
};
dojo._connect=function(obj,_113,_114,_115){
var l=dojo._listener,h=l.add(obj,_113,dojo.hitch(_114,_115));
return [obj,_113,h,l];
};
dojo.disconnect=function(_118){
if(_118&&_118[0]!==undefined){
dojo._disconnect.apply(this,_118);
delete _118[0];
}
};
dojo._disconnect=function(obj,_11a,_11b,_11c){
_11c.remove(obj,_11a,_11b);
};
dojo._topics={};
dojo.subscribe=function(_11d,_11e,_11f){
return [_11d,dojo._listener.add(dojo._topics,_11d,dojo.hitch(_11e,_11f))];
};
dojo.unsubscribe=function(_120){
if(_120){
dojo._listener.remove(dojo._topics,_120[0],_120[1]);
}
};
dojo.publish=function(_121,args){
var f=dojo._topics[_121];
if(f){
f.apply(this,args||[]);
}
};
dojo.connectPublisher=function(_124,obj,_126){
var pf=function(){
dojo.publish(_124,arguments);
};
return (_126)?dojo.connect(obj,_126,pf):dojo.connect(obj,pf);
};
}
if(!dojo._hasResource["dojo._base.Deferred"]){
dojo._hasResource["dojo._base.Deferred"]=true;
dojo.provide("dojo._base.Deferred");
dojo.Deferred=function(_128){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_128;
this.silentlyCancelled=false;
};
dojo.extend(dojo.Deferred,{_nextId:(function(){
var n=1;
return function(){
return n++;
};
})(),cancel:function(){
var err;
if(this.fired==-1){
if(this.canceller){
err=this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(!(err instanceof Error)){
var res=err;
err=new Error("Deferred Cancelled");
err.dojoType="cancel";
err.cancelResult=res;
}
this.errback(err);
}
}else{
if((this.fired==0)&&(this.results[0] instanceof dojo.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new Error("already called!");
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new Error(res);
}
this._resback(res);
},addBoth:function(cb,cbfn){
var _131=dojo.hitch.apply(dojo,arguments);
return this.addCallbacks(_131,_131);
},addCallback:function(cb,cbfn){
return this.addCallbacks(dojo.hitch.apply(dojo,arguments));
},addErrback:function(cb,cbfn){
return this.addCallbacks(null,dojo.hitch.apply(dojo,arguments));
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _138=this.chain;
var _139=this.fired;
var res=this.results[_139];
var self=this;
var cb=null;
while((_138.length>0)&&(this.paused==0)){
var f=_138.shift()[_139];
if(!f){
continue;
}
var func=function(){
var ret=f(res);
if(typeof ret!="undefined"){
res=ret;
}
_139=((res instanceof Error)?1:0);
if(res instanceof dojo.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused==0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
};
if(dojo.config.isDebug){
func.call(this);
}else{
try{
func.call(this);
}
catch(err){
_139=1;
res=err;
}
}
}
this.fired=_139;
this.results[_139]=res;
if((cb)&&(this.paused)){
res.addBoth(cb);
}
}});
}
if(!dojo._hasResource["dojo._base.json"]){
dojo._hasResource["dojo._base.json"]=true;
dojo.provide("dojo._base.json");
dojo.fromJson=function(json){
return eval("("+json+")");
};
dojo._escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.toJsonIndentStr="\t";
dojo.toJson=function(it,_144,_145){
if(it===undefined){
return "undefined";
}
var _146=typeof it;
if(_146=="number"||_146=="boolean"){
return it+"";
}
if(it===null){
return "null";
}
if(dojo.isString(it)){
return dojo._escapeString(it);
}
var _147=arguments.callee;
var _148;
_145=_145||"";
var _149=_144?_145+dojo.toJsonIndentStr:"";
var tf=it.__json__||it.json;
if(dojo.isFunction(tf)){
_148=tf.call(it);
if(it!==_148){
return _147(_148,_144,_149);
}
}
if(it.nodeType&&it.cloneNode){
throw new Error("Can't serialize DOM nodes");
}
var sep=_144?" ":"";
var _14c=_144?"\n":"";
if(dojo.isArray(it)){
var res=dojo.map(it,function(obj){
var val=_147(obj,_144,_149);
if(typeof val!="string"){
val="undefined";
}
return _14c+_149+val;
});
return "["+res.join(","+sep)+_14c+_145+"]";
}
if(_146=="function"){
return null;
}
var _150=[],key;
for(key in it){
var _152,val;
if(typeof key=="number"){
_152="\""+key+"\"";
}else{
if(typeof key=="string"){
_152=dojo._escapeString(key);
}else{
continue;
}
}
val=_147(it[key],_144,_149);
if(typeof val!="string"){
continue;
}
_150.push(_14c+_149+_152+":"+sep+val);
}
return "{"+_150.join(","+sep)+_14c+_145+"}";
};
}
if(!dojo._hasResource["dojo._base.array"]){
dojo._hasResource["dojo._base.array"]=true;
dojo.provide("dojo._base.array");
(function(){
var _154=function(arr,obj,cb){
return [dojo.isString(arr)?arr.split(""):arr,obj||dojo.global,dojo.isString(cb)?new Function("item","index","array",cb):cb];
};
dojo.mixin(dojo,{indexOf:function(_158,_159,_15a,_15b){
var step=1,end=_158.length||0,i=0;
if(_15b){
i=end-1;
step=end=-1;
}
if(_15a!=undefined){
i=_15a;
}
if((_15b&&i>end)||i<end){
for(;i!=end;i+=step){
if(_158[i]==_159){
return i;
}
}
}
return -1;
},lastIndexOf:function(_15e,_15f,_160){
return dojo.indexOf(_15e,_15f,_160,true);
},forEach:function(arr,_162,_163){
if(!arr||!arr.length){
return;
}
var _p=_154(arr,_163,_162);
arr=_p[0];
for(var i=0,l=arr.length;i<l;++i){
_p[2].call(_p[1],arr[i],i,arr);
}
},_everyOrSome:function(_167,arr,_169,_16a){
var _p=_154(arr,_16a,_169);
arr=_p[0];
for(var i=0,l=arr.length;i<l;++i){
var _16e=!!_p[2].call(_p[1],arr[i],i,arr);
if(_167^_16e){
return _16e;
}
}
return _167;
},every:function(arr,_170,_171){
return this._everyOrSome(true,arr,_170,_171);
},some:function(arr,_173,_174){
return this._everyOrSome(false,arr,_173,_174);
},map:function(arr,_176,_177){
var _p=_154(arr,_177,_176);
arr=_p[0];
var _179=(arguments[3]?(new arguments[3]()):[]);
for(var i=0,l=arr.length;i<l;++i){
_179.push(_p[2].call(_p[1],arr[i],i,arr));
}
return _179;
},filter:function(arr,_17d,_17e){
var _p=_154(arr,_17e,_17d);
arr=_p[0];
var _180=[];
for(var i=0,l=arr.length;i<l;++i){
if(_p[2].call(_p[1],arr[i],i,arr)){
_180.push(arr[i]);
}
}
return _180;
}});
})();
}
if(!dojo._hasResource["dojo._base.Color"]){
dojo._hasResource["dojo._base.Color"]=true;
dojo.provide("dojo._base.Color");
dojo.Color=function(_183){
if(_183){
this.setColor(_183);
}
};
dojo.Color.named={black:[0,0,0],silver:[192,192,192],gray:[128,128,128],white:[255,255,255],maroon:[128,0,0],red:[255,0,0],purple:[128,0,128],fuchsia:[255,0,255],green:[0,128,0],lime:[0,255,0],olive:[128,128,0],yellow:[255,255,0],navy:[0,0,128],blue:[0,0,255],teal:[0,128,128],aqua:[0,255,255]};
dojo.extend(dojo.Color,{r:255,g:255,b:255,a:1,_set:function(r,g,b,a){
var t=this;
t.r=r;
t.g=g;
t.b=b;
t.a=a;
},setColor:function(_189){
var d=dojo;
if(d.isString(_189)){
d.colorFromString(_189,this);
}else{
if(d.isArray(_189)){
d.colorFromArray(_189,this);
}else{
this._set(_189.r,_189.g,_189.b,_189.a);
if(!(_189 instanceof d.Color)){
this.sanitize();
}
}
}
return this;
},sanitize:function(){
return this;
},toRgb:function(){
var t=this;
return [t.r,t.g,t.b];
},toRgba:function(){
var t=this;
return [t.r,t.g,t.b,t.a];
},toHex:function(){
var arr=dojo.map(["r","g","b"],function(x){
var s=this[x].toString(16);
return s.length<2?"0"+s:s;
},this);
return "#"+arr.join("");
},toCss:function(_190){
var t=this,rgb=t.r+", "+t.g+", "+t.b;
return (_190?"rgba("+rgb+", "+t.a:"rgb("+rgb)+")";
},toString:function(){
return this.toCss(true);
}});
dojo.blendColors=function(_193,end,_195,obj){
var d=dojo,t=obj||new dojo.Color();
d.forEach(["r","g","b","a"],function(x){
t[x]=_193[x]+(end[x]-_193[x])*_195;
if(x!="a"){
t[x]=Math.round(t[x]);
}
});
return t.sanitize();
};
dojo.colorFromRgb=function(_19a,obj){
var m=_19a.toLowerCase().match(/^rgba?\(([\s\.,0-9]+)\)/);
return m&&dojo.colorFromArray(m[1].split(/\s*,\s*/),obj);
};
dojo.colorFromHex=function(_19d,obj){
var d=dojo,t=obj||new d.Color(),bits=(_19d.length==4)?4:8,mask=(1<<bits)-1;
_19d=Number("0x"+_19d.substr(1));
if(isNaN(_19d)){
return null;
}
d.forEach(["b","g","r"],function(x){
var c=_19d&mask;
_19d>>=bits;
t[x]=bits==4?17*c:c;
});
t.a=1;
return t;
};
dojo.colorFromArray=function(a,obj){
var t=obj||new dojo.Color();
t._set(Number(a[0]),Number(a[1]),Number(a[2]),Number(a[3]));
if(isNaN(t.a)){
t.a=1;
}
return t.sanitize();
};
dojo.colorFromString=function(str,obj){
var a=dojo.Color.named[str];
return a&&dojo.colorFromArray(a,obj)||dojo.colorFromRgb(str,obj)||dojo.colorFromHex(str,obj);
};
}
if(!dojo._hasResource["dojo._base"]){
dojo._hasResource["dojo._base"]=true;
dojo.provide("dojo._base");
}
if(!dojo._hasResource["dojo._base.window"]){
dojo._hasResource["dojo._base.window"]=true;
dojo.provide("dojo._base.window");
dojo.doc=window["document"]||null;
dojo.body=function(){
return dojo.doc.body||dojo.doc.getElementsByTagName("body")[0];
};
dojo.setContext=function(_1ab,_1ac){
dojo.global=_1ab;
dojo.doc=_1ac;
};
dojo._fireCallback=function(_1ad,_1ae,_1af){
if(_1ae&&dojo.isString(_1ad)){
_1ad=_1ae[_1ad];
}
return _1ad.apply(_1ae,_1af||[]);
};
dojo.withGlobal=function(_1b0,_1b1,_1b2,_1b3){
var rval;
var _1b5=dojo.global;
var _1b6=dojo.doc;
try{
dojo.setContext(_1b0,_1b0.document);
rval=dojo._fireCallback(_1b1,_1b2,_1b3);
}
finally{
dojo.setContext(_1b5,_1b6);
}
return rval;
};
dojo.withDoc=function(_1b7,_1b8,_1b9,_1ba){
var rval;
var _1bc=dojo.doc;
try{
dojo.doc=_1b7;
rval=dojo._fireCallback(_1b8,_1b9,_1ba);
}
finally{
dojo.doc=_1bc;
}
return rval;
};
}
if(!dojo._hasResource["dojo._base.event"]){
dojo._hasResource["dojo._base.event"]=true;
dojo.provide("dojo._base.event");
(function(){
var del=(dojo._event_listener={add:function(node,name,fp){
if(!node){
return;
}
name=del._normalizeEventName(name);
fp=del._fixCallback(name,fp);
var _1c1=name;
if(!dojo.isIE&&(name=="mouseenter"||name=="mouseleave")){
var ofp=fp;
name=(name=="mouseenter")?"mouseover":"mouseout";
fp=function(e){
try{
e.relatedTarget.tagName;
}
catch(e2){
return;
}
if(!dojo.isDescendant(e.relatedTarget,node)){
return ofp.call(this,e);
}
};
}
node.addEventListener(name,fp,false);
return fp;
},remove:function(node,_1c5,_1c6){
if(node){
_1c5=del._normalizeEventName(_1c5);
if(!dojo.isIE&&(_1c5=="mouseenter"||_1c5=="mouseleave")){
_1c5=(_1c5=="mouseenter")?"mouseover":"mouseout";
}
node.removeEventListener(_1c5,_1c6,false);
}
},_normalizeEventName:function(name){
return name.slice(0,2)=="on"?name.slice(2):name;
},_fixCallback:function(name,fp){
return name!="keypress"?fp:function(e){
return fp.call(this,del._fixEvent(e,this));
};
},_fixEvent:function(evt,_1cc){
switch(evt.type){
case "keypress":
del._setKeyChar(evt);
break;
}
return evt;
},_setKeyChar:function(evt){
evt.keyChar=evt.charCode?String.fromCharCode(evt.charCode):"";
evt.charOrCode=evt.keyChar||evt.keyCode;
},_punctMap:{106:42,111:47,186:59,187:43,188:44,189:45,190:46,191:47,192:96,219:91,220:92,221:93,222:39}});
dojo.fixEvent=function(evt,_1cf){
return del._fixEvent(evt,_1cf);
};
dojo.stopEvent=function(evt){
evt.preventDefault();
evt.stopPropagation();
};
var _1d1=dojo._listener;
dojo._connect=function(obj,_1d3,_1d4,_1d5,_1d6){
var _1d7=obj&&(obj.nodeType||obj.attachEvent||obj.addEventListener);
var lid=!_1d7?0:(!_1d6?1:2),l=[dojo._listener,del,_1d1][lid];
var h=l.add(obj,_1d3,dojo.hitch(_1d4,_1d5));
return [obj,_1d3,h,lid];
};
dojo._disconnect=function(obj,_1dc,_1dd,_1de){
([dojo._listener,del,_1d1][_1de]).remove(obj,_1dc,_1dd);
};
dojo.keys={BACKSPACE:8,TAB:9,CLEAR:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESCAPE:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT_ARROW:37,UP_ARROW:38,RIGHT_ARROW:39,DOWN_ARROW:40,INSERT:45,DELETE:46,HELP:47,LEFT_WINDOW:91,RIGHT_WINDOW:92,SELECT:93,NUMPAD_0:96,NUMPAD_1:97,NUMPAD_2:98,NUMPAD_3:99,NUMPAD_4:100,NUMPAD_5:101,NUMPAD_6:102,NUMPAD_7:103,NUMPAD_8:104,NUMPAD_9:105,NUMPAD_MULTIPLY:106,NUMPAD_PLUS:107,NUMPAD_ENTER:108,NUMPAD_MINUS:109,NUMPAD_PERIOD:110,NUMPAD_DIVIDE:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,NUM_LOCK:144,SCROLL_LOCK:145};
if(dojo.isIE){
var _1df=function(e,code){
try{
return (e.keyCode=code);
}
catch(e){
return 0;
}
};
var iel=dojo._listener;
var _1e3=dojo._ieListenersName="_"+dojo._scopeName+"_listeners";
if(!dojo.config._allow_leaks){
_1d1=iel=dojo._ie_listener={handlers:[],add:function(_1e4,_1e5,_1e6){
_1e4=_1e4||dojo.global;
var f=_1e4[_1e5];
if(!f||!f[_1e3]){
var d=dojo._getIeDispatcher();
d.target=f&&(ieh.push(f)-1);
d[_1e3]=[];
f=_1e4[_1e5]=d;
}
return f[_1e3].push(ieh.push(_1e6)-1);
},remove:function(_1ea,_1eb,_1ec){
var f=(_1ea||dojo.global)[_1eb],l=f&&f[_1e3];
if(f&&l&&_1ec--){
delete ieh[l[_1ec]];
delete l[_1ec];
}
}};
var ieh=iel.handlers;
}
dojo.mixin(del,{add:function(node,_1f0,fp){
if(!node){
return;
}
_1f0=del._normalizeEventName(_1f0);
if(_1f0=="onkeypress"){
var kd=node.onkeydown;
if(!kd||!kd[_1e3]||!kd._stealthKeydownHandle){
var h=del.add(node,"onkeydown",del._stealthKeyDown);
kd=node.onkeydown;
kd._stealthKeydownHandle=h;
kd._stealthKeydownRefs=1;
}else{
kd._stealthKeydownRefs++;
}
}
return iel.add(node,_1f0,del._fixCallback(fp));
},remove:function(node,_1f5,_1f6){
_1f5=del._normalizeEventName(_1f5);
iel.remove(node,_1f5,_1f6);
if(_1f5=="onkeypress"){
var kd=node.onkeydown;
if(--kd._stealthKeydownRefs<=0){
iel.remove(node,"onkeydown",kd._stealthKeydownHandle);
delete kd._stealthKeydownHandle;
}
}
},_normalizeEventName:function(_1f8){
return _1f8.slice(0,2)!="on"?"on"+_1f8:_1f8;
},_nop:function(){
},_fixEvent:function(evt,_1fa){
if(!evt){
var w=_1fa&&(_1fa.ownerDocument||_1fa.document||_1fa).parentWindow||window;
evt=w.event;
}
if(!evt){
return (evt);
}
evt.target=evt.srcElement;
evt.currentTarget=(_1fa||evt.srcElement);
evt.layerX=evt.offsetX;
evt.layerY=evt.offsetY;
var se=evt.srcElement,doc=(se&&se.ownerDocument)||document;
var _1fe=((dojo.isIE<6)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
var _1ff=dojo._getIeDocumentElementOffset();
evt.pageX=evt.clientX+dojo._fixIeBiDiScrollLeft(_1fe.scrollLeft||0)-_1ff.x;
evt.pageY=evt.clientY+(_1fe.scrollTop||0)-_1ff.y;
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
evt.stopPropagation=del._stopPropagation;
evt.preventDefault=del._preventDefault;
return del._fixKeys(evt);
},_fixKeys:function(evt){
switch(evt.type){
case "keypress":
var c=("charCode" in evt?evt.charCode:evt.keyCode);
if(c==10){
c=0;
evt.keyCode=13;
}else{
if(c==13||c==27){
c=0;
}else{
if(c==3){
c=99;
}
}
}
evt.charCode=c;
del._setKeyChar(evt);
break;
}
return evt;
},_stealthKeyDown:function(evt){
var kp=evt.currentTarget.onkeypress;
if(!kp||!kp[_1e3]){
return;
}
var k=evt.keyCode;
var _205=(k!=13)&&(k!=32)&&(k!=27)&&(k<48||k>90)&&(k<96||k>111)&&(k<186||k>192)&&(k<219||k>222);
if(_205||evt.ctrlKey){
var c=_205?0:k;
if(evt.ctrlKey){
if(k==3||k==13){
return;
}else{
if(c>95&&c<106){
c-=48;
}else{
if((!evt.shiftKey)&&(c>=65&&c<=90)){
c+=32;
}else{
c=del._punctMap[c]||c;
}
}
}
}
var faux=del._synthesizeEvent(evt,{type:"keypress",faux:true,charCode:c});
kp.call(evt.currentTarget,faux);
evt.cancelBubble=faux.cancelBubble;
evt.returnValue=faux.returnValue;
_1df(evt,faux.keyCode);
}
},_stopPropagation:function(){
this.cancelBubble=true;
},_preventDefault:function(){
this.bubbledKeyCode=this.keyCode;
if(this.ctrlKey){
_1df(this,0);
}
this.returnValue=false;
}});
dojo.stopEvent=function(evt){
evt=evt||window.event;
del._stopPropagation.call(evt);
del._preventDefault.call(evt);
};
}
del._synthesizeEvent=function(evt,_20a){
var faux=dojo.mixin({},evt,_20a);
del._setKeyChar(faux);
faux.preventDefault=function(){
evt.preventDefault();
};
faux.stopPropagation=function(){
evt.stopPropagation();
};
return faux;
};
if(dojo.isOpera){
dojo.mixin(del,{_fixEvent:function(evt,_20d){
switch(evt.type){
case "keypress":
var c=evt.which;
if(c==3){
c=99;
}
c=((c<41)&&(!evt.shiftKey)?0:c);
if((evt.ctrlKey)&&(!evt.shiftKey)&&(c>=65)&&(c<=90)){
c+=32;
}
return del._synthesizeEvent(evt,{charCode:c});
}
return evt;
}});
}
if(dojo.isSafari){
del._add=del.add;
del._remove=del.remove;
dojo.mixin(del,{add:function(node,_210,fp){
if(!node){
return;
}
var _212=del._add(node,_210,fp);
if(del._normalizeEventName(_210)=="keypress"){
_212._stealthKeyDownHandle=del._add(node,"keydown",function(evt){
var k=evt.keyCode;
var _215=(k!=13)&&(k!=32)&&(k!=27)&&(k<48||k>90)&&(k<96||k>111)&&(k<186||k>192)&&(k<219||k>222);
if(_215||evt.ctrlKey){
var c=_215?0:k;
if(evt.ctrlKey){
if(k==3||k==13){
return;
}else{
if(c>95&&c<106){
c-=48;
}else{
if((!evt.shiftKey)&&(c>=65&&c<=90)){
c+=32;
}else{
c=del._punctMap[c]||c;
}
}
}
}
var faux=del._synthesizeEvent(evt,{type:"keypress",faux:true,charCode:c});
fp.call(evt.currentTarget,faux);
}
});
}
return _212;
},remove:function(node,_219,_21a){
if(node){
if(_21a._stealthKeyDownHandle){
del._remove(node,"keydown",_21a._stealthKeyDownHandle);
}
del._remove(node,_219,_21a);
}
},_fixEvent:function(evt,_21c){
switch(evt.type){
case "keypress":
if(evt.faux){
return evt;
}
var c=evt.charCode;
c=c>=32?c:0;
return del._synthesizeEvent(evt,{charCode:c,faux:true});
}
return evt;
}});
}
})();
if(dojo.isIE){
dojo._ieDispatcher=function(args,_21f){
var ap=Array.prototype,h=dojo._ie_listener.handlers,c=args.callee,ls=c[dojo._ieListenersName],t=h[c.target];
var r=t&&t.apply(_21f,args);
var lls=[].concat(ls);
for(var i in lls){
if(!(i in ap)){
h[lls[i]].apply(_21f,args);
}
}
return r;
};
dojo._getIeDispatcher=function(){
return new Function(dojo._scopeName+"._ieDispatcher(arguments, this)");
};
dojo._event_listener._fixCallback=function(fp){
var f=dojo._event_listener._fixEvent;
return function(e){
return fp.call(this,f(e,this));
};
};
}
}
if(!dojo._hasResource["dojo._base.html"]){
dojo._hasResource["dojo._base.html"]=true;
dojo.provide("dojo._base.html");
try{
document.execCommand("BackgroundImageCache",false,true);
}
catch(e){
}
if(dojo.isIE||dojo.isOpera){
dojo.byId=function(id,doc){
if(dojo.isString(id)){
var _d=doc||dojo.doc;
var te=_d.getElementById(id);
if(te&&te.attributes.id.value==id){
return te;
}else{
var eles=_d.all[id];
if(!eles||!eles.length){
return eles;
}
var i=0;
while((te=eles[i++])){
if(te.attributes.id.value==id){
return te;
}
}
}
}else{
return id;
}
};
}else{
dojo.byId=function(id,doc){
return dojo.isString(id)?(doc||dojo.doc).getElementById(id):id;
};
}
(function(){
var d=dojo;
var _234=null;
dojo.addOnWindowUnload(function(){
_234=null;
});
dojo._destroyElement=function(node){
node=d.byId(node);
try{
if(!_234||_234.ownerDocument!=node.ownerDocument){
_234=node.ownerDocument.createElement("div");
}
_234.appendChild(node.parentNode?node.parentNode.removeChild(node):node);
_234.innerHTML="";
}
catch(e){
}
};
dojo.isDescendant=function(node,_237){
try{
node=d.byId(node);
_237=d.byId(_237);
while(node){
if(node===_237){
return true;
}
node=node.parentNode;
}
}
catch(e){
}
return false;
};
dojo.setSelectable=function(node,_239){
node=d.byId(node);
if(d.isMozilla){
node.style.MozUserSelect=_239?"":"none";
}else{
if(d.isKhtml){
node.style.KhtmlUserSelect=_239?"auto":"none";
}else{
if(d.isIE){
var v=(node.unselectable=_239?"":"on");
d.query("*",node).forEach("item.unselectable = '"+v+"'");
}
}
}
};
var _23b=function(node,ref){
ref.parentNode.insertBefore(node,ref);
return true;
};
var _23e=function(node,ref){
var pn=ref.parentNode;
if(ref==pn.lastChild){
pn.appendChild(node);
}else{
return _23b(node,ref.nextSibling);
}
return true;
};
dojo.place=function(node,_243,_244){
if(!node||!_243){
return false;
}
node=d.byId(node);
_243=d.byId(_243);
if(typeof _244=="number"){
var cn=_243.childNodes;
if(!cn.length||cn.length<=_244){
_243.appendChild(node);
return true;
}
return _23b(node,_244<=0?_243.firstChild:cn[_244]);
}
switch(_244){
case "before":
return _23b(node,_243);
case "after":
return _23e(node,_243);
case "first":
if(_243.firstChild){
return _23b(node,_243.firstChild);
}
default:
_243.appendChild(node);
return true;
}
};
dojo.boxModel="content-box";
if(d.isIE){
var _dcm=document.compatMode;
d.boxModel=_dcm=="BackCompat"||_dcm=="QuirksMode"||d.isIE<6?"border-box":"content-box";
}
var gcs;
if(d.isSafari){
gcs=function(node){
var s;
if(node instanceof HTMLElement){
var dv=node.ownerDocument.defaultView;
s=dv.getComputedStyle(node,null);
if(!s&&node.style){
node.style.display="";
s=dv.getComputedStyle(node,null);
}
}
return s||{};
};
}else{
if(d.isIE){
gcs=function(node){
return node.nodeType==1?node.currentStyle:{};
};
}else{
gcs=function(node){
return node instanceof HTMLElement?node.ownerDocument.defaultView.getComputedStyle(node,null):{};
};
}
}
dojo.getComputedStyle=gcs;
if(!d.isIE){
dojo._toPixelValue=function(_24d,_24e){
return parseFloat(_24e)||0;
};
}else{
dojo._toPixelValue=function(_24f,_250){
if(!_250){
return 0;
}
if(_250=="medium"){
return 4;
}
if(_250.slice&&(_250.slice(-2)=="px")){
return parseFloat(_250);
}
with(_24f){
var _251=style.left;
var _252=runtimeStyle.left;
runtimeStyle.left=currentStyle.left;
try{
style.left=_250;
_250=style.pixelLeft;
}
catch(e){
_250=0;
}
style.left=_251;
runtimeStyle.left=_252;
}
return _250;
};
}
var px=d._toPixelValue;
var astr="DXImageTransform.Microsoft.Alpha";
var af=function(n,f){
try{
return n.filters.item(astr);
}
catch(e){
return f?{}:null;
}
};
dojo._getOpacity=d.isIE?function(node){
try{
return af(node).Opacity/100;
}
catch(e){
return 1;
}
}:function(node){
return gcs(node).opacity;
};
dojo._setOpacity=d.isIE?function(node,_25b){
var ov=_25b*100;
node.style.zoom=1;
af(node,1).Enabled=(_25b==1?false:true);
if(!af(node)){
node.style.filter+=" progid:"+astr+"(Opacity="+ov+")";
}else{
af(node,1).Opacity=ov;
}
if(node.nodeName.toLowerCase()=="tr"){
d.query("> td",node).forEach(function(i){
d._setOpacity(i,_25b);
});
}
return _25b;
}:function(node,_25f){
return node.style.opacity=_25f;
};
var _260={left:true,top:true};
var _261=/margin|padding|width|height|max|min|offset/;
var _262=function(node,type,_265){
type=type.toLowerCase();
if(d.isIE){
if(_265=="auto"){
if(type=="height"){
return node.offsetHeight;
}
if(type=="width"){
return node.offsetWidth;
}
}
if(type=="fontweight"){
switch(_265){
case 700:
return "bold";
case 400:
default:
return "normal";
}
}
}
if(!(type in _260)){
_260[type]=_261.test(type);
}
return _260[type]?px(node,_265):_265;
};
var _266=d.isIE?"styleFloat":"cssFloat";
var _267={"cssFloat":_266,"styleFloat":_266,"float":_266};
dojo.style=function(node,_269,_26a){
var n=d.byId(node),args=arguments.length,op=(_269=="opacity");
_269=_267[_269]||_269;
if(args==3){
return op?d._setOpacity(n,_26a):n.style[_269]=_26a;
}
if(args==2&&op){
return d._getOpacity(n);
}
var s=gcs(n);
if(args==2&&!d.isString(_269)){
for(var x in _269){
d.style(node,x,_269[x]);
}
return s;
}
return (args==1)?s:_262(n,_269,s[_269]||n.style[_269]);
};
dojo._getPadExtents=function(n,_271){
var s=_271||gcs(n),l=px(n,s.paddingLeft),t=px(n,s.paddingTop);
return {l:l,t:t,w:l+px(n,s.paddingRight),h:t+px(n,s.paddingBottom)};
};
dojo._getBorderExtents=function(n,_276){
var ne="none",s=_276||gcs(n),bl=(s.borderLeftStyle!=ne?px(n,s.borderLeftWidth):0),bt=(s.borderTopStyle!=ne?px(n,s.borderTopWidth):0);
return {l:bl,t:bt,w:bl+(s.borderRightStyle!=ne?px(n,s.borderRightWidth):0),h:bt+(s.borderBottomStyle!=ne?px(n,s.borderBottomWidth):0)};
};
dojo._getPadBorderExtents=function(n,_27c){
var s=_27c||gcs(n),p=d._getPadExtents(n,s),b=d._getBorderExtents(n,s);
return {l:p.l+b.l,t:p.t+b.t,w:p.w+b.w,h:p.h+b.h};
};
dojo._getMarginExtents=function(n,_281){
var s=_281||gcs(n),l=px(n,s.marginLeft),t=px(n,s.marginTop),r=px(n,s.marginRight),b=px(n,s.marginBottom);
if(d.isSafari&&(s.position!="absolute")){
r=l;
}
return {l:l,t:t,w:l+r,h:t+b};
};
dojo._getMarginBox=function(node,_288){
var s=_288||gcs(node),me=d._getMarginExtents(node,s);
var l=node.offsetLeft-me.l,t=node.offsetTop-me.t,p=node.parentNode;
if(d.isMoz){
var sl=parseFloat(s.left),st=parseFloat(s.top);
if(!isNaN(sl)&&!isNaN(st)){
l=sl,t=st;
}else{
if(p&&p.style){
var pcs=gcs(p);
if(pcs.overflow!="visible"){
var be=d._getBorderExtents(p,pcs);
l+=be.l,t+=be.t;
}
}
}
}else{
if(d.isOpera){
if(p){
var be=d._getBorderExtents(p);
l-=be.l;
t-=be.t;
}
}
}
return {l:l,t:t,w:node.offsetWidth+me.w,h:node.offsetHeight+me.h};
};
dojo._getContentBox=function(node,_293){
var s=_293||gcs(node),pe=d._getPadExtents(node,s),be=d._getBorderExtents(node,s),w=node.clientWidth,h;
if(!w){
w=node.offsetWidth,h=node.offsetHeight;
}else{
h=node.clientHeight,be.w=be.h=0;
}
if(d.isOpera){
pe.l+=be.l;
pe.t+=be.t;
}
return {l:pe.l,t:pe.t,w:w-pe.w-be.w,h:h-pe.h-be.h};
};
dojo._getBorderBox=function(node,_29a){
var s=_29a||gcs(node),pe=d._getPadExtents(node,s),cb=d._getContentBox(node,s);
return {l:cb.l-pe.l,t:cb.t-pe.t,w:cb.w+pe.w,h:cb.h+pe.h};
};
dojo._setBox=function(node,l,t,w,h,u){
u=u||"px";
var s=node.style;
if(!isNaN(l)){
s.left=l+u;
}
if(!isNaN(t)){
s.top=t+u;
}
if(w>=0){
s.width=w+u;
}
if(h>=0){
s.height=h+u;
}
};
dojo._isButtonTag=function(node){
return node.tagName=="BUTTON"||node.tagName=="INPUT"&&node.getAttribute("type").toUpperCase()=="BUTTON";
};
dojo._usesBorderBox=function(node){
var n=node.tagName;
return d.boxModel=="border-box"||n=="TABLE"||dojo._isButtonTag(node);
};
dojo._setContentSize=function(node,_2a9,_2aa,_2ab){
if(d._usesBorderBox(node)){
var pb=d._getPadBorderExtents(node,_2ab);
if(_2a9>=0){
_2a9+=pb.w;
}
if(_2aa>=0){
_2aa+=pb.h;
}
}
d._setBox(node,NaN,NaN,_2a9,_2aa);
};
dojo._setMarginBox=function(node,_2ae,_2af,_2b0,_2b1,_2b2){
var s=_2b2||gcs(node);
var bb=d._usesBorderBox(node),pb=bb?_2b6:d._getPadBorderExtents(node,s);
if(dojo.isSafari){
if(dojo._isButtonTag(node)){
var ns=node.style;
if(_2b0>=0&&!ns.width){
ns.width="4px";
}
if(_2b1>=0&&!ns.height){
ns.height="4px";
}
}
}
var mb=d._getMarginExtents(node,s);
if(_2b0>=0){
_2b0=Math.max(_2b0-pb.w-mb.w,0);
}
if(_2b1>=0){
_2b1=Math.max(_2b1-pb.h-mb.h,0);
}
d._setBox(node,_2ae,_2af,_2b0,_2b1);
};
var _2b6={l:0,t:0,w:0,h:0};
dojo.marginBox=function(node,box){
var n=d.byId(node),s=gcs(n),b=box;
return !b?d._getMarginBox(n,s):d._setMarginBox(n,b.l,b.t,b.w,b.h,s);
};
dojo.contentBox=function(node,box){
var n=d.byId(node),s=gcs(n),b=box;
return !b?d._getContentBox(n,s):d._setContentSize(n,b.w,b.h,s);
};
var _2c3=function(node,prop){
if(!(node=(node||0).parentNode)){
return 0;
}
var val,_2c7=0,_b=d.body();
while(node&&node.style){
if(gcs(node).position=="fixed"){
return 0;
}
val=node[prop];
if(val){
_2c7+=val-0;
if(node==_b){
break;
}
}
node=node.parentNode;
}
return _2c7;
};
dojo._docScroll=function(){
var _b=d.body(),_w=d.global,de=d.doc.documentElement;
return {y:(_w.pageYOffset||de.scrollTop||_b.scrollTop||0),x:(_w.pageXOffset||d._fixIeBiDiScrollLeft(de.scrollLeft)||_b.scrollLeft||0)};
};
dojo._isBodyLtr=function(){
return !("_bodyLtr" in d)?d._bodyLtr=gcs(d.body()).direction=="ltr":d._bodyLtr;
};
dojo._getIeDocumentElementOffset=function(){
var de=d.doc.documentElement;
return (d.isIE>=7)?{x:de.getBoundingClientRect().left,y:de.getBoundingClientRect().top}:{x:d._isBodyLtr()||window.parent==window?de.clientLeft:de.offsetWidth-de.clientWidth-de.clientLeft,y:de.clientTop};
};
dojo._fixIeBiDiScrollLeft=function(_2cd){
var dd=d.doc;
if(d.isIE&&!dojo._isBodyLtr()){
var de=dd.compatMode=="BackCompat"?dd.body:dd.documentElement;
return _2cd+de.clientWidth-de.scrollWidth;
}
return _2cd;
};
dojo._abs=function(node,_2d1){
var _2d2=node.ownerDocument;
var ret={x:0,y:0};
var db=d.body();
if(d.isIE||(d.isFF>=3)){
var _2d5=node.getBoundingClientRect();
var cs;
if(d.isFF){
var dv=node.ownerDocument.defaultView;
cs=dv.getComputedStyle(db.parentNode,null);
}
var _2d8=(d.isIE)?d._getIeDocumentElementOffset():{x:px(db.parentNode,cs.marginLeft),y:px(db.parentNode,cs.marginTop)};
ret.x=_2d5.left-_2d8.x;
ret.y=_2d5.top-_2d8.y;
}else{
if(node["offsetParent"]){
var _2d9;
if(d.isSafari&&(gcs(node).position=="absolute")&&(node.parentNode==db)){
_2d9=db;
}else{
_2d9=db.parentNode;
}
var cs=gcs(node);
var n=node;
if(d.isOpera&&cs.position!="absolute"){
n=n.offsetParent;
}
ret.x-=_2c3(n,"scrollLeft");
ret.y-=_2c3(n,"scrollTop");
var _2db=node;
do{
var n=_2db.offsetLeft;
if(!d.isOpera||n>0){
ret.x+=isNaN(n)?0:n;
}
var t=_2db.offsetTop;
ret.y+=isNaN(t)?0:t;
var cs=gcs(_2db);
if(_2db!=node){
if(d.isSafari){
ret.x+=px(_2db,cs.borderLeftWidth);
ret.y+=px(_2db,cs.borderTopWidth);
}else{
if(d.isFF){
ret.x+=2*px(_2db,cs.borderLeftWidth);
ret.y+=2*px(_2db,cs.borderTopWidth);
}
}
}
if(d.isFF&&cs.position=="static"){
var _2dd=_2db.parentNode;
while(_2dd!=_2db.offsetParent){
var pcs=gcs(_2dd);
if(pcs.position=="static"){
ret.x+=px(_2db,pcs.borderLeftWidth);
ret.y+=px(_2db,pcs.borderTopWidth);
}
_2dd=_2dd.parentNode;
}
}
_2db=_2db.offsetParent;
}while((_2db!=_2d9)&&_2db);
}else{
if(node.x&&node.y){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
if(_2d1){
var _2df=d._docScroll();
ret.y+=_2df.y;
ret.x+=_2df.x;
}
return ret;
};
dojo.coords=function(node,_2e1){
var n=d.byId(node),s=gcs(n),mb=d._getMarginBox(n,s);
var abs=d._abs(n,_2e1);
mb.x=abs.x;
mb.y=abs.y;
return mb;
};
var _2e6=d.isIE<8;
var _2e7=function(name){
switch(name.toLowerCase()){
case "tabindex":
return _2e6?"tabIndex":"tabindex";
case "for":
case "htmlfor":
return _2e6?"htmlFor":"for";
case "class":
return d.isIE?"className":"class";
default:
return name;
}
};
var _2e9={colspan:"colSpan",enctype:"enctype",frameborder:"frameborder",method:"method",rowspan:"rowSpan",scrolling:"scrolling",shape:"shape",span:"span",type:"type",valuetype:"valueType"};
dojo.hasAttr=function(node,name){
node=d.byId(node);
var _2ec=_2e7(name);
_2ec=_2ec=="htmlFor"?"for":_2ec;
var attr=node.getAttributeNode&&node.getAttributeNode(_2ec);
return attr?attr.specified:false;
};
var _2ee={};
var _ctr=0;
var _2f0=dojo._scopeName+"attrid";
dojo.attr=function(node,name,_2f3){
var args=arguments.length;
if(args==2&&!d.isString(name)){
for(var x in name){
d.attr(node,x,name[x]);
}
return;
}
node=d.byId(node);
name=_2e7(name);
if(args==3){
if(d.isFunction(_2f3)){
var _2f6=d.attr(node,_2f0);
if(!_2f6){
_2f6=_ctr++;
d.attr(node,_2f0,_2f6);
}
if(!_2ee[_2f6]){
_2ee[_2f6]={};
}
var h=_2ee[_2f6][name];
if(h){
d.disconnect(h);
}else{
try{
delete node[name];
}
catch(e){
}
}
_2ee[_2f6][name]=d.connect(node,name,_2f3);
}else{
if((typeof _2f3=="boolean")||(name=="innerHTML")){
node[name]=_2f3;
}else{
if((name=="style")&&(!d.isString(_2f3))){
d.style(node,_2f3);
}else{
node.setAttribute(name,_2f3);
}
}
}
return;
}else{
var prop=_2e9[name.toLowerCase()];
if(prop){
return node[prop];
}else{
var _2f9=node[name];
return (typeof _2f9=="boolean"||typeof _2f9=="function")?_2f9:(d.hasAttr(node,name)?node.getAttribute(name):null);
}
}
};
dojo.removeAttr=function(node,name){
d.byId(node).removeAttribute(_2e7(name));
};
var _2fc="className";
dojo.hasClass=function(node,_2fe){
return ((" "+d.byId(node)[_2fc]+" ").indexOf(" "+_2fe+" ")>=0);
};
dojo.addClass=function(node,_300){
node=d.byId(node);
var cls=node[_2fc];
if((" "+cls+" ").indexOf(" "+_300+" ")<0){
node[_2fc]=cls+(cls?" ":"")+_300;
}
};
dojo.removeClass=function(node,_303){
node=d.byId(node);
var t=d.trim((" "+node[_2fc]+" ").replace(" "+_303+" "," "));
if(node[_2fc]!=t){
node[_2fc]=t;
}
};
dojo.toggleClass=function(node,_306,_307){
if(_307===undefined){
_307=!d.hasClass(node,_306);
}
d[_307?"addClass":"removeClass"](node,_306);
};
})();
}
if(!dojo._hasResource["dojo._base.NodeList"]){
dojo._hasResource["dojo._base.NodeList"]=true;
dojo.provide("dojo._base.NodeList");
(function(){
var d=dojo;
var tnl=function(arr){
arr.constructor=dojo.NodeList;
dojo._mixin(arr,dojo.NodeList.prototype);
return arr;
};
var _30b=function(func,_30d){
return function(){
var _a=arguments;
var aa=d._toArray(_a,0,[null]);
var s=this.map(function(i){
aa[0]=i;
return d[func].apply(d,aa);
});
return (_30d||((_a.length>1)||!d.isString(_a[0])))?this:s;
};
};
dojo.NodeList=function(){
return tnl(Array.apply(null,arguments));
};
dojo.NodeList._wrap=tnl;
dojo.extend(dojo.NodeList,{slice:function(){
var a=d._toArray(arguments);
return tnl(a.slice.apply(this,a));
},splice:function(){
var a=d._toArray(arguments);
return tnl(a.splice.apply(this,a));
},concat:function(){
var a=d._toArray(arguments,0,[this]);
return tnl(a.concat.apply([],a));
},indexOf:function(_315,_316){
return d.indexOf(this,_315,_316);
},lastIndexOf:function(){
return d.lastIndexOf.apply(d,d._toArray(arguments,0,[this]));
},every:function(_317,_318){
return d.every(this,_317,_318);
},some:function(_319,_31a){
return d.some(this,_319,_31a);
},map:function(func,obj){
return d.map(this,func,obj,d.NodeList);
},forEach:function(_31d,_31e){
d.forEach(this,_31d,_31e);
return this;
},coords:function(){
return d.map(this,d.coords);
},attr:_30b("attr"),style:_30b("style"),addClass:_30b("addClass",true),removeClass:_30b("removeClass",true),toggleClass:_30b("toggleClass",true),connect:_30b("connect",true),place:function(_31f,_320){
var item=d.query(_31f)[0];
return this.forEach(function(i){
d.place(i,item,_320);
});
},orphan:function(_323){
return (_323?d._filterQueryResult(this,_323):this).forEach("if(item.parentNode){ item.parentNode.removeChild(item); }");
},adopt:function(_324,_325){
var item=this[0];
return d.query(_324).forEach(function(ai){
d.place(ai,item,_325||"last");
});
},query:function(_328){
if(!_328){
return this;
}
var ret=d.NodeList();
this.forEach(function(item){
ret=ret.concat(d.query(_328,item).filter(function(_32b){
return (_32b!==undefined);
}));
});
return ret;
},filter:function(_32c){
var _32d=this;
var _a=arguments;
var r=d.NodeList();
var rp=function(t){
if(t!==undefined){
r.push(t);
}
};
if(d.isString(_32c)){
_32d=d._filterQueryResult(this,_a[0]);
if(_a.length==1){
return _32d;
}
_a.shift();
}
d.forEach(d.filter(_32d,_a[0],_a[1]),rp);
return r;
},addContent:function(_332,_333){
var ta=d.doc.createElement("span");
if(d.isString(_332)){
ta.innerHTML=_332;
}else{
ta.appendChild(_332);
}
if(_333===undefined){
_333="last";
}
var ct=(_333=="first"||_333=="after")?"lastChild":"firstChild";
this.forEach(function(item){
var tn=ta.cloneNode(true);
while(tn[ct]){
d.place(tn[ct],item,_333);
}
});
return this;
},empty:function(){
return this.forEach("item.innerHTML='';");
},instantiate:function(_338,_339){
var c=d.isFunction(_338)?_338:d.getObject(_338);
return this.forEach(function(i){
new c(_339||{},i);
});
},at:function(){
var nl=new dojo.NodeList();
dojo.forEach(arguments,function(i){
if(this[i]){
nl.push(this[i]);
}
},this);
return nl;
}});
d.forEach(["blur","focus","click","keydown","keypress","keyup","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","submit","load","error"],function(evt){
var _oe="on"+evt;
d.NodeList.prototype[_oe]=function(a,b){
return this.connect(_oe,a,b);
};
});
})();
}
if(!dojo._hasResource["dojo._base.query"]){
dojo._hasResource["dojo._base.query"]=true;
dojo.provide("dojo._base.query");
(function(){
var d=dojo;
var _343=dojo.isIE?"children":"childNodes";
var _344=false;
var _345=function(_346){
if(">~+".indexOf(_346.charAt(_346.length-1))>=0){
_346+=" *";
}
_346+=" ";
var ts=function(s,e){
return d.trim(_346.slice(s,e));
};
var _34a=[];
var _34b=-1;
var _34c=-1;
var _34d=-1;
var _34e=-1;
var _34f=-1;
var inId=-1;
var _351=-1;
var lc="";
var cc="";
var _354;
var x=0;
var ql=_346.length;
var _357=null;
var _cp=null;
var _359=function(){
if(_351>=0){
var tv=(_351==x)?null:ts(_351,x);
_357[(">~+".indexOf(tv)<0)?"tag":"oper"]=tv;
_351=-1;
}
};
var _35b=function(){
if(inId>=0){
_357.id=ts(inId,x).replace(/\\/g,"");
inId=-1;
}
};
var _35c=function(){
if(_34f>=0){
_357.classes.push(ts(_34f+1,x).replace(/\\/g,""));
_34f=-1;
}
};
var _35d=function(){
_35b();
_359();
_35c();
};
for(;lc=cc,cc=_346.charAt(x),x<ql;x++){
if(lc=="\\"){
continue;
}
if(!_357){
_354=x;
_357={query:null,pseudos:[],attrs:[],classes:[],tag:null,oper:null,id:null};
_351=x;
}
if(_34b>=0){
if(cc=="]"){
if(!_cp.attr){
_cp.attr=ts(_34b+1,x);
}else{
_cp.matchFor=ts((_34d||_34b+1),x);
}
var cmf=_cp.matchFor;
if(cmf){
if((cmf.charAt(0)=="\"")||(cmf.charAt(0)=="'")){
_cp.matchFor=cmf.substring(1,cmf.length-1);
}
}
_357.attrs.push(_cp);
_cp=null;
_34b=_34d=-1;
}else{
if(cc=="="){
var _35f=("|~^$*".indexOf(lc)>=0)?lc:"";
_cp.type=_35f+cc;
_cp.attr=ts(_34b+1,x-_35f.length);
_34d=x+1;
}
}
}else{
if(_34c>=0){
if(cc==")"){
if(_34e>=0){
_cp.value=ts(_34c+1,x);
}
_34e=_34c=-1;
}
}else{
if(cc=="#"){
_35d();
inId=x+1;
}else{
if(cc=="."){
_35d();
_34f=x;
}else{
if(cc==":"){
_35d();
_34e=x;
}else{
if(cc=="["){
_35d();
_34b=x;
_cp={};
}else{
if(cc=="("){
if(_34e>=0){
_cp={name:ts(_34e+1,x),value:null};
_357.pseudos.push(_cp);
}
_34c=x;
}else{
if(cc==" "&&lc!=cc){
_35d();
if(_34e>=0){
_357.pseudos.push({name:ts(_34e+1,x)});
}
_357.hasLoops=(_357.pseudos.length||_357.attrs.length||_357.classes.length);
_357.query=ts(_354,x);
_357.otag=_357.tag=(_357["oper"])?null:(_357.tag||"*");
if(_357.tag){
_357.tag=_357.tag.toUpperCase();
}
_34a.push(_357);
_357=null;
}
}
}
}
}
}
}
}
}
return _34a;
};
var _360={"*=":function(attr,_362){
return "[contains(@"+attr+", '"+_362+"')]";
},"^=":function(attr,_364){
return "[starts-with(@"+attr+", '"+_364+"')]";
},"$=":function(attr,_366){
return "[substring(@"+attr+", string-length(@"+attr+")-"+(_366.length-1)+")='"+_366+"']";
},"~=":function(attr,_368){
return "[contains(concat(' ',@"+attr+",' '), ' "+_368+" ')]";
},"|=":function(attr,_36a){
return "[contains(concat(' ',@"+attr+",' '), ' "+_36a+"-')]";
},"=":function(attr,_36c){
return "[@"+attr+"='"+_36c+"']";
}};
var _36d=function(_36e,_36f,_370,_371){
d.forEach(_36f.attrs,function(attr){
var _373;
if(attr.type&&_36e[attr.type]){
_373=_36e[attr.type](attr.attr,attr.matchFor);
}else{
if(attr.attr.length){
_373=_370(attr.attr);
}
}
if(_373){
_371(_373);
}
});
};
var _374=function(_375){
var _376=".";
var _377=_345(d.trim(_375));
while(_377.length){
var tqp=_377.shift();
var _379;
var _37a="";
if(tqp.oper==">"){
_379="/";
tqp=_377.shift();
}else{
if(tqp.oper=="~"){
_379="/following-sibling::";
tqp=_377.shift();
}else{
if(tqp.oper=="+"){
_379="/following-sibling::";
_37a="[position()=1]";
tqp=_377.shift();
}else{
_379="//";
}
}
}
_376+=_379+tqp.tag+_37a;
if(tqp.id){
_376+="[@id='"+tqp.id+"'][1]";
}
d.forEach(tqp.classes,function(cn){
var cnl=cn.length;
var _37d=" ";
if(cn.charAt(cnl-1)=="*"){
_37d="";
cn=cn.substr(0,cnl-1);
}
_376+="[contains(concat(' ',@class,' '), ' "+cn+_37d+"')]";
});
_36d(_360,tqp,function(_37e){
return "[@"+_37e+"]";
},function(_37f){
_376+=_37f;
});
}
return _376;
};
var _380={};
var _381=function(path){
if(_380[path]){
return _380[path];
}
var doc=d.doc;
var _384=_374(path);
var tf=function(_386){
var ret=[];
var _388;
var tdoc=doc;
if(_386){
tdoc=(_386.nodeType==9)?_386:_386.ownerDocument;
}
try{
_388=tdoc.evaluate(_384,_386,null,XPathResult.ANY_TYPE,null);
}
catch(e){
console.debug("failure in exprssion:",_384,"under:",_386);
console.debug(e);
}
var _38a=_388.iterateNext();
while(_38a){
ret.push(_38a);
_38a=_388.iterateNext();
}
return ret;
};
return _380[path]=tf;
};
var _38b={};
var _38c={};
var _38d=function(_38e,_38f){
if(!_38e){
return _38f;
}
if(!_38f){
return _38e;
}
return function(){
return _38e.apply(window,arguments)&&_38f.apply(window,arguments);
};
};
var _390=function(root){
var ret=[];
var te,x=0,tret=root[_343];
while((te=tret[x++])){
if(te.nodeType==1){
ret.push(te);
}
}
return ret;
};
var _396=function(root,_398){
var ret=[];
var te=root;
while(te=te.nextSibling){
if(te.nodeType==1){
ret.push(te);
if(_398){
break;
}
}
}
return ret;
};
var _39b=function(_39c,_39d,_39e,idx){
var nidx=idx+1;
var _3a1=(_39d.length==nidx);
var tqp=_39d[idx];
if(tqp.oper){
var ecn=(tqp.oper==">")?_390(_39c):_396(_39c,(tqp.oper=="+"));
if(!ecn||!ecn.length){
return;
}
nidx++;
_3a1=(_39d.length==nidx);
var tf=_3a5(_39d[idx+1]);
for(var x=0,ecnl=ecn.length,te;x<ecnl,te=ecn[x];x++){
if(tf(te)){
if(_3a1){
_39e.push(te);
}else{
_39b(te,_39d,_39e,nidx);
}
}
}
}
var _3a9=_3aa(tqp)(_39c);
if(_3a1){
while(_3a9.length){
_39e.push(_3a9.shift());
}
}else{
while(_3a9.length){
_39b(_3a9.shift(),_39d,_39e,nidx);
}
}
};
var _3ab=function(_3ac,_3ad){
var ret=[];
var x=_3ac.length-1,te;
while((te=_3ac[x--])){
_39b(te,_3ad,ret,0);
}
return ret;
};
var _3a5=function(q){
if(_38b[q.query]){
return _38b[q.query];
}
var ff=null;
if(q.tag){
if(q.tag=="*"){
ff=_38d(ff,function(elem){
return (elem.nodeType==1);
});
}else{
ff=_38d(ff,function(elem){
return ((elem.nodeType==1)&&(q[_344?"otag":"tag"]==elem.tagName));
});
}
}
if(q.id){
ff=_38d(ff,function(elem){
return ((elem.nodeType==1)&&(elem.id==q.id));
});
}
if(q.hasLoops){
ff=_38d(ff,_3b6(q));
}
return _38b[q.query]=ff;
};
var _3b7=function(node){
var pn=node.parentNode;
var pnc=pn.childNodes;
var nidx=-1;
var _3bc=pn.firstChild;
if(!_3bc){
return nidx;
}
var ci=node["__cachedIndex"];
var cl=pn["__cachedLength"];
if(((typeof cl=="number")&&(cl!=pnc.length))||(typeof ci!="number")){
pn["__cachedLength"]=pnc.length;
var idx=1;
do{
if(_3bc===node){
nidx=idx;
}
if(_3bc.nodeType==1){
_3bc["__cachedIndex"]=idx;
idx++;
}
_3bc=_3bc.nextSibling;
}while(_3bc);
}else{
nidx=ci;
}
return nidx;
};
var _3c0=0;
var _3c1="";
var _3c2=function(elem,attr){
if(attr=="class"){
return elem.className||_3c1;
}
if(attr=="for"){
return elem.htmlFor||_3c1;
}
if(attr=="style"){
return elem.style.cssText||_3c1;
}
return (_344?elem.getAttribute(attr):elem.getAttribute(attr,2))||_3c1;
};
var _3c5={"*=":function(attr,_3c7){
return function(elem){
return (_3c2(elem,attr).indexOf(_3c7)>=0);
};
},"^=":function(attr,_3ca){
return function(elem){
return (_3c2(elem,attr).indexOf(_3ca)==0);
};
},"$=":function(attr,_3cd){
var tval=" "+_3cd;
return function(elem){
var ea=" "+_3c2(elem,attr);
return (ea.lastIndexOf(_3cd)==(ea.length-_3cd.length));
};
},"~=":function(attr,_3d2){
var tval=" "+_3d2+" ";
return function(elem){
var ea=" "+_3c2(elem,attr)+" ";
return (ea.indexOf(tval)>=0);
};
},"|=":function(attr,_3d7){
var _3d8=" "+_3d7+"-";
return function(elem){
var ea=" "+(elem.getAttribute(attr,2)||"");
return ((ea==_3d7)||(ea.indexOf(_3d8)==0));
};
},"=":function(attr,_3dc){
return function(elem){
return (_3c2(elem,attr)==_3dc);
};
}};
var _3de={"checked":function(name,_3e0){
return function(elem){
return !!d.attr(elem,"checked");
};
},"first-child":function(name,_3e3){
return function(elem){
if(elem.nodeType!=1){
return false;
}
var fc=elem.previousSibling;
while(fc&&(fc.nodeType!=1)){
fc=fc.previousSibling;
}
return (!fc);
};
},"last-child":function(name,_3e7){
return function(elem){
if(elem.nodeType!=1){
return false;
}
var nc=elem.nextSibling;
while(nc&&(nc.nodeType!=1)){
nc=nc.nextSibling;
}
return (!nc);
};
},"empty":function(name,_3eb){
return function(elem){
var cn=elem.childNodes;
var cnl=elem.childNodes.length;
for(var x=cnl-1;x>=0;x--){
var nt=cn[x].nodeType;
if((nt==1)||(nt==3)){
return false;
}
}
return true;
};
},"contains":function(name,_3f2){
return function(elem){
if(_3f2.charAt(0)=="\""||_3f2.charAt(0)=="'"){
_3f2=_3f2.substr(1,_3f2.length-2);
}
return (elem.innerHTML.indexOf(_3f2)>=0);
};
},"not":function(name,_3f5){
var ntf=_3a5(_345(_3f5)[0]);
return function(elem){
return (!ntf(elem));
};
},"nth-child":function(name,_3f9){
var pi=parseInt;
if(_3f9=="odd"){
_3f9="2n+1";
}else{
if(_3f9=="even"){
_3f9="2n";
}
}
if(_3f9.indexOf("n")!=-1){
var _3fb=_3f9.split("n",2);
var pred=_3fb[0]?(_3fb[0]=="-"?-1:pi(_3fb[0])):1;
var idx=_3fb[1]?pi(_3fb[1]):0;
var lb=0,ub=-1;
if(pred>0){
if(idx<0){
idx=(idx%pred)&&(pred+(idx%pred));
}else{
if(idx>0){
if(idx>=pred){
lb=idx-idx%pred;
}
idx=idx%pred;
}
}
}else{
if(pred<0){
pred*=-1;
if(idx>0){
ub=idx;
idx=idx%pred;
}
}
}
if(pred>0){
return function(elem){
var i=_3b7(elem);
return (i>=lb)&&(ub<0||i<=ub)&&((i%pred)==idx);
};
}else{
_3f9=idx;
}
}
var _402=pi(_3f9);
return function(elem){
return (_3b7(elem)==_402);
};
}};
var _404=(d.isIE)?function(cond){
var clc=cond.toLowerCase();
return function(elem){
return (_344?elem.getAttribute(cond):elem[cond]||elem[clc]);
};
}:function(cond){
return function(elem){
return (elem&&elem.getAttribute&&elem.hasAttribute(cond));
};
};
var _3b6=function(_40a){
var _40b=(_38c[_40a.query]||_38b[_40a.query]);
if(_40b){
return _40b;
}
var ff=null;
if(_40a.id){
if(_40a.tag!="*"){
ff=_38d(ff,function(elem){
return (elem.tagName==_40a[_344?"otag":"tag"]);
});
}
}
d.forEach(_40a.classes,function(_40e,idx,arr){
var _411=_40e.charAt(_40e.length-1)=="*";
if(_411){
_40e=_40e.substr(0,_40e.length-1);
}
var re=new RegExp("(?:^|\\s)"+_40e+(_411?".*":"")+"(?:\\s|$)");
ff=_38d(ff,function(elem){
return re.test(elem.className);
});
ff.count=idx;
});
d.forEach(_40a.pseudos,function(_414){
if(_3de[_414.name]){
ff=_38d(ff,_3de[_414.name](_414.name,_414.value));
}
});
_36d(_3c5,_40a,_404,function(_415){
ff=_38d(ff,_415);
});
if(!ff){
ff=function(){
return true;
};
}
return _38c[_40a.query]=ff;
};
var _416={};
var _3aa=function(_417,root){
var fHit=_416[_417.query];
if(fHit){
return fHit;
}
if(_417.id&&!_417.hasLoops&&!_417.tag){
return _416[_417.query]=function(root){
return [d.byId(_417.id)];
};
}
var _41b=_3b6(_417);
var _41c;
if(_417.tag&&_417.id&&!_417.hasLoops){
_41c=function(root){
var te=d.byId(_417.id,(root.ownerDocument||root));
if(_41b(te)){
return [te];
}
};
}else{
var tret;
if(!_417.hasLoops){
_41c=function(root){
var ret=[];
var te,x=0,tret=root.getElementsByTagName(_417[_344?"otag":"tag"]);
while((te=tret[x++])){
ret.push(te);
}
return ret;
};
}else{
_41c=function(root){
var ret=[];
var te,x=0,tret=root.getElementsByTagName(_417[_344?"otag":"tag"]);
while((te=tret[x++])){
if(_41b(te)){
ret.push(te);
}
}
return ret;
};
}
}
return _416[_417.query]=_41c;
};
var _428={};
var _429={"*":d.isIE?function(root){
return root.all;
}:function(root){
return root.getElementsByTagName("*");
},"~":_396,"+":function(root){
return _396(root,true);
},">":_390};
var _42d=function(_42e){
var _42f=_345(d.trim(_42e));
if(_42f.length==1){
var tt=_3aa(_42f[0]);
tt.nozip=true;
return tt;
}
var sqf=function(root){
var _433=_42f.slice(0);
var _434;
if(_433[0].oper==">"){
_434=[root];
}else{
_434=_3aa(_433.shift())(root);
}
return _3ab(_434,_433);
};
return sqf;
};
var _435=((document["evaluate"]&&!d.isSafari)?function(_436,root){
var _438=_436.split(" ");
if((!_344)&&(document["evaluate"])&&(_436.indexOf(":")==-1)&&(_436.indexOf("+")==-1)){
if(((_438.length>2)&&(_436.indexOf(">")==-1))||(_438.length>3)||(_436.indexOf("[")>=0)||((1==_438.length)&&(0<=_436.indexOf(".")))){
return _381(_436);
}
}
return _42d(_436);
}:_42d);
var _439=function(_43a){
if(_429[_43a]){
return _429[_43a];
}
if(0>_43a.indexOf(",")){
return _429[_43a]=_435(_43a);
}else{
var _43b=_43a.split(/\s*,\s*/);
var tf=function(root){
var _43e=0;
var ret=[];
var tp;
while((tp=_43b[_43e++])){
ret=ret.concat(_435(tp,tp.indexOf(" "))(root));
}
return ret;
};
return _429[_43a]=tf;
}
};
var _441=0;
var _zip=function(arr){
if(arr&&arr.nozip){
return d.NodeList._wrap(arr);
}
var ret=new d.NodeList();
if(!arr){
return ret;
}
if(arr[0]){
ret.push(arr[0]);
}
if(arr.length<2){
return ret;
}
_441++;
if(d.isIE&&_344){
var _445=_441+"";
arr[0].setAttribute("_zipIdx",_445);
for(var x=1,te;te=arr[x];x++){
if(arr[x].getAttribute("_zipIdx")!=_445){
ret.push(te);
}
te.setAttribute("_zipIdx",_445);
}
}else{
arr[0]["_zipIdx"]=_441;
for(var x=1,te;te=arr[x];x++){
if(arr[x]["_zipIdx"]!=_441){
ret.push(te);
}
te["_zipIdx"]=_441;
}
}
return ret;
};
d.query=function(_448,root){
if(_448.constructor==d.NodeList){
return _448;
}
if(!d.isString(_448)){
return new d.NodeList(_448);
}
if(d.isString(root)){
root=d.byId(root);
}
root=root||d.doc;
var od=root.ownerDocument||root.documentElement;
_344=(root.contentType&&root.contentType=="application/xml")||(!!od)&&(d.isIE?od.xml:(root.xmlVersion||od.xmlVersion));
return _zip(_439(_448)(root));
};
d.query.pseudos=_3de;
d._filterQueryResult=function(_44b,_44c){
var tnl=new d.NodeList();
var ff=(_44c)?_3a5(_345(_44c)[0]):function(){
return true;
};
for(var x=0,te;te=_44b[x];x++){
if(ff(te)){
tnl.push(te);
}
}
return tnl;
};
})();
}
if(!dojo._hasResource["dojo._base.xhr"]){
dojo._hasResource["dojo._base.xhr"]=true;
dojo.provide("dojo._base.xhr");
(function(){
var _d=dojo;
function setValue(obj,name,_454){
var val=obj[name];
if(_d.isString(val)){
obj[name]=[val,_454];
}else{
if(_d.isArray(val)){
val.push(_454);
}else{
obj[name]=_454;
}
}
};
dojo.formToObject=function(_456){
var ret={};
var _458="file|submit|image|reset|button|";
_d.forEach(dojo.byId(_456).elements,function(item){
var _in=item.name;
var type=(item.type||"").toLowerCase();
if(_in&&type&&_458.indexOf(type)==-1&&!item.disabled){
if(type=="radio"||type=="checkbox"){
if(item.checked){
setValue(ret,_in,item.value);
}
}else{
if(item.multiple){
ret[_in]=[];
_d.query("option",item).forEach(function(opt){
if(opt.selected){
setValue(ret,_in,opt.value);
}
});
}else{
setValue(ret,_in,item.value);
if(type=="image"){
ret[_in+".x"]=ret[_in+".y"]=ret[_in].x=ret[_in].y=0;
}
}
}
}
});
return ret;
};
dojo.objectToQuery=function(map){
var enc=encodeURIComponent;
var _45f=[];
var _460={};
for(var name in map){
var _462=map[name];
if(_462!=_460[name]){
var _463=enc(name)+"=";
if(_d.isArray(_462)){
for(var i=0;i<_462.length;i++){
_45f.push(_463+enc(_462[i]));
}
}else{
_45f.push(_463+enc(_462));
}
}
}
return _45f.join("&");
};
dojo.formToQuery=function(_465){
return _d.objectToQuery(_d.formToObject(_465));
};
dojo.formToJson=function(_466,_467){
return _d.toJson(_d.formToObject(_466),_467);
};
dojo.queryToObject=function(str){
var ret={};
var qp=str.split("&");
var dec=decodeURIComponent;
_d.forEach(qp,function(item){
if(item.length){
var _46d=item.split("=");
var name=dec(_46d.shift());
var val=dec(_46d.join("="));
if(_d.isString(ret[name])){
ret[name]=[ret[name]];
}
if(_d.isArray(ret[name])){
ret[name].push(val);
}else{
ret[name]=val;
}
}
});
return ret;
};
dojo._blockAsync=false;
dojo._contentHandlers={"text":function(xhr){
return xhr.responseText;
},"json":function(xhr){
return _d.fromJson(xhr.responseText||null);
},"json-comment-filtered":function(xhr){
if(!dojo.config.useCommentedJson){
console.warn("Consider using the standard mimetype:application/json."+" json-commenting can introduce security issues. To"+" decrease the chances of hijacking, use the standard the 'json' handler and"+" prefix your json with: {}&&\n"+"Use djConfig.useCommentedJson=true to turn off this message.");
}
var _473=xhr.responseText;
var _474=_473.indexOf("/*");
var _475=_473.lastIndexOf("*/");
if(_474==-1||_475==-1){
throw new Error("JSON was not comment filtered");
}
return _d.fromJson(_473.substring(_474+2,_475));
},"javascript":function(xhr){
return _d.eval(xhr.responseText);
},"xml":function(xhr){
var _478=xhr.responseXML;
if(_d.isIE&&(!_478||_478.documentElement==null)){
_d.forEach(["MSXML2","Microsoft","MSXML","MSXML3"],function(_479){
try{
var dom=new ActiveXObject(_479+".XMLDOM");
dom.async=false;
dom.loadXML(xhr.responseText);
_478=dom;
}
catch(e){
}
});
}
return _478;
}};
dojo._contentHandlers["json-comment-optional"]=function(xhr){
var _47c=_d._contentHandlers;
if(xhr.responseText&&xhr.responseText.indexOf("/*")!=-1){
return _47c["json-comment-filtered"](xhr);
}else{
return _47c["json"](xhr);
}
};
dojo._ioSetArgs=function(args,_47e,_47f,_480){
var _481={args:args,url:args.url};
var _482=null;
if(args.form){
var form=_d.byId(args.form);
var _484=form.getAttributeNode("action");
_481.url=_481.url||(_484?_484.value:null);
_482=_d.formToObject(form);
}
var _485=[{}];
if(_482){
_485.push(_482);
}
if(args.content){
_485.push(args.content);
}
if(args.preventCache){
_485.push({"dojo.preventCache":new Date().valueOf()});
}
_481.query=_d.objectToQuery(_d.mixin.apply(null,_485));
_481.handleAs=args.handleAs||"text";
var d=new _d.Deferred(_47e);
d.addCallbacks(_47f,function(_487){
return _480(_487,d);
});
var ld=args.load;
if(ld&&_d.isFunction(ld)){
d.addCallback(function(_489){
return ld.call(args,_489,_481);
});
}
var err=args.error;
if(err&&_d.isFunction(err)){
d.addErrback(function(_48b){
return err.call(args,_48b,_481);
});
}
var _48c=args.handle;
if(_48c&&_d.isFunction(_48c)){
d.addBoth(function(_48d){
return _48c.call(args,_48d,_481);
});
}
d.ioArgs=_481;
return d;
};
var _48e=function(dfd){
dfd.canceled=true;
var xhr=dfd.ioArgs.xhr;
var _at=typeof xhr.abort;
if(_at=="function"||_at=="object"||_at=="unknown"){
xhr.abort();
}
var err=dfd.ioArgs.error;
if(!err){
err=new Error("xhr cancelled");
err.dojoType="cancel";
}
return err;
};
var _493=function(dfd){
var ret=_d._contentHandlers[dfd.ioArgs.handleAs](dfd.ioArgs.xhr);
return (typeof ret=="undefined")?null:ret;
};
var _496=function(_497,dfd){
console.debug(_497);
return _497;
};
var _499=null;
var _49a=[];
var _49b=function(){
var now=(new Date()).getTime();
if(!_d._blockAsync){
for(var i=0,tif;i<_49a.length&&(tif=_49a[i]);i++){
var dfd=tif.dfd;
var func=function(){
if(!dfd||dfd.canceled||!tif.validCheck(dfd)){
_49a.splice(i--,1);
}else{
if(tif.ioCheck(dfd)){
_49a.splice(i--,1);
tif.resHandle(dfd);
}else{
if(dfd.startTime){
if(dfd.startTime+(dfd.ioArgs.args.timeout||0)<now){
_49a.splice(i--,1);
var err=new Error("timeout exceeded");
err.dojoType="timeout";
dfd.errback(err);
dfd.cancel();
}
}
}
}
};
if(dojo.config.isDebug){
func.call(this);
}else{
try{
func.call(this);
}
catch(e){
dfd.errback(e);
}
}
}
}
if(!_49a.length){
clearInterval(_499);
_499=null;
return;
}
};
dojo._ioCancelAll=function(){
try{
_d.forEach(_49a,function(i){
try{
i.dfd.cancel();
}
catch(e){
}
});
}
catch(e){
}
};
if(_d.isIE){
_d.addOnWindowUnload(_d._ioCancelAll);
}
_d._ioWatch=function(dfd,_4a4,_4a5,_4a6){
if(dfd.ioArgs.args.timeout){
dfd.startTime=(new Date()).getTime();
}
_49a.push({dfd:dfd,validCheck:_4a4,ioCheck:_4a5,resHandle:_4a6});
if(!_499){
_499=setInterval(_49b,50);
}
_49b();
};
var _4a7="application/x-www-form-urlencoded";
var _4a8=function(dfd){
return dfd.ioArgs.xhr.readyState;
};
var _4aa=function(dfd){
return 4==dfd.ioArgs.xhr.readyState;
};
var _4ac=function(dfd){
var xhr=dfd.ioArgs.xhr;
if(_d._isDocumentOk(xhr)){
dfd.callback(dfd);
}else{
var err=new Error("Unable to load "+dfd.ioArgs.url+" status:"+xhr.status);
err.status=xhr.status;
err.responseText=xhr.responseText;
dfd.errback(err);
}
};
dojo._ioAddQueryToUrl=function(_4b0){
if(_4b0.query.length){
_4b0.url+=(_4b0.url.indexOf("?")==-1?"?":"&")+_4b0.query;
_4b0.query=null;
}
};
dojo.xhr=function(_4b1,args,_4b3){
var dfd=_d._ioSetArgs(args,_48e,_493,_496);
dfd.ioArgs.xhr=_d._xhrObj(dfd.ioArgs.args);
if(_4b3){
if("postData" in args){
dfd.ioArgs.query=args.postData;
}else{
if("putData" in args){
dfd.ioArgs.query=args.putData;
}
}
}else{
_d._ioAddQueryToUrl(dfd.ioArgs);
}
var _4b5=dfd.ioArgs;
var xhr=_4b5.xhr;
xhr.open(_4b1,_4b5.url,args.sync!==true,args.user||undefined,args.password||undefined);
if(args.headers){
for(var hdr in args.headers){
if(hdr.toLowerCase()==="content-type"&&!args.contentType){
args.contentType=args.headers[hdr];
}else{
xhr.setRequestHeader(hdr,args.headers[hdr]);
}
}
}
xhr.setRequestHeader("Content-Type",args.contentType||_4a7);
if(!args.headers||!args.headers["X-Requested-With"]){
xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");
}
if(dojo.config.isDebug){
xhr.send(_4b5.query);
}else{
try{
xhr.send(_4b5.query);
}
catch(e){
dfd.ioArgs.error=e;
dfd.cancel();
}
}
_d._ioWatch(dfd,_4a8,_4aa,_4ac);
xhr=null;
return dfd;
};
dojo.xhrGet=function(args){
return _d.xhr("GET",args);
};
dojo.rawXhrPost=dojo.xhrPost=function(args){
return _d.xhr("POST",args,true);
};
dojo.rawXhrPut=dojo.xhrPut=function(args){
return _d.xhr("PUT",args,true);
};
dojo.xhrDelete=function(args){
return _d.xhr("DELETE",args);
};
})();
}
if(!dojo._hasResource["dojo._base.fx"]){
dojo._hasResource["dojo._base.fx"]=true;
dojo.provide("dojo._base.fx");
(function(){
var d=dojo;
dojo._Line=function(_4bd,end){
this.start=_4bd;
this.end=end;
this.getValue=function(n){
return ((this.end-this.start)*n)+this.start;
};
};
d.declare("dojo._Animation",null,{constructor:function(args){
d.mixin(this,args);
if(d.isArray(this.curve)){
this.curve=new d._Line(this.curve[0],this.curve[1]);
}
},duration:350,repeat:0,rate:10,_percent:0,_startRepeatCount:0,_fire:function(evt,args){
if(this[evt]){
if(dojo.config.isDebug){
this[evt].apply(this,args||[]);
}else{
try{
this[evt].apply(this,args||[]);
}
catch(e){
console.error("exception in animation handler for:",evt);
console.error(e);
}
}
}
return this;
},play:function(_4c3,_4c4){
var _t=this;
if(_4c4){
_t._stopTimer();
_t._active=_t._paused=false;
_t._percent=0;
}else{
if(_t._active&&!_t._paused){
return _t;
}
}
_t._fire("beforeBegin");
var de=_4c3||_t.delay;
var _p=dojo.hitch(_t,"_play",_4c4);
if(de>0){
setTimeout(_p,de);
return _t;
}
_p();
return _t;
},_play:function(_4c8){
var _t=this;
_t._startTime=new Date().valueOf();
if(_t._paused){
_t._startTime-=_t.duration*_t._percent;
}
_t._endTime=_t._startTime+_t.duration;
_t._active=true;
_t._paused=false;
var _4ca=_t.curve.getValue(_t._percent);
if(!_t._percent){
if(!_t._startRepeatCount){
_t._startRepeatCount=_t.repeat;
}
_t._fire("onBegin",[_4ca]);
}
_t._fire("onPlay",[_4ca]);
_t._cycle();
return _t;
},pause:function(){
this._stopTimer();
if(!this._active){
return this;
}
this._paused=true;
this._fire("onPause",[this.curve.getValue(this._percent)]);
return this;
},gotoPercent:function(_4cb,_4cc){
this._stopTimer();
this._active=this._paused=true;
this._percent=_4cb;
if(_4cc){
this.play();
}
return this;
},stop:function(_4cd){
if(!this._timer){
return this;
}
this._stopTimer();
if(_4cd){
this._percent=1;
}
this._fire("onStop",[this.curve.getValue(this._percent)]);
this._active=this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}
return "stopped";
},_cycle:function(){
var _t=this;
if(_t._active){
var curr=new Date().valueOf();
var step=(curr-_t._startTime)/(_t._endTime-_t._startTime);
if(step>=1){
step=1;
}
_t._percent=step;
if(_t.easing){
step=_t.easing(step);
}
_t._fire("onAnimate",[_t.curve.getValue(step)]);
if(_t._percent<1){
_t._startTimer();
}else{
_t._active=false;
if(_t.repeat>0){
_t.repeat--;
_t.play(null,true);
}else{
if(_t.repeat==-1){
_t.play(null,true);
}else{
if(_t._startRepeatCount){
_t.repeat=_t._startRepeatCount;
_t._startRepeatCount=0;
}
}
}
_t._percent=0;
_t._fire("onEnd");
_t._stopTimer();
}
}
return _t;
}});
var ctr=0;
var _4d2=[];
var _4d3={run:function(){
}};
var _4d4=null;
dojo._Animation.prototype._startTimer=function(){
if(!this._timer){
this._timer=d.connect(_4d3,"run",this,"_cycle");
ctr++;
}
if(!_4d4){
_4d4=setInterval(d.hitch(_4d3,"run"),this.rate);
}
};
dojo._Animation.prototype._stopTimer=function(){
if(this._timer){
d.disconnect(this._timer);
this._timer=null;
ctr--;
}
if(ctr<=0){
clearInterval(_4d4);
_4d4=null;
ctr=0;
}
};
var _4d5=(d.isIE)?function(node){
var ns=node.style;
if(!ns.width.length&&d.style(node,"width")=="auto"){
ns.width="auto";
}
}:function(){
};
dojo._fade=function(args){
args.node=d.byId(args.node);
var _4d9=d.mixin({properties:{}},args);
var _4da=(_4d9.properties.opacity={});
_4da.start=!("start" in _4d9)?function(){
return Number(d.style(_4d9.node,"opacity"));
}:_4d9.start;
_4da.end=_4d9.end;
var anim=d.animateProperty(_4d9);
d.connect(anim,"beforeBegin",d.partial(_4d5,_4d9.node));
return anim;
};
dojo.fadeIn=function(args){
return d._fade(d.mixin({end:1},args));
};
dojo.fadeOut=function(args){
return d._fade(d.mixin({end:0},args));
};
dojo._defaultEasing=function(n){
return 0.5+((Math.sin((n+1.5)*Math.PI))/2);
};
var _4df=function(_4e0){
this._properties=_4e0;
for(var p in _4e0){
var prop=_4e0[p];
if(prop.start instanceof d.Color){
prop.tempColor=new d.Color();
}
}
this.getValue=function(r){
var ret={};
for(var p in this._properties){
var prop=this._properties[p];
var _4e7=prop.start;
if(_4e7 instanceof d.Color){
ret[p]=d.blendColors(_4e7,prop.end,r,prop.tempColor).toCss();
}else{
if(!d.isArray(_4e7)){
ret[p]=((prop.end-_4e7)*r)+_4e7+(p!="opacity"?prop.units||"px":"");
}
}
}
return ret;
};
};
dojo.animateProperty=function(args){
args.node=d.byId(args.node);
if(!args.easing){
args.easing=d._defaultEasing;
}
var anim=new d._Animation(args);
d.connect(anim,"beforeBegin",anim,function(){
var pm={};
for(var p in this.properties){
if(p=="width"||p=="height"){
this.node.display="block";
}
var prop=this.properties[p];
prop=pm[p]=d.mixin({},(d.isObject(prop)?prop:{end:prop}));
if(d.isFunction(prop.start)){
prop.start=prop.start();
}
if(d.isFunction(prop.end)){
prop.end=prop.end();
}
var _4ed=(p.toLowerCase().indexOf("color")>=0);
function getStyle(node,p){
var v=({height:node.offsetHeight,width:node.offsetWidth})[p];
if(v!==undefined){
return v;
}
v=d.style(node,p);
return (p=="opacity")?Number(v):(_4ed?v:parseFloat(v));
};
if(!("end" in prop)){
prop.end=getStyle(this.node,p);
}else{
if(!("start" in prop)){
prop.start=getStyle(this.node,p);
}
}
if(_4ed){
prop.start=new d.Color(prop.start);
prop.end=new d.Color(prop.end);
}else{
prop.start=(p=="opacity")?Number(prop.start):parseFloat(prop.start);
}
}
this.curve=new _4df(pm);
});
d.connect(anim,"onAnimate",d.hitch(d,"style",anim.node));
return anim;
};
dojo.anim=function(node,_4f2,_4f3,_4f4,_4f5,_4f6){
return d.animateProperty({node:node,duration:_4f3||d._Animation.prototype.duration,properties:_4f2,easing:_4f4,onEnd:_4f5}).play(_4f6||0);
};
})();
}
if(!dojo._hasResource["dojo._base.browser"]){
dojo._hasResource["dojo._base.browser"]=true;
dojo.provide("dojo._base.browser");
if(dojo.config.require){
dojo.forEach(dojo.config.require,"dojo['require'](item);");
}
}
if(dojo.config.afterOnLoad&&dojo.isBrowser){
window.setTimeout(dojo._fakeLoadInit,1000);
}
})();


/* /js/dojo/nls/dojo-packaged_en.js */
dojo.provide("dojo.nls.dojo-packaged_en");dojo.provide("dojo.cldr.nls.gregorian");dojo.cldr.nls.gregorian._built=true;dojo.provide("dojo.cldr.nls.gregorian.en");dojo.cldr.nls.gregorian.en={"field-dayperiod":"AM/PM","field-minute":"Minute","eraNames":["Before Christ","Anno Domini"],"field-weekday":"Day of the Week","days-standAlone-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"months-standAlone-narrow":["J","F","M","A","M","J","J","A","S","O","N","D"],"field-era":"Era","field-hour":"Hour","timeFormat-full":"h:mm:ss a v","months-standAlone-abbr":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"days-standAlone-narrow":["S","M","T","W","T","F","S"],"eraAbbr":["BC","AD"],"dateFormat-long":"MMMM d, yyyy","timeFormat-medium":"h:mm:ss a","field-zone":"Zone","dateFormat-medium":"MMM d, yyyy","quarters-standAlone-wide":["1st quarter","2nd quarter","3rd quarter","4th quarter"],"dateTimeFormat":"{1} {0}","field-year":"Year","quarters-standAlone-narrow":["1","2","3","4"],"months-standAlone-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"field-week":"Week","timeFormat-long":"h:mm:ss a z","months-format-abbr":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"timeFormat-short":"h:mm a","field-month":"Month","quarters-format-abbr":["Q1","Q2","Q3","Q4"],"days-format-abbr":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"pm":"PM","days-format-narrow":["S","M","T","W","T","F","S"],"field-second":"Second","field-day":"Day","months-format-narrow":["J","F","M","A","M","J","J","A","S","O","N","D"],"am":"AM","days-standAlone-abbr":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"dateFormat-short":"M/d/yy","dateFormat-full":"EEEE, MMMM d, yyyy","months-format-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"dateTimeAvailableFormats":["HH:mm","HH:mm:ss","L","E, M/d","LLL","E, MMM d","E, MMMM d","MMMM d","MMM d","M/d","d","h:mm a","mm:ss","yyyy","M/yyyy","EEE, M/d/yyyy","MMM yyyy","EEE, MMM d, yyyy","MMMM yyyy","Q yyyy","QQQ yyyy"],"quarters-format-wide":["1st quarter","2nd quarter","3rd quarter","4th quarter"],"days-format-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"eraNarrow":["B","A"],"dateTimeFormats-appendItem-Second":"{0} ({2}: {1})","dateTimeFormats-appendItem-Year":"{0} {1}","quarters-standAlone-abbr":["Q1","Q2","Q3","Q4"],"dateTimeFormats-appendItem-Week":"{0} ({2}: {1})","dateTimeFormats-appendItem-Timezone":"{0} {1}","dateTimeFormats-appendItem-Month":"{0} ({2}: {1})","dateTimeFormats-appendItem-Minute":"{0} ({2}: {1})","dateTimeFormats-appendItem-Day":"{0} ({2}: {1})","quarters-format-narrow":["1","2","3","4"],"dateTimeFormats-appendItem-Quarter":"{0} ({2}: {1})","dateTimeFormats-appendItem-Day-Of-Week":"{0} {1}","dateTimeFormats-appendItem-Hour":"{0} ({2}: {1})","dateTimeFormats-appendItem-Era":"{0} {1}"};dojo.provide("dijit.nls.loading");dijit.nls.loading._built=true;dojo.provide("dijit.nls.loading.en");dijit.nls.loading.en={"loadingState":"Loading...","errorState":"Sorry, an error occurred"};dojo.provide("dijit.nls.common");dijit.nls.common._built=true;dojo.provide("dijit.nls.common.en");dijit.nls.common.en={"buttonOk":"OK","buttonCancel":"Cancel","buttonSave":"Save","itemClose":"Close"};dojo.provide("dijit.form.nls.Textarea");dijit.form.nls.Textarea._built=true;dojo.provide("dijit.form.nls.Textarea.en");dijit.form.nls.Textarea.en={"iframeEditTitle":"edit area","iframeFocusTitle":"edit area frame"};dojo.provide("dijit._editor.nls.commands");dijit._editor.nls.commands._built=true;dojo.provide("dijit._editor.nls.commands.en");dijit._editor.nls.commands.en={"removeFormat":"Remove Format","copy":"Copy","paste":"Paste","selectAll":"Select All","insertOrderedList":"Numbered List","insertTable":"Insert/Edit Table","underline":"Underline","foreColor":"Foreground Color","htmlToggle":"HTML Source","formatBlock":"Paragraph Style","insertHorizontalRule":"Horizontal Rule","delete":"Delete","appleKey":"⌘${0}","insertUnorderedList":"Bullet List","tableProp":"Table Property","insertImage":"Insert Image","superscript":"Superscript","subscript":"Subscript","createLink":"Create Link","undo":"Undo","italic":"Italic","fontName":"Font Name","justifyLeft":"Align Left","unlink":"Remove Link","toggleTableBorder":"Toggle Table Border","ctrlKey":"ctrl+${0}","fontSize":"Font Size","systemShortcut":"The \"${0}\" action is only available in your browser using a keyboard shortcut. Use ${1}.","indent":"Indent","redo":"Redo","strikethrough":"Strikethrough","justifyFull":"Justify","justifyCenter":"Align Center","hiliteColor":"Background Color","deleteTable":"Delete Table","outdent":"Outdent","cut":"Cut","plainFormatBlock":"Paragraph Style","toggleDir":"Toggle Direction","bold":"Bold","tabIndent":"Tab Indent","systemShortcutFF":"The \"${0}\" action is only available in Mozilla Firefox using a keyboard shortcut. Use ${1}.","justifyRight":"Align Right"};dojo.provide("dijit.form.nls.validate");dijit.form.nls.validate._built=true;dojo.provide("dijit.form.nls.validate.en");dijit.form.nls.validate.en={"rangeMessage":"This value is out of range.","invalidMessage":"The value entered is not valid.","missingMessage":"This value is required."};dojo.provide("dijit.form.nls.ComboBox");dijit.form.nls.ComboBox._built=true;dojo.provide("dijit.form.nls.ComboBox.en");dijit.form.nls.ComboBox.en={"previousMessage":"Previous choices","nextMessage":"More choices"};
/*
	Copyright (c) 2004-2008, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/
/* JavaScript in the lconn, com, semtag, and quickr packages are (C) Copyright IBM Corp.  2008,2009  All Rights Reserved. */

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(!dojo._hasResource["dojo.string"]){
dojo._hasResource["dojo.string"]=true;
dojo.provide("dojo.string");
dojo.string.rep=function(_1,_2){
if(_2<=0||!_1){
return "";
}
var _3=[];
for(;;){
if(_2&1){
_3.push(_1);
}
if(!(_2>>=1)){
break;
}
_1+=_1;
}
return _3.join("");
};
dojo.string.pad=function(_4,_5,ch,_7){
if(!ch){
ch="0";
}
var _8=String(_4),_9=dojo.string.rep(ch,Math.ceil((_5-_8.length)/ch.length));
return _7?_8+_9:_9+_8;
};
dojo.string.substitute=function(_a,_b,_c,_d){
_d=_d||dojo.global;
_c=(!_c)?function(v){
return v;
}:dojo.hitch(_d,_c);
return _a.replace(/\$\{([^\s\:\}]+)(?:\:([^\s\:\}]+))?\}/g,function(_f,key,_11){
var _12=dojo.getObject(key,false,_b);
if(_11){
_12=dojo.getObject(_11,false,_d).call(_d,_12,key);
}
return _c(_12,key).toString();
});
};
dojo.string.trim=function(str){
str=str.replace(/^\s+/,"");
for(var i=str.length-1;i>=0;i--){
if(/\S/.test(str.charAt(i))){
str=str.substring(0,i+1);
break;
}
}
return str;
};
}
if(!dojo._hasResource["dojo.fx"]){
dojo._hasResource["dojo.fx"]=true;
dojo.provide("dojo.fx");
dojo.provide("dojo.fx.Toggler");
(function(){
var _15={_fire:function(evt,_17){
if(this[evt]){
this[evt].apply(this,_17||[]);
}
return this;
}};
var _18=function(_19){
this._index=-1;
this._animations=_19||[];
this._current=this._onAnimateCtx=this._onEndCtx=null;
this.duration=0;
dojo.forEach(this._animations,function(a){
this.duration+=a.duration;
if(a.delay){
this.duration+=a.delay;
}
},this);
};
dojo.extend(_18,{_onAnimate:function(){
this._fire("onAnimate",arguments);
},_onEnd:function(){
dojo.disconnect(this._onAnimateCtx);
dojo.disconnect(this._onEndCtx);
this._onAnimateCtx=this._onEndCtx=null;
if(this._index+1==this._animations.length){
this._fire("onEnd");
}else{
this._current=this._animations[++this._index];
this._onAnimateCtx=dojo.connect(this._current,"onAnimate",this,"_onAnimate");
this._onEndCtx=dojo.connect(this._current,"onEnd",this,"_onEnd");
this._current.play(0,true);
}
},play:function(_1b,_1c){
if(!this._current){
this._current=this._animations[this._index=0];
}
if(!_1c&&this._current.status()=="playing"){
return this;
}
var _1d=dojo.connect(this._current,"beforeBegin",this,function(){
this._fire("beforeBegin");
}),_1e=dojo.connect(this._current,"onBegin",this,function(arg){
this._fire("onBegin",arguments);
}),_20=dojo.connect(this._current,"onPlay",this,function(arg){
this._fire("onPlay",arguments);
dojo.disconnect(_1d);
dojo.disconnect(_1e);
dojo.disconnect(_20);
});
if(this._onAnimateCtx){
dojo.disconnect(this._onAnimateCtx);
}
this._onAnimateCtx=dojo.connect(this._current,"onAnimate",this,"_onAnimate");
if(this._onEndCtx){
dojo.disconnect(this._onEndCtx);
}
this._onEndCtx=dojo.connect(this._current,"onEnd",this,"_onEnd");
this._current.play.apply(this._current,arguments);
return this;
},pause:function(){
if(this._current){
var e=dojo.connect(this._current,"onPause",this,function(arg){
this._fire("onPause",arguments);
dojo.disconnect(e);
});
this._current.pause();
}
return this;
},gotoPercent:function(_24,_25){
this.pause();
var _26=this.duration*_24;
this._current=null;
dojo.some(this._animations,function(a){
if(a.duration<=_26){
this._current=a;
return true;
}
_26-=a.duration;
return false;
});
if(this._current){
this._current.gotoPercent(_26/this._current.duration,_25);
}
return this;
},stop:function(_28){
if(this._current){
if(_28){
for(;this._index+1<this._animations.length;++this._index){
this._animations[this._index].stop(true);
}
this._current=this._animations[this._index];
}
var e=dojo.connect(this._current,"onStop",this,function(arg){
this._fire("onStop",arguments);
dojo.disconnect(e);
});
this._current.stop();
}
return this;
},status:function(){
return this._current?this._current.status():"stopped";
},destroy:function(){
if(this._onAnimateCtx){
dojo.disconnect(this._onAnimateCtx);
}
if(this._onEndCtx){
dojo.disconnect(this._onEndCtx);
}
}});
dojo.extend(_18,_15);
dojo.fx.chain=function(_2b){
return new _18(_2b);
};
var _2c=function(_2d){
this._animations=_2d||[];
this._connects=[];
this._finished=0;
this.duration=0;
dojo.forEach(_2d,function(a){
var _2f=a.duration;
if(a.delay){
_2f+=a.delay;
}
if(this.duration<_2f){
this.duration=_2f;
}
this._connects.push(dojo.connect(a,"onEnd",this,"_onEnd"));
},this);
this._pseudoAnimation=new dojo._Animation({curve:[0,1],duration:this.duration});
dojo.forEach(["beforeBegin","onBegin","onPlay","onAnimate","onPause","onStop"],function(evt){
this._connects.push(dojo.connect(this._pseudoAnimation,evt,dojo.hitch(this,"_fire",evt)));
},this);
};
dojo.extend(_2c,{_doAction:function(_31,_32){
dojo.forEach(this._animations,function(a){
a[_31].apply(a,_32);
});
return this;
},_onEnd:function(){
if(++this._finished==this._animations.length){
this._fire("onEnd");
}
},_call:function(_34,_35){
var t=this._pseudoAnimation;
t[_34].apply(t,_35);
},play:function(_37,_38){
this._finished=0;
this._doAction("play",arguments);
this._call("play",arguments);
return this;
},pause:function(){
this._doAction("pause",arguments);
this._call("pause",arguments);
return this;
},gotoPercent:function(_39,_3a){
var ms=this.duration*_39;
dojo.forEach(this._animations,function(a){
a.gotoPercent(a.duration<ms?1:(ms/a.duration),_3a);
});
this._call("gotoPercent",arguments);
return this;
},stop:function(_3d){
this._doAction("stop",arguments);
this._call("stop",arguments);
return this;
},status:function(){
return this._pseudoAnimation.status();
},destroy:function(){
dojo.forEach(this._connects,dojo.disconnect);
}});
dojo.extend(_2c,_15);
dojo.fx.combine=function(_3e){
return new _2c(_3e);
};
})();
dojo.declare("dojo.fx.Toggler",null,{constructor:function(_3f){
var _t=this;
dojo.mixin(_t,_3f);
_t.node=_3f.node;
_t._showArgs=dojo.mixin({},_3f);
_t._showArgs.node=_t.node;
_t._showArgs.duration=_t.showDuration;
_t.showAnim=_t.showFunc(_t._showArgs);
_t._hideArgs=dojo.mixin({},_3f);
_t._hideArgs.node=_t.node;
_t._hideArgs.duration=_t.hideDuration;
_t.hideAnim=_t.hideFunc(_t._hideArgs);
dojo.connect(_t.showAnim,"beforeBegin",dojo.hitch(_t.hideAnim,"stop",true));
dojo.connect(_t.hideAnim,"beforeBegin",dojo.hitch(_t.showAnim,"stop",true));
},node:null,showFunc:dojo.fadeIn,hideFunc:dojo.fadeOut,showDuration:200,hideDuration:200,show:function(_41){
return this.showAnim.play(_41||0);
},hide:function(_42){
return this.hideAnim.play(_42||0);
}});
dojo.fx.wipeIn=function(_43){
_43.node=dojo.byId(_43.node);
var _44=_43.node,s=_44.style,o;
var _47=dojo.animateProperty(dojo.mixin({properties:{height:{start:function(){
o=s.overflow;
s.overflow="hidden";
if(s.visibility=="hidden"||s.display=="none"){
s.height="1px";
s.display="";
s.visibility="";
return 1;
}else{
var _48=dojo.style(_44,"height");
return Math.max(_48,1);
}
},end:function(){
return _44.scrollHeight;
}}}},_43));
dojo.connect(_47,"onEnd",function(){
s.height="auto";
s.overflow=o;
});
return _47;
};
dojo.fx.wipeOut=function(_49){
var _4a=_49.node=dojo.byId(_49.node);
var s=_4a.style;
var o;
var _4d=dojo.animateProperty(dojo.mixin({properties:{height:{end:1}}},_49));
dojo.connect(_4d,"beforeBegin",function(){
o=s.overflow;
s.overflow="hidden";
s.display="";
});
dojo.connect(_4d,"onEnd",function(){
s.overflow=o;
s.height="auto";
s.display="none";
});
return _4d;
};
dojo.fx.slideTo=function(_4e){
var _4f=(_4e.node=dojo.byId(_4e.node));
var top=null;
var _51=null;
var _52=(function(n){
return function(){
var cs=dojo.getComputedStyle(n);
var pos=cs.position;
top=(pos=="absolute"?n.offsetTop:parseInt(cs.top)||0);
_51=(pos=="absolute"?n.offsetLeft:parseInt(cs.left)||0);
if(pos!="absolute"&&pos!="relative"){
var ret=dojo.coords(n,true);
top=ret.y;
_51=ret.x;
n.style.position="absolute";
n.style.top=top+"px";
n.style.left=_51+"px";
}
};
})(_4f);
_52();
var _57=dojo.animateProperty(dojo.mixin({properties:{top:{end:_4e.top||0},left:{end:_4e.left||0}}},_4e));
dojo.connect(_57,"beforeBegin",_57,_52);
return _57;
};
}
if(!dojo._hasResource["dojo.date"]){
dojo._hasResource["dojo.date"]=true;
dojo.provide("dojo.date");
dojo.date.getDaysInMonth=function(_58){
var _59=_58.getMonth();
var _5a=[31,28,31,30,31,30,31,31,30,31,30,31];
if(_59==1&&dojo.date.isLeapYear(_58)){
return 29;
}
return _5a[_59];
};
dojo.date.isLeapYear=function(_5b){
var _5c=_5b.getFullYear();
return !(_5c%400)||(!(_5c%4)&&!!(_5c%100));
};
dojo.date.getTimezoneName=function(_5d){
var str=_5d.toString();
var tz="";
var _60;
var pos=str.indexOf("(");
if(pos>-1){
tz=str.substring(++pos,str.indexOf(")"));
}else{
var pat=/([A-Z\/]+) \d{4}$/;
if((_60=str.match(pat))){
tz=_60[1];
}else{
str=_5d.toLocaleString();
pat=/ ([A-Z\/]+)$/;
if((_60=str.match(pat))){
tz=_60[1];
}
}
}
return (tz=="AM"||tz=="PM")?"":tz;
};
dojo.date.compare=function(_63,_64,_65){
_63=new Date(Number(_63));
_64=new Date(Number(_64||new Date()));
if(_65!=="undefined"){
if(_65=="date"){
_63.setHours(0,0,0,0);
_64.setHours(0,0,0,0);
}else{
if(_65=="time"){
_63.setFullYear(0,0,0);
_64.setFullYear(0,0,0);
}
}
}
if(_63>_64){
return 1;
}
if(_63<_64){
return -1;
}
return 0;
};
dojo.date.add=function(_66,_67,_68){
var sum=new Date(Number(_66));
var _6a=false;
var _6b="Date";
switch(_67){
case "day":
break;
case "weekday":
var _6c,_6d;
var mod=_68%5;
if(!mod){
_6c=(_68>0)?5:-5;
_6d=(_68>0)?((_68-5)/5):((_68+5)/5);
}else{
_6c=mod;
_6d=parseInt(_68/5);
}
var _6f=_66.getDay();
var adj=0;
if(_6f==6&&_68>0){
adj=1;
}else{
if(_6f==0&&_68<0){
adj=-1;
}
}
var _71=_6f+_6c;
if(_71==0||_71==6){
adj=(_68>0)?2:-2;
}
_68=(7*_6d)+_6c+adj;
break;
case "year":
_6b="FullYear";
_6a=true;
break;
case "week":
_68*=7;
break;
case "quarter":
_68*=3;
case "month":
_6a=true;
_6b="Month";
break;
case "hour":
case "minute":
case "second":
case "millisecond":
_6b="UTC"+_67.charAt(0).toUpperCase()+_67.substring(1)+"s";
}
if(_6b){
sum["set"+_6b](sum["get"+_6b]()+_68);
}
if(_6a&&(sum.getDate()<_66.getDate())){
sum.setDate(0);
}
return sum;
};
dojo.date.difference=function(_72,_73,_74){
_73=_73||new Date();
_74=_74||"day";
var _75=_73.getFullYear()-_72.getFullYear();
var _76=1;
switch(_74){
case "quarter":
var m1=_72.getMonth();
var m2=_73.getMonth();
var q1=Math.floor(m1/3)+1;
var q2=Math.floor(m2/3)+1;
q2+=(_75*4);
_76=q2-q1;
break;
case "weekday":
var _7b=Math.round(dojo.date.difference(_72,_73,"day"));
var _7c=parseInt(dojo.date.difference(_72,_73,"week"));
var mod=_7b%7;
if(mod==0){
_7b=_7c*5;
}else{
var adj=0;
var _7f=_72.getDay();
var _80=_73.getDay();
_7c=parseInt(_7b/7);
mod=_7b%7;
var _81=new Date(_72);
_81.setDate(_81.getDate()+(_7c*7));
var _82=_81.getDay();
if(_7b>0){
switch(true){
case _7f==6:
adj=-1;
break;
case _7f==0:
adj=0;
break;
case _80==6:
adj=-1;
break;
case _80==0:
adj=-2;
break;
case (_82+mod)>5:
adj=-2;
}
}else{
if(_7b<0){
switch(true){
case _7f==6:
adj=0;
break;
case _7f==0:
adj=1;
break;
case _80==6:
adj=2;
break;
case _80==0:
adj=1;
break;
case (_82+mod)<0:
adj=2;
}
}
}
_7b+=adj;
_7b-=(_7c*2);
}
_76=_7b;
break;
case "year":
_76=_75;
break;
case "month":
_76=(_73.getMonth()-_72.getMonth())+(_75*12);
break;
case "week":
_76=parseInt(dojo.date.difference(_72,_73,"day")/7);
break;
case "day":
_76/=24;
case "hour":
_76/=60;
case "minute":
_76/=60;
case "second":
_76/=1000;
case "millisecond":
_76*=_73.getTime()-_72.getTime();
}
return Math.round(_76);
};
}
if(!dojo._hasResource["dojo.regexp"]){
dojo._hasResource["dojo.regexp"]=true;
dojo.provide("dojo.regexp");
dojo.regexp.escapeString=function(str,_84){
return str.replace(/([\.$?*!=:|{}\(\)\[\]\\\/^])/g,function(ch){
if(_84&&_84.indexOf(ch)!=-1){
return ch;
}
return "\\"+ch;
});
};
dojo.regexp.buildGroupRE=function(arr,re,_88){
if(!(arr instanceof Array)){
return re(arr);
}
var b=[];
for(var i=0;i<arr.length;i++){
b.push(re(arr[i]));
}
return dojo.regexp.group(b.join("|"),_88);
};
dojo.regexp.group=function(_8b,_8c){
return "("+(_8c?"?:":"")+_8b+")";
};
}
if(!dojo._hasResource["dojo.cookie"]){
dojo._hasResource["dojo.cookie"]=true;
dojo.provide("dojo.cookie");
dojo.cookie=function(_8d,_8e,_8f){
var c=document.cookie;
if(arguments.length==1){
var _91=c.match(new RegExp("(?:^|; )"+dojo.regexp.escapeString(_8d)+"=([^;]*)"));
return _91?decodeURIComponent(_91[1]):undefined;
}else{
_8f=_8f||{};
var exp=_8f.expires;
if(typeof exp=="number"){
var d=new Date();
d.setTime(d.getTime()+exp*24*60*60*1000);
exp=_8f.expires=d;
}
if(exp&&exp.toUTCString){
_8f.expires=exp.toUTCString();
}
_8e=encodeURIComponent(_8e);
var _94=_8d+"="+_8e,_95;
for(_95 in _8f){
_94+="; "+_95;
var _96=_8f[_95];
if(_96!==true){
_94+="="+_96;
}
}
document.cookie=_94;
}
};
dojo.cookie.isSupported=function(){
if(!("cookieEnabled" in navigator)){
this("__djCookieTest__","CookiesAllowed");
navigator.cookieEnabled=this("__djCookieTest__")=="CookiesAllowed";
if(navigator.cookieEnabled){
this("__djCookieTest__","",{expires:-1});
}
}
return navigator.cookieEnabled;
};
}
if(!dojo._hasResource["dojo.io.script"]){
dojo._hasResource["dojo.io.script"]=true;
dojo.provide("dojo.io.script");
dojo.io.script={get:function(_97){
var dfd=this._makeScriptDeferred(_97);
var _99=dfd.ioArgs;
dojo._ioAddQueryToUrl(_99);
if(this._canAttach(_99)){
this.attach(_99.id,_99.url,_97.frameDoc);
}
dojo._ioWatch(dfd,this._validCheck,this._ioCheck,this._resHandle);
return dfd;
},attach:function(id,url,_9c){
var doc=(_9c||dojo.doc);
var _9e=doc.createElement("script");
_9e.type="text/javascript";
_9e.src=url;
_9e.id=id;
_9e.charset="utf-8";
doc.getElementsByTagName("head")[0].appendChild(_9e);
},remove:function(id,_a0){
dojo._destroyElement(dojo.byId(id,_a0));
if(this["jsonp_"+id]){
delete this["jsonp_"+id];
}
},_makeScriptDeferred:function(_a1){
var dfd=dojo._ioSetArgs(_a1,this._deferredCancel,this._deferredOk,this._deferredError);
var _a3=dfd.ioArgs;
_a3.id=dojo._scopeName+"IoScript"+(this._counter++);
_a3.canDelete=false;
if(_a1.callbackParamName){
_a3.query=_a3.query||"";
if(_a3.query.length>0){
_a3.query+="&";
}
_a3.query+=_a1.callbackParamName+"="+(_a1.frameDoc?"parent.":"")+dojo._scopeName+".io.script.jsonp_"+_a3.id+"._jsonpCallback";
_a3.frameDoc=_a1.frameDoc;
_a3.canDelete=true;
dfd._jsonpCallback=this._jsonpCallback;
this["jsonp_"+_a3.id]=dfd;
}
return dfd;
},_deferredCancel:function(dfd){
dfd.canceled=true;
if(dfd.ioArgs.canDelete){
dojo.io.script._addDeadScript(dfd.ioArgs);
}
},_deferredOk:function(dfd){
if(dfd.ioArgs.canDelete){
dojo.io.script._addDeadScript(dfd.ioArgs);
}
if(dfd.ioArgs.json){
return dfd.ioArgs.json;
}else{
return dfd.ioArgs;
}
},_deferredError:function(_a6,dfd){
if(dfd.ioArgs.canDelete){
if(_a6.dojoType=="timeout"){
dojo.io.script.remove(dfd.ioArgs.id,dfd.ioArgs.frameDoc);
}else{
dojo.io.script._addDeadScript(dfd.ioArgs);
}
}
console.debug("dojo.io.script error",_a6);
return _a6;
},_deadScripts:[],_counter:1,_addDeadScript:function(_a8){
dojo.io.script._deadScripts.push({id:_a8.id,frameDoc:_a8.frameDoc});
_a8.frameDoc=null;
},_validCheck:function(dfd){
var _aa=dojo.io.script;
var _ab=_aa._deadScripts;
if(_ab&&_ab.length>0){
for(var i=0;i<_ab.length;i++){
_aa.remove(_ab[i].id,_ab[i].frameDoc);
_ab[i].frameDoc=null;
}
dojo.io.script._deadScripts=[];
}
return true;
},_ioCheck:function(dfd){
if(dfd.ioArgs.json){
return true;
}
var _ae=dfd.ioArgs.args.checkString;
if(_ae&&eval("typeof("+_ae+") != 'undefined'")){
return true;
}
return false;
},_resHandle:function(dfd){
if(dojo.io.script._ioCheck(dfd)){
dfd.callback(dfd);
}else{
dfd.errback(new Error("inconceivable dojo.io.script._resHandle error"));
}
},_canAttach:function(_b0){
return true;
},_jsonpCallback:function(_b1){
this.ioArgs.json=_b1;
}};
}
if(!dojo._hasResource["dojo.io.iframe"]){
dojo._hasResource["dojo.io.iframe"]=true;
dojo.provide("dojo.io.iframe");
dojo.io.iframe={create:function(_b2,_b3,uri){
if(window[_b2]){
return window[_b2];
}
if(window.frames[_b2]){
return window.frames[_b2];
}
var _b5=null;
var _b6=uri;
if(!_b6){
if(dojo.config["useXDomain"]&&!dojo.config["dojoBlankHtmlUrl"]){
console.warn("dojo.io.iframe.create: When using cross-domain Dojo builds,"+" please save dojo/resources/blank.html to your domain and set djConfig.dojoBlankHtmlUrl"+" to the path on your domain to blank.html");
}
_b6=(dojo.config["dojoBlankHtmlUrl"]||dojo.moduleUrl("dojo","resources/blank.html"));
}
var _b7=dojo.isIE?"<iframe name=\""+_b2+"\" src=\""+_b6+"\" onload=\""+_b3+"\">":"iframe";
_b5=dojo.doc.createElement(_b7);
with(_b5){
name=_b2;
setAttribute("name",_b2);
id=_b2;
}
dojo.body().appendChild(_b5);
window[_b2]=_b5;
with(_b5.style){
if(!(dojo.isSafari<3)){
position="absolute";
}
left=top="1px";
height=width="1px";
visibility="hidden";
}
if(!dojo.isIE){
this.setSrc(_b5,_b6,true);
_b5.onload=new Function(_b3);
}
return _b5;
},setSrc:function(_b8,src,_ba){
try{
if(!_ba){
if(dojo.isSafari){
_b8.location=src;
}else{
frames[_b8.name].location=src;
}
}else{
var _bb;
if(dojo.isIE||dojo.isSafari>2){
_bb=_b8.contentWindow.document;
}else{
if(dojo.isSafari){
_bb=_b8.document;
}else{
_bb=_b8.contentWindow;
}
}
if(!_bb){
_b8.location=src;
return;
}else{
_bb.location.replace(src);
}
}
}
catch(e){
console.debug("dojo.io.iframe.setSrc: ",e);
}
},doc:function(_bc){
var doc=_bc.contentDocument||(((_bc.name)&&(_bc.document)&&(document.getElementsByTagName("iframe")[_bc.name].contentWindow)&&(document.getElementsByTagName("iframe")[_bc.name].contentWindow.document)))||((_bc.name)&&(document.frames[_bc.name])&&(document.frames[_bc.name].document))||null;
return doc;
},send:function(_be){
if(!this["_frame"]){
this._frame=this.create(this._iframeName,dojo._scopeName+".io.iframe._iframeOnload();");
}
var dfd=dojo._ioSetArgs(_be,function(dfd){
dfd.canceled=true;
dfd.ioArgs._callNext();
},function(dfd){
var _c2=null;
try{
var _c3=dfd.ioArgs;
var dii=dojo.io.iframe;
var ifd=dii.doc(dii._frame);
var _c6=_c3.handleAs;
_c2=ifd;
if(_c6!="html"){
if(_c6=="xml"){
if(dojo.isIE){
dojo.query("a",dii._frame.contentWindow.document.documentElement).orphan();
var _c7=(dii._frame.contentWindow.document).documentElement.innerText;
_c7=_c7.replace(/>\s+</g,"><");
if(!this._ieXmlDom){
for(var i=0,a=["MSXML2","Microsoft","MSXML","MSXML3"],l=a.length;i<l;i++){
try{
var _cb=new ActiveXObject(a[i]+".XmlDom");
this._ieXmlDom=a[i]+".XmlDom";
break;
}
catch(e){
}
}
if(!this._ieXmlDom){
throw new Error("dojo.io.iframe.send (return handler): your copy of Internet Explorer does not support XML documents.");
}
}
var _cc=new ActiveXObject(this._ieXmlDom);
_cc.async=false;
_cc.loadXML(_c7);
_c2=_cc;
}
}else{
_c2=ifd.getElementsByTagName("textarea")[0].value;
if(_c6=="json"){
_c2=dojo.fromJson(_c2);
}else{
if(_c6=="javascript"){
_c2=dojo.eval(_c2);
}
}
}
}
}
catch(e){
_c2=e;
}
finally{
_c3._callNext();
}
return _c2;
},function(_cd,dfd){
dfd.ioArgs._hasError=true;
dfd.ioArgs._callNext();
return _cd;
});
dfd.ioArgs._callNext=function(){
if(!this["_calledNext"]){
this._calledNext=true;
dojo.io.iframe._currentDfd=null;
dojo.io.iframe._fireNextRequest();
}
};
this._dfdQueue.push(dfd);
this._fireNextRequest();
dojo._ioWatch(dfd,function(dfd){
return !dfd.ioArgs["_hasError"];
},function(dfd){
return (!!dfd.ioArgs["_finished"]);
},function(dfd){
if(dfd.ioArgs._finished){
dfd.callback(dfd);
}else{
dfd.errback(new Error("Invalid dojo.io.iframe request state"));
}
});
return dfd;
},_currentDfd:null,_dfdQueue:[],_iframeName:dojo._scopeName+"IoIframe",_fireNextRequest:function(){
try{
if((this._currentDfd)||(this._dfdQueue.length==0)){
return;
}
var dfd=this._currentDfd=this._dfdQueue.shift();
var _d3=dfd.ioArgs;
var _d4=_d3.args;
_d3._contentToClean=[];
var fn=dojo.byId(_d4["form"]);
var _d6=_d4["content"]||{};
if(fn){
if(_d6){
var _d7=function(_d8,_d9){
var tn;
if(dojo.isIE){
tn=dojo.doc.createElement("<input type='hidden' name='"+_d8+"'>");
}else{
tn=dojo.doc.createElement("input");
tn.type="hidden";
tn.name=_d8;
}
tn.value=_d9;
fn.appendChild(tn);
_d3._contentToClean.push(_d8);
};
for(var x in _d6){
var val=_d6[x];
if(dojo.isArray(val)&&val.length>1){
var i;
for(i=0;i<val.length;i++){
_d7(x,val[i]);
}
}else{
if(!fn[x]){
_d7(x,val);
}else{
fn[x].value=val;
}
}
}
}
var _de=fn.getAttributeNode("action");
var _df=fn.getAttributeNode("method");
var _e0=fn.getAttributeNode("target");
if(_d4["url"]){
_d3._originalAction=_de?_de.value:null;
if(_de){
_de.value=_d4.url;
}else{
fn.setAttribute("action",_d4.url);
}
}
if(!_df||!_df.value){
if(_df){
_df.value=(_d4["method"])?_d4["method"]:"post";
}else{
fn.setAttribute("method",(_d4["method"])?_d4["method"]:"post");
}
}
_d3._originalTarget=_e0?_e0.value:null;
if(_e0){
_e0.value=this._iframeName;
}else{
fn.setAttribute("target",this._iframeName);
}
fn.target=this._iframeName;
fn.submit();
}else{
var _e1=_d4.url+(_d4.url.indexOf("?")>-1?"&":"?")+_d3.query;
this.setSrc(this._frame,_e1,true);
}
}
catch(e){
dfd.errback(e);
}
},_iframeOnload:function(){
var dfd=this._currentDfd;
if(!dfd){
this._fireNextRequest();
return;
}
var _e3=dfd.ioArgs;
var _e4=_e3.args;
var _e5=dojo.byId(_e4.form);
if(_e5){
var _e6=_e3._contentToClean;
for(var i=0;i<_e6.length;i++){
var key=_e6[i];
if(dojo.isSafari<3){
for(var j=0;j<_e5.childNodes.length;j++){
var _ea=_e5.childNodes[j];
if(_ea.name==key){
dojo._destroyElement(_ea);
break;
}
}
}else{
dojo._destroyElement(_e5[key]);
_e5[key]=null;
}
}
if(_e3["_originalAction"]){
_e5.setAttribute("action",_e3._originalAction);
}
if(_e3["_originalTarget"]){
_e5.setAttribute("target",_e3._originalTarget);
_e5.target=_e3._originalTarget;
}
}
_e3._finished=true;
}};
}
if(!dojo._hasResource["dojo.i18n"]){
dojo._hasResource["dojo.i18n"]=true;
dojo.provide("dojo.i18n");
dojo.i18n.getLocalization=function(_eb,_ec,_ed){
_ed=dojo.i18n.normalizeLocale(_ed);
var _ee=_ed.split("-");
var _ef=[_eb,"nls",_ec].join(".");
var _f0=dojo._loadedModules[_ef];
if(_f0){
var _f1;
for(var i=_ee.length;i>0;i--){
var loc=_ee.slice(0,i).join("_");
if(_f0[loc]){
_f1=_f0[loc];
break;
}
}
if(!_f1){
_f1=_f0.ROOT;
}
if(_f1){
var _f4=function(){
};
_f4.prototype=_f1;
return new _f4();
}
}
throw new Error("Bundle not found: "+_ec+" in "+_eb+" , locale="+_ed);
};
dojo.i18n.normalizeLocale=function(_f5){
var _f6=_f5?_f5.toLowerCase():dojo.locale;
if(_f6=="root"){
_f6="ROOT";
}
return _f6;
};
dojo.i18n._requireLocalization=function(_f7,_f8,_f9,_fa){
var _fb=dojo.i18n.normalizeLocale(_f9);
var _fc=[_f7,"nls",_f8].join(".");
var _fd="";
if(_fa){
var _fe=_fa.split(",");
for(var i=0;i<_fe.length;i++){
if(_fb["indexOf"](_fe[i])==0){
if(_fe[i].length>_fd.length){
_fd=_fe[i];
}
}
}
if(!_fd){
_fd="ROOT";
}
}
var _100=_fa?_fd:_fb;
var _101=dojo._loadedModules[_fc];
var _102=null;
if(_101){
if(dojo.config.localizationComplete&&_101._built){
return;
}
var _103=_100.replace(/-/g,"_");
var _104=_fc+"."+_103;
_102=dojo._loadedModules[_104];
}
if(!_102){
_101=dojo["provide"](_fc);
var syms=dojo._getModuleSymbols(_f7);
var _106=syms.concat("nls").join("/");
var _107;
dojo.i18n._searchLocalePath(_100,_fa,function(loc){
var _109=loc.replace(/-/g,"_");
var _10a=_fc+"."+_109;
var _10b=false;
if(!dojo._loadedModules[_10a]){
dojo["provide"](_10a);
var _10c=[_106];
if(loc!="ROOT"){
_10c.push(loc);
}
_10c.push(_f8);
var _10d=_10c.join("/")+".js";
_10b=dojo._loadPath(_10d,null,function(hash){
var _10f=function(){
};
_10f.prototype=_107;
_101[_109]=new _10f();
for(var j in hash){
_101[_109][j]=hash[j];
}
});
}else{
_10b=true;
}
if(_10b&&_101[_109]){
_107=_101[_109];
}else{
_101[_109]=_107;
}
if(_fa){
return true;
}
});
}
if(_fa&&_fb!=_fd){
_101[_fb.replace(/-/g,"_")]=_101[_fd.replace(/-/g,"_")];
}
};
(function(){
var _111=dojo.config.extraLocale;
if(_111){
if(!_111 instanceof Array){
_111=[_111];
}
var req=dojo.i18n._requireLocalization;
dojo.i18n._requireLocalization=function(m,b,_115,_116){
req(m,b,_115,_116);
if(_115){
return;
}
for(var i=0;i<_111.length;i++){
req(m,b,_111[i],_116);
}
};
}
})();
dojo.i18n._searchLocalePath=function(_118,down,_11a){
_118=dojo.i18n.normalizeLocale(_118);
var _11b=_118.split("-");
var _11c=[];
for(var i=_11b.length;i>0;i--){
_11c.push(_11b.slice(0,i).join("-"));
}
_11c.push(false);
if(down){
_11c.reverse();
}
for(var j=_11c.length-1;j>=0;j--){
var loc=_11c[j]||"ROOT";
var stop=_11a(loc);
if(stop){
break;
}
}
};
dojo.i18n._preloadLocalizations=function(_121,_122){
function preload(_123){
_123=dojo.i18n.normalizeLocale(_123);
dojo.i18n._searchLocalePath(_123,true,function(loc){
for(var i=0;i<_122.length;i++){
if(_122[i]==loc){
dojo["require"](_121+"_"+loc);
return true;
}
}
return false;
});
};
preload();
var _126=dojo.config.extraLocale||[];
for(var i=0;i<_126.length;i++){
preload(_126[i]);
}
};
}
if(!dojo._hasResource["dojo.cldr.supplemental"]){
dojo._hasResource["dojo.cldr.supplemental"]=true;
dojo.provide("dojo.cldr.supplemental");
dojo.cldr.supplemental.getFirstDayOfWeek=function(_128){
var _129={mv:5,ae:6,af:6,bh:6,dj:6,dz:6,eg:6,er:6,et:6,iq:6,ir:6,jo:6,ke:6,kw:6,lb:6,ly:6,ma:6,om:6,qa:6,sa:6,sd:6,so:6,tn:6,ye:6,as:0,au:0,az:0,bw:0,ca:0,cn:0,fo:0,ge:0,gl:0,gu:0,hk:0,ie:0,il:0,is:0,jm:0,jp:0,kg:0,kr:0,la:0,mh:0,mo:0,mp:0,mt:0,nz:0,ph:0,pk:0,sg:0,th:0,tt:0,tw:0,um:0,us:0,uz:0,vi:0,za:0,zw:0,et:0,mw:0,ng:0,tj:0,sy:4};
var _12a=dojo.cldr.supplemental._region(_128);
var dow=_129[_12a];
return (dow===undefined)?1:dow;
};
dojo.cldr.supplemental._region=function(_12c){
_12c=dojo.i18n.normalizeLocale(_12c);
var tags=_12c.split("-");
var _12e=tags[1];
if(!_12e){
_12e={de:"de",en:"us",es:"es",fi:"fi",fr:"fr",he:"il",hu:"hu",it:"it",ja:"jp",ko:"kr",nl:"nl",pt:"br",sv:"se",zh:"cn"}[tags[0]];
}else{
if(_12e.length==4){
_12e=tags[2];
}
}
return _12e;
};
dojo.cldr.supplemental.getWeekend=function(_12f){
var _130={eg:5,il:5,sy:5,"in":0,ae:4,bh:4,dz:4,iq:4,jo:4,kw:4,lb:4,ly:4,ma:4,om:4,qa:4,sa:4,sd:4,tn:4,ye:4};
var _131={ae:5,bh:5,dz:5,iq:5,jo:5,kw:5,lb:5,ly:5,ma:5,om:5,qa:5,sa:5,sd:5,tn:5,ye:5,af:5,ir:5,eg:6,il:6,sy:6};
var _132=dojo.cldr.supplemental._region(_12f);
var _133=_130[_132];
var end=_131[_132];
if(_133===undefined){
_133=6;
}
if(end===undefined){
end=0;
}
return {start:_133,end:end};
};
}
if(!dojo._hasResource["dojo.date.locale"]){
dojo._hasResource["dojo.date.locale"]=true;
dojo.provide("dojo.date.locale");
(function(){
function formatPattern(_135,_136,_137,_138){
return _138.replace(/([a-z])\1*/ig,function(_139){
var s,pad;
var c=_139.charAt(0);
var l=_139.length;
var _13e=["abbr","wide","narrow"];
switch(c){
case "G":
s=_136[(l<4)?"eraAbbr":"eraNames"][_135.getFullYear()<0?0:1];
break;
case "y":
s=_135.getFullYear();
switch(l){
case 1:
break;
case 2:
if(!_137){
s=String(s);
s=s.substr(s.length-2);
break;
}
default:
pad=true;
}
break;
case "Q":
case "q":
s=Math.ceil((_135.getMonth()+1)/3);
pad=true;
break;
case "M":
var m=_135.getMonth();
if(l<3){
s=m+1;
pad=true;
}else{
var _140=["months","format",_13e[l-3]].join("-");
s=_136[_140][m];
}
break;
case "w":
var _141=0;
s=dojo.date.locale._getWeekOfYear(_135,_141);
pad=true;
break;
case "d":
s=_135.getDate();
pad=true;
break;
case "D":
s=dojo.date.locale._getDayOfYear(_135);
pad=true;
break;
case "E":
var d=_135.getDay();
if(l<3){
s=d+1;
pad=true;
}else{
var _143=["days","format",_13e[l-3]].join("-");
s=_136[_143][d];
}
break;
case "a":
var _144=(_135.getHours()<12)?"am":"pm";
s=_136[_144];
break;
case "h":
case "H":
case "K":
case "k":
var h=_135.getHours();
switch(c){
case "h":
s=(h%12)||12;
break;
case "H":
s=h;
break;
case "K":
s=(h%12);
break;
case "k":
s=h||24;
break;
}
pad=true;
break;
case "m":
s=_135.getMinutes();
pad=true;
break;
case "s":
s=_135.getSeconds();
pad=true;
break;
case "S":
s=Math.round(_135.getMilliseconds()*Math.pow(10,l-3));
pad=true;
break;
case "v":
case "z":
s=dojo.date.getTimezoneName(_135);
if(s){
break;
}
l=4;
case "Z":
var _146=_135.getTimezoneOffset();
var tz=[(_146<=0?"+":"-"),dojo.string.pad(Math.floor(Math.abs(_146)/60),2),dojo.string.pad(Math.abs(_146)%60,2)];
if(l==4){
tz.splice(0,0,"GMT");
tz.splice(3,0,":");
}
s=tz.join("");
break;
default:
throw new Error("dojo.date.locale.format: invalid pattern char: "+_138);
}
if(pad){
s=dojo.string.pad(s,l);
}
return s;
});
};
dojo.date.locale.format=function(_148,_149){
_149=_149||{};
var _14a=dojo.i18n.normalizeLocale(_149.locale);
var _14b=_149.formatLength||"short";
var _14c=dojo.date.locale._getGregorianBundle(_14a);
var str=[];
var _14e=dojo.hitch(this,formatPattern,_148,_14c,_149.fullYear);
if(_149.selector=="year"){
var year=_148.getFullYear();
if(_14a.match(/^zh|^ja/)){
year+="年";
}
return year;
}
if(_149.selector!="time"){
var _150=_149.datePattern||_14c["dateFormat-"+_14b];
if(_150){
str.push(_processPattern(_150,_14e));
}
}
if(_149.selector!="date"){
var _151=_149.timePattern||_14c["timeFormat-"+_14b];
if(_151){
str.push(_processPattern(_151,_14e));
}
}
var _152=str.join(" ");
return _152;
};
dojo.date.locale.regexp=function(_153){
return dojo.date.locale._parseInfo(_153).regexp;
};
dojo.date.locale._parseInfo=function(_154){
_154=_154||{};
var _155=dojo.i18n.normalizeLocale(_154.locale);
var _156=dojo.date.locale._getGregorianBundle(_155);
var _157=_154.formatLength||"short";
var _158=_154.datePattern||_156["dateFormat-"+_157];
var _159=_154.timePattern||_156["timeFormat-"+_157];
var _15a;
if(_154.selector=="date"){
_15a=_158;
}else{
if(_154.selector=="time"){
_15a=_159;
}else{
_15a=_158+" "+_159;
}
}
var _15b=[];
var re=_processPattern(_15a,dojo.hitch(this,_buildDateTimeRE,_15b,_156,_154));
return {regexp:re,tokens:_15b,bundle:_156};
};
dojo.date.locale.parse=function(_15d,_15e){
var info=dojo.date.locale._parseInfo(_15e);
var _160=info.tokens,_161=info.bundle;
var re=new RegExp("^"+info.regexp+"$",info.strict?"":"i");
var _163=re.exec(_15d);
if(!_163){
return null;
}
var _164=["abbr","wide","narrow"];
var _165=[1970,0,1,0,0,0,0];
var amPm="";
var _167=dojo.every(_163,function(v,i){
if(!i){
return true;
}
var _16a=_160[i-1];
var l=_16a.length;
switch(_16a.charAt(0)){
case "y":
if(l!=2&&_15e.strict){
_165[0]=v;
}else{
if(v<100){
v=Number(v);
var year=""+new Date().getFullYear();
var _16d=year.substring(0,2)*100;
var _16e=Math.min(Number(year.substring(2,4))+20,99);
var num=(v<_16e)?_16d+v:_16d-100+v;
_165[0]=num;
}else{
if(_15e.strict){
return false;
}
_165[0]=v;
}
}
break;
case "M":
if(l>2){
var _170=_161["months-format-"+_164[l-3]].concat();
if(!_15e.strict){
v=v.replace(".","").toLowerCase();
_170=dojo.map(_170,function(s){
return s.replace(".","").toLowerCase();
});
}
v=dojo.indexOf(_170,v);
if(v==-1){
return false;
}
}else{
v--;
}
_165[1]=v;
break;
case "E":
case "e":
var days=_161["days-format-"+_164[l-3]].concat();
if(!_15e.strict){
v=v.toLowerCase();
days=dojo.map(days,function(d){
return d.toLowerCase();
});
}
v=dojo.indexOf(days,v);
if(v==-1){
return false;
}
break;
case "D":
_165[1]=0;
case "d":
_165[2]=v;
break;
case "a":
var am=_15e.am||_161.am;
var pm=_15e.pm||_161.pm;
if(!_15e.strict){
var _176=/\./g;
v=v.replace(_176,"").toLowerCase();
am=am.replace(_176,"").toLowerCase();
pm=pm.replace(_176,"").toLowerCase();
}
if(_15e.strict&&v!=am&&v!=pm){
return false;
}
amPm=(v==pm)?"p":(v==am)?"a":"";
break;
case "K":
if(v==24){
v=0;
}
case "h":
case "H":
case "k":
if(v>23){
return false;
}
_165[3]=v;
break;
case "m":
_165[4]=v;
break;
case "s":
_165[5]=v;
break;
case "S":
_165[6]=v;
}
return true;
});
var _177=+_165[3];
if(amPm==="p"&&_177<12){
_165[3]=_177+12;
}else{
if(amPm==="a"&&_177==12){
_165[3]=0;
}
}
var _178=new Date(_165[0],_165[1],_165[2],_165[3],_165[4],_165[5],_165[6]);
if(_15e.strict){
_178.setFullYear(_165[0]);
}
var _179=_160.join("");
if(!_167||(_179.indexOf("M")!=-1&&_178.getMonth()!=_165[1])||(_179.indexOf("d")!=-1&&_178.getDate()!=_165[2])){
return null;
}
return _178;
};
function _processPattern(_17a,_17b,_17c,_17d){
var _17e=function(x){
return x;
};
_17b=_17b||_17e;
_17c=_17c||_17e;
_17d=_17d||_17e;
var _180=_17a.match(/(''|[^'])+/g);
var _181=_17a.charAt(0)=="'";
dojo.forEach(_180,function(_182,i){
if(!_182){
_180[i]="";
}else{
_180[i]=(_181?_17c:_17b)(_182);
_181=!_181;
}
});
return _17d(_180.join(""));
};
function _buildDateTimeRE(_184,_185,_186,_187){
_187=dojo.regexp.escapeString(_187);
if(!_186.strict){
_187=_187.replace(" a"," ?a");
}
return _187.replace(/([a-z])\1*/ig,function(_188){
var s;
var c=_188.charAt(0);
var l=_188.length;
var p2="",p3="";
if(_186.strict){
if(l>1){
p2="0"+"{"+(l-1)+"}";
}
if(l>2){
p3="0"+"{"+(l-2)+"}";
}
}else{
p2="0?";
p3="0{0,2}";
}
switch(c){
case "y":
s="\\d{2,4}";
break;
case "M":
s=(l>2)?"\\S+?":p2+"[1-9]|1[0-2]";
break;
case "D":
s=p2+"[1-9]|"+p3+"[1-9][0-9]|[12][0-9][0-9]|3[0-5][0-9]|36[0-6]";
break;
case "d":
s="[12]\\d|"+p2+"[1-9]|3[01]";
break;
case "w":
s=p2+"[1-9]|[1-4][0-9]|5[0-3]";
break;
case "E":
s="\\S+";
break;
case "h":
s=p2+"[1-9]|1[0-2]";
break;
case "k":
s=p2+"\\d|1[01]";
break;
case "H":
s=p2+"\\d|1\\d|2[0-3]";
break;
case "K":
s=p2+"[1-9]|1\\d|2[0-4]";
break;
case "m":
case "s":
s="[0-5]\\d";
break;
case "S":
s="\\d{"+l+"}";
break;
case "a":
var am=_186.am||_185.am||"AM";
var pm=_186.pm||_185.pm||"PM";
if(_186.strict){
s=am+"|"+pm;
}else{
s=am+"|"+pm;
if(am!=am.toLowerCase()){
s+="|"+am.toLowerCase();
}
if(pm!=pm.toLowerCase()){
s+="|"+pm.toLowerCase();
}
if(s.indexOf(".")!=-1){
s+="|"+s.replace(/\./g,"");
}
}
s=s.replace(/\./g,"\\.");
break;
default:
s=".*";
}
if(_184){
_184.push(_188);
}
return "("+s+")";
}).replace(/[\xa0 ]/g,"[\\s\\xa0]");
};
})();
(function(){
var _190=[];
dojo.date.locale.addCustomFormats=function(_191,_192){
_190.push({pkg:_191,name:_192});
};
dojo.date.locale._getGregorianBundle=function(_193){
var _194={};
dojo.forEach(_190,function(desc){
var _196=dojo.i18n.getLocalization(desc.pkg,desc.name,_193);
_194=dojo.mixin(_194,_196);
},this);
return _194;
};
})();
dojo.date.locale.addCustomFormats("dojo.cldr","gregorian");
dojo.date.locale.getNames=function(item,type,use,_19a){
var _19b;
var _19c=dojo.date.locale._getGregorianBundle(_19a);
var _19d=[item,use,type];
if(use=="standAlone"){
var key=_19d.join("-");
_19b=_19c[key];
if(_19b[0]==1){
_19b=undefined;
}
}
_19d[1]="format";
return (_19b||_19c[_19d.join("-")]).concat();
};
dojo.date.locale.isWeekend=function(_19f,_1a0){
var _1a1=dojo.cldr.supplemental.getWeekend(_1a0);
var day=(_19f||new Date()).getDay();
if(_1a1.end<_1a1.start){
_1a1.end+=7;
if(day<_1a1.start){
day+=7;
}
}
return day>=_1a1.start&&day<=_1a1.end;
};
dojo.date.locale._getDayOfYear=function(_1a3){
return dojo.date.difference(new Date(_1a3.getFullYear(),0,1,_1a3.getHours()),_1a3)+1;
};
dojo.date.locale._getWeekOfYear=function(_1a4,_1a5){
if(arguments.length==1){
_1a5=0;
}
var _1a6=new Date(_1a4.getFullYear(),0,1).getDay();
var adj=(_1a6-_1a5+7)%7;
var week=Math.floor((dojo.date.locale._getDayOfYear(_1a4)+adj-1)/7);
if(_1a6==_1a5){
week++;
}
return week;
};
}
if(!dojo._hasResource["dojox.data.dom"]){
dojo._hasResource["dojox.data.dom"]=true;
dojo.provide("dojox.data.dom");
dojo.experimental("dojox.data.dom");
dojox.data.dom.createDocument=function(str,_1aa){
var _1ab=dojo.doc;
if(!_1aa){
_1aa="text/xml";
}
if(str&&dojo.trim(str)!==""&&(typeof dojo.global["DOMParser"])!=="undefined"){
var _1ac=new DOMParser();
return _1ac.parseFromString(str,_1aa);
}else{
if((typeof dojo.global["ActiveXObject"])!=="undefined"){
var _1ad=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_1ad.length;i++){
try{
var doc=new ActiveXObject(_1ad[i]+".XMLDOM");
if(str){
if(doc){
doc.async=false;
doc.loadXML(str);
return doc;
}else{
console.log("loadXML didn't work?");
}
}else{
if(doc){
return doc;
}
}
}
catch(e){
}
}
}else{
if((_1ab.implementation)&&(_1ab.implementation.createDocument)){
if(str&&dojo.trim(str)!==""){
if(_1ab.createElement){
var tmp=_1ab.createElement("xml");
tmp.innerHTML=str;
var _1b1=_1ab.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_1b1.importNode(tmp.childNodes.item(i),true);
}
return _1b1;
}
}else{
return _1ab.implementation.createDocument("","",null);
}
}
}
}
return null;
};
dojox.data.dom.textContent=function(node,text){
if(arguments.length>1){
var _1b4=node.ownerDocument||dojo.doc;
dojox.data.dom.replaceChildren(node,_1b4.createTextNode(text));
return text;
}else{
if(node.textContent!==undefined){
return node.textContent;
}
var _1b5="";
if(node==null){
return _1b5;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_1b5+=dojox.data.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_1b5+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _1b5;
}
};
dojox.data.dom.replaceChildren=function(node,_1b8){
var _1b9=[];
if(dojo.isIE){
for(var i=0;i<node.childNodes.length;i++){
_1b9.push(node.childNodes[i]);
}
}
dojox.data.dom.removeChildren(node);
for(var i=0;i<_1b9.length;i++){
dojo._destroyElement(_1b9[i]);
}
if(!dojo.isArray(_1b8)){
node.appendChild(_1b8);
}else{
for(var i=0;i<_1b8.length;i++){
node.appendChild(_1b8[i]);
}
}
};
dojox.data.dom.removeChildren=function(node){
var _1bc=node.childNodes.length;
while(node.hasChildNodes()){
node.removeChild(node.firstChild);
}
return _1bc;
};
dojox.data.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
}
if(!dojo._hasResource["dojo.dnd.common"]){
dojo._hasResource["dojo.dnd.common"]=true;
dojo.provide("dojo.dnd.common");
dojo.dnd._isMac=navigator.appVersion.indexOf("Macintosh")>=0;
dojo.dnd._copyKey=dojo.dnd._isMac?"metaKey":"ctrlKey";
dojo.dnd.getCopyKeyState=function(e){
return e[dojo.dnd._copyKey];
};
dojo.dnd._uniqueId=0;
dojo.dnd.getUniqueId=function(){
var id;
do{
id=dojo._scopeName+"Unique"+(++dojo.dnd._uniqueId);
}while(dojo.byId(id));
return id;
};
dojo.dnd._empty={};
dojo.dnd.isFormElement=function(e){
var t=e.target;
if(t.nodeType==3){
t=t.parentNode;
}
return " button textarea input select option ".indexOf(" "+t.tagName.toLowerCase()+" ")>=0;
};
}
if(!dojo._hasResource["dojo.dnd.autoscroll"]){
dojo._hasResource["dojo.dnd.autoscroll"]=true;
dojo.provide("dojo.dnd.autoscroll");
dojo.dnd.getViewport=function(){
var d=dojo.doc,dd=d.documentElement,w=window,b=dojo.body();
if(dojo.isMozilla){
return {w:dd.clientWidth,h:w.innerHeight};
}else{
if(!dojo.isOpera&&w.innerWidth){
return {w:w.innerWidth,h:w.innerHeight};
}else{
if(!dojo.isOpera&&dd&&dd.clientWidth){
return {w:dd.clientWidth,h:dd.clientHeight};
}else{
if(b.clientWidth){
return {w:b.clientWidth,h:b.clientHeight};
}
}
}
}
return null;
};
dojo.dnd.V_TRIGGER_AUTOSCROLL=32;
dojo.dnd.H_TRIGGER_AUTOSCROLL=32;
dojo.dnd.V_AUTOSCROLL_VALUE=16;
dojo.dnd.H_AUTOSCROLL_VALUE=16;
dojo.dnd.autoScroll=function(e){
var v=dojo.dnd.getViewport(),dx=0,dy=0;
if(e.clientX<dojo.dnd.H_TRIGGER_AUTOSCROLL){
dx=-dojo.dnd.H_AUTOSCROLL_VALUE;
}else{
if(e.clientX>v.w-dojo.dnd.H_TRIGGER_AUTOSCROLL){
dx=dojo.dnd.H_AUTOSCROLL_VALUE;
}
}
if(e.clientY<dojo.dnd.V_TRIGGER_AUTOSCROLL){
dy=-dojo.dnd.V_AUTOSCROLL_VALUE;
}else{
if(e.clientY>v.h-dojo.dnd.V_TRIGGER_AUTOSCROLL){
dy=dojo.dnd.V_AUTOSCROLL_VALUE;
}
}
window.scrollBy(dx,dy);
};
dojo.dnd._validNodes={"div":1,"p":1,"td":1};
dojo.dnd._validOverflow={"auto":1,"scroll":1};
dojo.dnd.autoScrollNodes=function(e){
for(var n=e.target;n;){
if(n.nodeType==1&&(n.tagName.toLowerCase() in dojo.dnd._validNodes)){
var s=dojo.getComputedStyle(n);
if(s.overflow.toLowerCase() in dojo.dnd._validOverflow){
var b=dojo._getContentBox(n,s),t=dojo._abs(n,true);
var w=Math.min(dojo.dnd.H_TRIGGER_AUTOSCROLL,b.w/2),h=Math.min(dojo.dnd.V_TRIGGER_AUTOSCROLL,b.h/2),rx=e.pageX-t.x,ry=e.pageY-t.y,dx=0,dy=0;
if(dojo.isSafari||dojo.isOpera){
rx+=dojo.body().scrollLeft,ry+=dojo.body().scrollTop;
}
if(rx>0&&rx<b.w){
if(rx<w){
dx=-w;
}else{
if(rx>b.w-w){
dx=w;
}
}
}
if(ry>0&&ry<b.h){
if(ry<h){
dy=-h;
}else{
if(ry>b.h-h){
dy=h;
}
}
}
var _1d5=n.scrollLeft,_1d6=n.scrollTop;
n.scrollLeft=n.scrollLeft+dx;
n.scrollTop=n.scrollTop+dy;
if(_1d5!=n.scrollLeft||_1d6!=n.scrollTop){
return;
}
}
}
try{
n=n.parentNode;
}
catch(x){
n=null;
}
}
dojo.dnd.autoScroll(e);
};
}
if(!dojo._hasResource["dojo.dnd.Mover"]){
dojo._hasResource["dojo.dnd.Mover"]=true;
dojo.provide("dojo.dnd.Mover");
dojo.declare("dojo.dnd.Mover",null,{constructor:function(node,e,host){
this.node=dojo.byId(node);
this.marginBox={l:e.pageX,t:e.pageY};
this.mouseButton=e.button;
var h=this.host=host,d=node.ownerDocument,_1dc=dojo.connect(d,"onmousemove",this,"onFirstMove");
this.events=[dojo.connect(d,"onmousemove",this,"onMouseMove"),dojo.connect(d,"onmouseup",this,"onMouseUp"),dojo.connect(d,"ondragstart",dojo.stopEvent),dojo.connect(d.body,"onselectstart",dojo.stopEvent),_1dc];
if(h&&h.onMoveStart){
h.onMoveStart(this);
}
},onMouseMove:function(e){
dojo.dnd.autoScroll(e);
var m=this.marginBox;
this.host.onMove(this,{l:m.l+e.pageX,t:m.t+e.pageY});
dojo.stopEvent(e);
},onMouseUp:function(e){
if(dojo.isSafari&&dojo.dnd._isMac&&this.mouseButton==2?e.button==0:this.mouseButton==e.button){
this.destroy();
}
dojo.stopEvent(e);
},onFirstMove:function(){
var s=this.node.style,l,t,h=this.host;
switch(s.position){
case "relative":
case "absolute":
l=Math.round(parseFloat(s.left));
t=Math.round(parseFloat(s.top));
break;
default:
s.position="absolute";
var m=dojo.marginBox(this.node);
var b=dojo.doc.body;
var bs=dojo.getComputedStyle(b);
var bm=dojo._getMarginBox(b,bs);
var bc=dojo._getContentBox(b,bs);
l=m.l-(bc.l-bm.l);
t=m.t-(bc.t-bm.t);
break;
}
this.marginBox.l=l-this.marginBox.l;
this.marginBox.t=t-this.marginBox.t;
if(h&&h.onFirstMove){
h.onFirstMove(this);
}
dojo.disconnect(this.events.pop());
},destroy:function(){
dojo.forEach(this.events,dojo.disconnect);
var h=this.host;
if(h&&h.onMoveStop){
h.onMoveStop(this);
}
this.events=this.node=this.host=null;
}});
}
if(!dojo._hasResource["dojo.dnd.Moveable"]){
dojo._hasResource["dojo.dnd.Moveable"]=true;
dojo.provide("dojo.dnd.Moveable");
dojo.declare("dojo.dnd.Moveable",null,{handle:"",delay:0,skip:false,constructor:function(node,_1eb){
this.node=dojo.byId(node);
if(!_1eb){
_1eb={};
}
this.handle=_1eb.handle?dojo.byId(_1eb.handle):null;
if(!this.handle){
this.handle=this.node;
}
this.delay=_1eb.delay>0?_1eb.delay:0;
this.skip=_1eb.skip;
this.mover=_1eb.mover?_1eb.mover:dojo.dnd.Mover;
this.events=[dojo.connect(this.handle,"onmousedown",this,"onMouseDown"),dojo.connect(this.handle,"ondragstart",this,"onSelectStart"),dojo.connect(this.handle,"onselectstart",this,"onSelectStart")];
},markupFactory:function(_1ec,node){
return new dojo.dnd.Moveable(node,_1ec);
},destroy:function(){
dojo.forEach(this.events,dojo.disconnect);
this.events=this.node=this.handle=null;
},onMouseDown:function(e){
if(this.skip&&dojo.dnd.isFormElement(e)){
return;
}
if(this.delay){
this.events.push(dojo.connect(this.handle,"onmousemove",this,"onMouseMove"),dojo.connect(this.handle,"onmouseup",this,"onMouseUp"));
this._lastX=e.pageX;
this._lastY=e.pageY;
}else{
this.onDragDetected(e);
}
dojo.stopEvent(e);
},onMouseMove:function(e){
if(Math.abs(e.pageX-this._lastX)>this.delay||Math.abs(e.pageY-this._lastY)>this.delay){
this.onMouseUp(e);
this.onDragDetected(e);
}
dojo.stopEvent(e);
},onMouseUp:function(e){
for(var i=0;i<2;++i){
dojo.disconnect(this.events.pop());
}
dojo.stopEvent(e);
},onSelectStart:function(e){
if(!this.skip||!dojo.dnd.isFormElement(e)){
dojo.stopEvent(e);
}
},onDragDetected:function(e){
new this.mover(this.node,e,this);
},onMoveStart:function(_1f4){
dojo.publish("/dnd/move/start",[_1f4]);
dojo.addClass(dojo.body(),"dojoMove");
dojo.addClass(this.node,"dojoMoveItem");
},onMoveStop:function(_1f5){
dojo.publish("/dnd/move/stop",[_1f5]);
dojo.removeClass(dojo.body(),"dojoMove");
dojo.removeClass(this.node,"dojoMoveItem");
},onFirstMove:function(_1f6){
},onMove:function(_1f7,_1f8){
this.onMoving(_1f7,_1f8);
var s=_1f7.node.style;
s.left=_1f8.l+"px";
s.top=_1f8.t+"px";
this.onMoved(_1f7,_1f8);
},onMoving:function(_1fa,_1fb){
},onMoved:function(_1fc,_1fd){
}});
}
if(!dojo._hasResource["dojo.dnd.move"]){
dojo._hasResource["dojo.dnd.move"]=true;
dojo.provide("dojo.dnd.move");
dojo.declare("dojo.dnd.move.constrainedMoveable",dojo.dnd.Moveable,{constraints:function(){
},within:false,markupFactory:function(_1fe,node){
return new dojo.dnd.move.constrainedMoveable(node,_1fe);
},constructor:function(node,_201){
if(!_201){
_201={};
}
this.constraints=_201.constraints;
this.within=_201.within;
},onFirstMove:function(_202){
var c=this.constraintBox=this.constraints.call(this,_202);
c.r=c.l+c.w;
c.b=c.t+c.h;
if(this.within){
var mb=dojo.marginBox(_202.node);
c.r-=mb.w;
c.b-=mb.h;
}
},onMove:function(_205,_206){
var c=this.constraintBox,s=_205.node.style;
s.left=(_206.l<c.l?c.l:c.r<_206.l?c.r:_206.l)+"px";
s.top=(_206.t<c.t?c.t:c.b<_206.t?c.b:_206.t)+"px";
}});
dojo.declare("dojo.dnd.move.boxConstrainedMoveable",dojo.dnd.move.constrainedMoveable,{box:{},markupFactory:function(_209,node){
return new dojo.dnd.move.boxConstrainedMoveable(node,_209);
},constructor:function(node,_20c){
var box=_20c&&_20c.box;
this.constraints=function(){
return box;
};
}});
dojo.declare("dojo.dnd.move.parentConstrainedMoveable",dojo.dnd.move.constrainedMoveable,{area:"content",markupFactory:function(_20e,node){
return new dojo.dnd.move.parentConstrainedMoveable(node,_20e);
},constructor:function(node,_211){
var area=_211&&_211.area;
this.constraints=function(){
var n=this.node.parentNode,s=dojo.getComputedStyle(n),mb=dojo._getMarginBox(n,s);
if(area=="margin"){
return mb;
}
var t=dojo._getMarginExtents(n,s);
mb.l+=t.l,mb.t+=t.t,mb.w-=t.w,mb.h-=t.h;
if(area=="border"){
return mb;
}
t=dojo._getBorderExtents(n,s);
mb.l+=t.l,mb.t+=t.t,mb.w-=t.w,mb.h-=t.h;
if(area=="padding"){
return mb;
}
t=dojo._getPadExtents(n,s);
mb.l+=t.l,mb.t+=t.t,mb.w-=t.w,mb.h-=t.h;
return mb;
};
}});
dojo.dnd.move.constrainedMover=function(fun,_218){
dojo.deprecated("dojo.dnd.move.constrainedMover, use dojo.dnd.move.constrainedMoveable instead");
var _219=function(node,e,_21c){
dojo.dnd.Mover.call(this,node,e,_21c);
};
dojo.extend(_219,dojo.dnd.Mover.prototype);
dojo.extend(_219,{onMouseMove:function(e){
dojo.dnd.autoScroll(e);
var m=this.marginBox,c=this.constraintBox,l=m.l+e.pageX,t=m.t+e.pageY;
l=l<c.l?c.l:c.r<l?c.r:l;
t=t<c.t?c.t:c.b<t?c.b:t;
this.host.onMove(this,{l:l,t:t});
},onFirstMove:function(){
dojo.dnd.Mover.prototype.onFirstMove.call(this);
var c=this.constraintBox=fun.call(this);
c.r=c.l+c.w;
c.b=c.t+c.h;
if(_218){
var mb=dojo.marginBox(this.node);
c.r-=mb.w;
c.b-=mb.h;
}
}});
return _219;
};
dojo.dnd.move.boxConstrainedMover=function(box,_225){
dojo.deprecated("dojo.dnd.move.boxConstrainedMover, use dojo.dnd.move.boxConstrainedMoveable instead");
return dojo.dnd.move.constrainedMover(function(){
return box;
},_225);
};
dojo.dnd.move.parentConstrainedMover=function(area,_227){
dojo.deprecated("dojo.dnd.move.parentConstrainedMover, use dojo.dnd.move.parentConstrainedMoveable instead");
var fun=function(){
var n=this.node.parentNode,s=dojo.getComputedStyle(n),mb=dojo._getMarginBox(n,s);
if(area=="margin"){
return mb;
}
var t=dojo._getMarginExtents(n,s);
mb.l+=t.l,mb.t+=t.t,mb.w-=t.w,mb.h-=t.h;
if(area=="border"){
return mb;
}
t=dojo._getBorderExtents(n,s);
mb.l+=t.l,mb.t+=t.t,mb.w-=t.w,mb.h-=t.h;
if(area=="padding"){
return mb;
}
t=dojo._getPadExtents(n,s);
mb.l+=t.l,mb.t+=t.t,mb.w-=t.w,mb.h-=t.h;
return mb;
};
return dojo.dnd.move.constrainedMover(fun,_227);
};
dojo.dnd.constrainedMover=dojo.dnd.move.constrainedMover;
dojo.dnd.boxConstrainedMover=dojo.dnd.move.boxConstrainedMover;
dojo.dnd.parentConstrainedMover=dojo.dnd.move.parentConstrainedMover;
}
if(!dojo._hasResource["dojo.dnd.TimedMoveable"]){
dojo._hasResource["dojo.dnd.TimedMoveable"]=true;
dojo.provide("dojo.dnd.TimedMoveable");
(function(){
var _22d=dojo.dnd.Moveable.prototype.onMove;
dojo.declare("dojo.dnd.TimedMoveable",dojo.dnd.Moveable,{timeout:40,constructor:function(node,_22f){
if(!_22f){
_22f={};
}
if(_22f.timeout&&typeof _22f.timeout=="number"&&_22f.timeout>=0){
this.timeout=_22f.timeout;
}
},markupFactory:function(_230,node){
return new dojo.dnd.TimedMoveable(node,_230);
},onMoveStop:function(_232){
if(_232._timer){
clearTimeout(_232._timer);
_22d.call(this,_232,_232._leftTop);
}
dojo.dnd.Moveable.prototype.onMoveStop.apply(this,arguments);
},onMove:function(_233,_234){
_233._leftTop=_234;
if(!_233._timer){
var _t=this;
_233._timer=setTimeout(function(){
_233._timer=null;
_22d.call(_t,_233,_233._leftTop);
},this.timeout);
}
}});
})();
}
if(!dojo._hasResource["dijit._base.focus"]){
dojo._hasResource["dijit._base.focus"]=true;
dojo.provide("dijit._base.focus");
dojo.mixin(dijit,{_curFocus:null,_prevFocus:null,isCollapsed:function(){
var _236=dojo.doc;
if(_236.selection){
var s=_236.selection;
if(s.type=="Text"){
return !s.createRange().htmlText.length;
}else{
return !s.createRange().length;
}
}else{
var _238=dojo.global;
var _239=_238.getSelection();
if(dojo.isString(_239)){
return !_239;
}else{
return _239.isCollapsed||!_239.toString();
}
}
},getBookmark:function(){
var _23a,_23b=dojo.doc.selection;
if(_23b){
var _23c=_23b.createRange();
if(_23b.type.toUpperCase()=="CONTROL"){
if(_23c.length){
_23a=[];
var i=0,len=_23c.length;
while(i<len){
_23a.push(_23c.item(i++));
}
}else{
_23a=null;
}
}else{
_23a=_23c.getBookmark();
}
}else{
if(window.getSelection){
_23b=dojo.global.getSelection();
if(_23b){
_23c=_23b.getRangeAt(0);
_23a=_23c.cloneRange();
}
}else{
console.warn("No idea how to store the current selection for this browser!");
}
}
return _23a;
},moveToBookmark:function(_23f){
var _240=dojo.doc;
if(_240.selection){
var _241;
if(dojo.isArray(_23f)){
_241=_240.body.createControlRange();
dojo.forEach(_23f,function(n){
_241.addElement(n);
});
}else{
_241=_240.selection.createRange();
_241.moveToBookmark(_23f);
}
_241.select();
}else{
var _243=dojo.global.getSelection&&dojo.global.getSelection();
if(_243&&_243.removeAllRanges){
_243.removeAllRanges();
_243.addRange(_23f);
}else{
console.warn("No idea how to restore selection for this browser!");
}
}
},getFocus:function(menu,_245){
return {node:menu&&dojo.isDescendant(dijit._curFocus,menu.domNode)?dijit._prevFocus:dijit._curFocus,bookmark:!dojo.withGlobal(_245||dojo.global,dijit.isCollapsed)?dojo.withGlobal(_245||dojo.global,dijit.getBookmark):null,openedForWindow:_245};
},focus:function(_246){
if(!_246){
return;
}
var node="node" in _246?_246.node:_246,_248=_246.bookmark,_249=_246.openedForWindow;
if(node){
var _24a=(node.tagName.toLowerCase()=="iframe")?node.contentWindow:node;
if(_24a&&_24a.focus){
try{
_24a.focus();
}
catch(e){
}
}
dijit._onFocusNode(node);
}
if(_248&&dojo.withGlobal(_249||dojo.global,dijit.isCollapsed)){
if(_249){
_249.focus();
}
try{
dojo.withGlobal(_249||dojo.global,dijit.moveToBookmark,null,[_248]);
}
catch(e){
}
}
},_activeStack:[],registerWin:function(_24b){
if(!_24b){
_24b=window;
}
dojo.connect(_24b.document,"onmousedown",function(evt){
dijit._justMouseDowned=true;
setTimeout(function(){
dijit._justMouseDowned=false;
},0);
dijit._onTouchNode(evt.target||evt.srcElement);
});
var doc=_24b.document;
if(doc){
if(dojo.isIE){
doc.attachEvent("onactivate",function(evt){
if(evt.srcElement.tagName.toLowerCase()!="#document"){
dijit._onFocusNode(evt.srcElement);
}
});
doc.attachEvent("ondeactivate",function(evt){
dijit._onBlurNode(evt.srcElement);
});
}else{
doc.addEventListener("focus",function(evt){
dijit._onFocusNode(evt.target);
},true);
doc.addEventListener("blur",function(evt){
dijit._onBlurNode(evt.target);
},true);
}
}
doc=null;
},_onBlurNode:function(node){
dijit._prevFocus=dijit._curFocus;
dijit._curFocus=null;
if(dijit._justMouseDowned){
return;
}
if(dijit._clearActiveWidgetsTimer){
clearTimeout(dijit._clearActiveWidgetsTimer);
}
dijit._clearActiveWidgetsTimer=setTimeout(function(){
delete dijit._clearActiveWidgetsTimer;
dijit._setStack([]);
dijit._prevFocus=null;
},100);
},_onTouchNode:function(node){
if(dijit._clearActiveWidgetsTimer){
clearTimeout(dijit._clearActiveWidgetsTimer);
delete dijit._clearActiveWidgetsTimer;
}
var _254=[];
try{
while(node){
if(node.dijitPopupParent){
node=dijit.byId(node.dijitPopupParent).domNode;
}else{
if(node.tagName&&node.tagName.toLowerCase()=="body"){
if(node===dojo.body()){
break;
}
node=dijit.getDocumentWindow(node.ownerDocument).frameElement;
}else{
var id=node.getAttribute&&node.getAttribute("widgetId");
if(id){
_254.unshift(id);
}
node=node.parentNode;
}
}
}
}
catch(e){
}
dijit._setStack(_254);
},_onFocusNode:function(node){
if(!node){
return;
}
if(node.nodeType==9){
return;
}
if(node.nodeType==9){
var _257=dijit.getDocumentWindow(node).frameElement;
if(!_257){
return;
}
node=_257;
}
dijit._onTouchNode(node);
if(node==dijit._curFocus){
return;
}
if(dijit._curFocus){
dijit._prevFocus=dijit._curFocus;
}
dijit._curFocus=node;
dojo.publish("focusNode",[node]);
},_setStack:function(_258){
var _259=dijit._activeStack;
dijit._activeStack=_258;
for(var _25a=0;_25a<Math.min(_259.length,_258.length);_25a++){
if(_259[_25a]!=_258[_25a]){
break;
}
}
for(var i=_259.length-1;i>=_25a;i--){
var _25c=dijit.byId(_259[i]);
if(_25c){
_25c._focused=false;
_25c._hasBeenBlurred=true;
if(_25c._onBlur){
_25c._onBlur();
}
if(_25c._setStateClass){
_25c._setStateClass();
}
dojo.publish("widgetBlur",[_25c]);
}
}
for(i=_25a;i<_258.length;i++){
_25c=dijit.byId(_258[i]);
if(_25c){
_25c._focused=true;
if(_25c._onFocus){
_25c._onFocus();
}
if(_25c._setStateClass){
_25c._setStateClass();
}
dojo.publish("widgetFocus",[_25c]);
}
}
}});
dojo.addOnLoad(dijit.registerWin);
}
if(!dojo._hasResource["dijit._base.manager"]){
dojo._hasResource["dijit._base.manager"]=true;
dojo.provide("dijit._base.manager");
dojo.declare("dijit.WidgetSet",null,{constructor:function(){
this._hash={};
},add:function(_25d){
if(this._hash[_25d.id]){
throw new Error("Tried to register widget with id=="+_25d.id+" but that id is already registered");
}
this._hash[_25d.id]=_25d;
},remove:function(id){
delete this._hash[id];
},forEach:function(func){
for(var id in this._hash){
func(this._hash[id]);
}
},filter:function(_261){
var res=new dijit.WidgetSet();
this.forEach(function(_263){
if(_261(_263)){
res.add(_263);
}
});
return res;
},byId:function(id){
return this._hash[id];
},byClass:function(cls){
return this.filter(function(_266){
return _266.declaredClass==cls;
});
}});
dijit.registry=new dijit.WidgetSet();
dijit._widgetTypeCtr={};
dijit.getUniqueId=function(_267){
var id;
do{
id=_267+"_"+(_267 in dijit._widgetTypeCtr?++dijit._widgetTypeCtr[_267]:dijit._widgetTypeCtr[_267]=0);
}while(dijit.byId(id));
return id;
};
if(dojo.isIE){
dojo.addOnWindowUnload(function(){
dijit.registry.forEach(function(_269){
_269.destroy();
});
});
}
dijit.byId=function(id){
return (dojo.isString(id))?dijit.registry.byId(id):id;
};
dijit.byNode=function(node){
return dijit.registry.byId(node.getAttribute("widgetId"));
};
dijit.getEnclosingWidget=function(node){
while(node){
if(node.getAttribute&&node.getAttribute("widgetId")){
return dijit.registry.byId(node.getAttribute("widgetId"));
}
node=node.parentNode;
}
return null;
};
dijit._tabElements={area:true,button:true,input:true,object:true,select:true,textarea:true};
dijit._isElementShown=function(elem){
var _26e=dojo.style(elem);
return (_26e.visibility!="hidden")&&(_26e.visibility!="collapsed")&&(_26e.display!="none")&&(dojo.attr(elem,"type")!="hidden");
};
dijit.isTabNavigable=function(elem){
if(dojo.hasAttr(elem,"disabled")){
return false;
}
var _270=dojo.hasAttr(elem,"tabindex");
var _271=dojo.attr(elem,"tabindex");
if(_270&&_271>=0){
return true;
}
var name=elem.nodeName.toLowerCase();
if(((name=="a"&&dojo.hasAttr(elem,"href"))||dijit._tabElements[name])&&(!_270||_271>=0)){
return true;
}
return false;
};
dijit._getTabNavigable=function(root){
var _274,last,_276,_277,_278,_279;
var _27a=function(_27b){
dojo.query("> *",_27b).forEach(function(_27c){
var _27d=dijit._isElementShown(_27c);
if(_27d&&dijit.isTabNavigable(_27c)){
var _27e=dojo.attr(_27c,"tabindex");
if(!dojo.hasAttr(_27c,"tabindex")||_27e==0){
if(!_274){
_274=_27c;
}
last=_27c;
}else{
if(_27e>0){
if(!_276||_27e<_277){
_277=_27e;
_276=_27c;
}
if(!_278||_27e>=_279){
_279=_27e;
_278=_27c;
}
}
}
}
if(_27d&&_27c.nodeName.toUpperCase()!="SELECT"){
_27a(_27c);
}
});
};
if(dijit._isElementShown(root)){
_27a(root);
}
return {first:_274,last:last,lowest:_276,highest:_278};
};
dijit.getFirstInTabbingOrder=function(root){
var _280=dijit._getTabNavigable(dojo.byId(root));
return _280.lowest?_280.lowest:_280.first;
};
dijit.getLastInTabbingOrder=function(root){
var _282=dijit._getTabNavigable(dojo.byId(root));
return _282.last?_282.last:_282.highest;
};
dijit.defaultDuration=dojo.config["defaultDuration"]||200;
}
if(!dojo._hasResource["dojo.AdapterRegistry"]){
dojo._hasResource["dojo.AdapterRegistry"]=true;
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_283){
this.pairs=[];
this.returnWrappers=_283||false;
};
dojo.extend(dojo.AdapterRegistry,{register:function(name,_285,wrap,_287,_288){
this.pairs[((_288)?"unshift":"push")]([name,_285,wrap,_287]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
}
if(!dojo._hasResource["dijit._base.place"]){
dojo._hasResource["dijit._base.place"]=true;
dojo.provide("dijit._base.place");
dijit.getViewport=function(){
var _28e=dojo.global;
var _28f=dojo.doc;
var w=0,h=0;
var de=_28f.documentElement;
var dew=de.clientWidth,deh=de.clientHeight;
if(dojo.isMozilla){
var minw,minh,maxw,maxh;
var dbw=_28f.body.clientWidth;
if(dbw>dew){
minw=dew;
maxw=dbw;
}else{
maxw=dew;
minw=dbw;
}
var dbh=_28f.body.clientHeight;
if(dbh>deh){
minh=deh;
maxh=dbh;
}else{
maxh=deh;
minh=dbh;
}
w=(maxw>_28e.innerWidth)?minw:maxw;
h=(maxh>_28e.innerHeight)?minh:maxh;
}else{
if(!dojo.isOpera&&_28e.innerWidth){
w=_28e.innerWidth;
h=_28e.innerHeight;
}else{
if(dojo.isIE&&de&&deh){
w=dew;
h=deh;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
var _29b=dojo._docScroll();
return {w:w,h:h,l:_29b.x,t:_29b.y};
};
dijit.placeOnScreen=function(node,pos,_29e,_29f){
var _2a0=dojo.map(_29e,function(_2a1){
return {corner:_2a1,pos:pos};
});
return dijit._place(node,_2a0);
};
dijit._place=function(node,_2a3,_2a4){
var view=dijit.getViewport();
if(!node.parentNode||String(node.parentNode.tagName).toLowerCase()!="body"){
dojo.body().appendChild(node);
}
var best=null;
dojo.some(_2a3,function(_2a7){
var _2a8=_2a7.corner;
var pos=_2a7.pos;
if(_2a4){
_2a4(node,_2a7.aroundCorner,_2a8);
}
var _2aa=node.style;
var _2ab=_2aa.display;
var _2ac=_2aa.visibility;
_2aa.visibility="hidden";
_2aa.display="";
var mb=dojo.marginBox(node);
_2aa.display=_2ab;
_2aa.visibility=_2ac;
var _2ae=(_2a8.charAt(1)=="L"?pos.x:Math.max(view.l,pos.x-mb.w)),_2af=(_2a8.charAt(0)=="T"?pos.y:Math.max(view.t,pos.y-mb.h)),endX=(_2a8.charAt(1)=="L"?Math.min(view.l+view.w,_2ae+mb.w):pos.x),endY=(_2a8.charAt(0)=="T"?Math.min(view.t+view.h,_2af+mb.h):pos.y),_2b2=endX-_2ae,_2b3=endY-_2af,_2b4=(mb.w-_2b2)+(mb.h-_2b3);
if(best==null||_2b4<best.overflow){
best={corner:_2a8,aroundCorner:_2a7.aroundCorner,x:_2ae,y:_2af,w:_2b2,h:_2b3,overflow:_2b4};
}
return !_2b4;
});
node.style.left=best.x+"px";
node.style.top=best.y+"px";
if(best.overflow&&_2a4){
_2a4(node,best.aroundCorner,best.corner);
}
return best;
};
dijit.placeOnScreenAroundNode=function(node,_2b6,_2b7,_2b8){
_2b6=dojo.byId(_2b6);
var _2b9=_2b6.style.display;
_2b6.style.display="";
var _2ba=_2b6.offsetWidth;
var _2bb=_2b6.offsetHeight;
var _2bc=dojo.coords(_2b6,true);
_2b6.style.display=_2b9;
return dijit._placeOnScreenAroundRect(node,_2bc.x,_2bc.y,_2ba,_2bb,_2b7,_2b8);
};
dijit.placeOnScreenAroundRectangle=function(node,_2be,_2bf,_2c0){
return dijit._placeOnScreenAroundRect(node,_2be.x,_2be.y,_2be.width,_2be.height,_2bf,_2c0);
};
dijit._placeOnScreenAroundRect=function(node,x,y,_2c4,_2c5,_2c6,_2c7){
var _2c8=[];
for(var _2c9 in _2c6){
_2c8.push({aroundCorner:_2c9,corner:_2c6[_2c9],pos:{x:x+(_2c9.charAt(1)=="L"?0:_2c4),y:y+(_2c9.charAt(0)=="T"?0:_2c5)}});
}
return dijit._place(node,_2c8,_2c7);
};
dijit.placementRegistry=new dojo.AdapterRegistry();
dijit.placementRegistry.register("node",function(n,x){
return typeof x=="object"&&typeof x.offsetWidth!="undefined"&&typeof x.offsetHeight!="undefined";
},dijit.placeOnScreenAroundNode);
dijit.placementRegistry.register("rect",function(n,x){
return typeof x=="object"&&"x" in x&&"y" in x&&"width" in x&&"height" in x;
},dijit.placeOnScreenAroundRectangle);
dijit.placeOnScreenAroundElement=function(node,_2cf,_2d0,_2d1){
return dijit.placementRegistry.match.apply(dijit.placementRegistry,arguments);
};
}
if(!dojo._hasResource["dijit._base.window"]){
dojo._hasResource["dijit._base.window"]=true;
dojo.provide("dijit._base.window");
dijit.getDocumentWindow=function(doc){
if(dojo.isIE&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
}
if(!dojo._hasResource["dijit._base.popup"]){
dojo._hasResource["dijit._base.popup"]=true;
dojo.provide("dijit._base.popup");
dijit.popup=new function(){
var _2d4=[],_2d5=1000,_2d6=1;
this.prepare=function(node){
dojo.body().appendChild(node);
var s=node.style;
if(s.display=="none"){
s.display="";
}
s.visibility="hidden";
s.position="absolute";
s.top="-9999px";
};
this.open=function(args){
var _2da=args.popup,_2db=args.orient||{"BL":"TL","TL":"BL"},_2dc=args.around,id=(args.around&&args.around.id)?(args.around.id+"_dropdown"):("popup_"+_2d6++);
var _2de=dojo.doc.createElement("div");
dijit.setWaiRole(_2de,"presentation");
_2de.id=id;
_2de.className="dijitPopup";
_2de.style.zIndex=_2d5+_2d4.length;
_2de.style.left=_2de.style.top="0px";
_2de.style.visibility="hidden";
if(args.parent){
_2de.dijitPopupParent=args.parent.id;
}
dojo.body().appendChild(_2de);
var s=_2da.domNode.style;
s.display="";
s.visibility="";
s.position="";
_2de.appendChild(_2da.domNode);
var _2e0=new dijit.BackgroundIframe(_2de);
var best=_2dc?dijit.placeOnScreenAroundElement(_2de,_2dc,_2db,_2da.orient?dojo.hitch(_2da,"orient"):null):dijit.placeOnScreen(_2de,args,_2db=="R"?["TR","BR","TL","BL"]:["TL","BL","TR","BR"]);
_2de.style.visibility="visible";
var _2e2=[];
var _2e3=function(){
for(var pi=_2d4.length-1;pi>0&&_2d4[pi].parent===_2d4[pi-1].widget;pi--){
}
return _2d4[pi];
};
_2e2.push(dojo.connect(_2de,"onkeypress",this,function(evt){
if(evt.charOrCode==dojo.keys.ESCAPE&&args.onCancel){
dojo.stopEvent(evt);
args.onCancel();
}else{
if(evt.charOrCode===dojo.keys.TAB){
dojo.stopEvent(evt);
var _2e6=_2e3();
if(_2e6&&_2e6.onCancel){
_2e6.onCancel();
}
}
}
}));
if(_2da.onCancel){
_2e2.push(dojo.connect(_2da,"onCancel",null,args.onCancel));
}
_2e2.push(dojo.connect(_2da,_2da.onExecute?"onExecute":"onChange",null,function(){
var _2e7=_2e3();
if(_2e7&&_2e7.onExecute){
_2e7.onExecute();
}
}));
_2d4.push({wrapper:_2de,iframe:_2e0,widget:_2da,parent:args.parent,onExecute:args.onExecute,onCancel:args.onCancel,onClose:args.onClose,handlers:_2e2});
if(_2da.onOpen){
_2da.onOpen(best);
}
return best;
};
this.close=function(_2e8){
while(dojo.some(_2d4,function(elem){
return elem.widget==_2e8;
})){
var top=_2d4.pop(),_2eb=top.wrapper,_2ec=top.iframe,_2ed=top.widget,_2ee=top.onClose;
if(_2ed.onClose){
_2ed.onClose();
}
dojo.forEach(top.handlers,dojo.disconnect);
if(!_2ed||!_2ed.domNode){
return;
}
this.prepare(_2ed.domNode);
_2ec.destroy();
dojo._destroyElement(_2eb);
if(_2ee){
_2ee();
}
}
};
}();
dijit._frames=new function(){
var _2ef=[];
this.pop=function(){
var _2f0;
if(_2ef.length){
_2f0=_2ef.pop();
_2f0.style.display="";
}else{
if(dojo.isIE){
var burl=dojo.config["dojoBlankHtmlUrl"]||(dojo.moduleUrl("dojo","resources/blank.html")+"")||"javascript:\"\"";
var html="<iframe src='"+burl+"'"+" style='position: absolute; left: 0px; top: 0px;"+"z-index: -1; filter:Alpha(Opacity=\"0\");'>";
_2f0=dojo.doc.createElement(html);
}else{
_2f0=dojo.doc.createElement("iframe");
_2f0.src="javascript:\"\"";
_2f0.className="dijitBackgroundIframe";
}
_2f0.tabIndex=-1;
dojo.body().appendChild(_2f0);
}
return _2f0;
};
this.push=function(_2f3){
_2f3.style.display="";
if(dojo.isIE){
_2f3.style.removeExpression("width");
_2f3.style.removeExpression("height");
}
_2ef.push(_2f3);
};
}();
if(dojo.isIE<7){
dojo.addOnLoad(function(){
var f=dijit._frames;
dojo.forEach([f.pop()],f.push);
});
}
dijit.BackgroundIframe=function(node){
if(!node.id){
throw new Error("no id");
}
if((dojo.isIE&&dojo.isIE<7)||(dojo.isFF&&dojo.isFF<3&&dojo.hasClass(dojo.body(),"dijit_a11y"))){
var _2f6=dijit._frames.pop();
node.appendChild(_2f6);
if(dojo.isIE){
_2f6.style.setExpression("width",dojo._scopeName+".doc.getElementById('"+node.id+"').offsetWidth");
_2f6.style.setExpression("height",dojo._scopeName+".doc.getElementById('"+node.id+"').offsetHeight");
}
this.iframe=_2f6;
}
};
dojo.extend(dijit.BackgroundIframe,{destroy:function(){
if(this.iframe){
dijit._frames.push(this.iframe);
delete this.iframe;
}
}});
}
if(!dojo._hasResource["dijit._base.scroll"]){
dojo._hasResource["dijit._base.scroll"]=true;
dojo.provide("dijit._base.scroll");
dijit.scrollIntoView=function(node){
node=dojo.byId(node);
var body=node.ownerDocument.body;
var html=body.parentNode;
if(dojo.isFF==2||node==body||node==html){
node.scrollIntoView(false);
return;
}
var rtl=!dojo._isBodyLtr();
var _2fb=dojo.doc.compatMode!="BackCompat";
var _2fc=(_2fb&&!dojo.isSafari)?html:body;
function addPseudoAttrs(_2fd){
var _2fe=_2fd.parentNode;
var _2ff=_2fd.offsetParent;
if(_2ff==null){
_2fd=_2fc;
_2ff=html;
_2fe=null;
}
_2fd._offsetParent=(_2ff==body)?_2fc:_2ff;
_2fd._parent=(_2fe==body)?_2fc:_2fe;
_2fd._start={H:_2fd.offsetLeft,V:_2fd.offsetTop};
_2fd._scroll={H:_2fd.scrollLeft,V:_2fd.scrollTop};
_2fd._renderedSize={H:_2fd.offsetWidth,V:_2fd.offsetHeight};
var bp=dojo._getBorderExtents(_2fd);
_2fd._borderStart={H:bp.l,V:bp.t};
_2fd._borderSize={H:bp.w,V:bp.h};
_2fd._clientSize=(_2fd._offsetParent==html&&dojo.isSafari&&_2fb)?{H:html.clientWidth,V:html.clientHeight}:{H:_2fd.clientWidth,V:_2fd.clientHeight};
_2fd._scrollBarSize={V:null,H:null};
for(var dir in _2fd._scrollBarSize){
var _302=_2fd._renderedSize[dir]-_2fd._clientSize[dir]-_2fd._borderSize[dir];
_2fd._scrollBarSize[dir]=(_2fd._clientSize[dir]>0&&_302>=15&&_302<=17)?_302:0;
}
_2fd._isScrollable={V:null,H:null};
for(dir in _2fd._isScrollable){
var _303=dir=="H"?"V":"H";
_2fd._isScrollable[dir]=_2fd==_2fc||_2fd._scroll[dir]||_2fd._scrollBarSize[_303];
}
};
var _304=node;
while(_304!=null){
addPseudoAttrs(_304);
var next=_304._parent;
if(next){
next._child=_304;
}
_304=next;
}
for(var dir in _2fc._renderedSize){
_2fc._renderedSize[dir]=Math.min(_2fc._clientSize[dir],_2fc._renderedSize[dir]);
}
var _307=node;
while(_307!=_2fc){
_304=_307._parent;
if(_304.tagName=="TD"){
var _308=_304._parent._parent._parent;
if(_308._offsetParent==_307._offsetParent&&_304._offsetParent!=_307._offsetParent){
_304=_308;
}
}
var _309=_307==_2fc||(_304._offsetParent!=_307._offsetParent);
for(dir in _307._start){
var _30a=dir=="H"?"V":"H";
if(rtl&&dir=="H"&&(dojo.isSafari||dojo.isIE)&&_304._clientSize.H>0){
var _30b=_304.scrollWidth-_304._clientSize.H;
if(_30b>0){
_304._scroll.H-=_30b;
}
}
if(dojo.isIE&&_304._offsetParent.tagName=="TABLE"){
_304._start[dir]-=_304._offsetParent._borderStart[dir];
_304._borderStart[dir]=_304._borderSize[dir]=0;
}
if(_304._clientSize[dir]==0){
_304._renderedSize[dir]=_304._clientSize[dir]=_304._child._clientSize[dir];
if(rtl&&dir=="H"){
_304._start[dir]-=_304._renderedSize[dir];
}
}else{
_304._renderedSize[dir]-=_304._borderSize[dir]+_304._scrollBarSize[dir];
}
_304._start[dir]+=_304._borderStart[dir];
var _30c=_307._start[dir]-(_309?0:_304._start[dir])-_304._scroll[dir];
var _30d=_30c+_307._renderedSize[dir]-_304._renderedSize[dir];
var _30e,_30f=(dir=="H")?"scrollLeft":"scrollTop";
var _310=(dir=="H"&&rtl);
var _311=_310?-_30d:_30c;
var _312=_310?-_30c:_30d;
if(_311<=0){
_30e=_311;
}else{
if(_312<=0){
_30e=0;
}else{
if(_311<_312){
_30e=_311;
}else{
_30e=_312;
}
}
}
var _313=0;
if(_30e!=0){
var _314=_304[_30f];
_304[_30f]+=_310?-_30e:_30e;
_313=_304[_30f]-_314;
_30c-=_313;
_312-=_310?-_313:_313;
}
_304._renderedSize[dir]=_307._renderedSize[dir]+_304._scrollBarSize[dir]-((_304._isScrollable[dir]&&_312>0)?_312:0);
_304._start[dir]+=(_30c>=0||!_304._isScrollable[dir])?_30c:0;
}
_307=_304;
}
};
}
if(!dojo._hasResource["dijit._base.sniff"]){
dojo._hasResource["dijit._base.sniff"]=true;
dojo.provide("dijit._base.sniff");
(function(){
var d=dojo;
var ie=d.isIE;
var _317=d.isOpera;
var maj=Math.floor;
var ff=d.isFF;
var _31a=d.boxModel.replace(/-/,"");
var _31b={dj_ie:ie,dj_ie6:maj(ie)==6,dj_ie7:maj(ie)==7,dj_iequirks:ie&&d.isQuirks,dj_opera:_317,dj_opera8:maj(_317)==8,dj_opera9:maj(_317)==9,dj_khtml:d.isKhtml,dj_safari:d.isSafari,dj_gecko:d.isMozilla,dj_ff2:maj(ff)==2,dj_ff3:maj(ff)==3};
_31b["dj_"+_31a]=true;
var html=dojo.doc.documentElement;
for(var p in _31b){
if(_31b[p]){
if(html.className){
html.className+=" "+p;
}else{
html.className=p;
}
}
}
dojo._loaders.unshift(function(){
if(!dojo._isBodyLtr()){
html.className+=" dijitRtl";
for(var p in _31b){
if(_31b[p]){
html.className+=" "+p+"-rtl";
}
}
}
});
})();
}
if(!dojo._hasResource["dijit._base.typematic"]){
dojo._hasResource["dijit._base.typematic"]=true;
dojo.provide("dijit._base.typematic");
dijit.typematic={_fireEventAndReload:function(){
this._timer=null;
this._callback(++this._count,this._node,this._evt);
this._currentTimeout=(this._currentTimeout<0)?this._initialDelay:((this._subsequentDelay>1)?this._subsequentDelay:Math.round(this._currentTimeout*this._subsequentDelay));
this._timer=setTimeout(dojo.hitch(this,"_fireEventAndReload"),this._currentTimeout);
},trigger:function(evt,_320,node,_322,obj,_324,_325){
if(obj!=this._obj){
this.stop();
this._initialDelay=_325||500;
this._subsequentDelay=_324||0.9;
this._obj=obj;
this._evt=evt;
this._node=node;
this._currentTimeout=-1;
this._count=-1;
this._callback=dojo.hitch(_320,_322);
this._fireEventAndReload();
}
},stop:function(){
if(this._timer){
clearTimeout(this._timer);
this._timer=null;
}
if(this._obj){
this._callback(-1,this._node,this._evt);
this._obj=null;
}
},addKeyListener:function(node,_327,_328,_329,_32a,_32b){
if(_327.keyCode){
_327.charOrCode=_327.keyCode;
dojo.deprecated("keyCode attribute parameter for dijit.typematic.addKeyListener is deprecated. Use charOrCode instead.","","2.0");
}else{
if(_327.charCode){
_327.charOrCode=String.fromCharCode(_327.charCode);
dojo.deprecated("charCode attribute parameter for dijit.typematic.addKeyListener is deprecated. Use charOrCode instead.","","2.0");
}
}
return [dojo.connect(node,"onkeypress",this,function(evt){
if(evt.charOrCode==_327.charOrCode&&(_327.ctrlKey===undefined||_327.ctrlKey==evt.ctrlKey)&&(_327.altKey===undefined||_327.altKey==evt.ctrlKey)&&(_327.shiftKey===undefined||_327.shiftKey==evt.ctrlKey)){
dojo.stopEvent(evt);
dijit.typematic.trigger(_327,_328,node,_329,_327,_32a,_32b);
}else{
if(dijit.typematic._obj==_327){
dijit.typematic.stop();
}
}
}),dojo.connect(node,"onkeyup",this,function(evt){
if(dijit.typematic._obj==_327){
dijit.typematic.stop();
}
})];
},addMouseListener:function(node,_32f,_330,_331,_332){
var dc=dojo.connect;
return [dc(node,"mousedown",this,function(evt){
dojo.stopEvent(evt);
dijit.typematic.trigger(evt,_32f,node,_330,node,_331,_332);
}),dc(node,"mouseup",this,function(evt){
dojo.stopEvent(evt);
dijit.typematic.stop();
}),dc(node,"mouseout",this,function(evt){
dojo.stopEvent(evt);
dijit.typematic.stop();
}),dc(node,"mousemove",this,function(evt){
dojo.stopEvent(evt);
}),dc(node,"dblclick",this,function(evt){
dojo.stopEvent(evt);
if(dojo.isIE){
dijit.typematic.trigger(evt,_32f,node,_330,node,_331,_332);
setTimeout(dojo.hitch(this,dijit.typematic.stop),50);
}
})];
},addListener:function(_339,_33a,_33b,_33c,_33d,_33e,_33f){
return this.addKeyListener(_33a,_33b,_33c,_33d,_33e,_33f).concat(this.addMouseListener(_339,_33c,_33d,_33e,_33f));
}};
}
if(!dojo._hasResource["dijit._base.wai"]){
dojo._hasResource["dijit._base.wai"]=true;
dojo.provide("dijit._base.wai");
dijit.wai={onload:function(){
var div=dojo.doc.createElement("div");
div.id="a11yTestNode";
div.style.cssText="border: 1px solid;"+"border-color:red green;"+"position: absolute;"+"height: 5px;"+"top: -999px;"+"background-image: url(\""+(dojo.config.blankGif||dojo.moduleUrl("dojo","resources/blank.gif"))+"\");";
dojo.body().appendChild(div);
var cs=dojo.getComputedStyle(div);
if(cs){
var _342=cs.backgroundImage;
var _343=(cs.borderTopColor==cs.borderRightColor)||(_342!=null&&(_342=="none"||_342=="url(invalid-url:)"));
dojo[_343?"addClass":"removeClass"](dojo.body(),"dijit_a11y");
if(dojo.isIE){
div.outerHTML="";
}else{
dojo.body().removeChild(div);
}
}
}};
if(dojo.isIE||dojo.isMoz){
dojo._loaders.unshift(dijit.wai.onload);
}
dojo.mixin(dijit,{_XhtmlRoles:/banner|contentinfo|definition|main|navigation|search|note|secondary|seealso/,hasWaiRole:function(elem,role){
var _346=this.getWaiRole(elem);
if(role){
return (_346.indexOf(role)>-1);
}else{
return (_346.length>0);
}
},getWaiRole:function(elem){
return dojo.trim((dojo.attr(elem,"role")||"").replace(this._XhtmlRoles,"").replace("wairole:",""));
},setWaiRole:function(elem,role){
var _34a=dojo.attr(elem,"role")||"";
if(dojo.isFF<3||!this._XhtmlRoles.test(_34a)){
dojo.attr(elem,"role",dojo.isFF<3?"wairole:"+role:role);
}else{
if((" "+_34a+" ").indexOf(" "+role+" ")<0){
var _34b=dojo.trim(_34a.replace(this._XhtmlRoles,""));
var _34c=dojo.trim(_34a.replace(_34b,""));
dojo.attr(elem,"role",_34c+(_34c?" ":"")+role);
}
}
},removeWaiRole:function(elem,role){
var _34f=dojo.attr(elem,"role");
if(!_34f){
return;
}
if(role){
var _350=dojo.isFF<3?"wairole:"+role:role;
var t=dojo.trim((" "+_34f+" ").replace(" "+_350+" "," "));
dojo.attr(elem,"role",t);
}else{
elem.removeAttribute("role");
}
},hasWaiState:function(elem,_353){
if(dojo.isFF<3){
return elem.hasAttributeNS("http://www.w3.org/2005/07/aaa",_353);
}else{
return elem.hasAttribute?elem.hasAttribute("aria-"+_353):!!elem.getAttribute("aria-"+_353);
}
},getWaiState:function(elem,_355){
if(dojo.isFF<3){
return elem.getAttributeNS("http://www.w3.org/2005/07/aaa",_355);
}else{
var _356=elem.getAttribute("aria-"+_355);
return _356?_356:"";
}
},setWaiState:function(elem,_358,_359){
if(dojo.isFF<3){
elem.setAttributeNS("http://www.w3.org/2005/07/aaa","aaa:"+_358,_359);
}else{
elem.setAttribute("aria-"+_358,_359);
}
},removeWaiState:function(elem,_35b){
if(dojo.isFF<3){
elem.removeAttributeNS("http://www.w3.org/2005/07/aaa",_35b);
}else{
elem.removeAttribute("aria-"+_35b);
}
}});
}
if(!dojo._hasResource["dijit._base"]){
dojo._hasResource["dijit._base"]=true;
dojo.provide("dijit._base");
}
if(!dojo._hasResource["dijit._Widget"]){
dojo._hasResource["dijit._Widget"]=true;
dojo.provide("dijit._Widget");
dojo.require("dijit._base");
dojo.connect(dojo,"connect",function(_35c,_35d){
if(_35c&&dojo.isFunction(_35c._onConnect)){
_35c._onConnect(_35d);
}
});
dijit._connectOnUseEventHandler=function(_35e){
};
(function(){
var _35f={};
var _360=function(dc){
if(!_35f[dc]){
var r=[];
var _363;
var _364=dojo.getObject(dc).prototype;
for(var _365 in _364){
if(dojo.isFunction(_364[_365])&&(_363=_365.match(/^_set([a-zA-Z]*)Attr$/))&&_363[1]){
r.push(_363[1].charAt(0).toLowerCase()+_363[1].substr(1));
}
}
_35f[dc]=r;
}
return _35f[dc]||[];
};
dojo.declare("dijit._Widget",null,{id:"",lang:"",dir:"","class":"",style:"",title:"",srcNodeRef:null,domNode:null,containerNode:null,attributeMap:{id:"",dir:"",lang:"","class":"",style:"",title:""},_deferredConnects:{onClick:"",onDblClick:"",onKeyDown:"",onKeyPress:"",onKeyUp:"",onMouseMove:"",onMouseDown:"",onMouseOut:"",onMouseOver:"",onMouseLeave:"",onMouseEnter:"",onMouseUp:""},onClick:dijit._connectOnUseEventHandler,onDblClick:dijit._connectOnUseEventHandler,onKeyDown:dijit._connectOnUseEventHandler,onKeyPress:dijit._connectOnUseEventHandler,onKeyUp:dijit._connectOnUseEventHandler,onMouseDown:dijit._connectOnUseEventHandler,onMouseMove:dijit._connectOnUseEventHandler,onMouseOut:dijit._connectOnUseEventHandler,onMouseOver:dijit._connectOnUseEventHandler,onMouseLeave:dijit._connectOnUseEventHandler,onMouseEnter:dijit._connectOnUseEventHandler,onMouseUp:dijit._connectOnUseEventHandler,_blankGif:(dojo.config.blankGif||dojo.moduleUrl("dojo","resources/blank.gif")),postscript:function(_366,_367){
this.create(_366,_367);
},create:function(_368,_369){
this.srcNodeRef=dojo.byId(_369);
this._connects=[];
this._deferredConnects=dojo.clone(this._deferredConnects);
for(var attr in this.attributeMap){
delete this._deferredConnects[attr];
}
for(attr in this._deferredConnects){
if(this[attr]!==dijit._connectOnUseEventHandler){
delete this._deferredConnects[attr];
}
}
if(this.srcNodeRef&&(typeof this.srcNodeRef.id=="string")){
this.id=this.srcNodeRef.id;
}
if(_368){
this.params=_368;
dojo.mixin(this,_368);
}
this.postMixInProperties();
if(!this.id){
this.id=dijit.getUniqueId(this.declaredClass.replace(/\./g,"_"));
}
dijit.registry.add(this);
this.buildRendering();
if(this.domNode){
this._applyAttributes();
for(attr in this.params){
this._onConnect(attr);
}
}
if(this.domNode){
this.domNode.setAttribute("widgetId",this.id);
}
this.postCreate();
if(this.srcNodeRef&&!this.srcNodeRef.parentNode){
delete this.srcNodeRef;
}
this._created=true;
},_applyAttributes:function(){
var _36b=function(attr,_36d){
if((_36d.params&&attr in _36d.params)||_36d[attr]){
_36d.attr(attr,_36d[attr]);
}
};
for(var attr in this.attributeMap){
_36b(attr,this);
}
dojo.forEach(_360(this.declaredClass),function(a){
if(!(a in this.attributeMap)){
_36b(a,this);
}
},this);
},postMixInProperties:function(){
},buildRendering:function(){
this.domNode=this.srcNodeRef||dojo.doc.createElement("div");
},postCreate:function(){
},startup:function(){
this._started=true;
},destroyRecursive:function(_370){
this.destroyDescendants(_370);
this.destroy(_370);
},destroy:function(_371){
this.uninitialize();
dojo.forEach(this._connects,function(_372){
dojo.forEach(_372,dojo.disconnect);
});
dojo.forEach(this._supportingWidgets||[],function(w){
if(w.destroy){
w.destroy();
}
});
this.destroyRendering(_371);
dijit.registry.remove(this.id);
},destroyRendering:function(_374){
if(this.bgIframe){
this.bgIframe.destroy(_374);
delete this.bgIframe;
}
if(this.domNode){
if(!_374){
dojo._destroyElement(this.domNode);
}
delete this.domNode;
}
if(this.srcNodeRef){
if(!_374){
dojo._destroyElement(this.srcNodeRef);
}
delete this.srcNodeRef;
}
},destroyDescendants:function(_375){
dojo.forEach(this.getDescendants(),function(_376){
if(_376.destroy){
_376.destroy(_375);
}
});
},uninitialize:function(){
return false;
},onFocus:function(){
},onBlur:function(){
},_onFocus:function(e){
this.onFocus();
},_onBlur:function(){
this.onBlur();
},_onConnect:function(_378){
if(_378 in this._deferredConnects){
var _379=this[this._deferredConnects[_378]||"domNode"];
this.connect(_379,_378.toLowerCase(),this[_378]);
delete this._deferredConnects[_378];
}
},_setClassAttr:function(_37a){
var _37b=this[this.attributeMap["class"]||"domNode"];
dojo.removeClass(_37b,this["class"]);
this["class"]=_37a;
dojo.addClass(_37b,_37a);
},_setStyleAttr:function(_37c){
var _37d=this[this.attributeMap["style"]||"domNode"];
if(_37d.style.cssText){
_37d.style.cssText+="; "+_37c;
}else{
_37d.style.cssText=_37c;
}
this["style"]=_37c;
},setAttribute:function(attr,_37f){
dojo.deprecated(this.declaredClass+"::setAttribute() is deprecated. Use attr() instead.","","2.0");
this.attr(attr,_37f);
},_attrToDom:function(attr,_381){
var _382=this.attributeMap[attr];
dojo.forEach(dojo.isArray(_382)?_382:[_382],function(_383){
var _384=this[_383.node||_383||"domNode"];
var type=_383.type||"attribute";
switch(type){
case "attribute":
if(dojo.isFunction(_381)){
_381=dojo.hitch(this,_381);
}
if(/^on[A-Z][a-zA-Z]*$/.test(attr)){
attr=attr.toLowerCase();
}
dojo.attr(_384,attr,_381);
break;
case "innerHTML":
_384.innerHTML=_381;
break;
case "class":
dojo.removeClass(_384,this[attr]);
dojo.addClass(_384,_381);
break;
}
},this);
this[attr]=_381;
},attr:function(name,_387){
var args=arguments.length;
if(args==1&&!dojo.isString(name)){
for(var x in name){
this.attr(x,name[x]);
}
return this;
}
var _38a=this._getAttrNames(name);
if(args==2){
if(this[_38a.s]){
return this[_38a.s](_387)||this;
}else{
if(name in this.attributeMap){
this._attrToDom(name,_387);
}
this[name]=_387;
}
return this;
}else{
if(this[_38a.g]){
return this[_38a.g]();
}else{
return this[name];
}
}
},_attrPairNames:{},_getAttrNames:function(name){
var apn=this._attrPairNames;
if(apn[name]){
return apn[name];
}
var uc=name.charAt(0).toUpperCase()+name.substr(1);
return apn[name]={n:name+"Node",s:"_set"+uc+"Attr",g:"_get"+uc+"Attr"};
},toString:function(){
return "[Widget "+this.declaredClass+", "+(this.id||"NO ID")+"]";
},getDescendants:function(){
if(this.containerNode){
var list=dojo.query("[widgetId]",this.containerNode);
return list.map(dijit.byNode);
}else{
return [];
}
},nodesWithKeyClick:["input","button"],connect:function(obj,_390,_391){
var d=dojo;
var dco=d.hitch(d,"connect",obj);
var _394=[];
if(_390=="ondijitclick"){
if(!this.nodesWithKeyClick[obj.nodeName]){
var m=d.hitch(this,_391);
_394.push(dco("onkeydown",this,function(e){
if(!d.isFF&&e.keyCode==d.keys.ENTER){
return m(e);
}else{
if(e.keyCode==d.keys.SPACE){
d.stopEvent(e);
}
}
}),dco("onkeyup",this,function(e){
if(e.keyCode==d.keys.SPACE){
return m(e);
}
}));
if(d.isFF){
_394.push(dco("onkeypress",this,function(e){
if(e.keyCode==d.keys.ENTER){
return m(e);
}
}));
}
}
_390="onclick";
}
_394.push(dco(_390,this,_391));
this._connects.push(_394);
return _394;
},disconnect:function(_399){
for(var i=0;i<this._connects.length;i++){
if(this._connects[i]==_399){
dojo.forEach(_399,dojo.disconnect);
this._connects.splice(i,1);
return;
}
}
},isLeftToRight:function(){
return dojo._isBodyLtr();
},isFocusable:function(){
return this.focus&&(dojo.style(this.domNode,"display")!="none");
},placeAt:function(_39b,_39c){
if(_39b["declaredClass"]&&_39b["addChild"]){
_39b.addChild(this,_39c);
}else{
dojo.place(this.domNode,_39b,_39c);
}
return this;
}});
})();
}
if(!dojo._hasResource["dojo.date.stamp"]){
dojo._hasResource["dojo.date.stamp"]=true;
dojo.provide("dojo.date.stamp");
dojo.date.stamp.fromISOString=function(_39d,_39e){
if(!dojo.date.stamp._isoRegExp){
dojo.date.stamp._isoRegExp=/^(?:(\d{4})(?:-(\d{2})(?:-(\d{2}))?)?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(.\d+)?)?((?:[+-](\d{2}):(\d{2}))|Z)?)?$/;
}
var _39f=dojo.date.stamp._isoRegExp.exec(_39d);
var _3a0=null;
if(_39f){
_39f.shift();
if(_39f[1]){
_39f[1]--;
}
if(_39f[6]){
_39f[6]*=1000;
}
if(_39e){
_39e=new Date(_39e);
dojo.map(["FullYear","Month","Date","Hours","Minutes","Seconds","Milliseconds"],function(prop){
return _39e["get"+prop]();
}).forEach(function(_3a2,_3a3){
if(_39f[_3a3]===undefined){
_39f[_3a3]=_3a2;
}
});
}
_3a0=new Date(_39f[0]||1970,_39f[1]||0,_39f[2]||1,_39f[3]||0,_39f[4]||0,_39f[5]||0,_39f[6]||0);
var _3a4=0;
var _3a5=_39f[7]&&_39f[7].charAt(0);
if(_3a5!="Z"){
_3a4=((_39f[8]||0)*60)+(Number(_39f[9])||0);
if(_3a5!="-"){
_3a4*=-1;
}
}
if(_3a5){
_3a4-=_3a0.getTimezoneOffset();
}
if(_3a4){
_3a0.setTime(_3a0.getTime()+_3a4*60000);
}
}
return _3a0;
};
dojo.date.stamp.toISOString=function(_3a6,_3a7){
var _=function(n){
return (n<10)?"0"+n:n;
};
_3a7=_3a7||{};
var _3aa=[];
var _3ab=_3a7.zulu?"getUTC":"get";
var date="";
if(_3a7.selector!="time"){
var year=_3a6[_3ab+"FullYear"]();
date=["0000".substr((year+"").length)+year,_(_3a6[_3ab+"Month"]()+1),_(_3a6[_3ab+"Date"]())].join("-");
}
_3aa.push(date);
if(_3a7.selector!="date"){
var time=[_(_3a6[_3ab+"Hours"]()),_(_3a6[_3ab+"Minutes"]()),_(_3a6[_3ab+"Seconds"]())].join(":");
var _3af=_3a6[_3ab+"Milliseconds"]();
if(_3a7.milliseconds){
time+="."+(_3af<100?"0":"")+_(_3af);
}
if(_3a7.zulu){
time+="Z";
}else{
if(_3a7.selector!="time"){
var _3b0=_3a6.getTimezoneOffset();
var _3b1=Math.abs(_3b0);
time+=(_3b0>0?"-":"+")+_(Math.floor(_3b1/60))+":"+_(_3b1%60);
}
}
_3aa.push(time);
}
return _3aa.join("T");
};
}
if(!dojo._hasResource["dojo.parser"]){
dojo._hasResource["dojo.parser"]=true;
dojo.provide("dojo.parser");
dojo.parser=new function(){
var d=dojo;
var _3b3=d._scopeName+"Type";
var qry="["+_3b3+"]";
function val2type(_3b5){
if(d.isString(_3b5)){
return "string";
}
if(typeof _3b5=="number"){
return "number";
}
if(typeof _3b5=="boolean"){
return "boolean";
}
if(d.isFunction(_3b5)){
return "function";
}
if(d.isArray(_3b5)){
return "array";
}
if(_3b5 instanceof Date){
return "date";
}
if(_3b5 instanceof d._Url){
return "url";
}
return "object";
};
function str2obj(_3b6,type){
switch(type){
case "string":
return _3b6;
case "number":
return _3b6.length?Number(_3b6):NaN;
case "boolean":
return typeof _3b6=="boolean"?_3b6:!(_3b6.toLowerCase()=="false");
case "function":
if(d.isFunction(_3b6)){
_3b6=_3b6.toString();
_3b6=d.trim(_3b6.substring(_3b6.indexOf("{")+1,_3b6.length-1));
}
try{
if(_3b6.search(/[^\w\.]+/i)!=-1){
_3b6=d.parser._nameAnonFunc(new Function(_3b6),this);
}
return d.getObject(_3b6,false);
}
catch(e){
return new Function();
}
case "array":
return _3b6?_3b6.split(/\s*,\s*/):[];
case "date":
switch(_3b6){
case "":
return new Date("");
case "now":
return new Date();
default:
return d.date.stamp.fromISOString(_3b6);
}
case "url":
return d.baseUrl+_3b6;
default:
return d.fromJson(_3b6);
}
};
var _3b8={};
function getClassInfo(_3b9){
if(!_3b8[_3b9]){
var cls=d.getObject(_3b9);
if(!d.isFunction(cls)){
throw new Error("Could not load class '"+_3b9+"'. Did you spell the name correctly and use a full path, like 'dijit.form.Button'?");
}
var _3bb=cls.prototype;
var _3bc={};
for(var name in _3bb){
if(name.charAt(0)=="_"){
continue;
}
var _3be=_3bb[name];
_3bc[name]=val2type(_3be);
}
_3b8[_3b9]={cls:cls,params:_3bc};
}
return _3b8[_3b9];
};
this._functionFromScript=function(_3bf){
var _3c0="";
var _3c1="";
var _3c2=_3bf.getAttribute("args");
if(_3c2){
d.forEach(_3c2.split(/\s*,\s*/),function(part,idx){
_3c0+="var "+part+" = arguments["+idx+"]; ";
});
}
var _3c5=_3bf.getAttribute("with");
if(_3c5&&_3c5.length){
d.forEach(_3c5.split(/\s*,\s*/),function(part){
_3c0+="with("+part+"){";
_3c1+="}";
});
}
return new Function(_3c0+_3bf.innerHTML+_3c1);
};
this.instantiate=function(_3c7){
var _3c8=[];
d.forEach(_3c7,function(node){
if(!node){
return;
}
var type=node.getAttribute(_3b3);
if((!type)||(!type.length)){
return;
}
var _3cb=getClassInfo(type);
var _3cc=_3cb.cls;
var ps=_3cc._noScript||_3cc.prototype._noScript;
var _3ce={};
var _3cf=node.attributes;
for(var name in _3cb.params){
var item=_3cf.getNamedItem(name);
if(!item||(!item.specified&&(!dojo.isIE||name.toLowerCase()!="value"))){
continue;
}
var _3d2=item.value;
switch(name){
case "class":
_3d2=node.className;
break;
case "style":
_3d2=node.style&&node.style.cssText;
}
var _3d3=_3cb.params[name];
_3ce[name]=str2obj(_3d2,_3d3);
}
if(!ps){
var _3d4=[],_3d5=[];
d.query("> script[type^='dojo/']",node).orphan().forEach(function(_3d6){
var _3d7=_3d6.getAttribute("event"),type=_3d6.getAttribute("type"),nf=d.parser._functionFromScript(_3d6);
if(_3d7){
if(type=="dojo/connect"){
_3d4.push({event:_3d7,func:nf});
}else{
_3ce[_3d7]=nf;
}
}else{
_3d5.push(nf);
}
});
}
var _3d9=_3cc["markupFactory"];
if(!_3d9&&_3cc["prototype"]){
_3d9=_3cc.prototype["markupFactory"];
}
var _3da=_3d9?_3d9(_3ce,node,_3cc):new _3cc(_3ce,node);
_3c8.push(_3da);
var _3db=node.getAttribute("jsId");
if(_3db){
d.setObject(_3db,_3da);
}
if(!ps){
d.forEach(_3d4,function(_3dc){
d.connect(_3da,_3dc.event,null,_3dc.func);
});
d.forEach(_3d5,function(func){
func.call(_3da);
});
}
});
d.forEach(_3c8,function(_3de){
if(_3de&&_3de.startup&&!_3de._started&&(!_3de.getParent||!_3de.getParent())){
_3de.startup();
}
});
return _3c8;
};
this.parse=function(_3df){
var list=d.query(qry,_3df);
var _3e1=this.instantiate(list);
return _3e1;
};
}();
(function(){
var _3e2=function(){
if(dojo.config["parseOnLoad"]==true){
dojo.parser.parse();
}
};
if(dojo.exists("dijit.wai.onload")&&(dijit.wai.onload===dojo._loaders[0])){
dojo._loaders.splice(1,0,_3e2);
}else{
dojo._loaders.unshift(_3e2);
}
})();
dojo.parser._anonCtr=0;
dojo.parser._anon={};
dojo.parser._nameAnonFunc=function(_3e3,_3e4){
var jpn="$joinpoint";
var nso=(_3e4||dojo.parser._anon);
if(dojo.isIE){
var cn=_3e3["__dojoNameCache"];
if(cn&&nso[cn]===_3e3){
return _3e3["__dojoNameCache"];
}
}
var ret="__"+dojo.parser._anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.parser._anonCtr++;
}
nso[ret]=_3e3;
return ret;
};
}
if(!dojo._hasResource["dijit._Templated"]){
dojo._hasResource["dijit._Templated"]=true;
dojo.provide("dijit._Templated");
dojo.declare("dijit._Templated",null,{templateNode:null,templateString:null,templatePath:null,widgetsInTemplate:false,_skipNodeCache:false,_stringRepl:function(tmpl){
var _3ea=this.declaredClass,_3eb=this;
return dojo.string.substitute(tmpl,this,function(_3ec,key){
if(key.charAt(0)=="!"){
_3ec=_3eb[key.substr(1)];
}
if(typeof _3ec=="undefined"){
throw new Error(_3ea+" template:"+key);
}
if(_3ec==null){
return "";
}
return key.charAt(0)=="!"?_3ec:_3ec.toString().replace(/"/g,"&quot;");
},this);
},buildRendering:function(){
var _3ee=dijit._Templated.getCachedTemplate(this.templatePath,this.templateString,this._skipNodeCache);
var node;
if(dojo.isString(_3ee)){
node=dijit._Templated._createNodesFromText(this._stringRepl(_3ee))[0];
}else{
node=_3ee.cloneNode(true);
}
this.domNode=node;
this._attachTemplateNodes(node);
var _3f0=this.srcNodeRef;
if(_3f0&&_3f0.parentNode){
_3f0.parentNode.replaceChild(node,_3f0);
}
if(this.widgetsInTemplate){
var cw=(this._supportingWidgets=dojo.parser.parse(node));
this._attachTemplateNodes(cw,function(n,p){
return n[p];
});
}
this._fillContent(_3f0);
},_fillContent:function(_3f4){
var dest=this.containerNode;
if(_3f4&&dest){
while(_3f4.hasChildNodes()){
dest.appendChild(_3f4.firstChild);
}
}
},_attachTemplateNodes:function(_3f6,_3f7){
_3f7=_3f7||function(n,p){
return n.getAttribute(p);
};
var _3fa=dojo.isArray(_3f6)?_3f6:(_3f6.all||_3f6.getElementsByTagName("*"));
var x=dojo.isArray(_3f6)?0:-1;
var _3fc={};
for(;x<_3fa.length;x++){
var _3fd=(x==-1)?_3f6:_3fa[x];
if(this.widgetsInTemplate&&_3f7(_3fd,"dojoType")){
continue;
}
var _3fe=_3f7(_3fd,"dojoAttachPoint");
if(_3fe){
var _3ff,_400=_3fe.split(/\s*,\s*/);
while((_3ff=_400.shift())){
if(dojo.isArray(this[_3ff])){
this[_3ff].push(_3fd);
}else{
this[_3ff]=_3fd;
}
}
}
var _401=_3f7(_3fd,"dojoAttachEvent");
if(_401){
var _402,_403=_401.split(/\s*,\s*/);
var trim=dojo.trim;
while((_402=_403.shift())){
if(_402){
var _405=null;
if(_402.indexOf(":")!=-1){
var _406=_402.split(":");
_402=trim(_406[0]);
_405=trim(_406[1]);
}else{
_402=trim(_402);
}
if(!_405){
_405=_402;
}
this.connect(_3fd,_402,_405);
}
}
}
var role=_3f7(_3fd,"waiRole");
if(role){
dijit.setWaiRole(_3fd,role);
}
var _408=_3f7(_3fd,"waiState");
if(_408){
dojo.forEach(_408.split(/\s*,\s*/),function(_409){
if(_409.indexOf("-")!=-1){
var pair=_409.split("-");
dijit.setWaiState(_3fd,pair[0],pair[1]);
}
});
}
}
}});
dijit._Templated._templateCache={};
dijit._Templated.getCachedTemplate=function(_40b,_40c,_40d){
var _40e=dijit._Templated._templateCache;
var key=_40c||_40b;
var _410=_40e[key];
if(_410){
if(!_410.ownerDocument||_410.ownerDocument==dojo.doc){
return _410;
}
dojo._destroyElement(_410);
}
if(!_40c){
_40c=dijit._Templated._sanitizeTemplateString(dojo._getText(_40b));
}
_40c=dojo.string.trim(_40c);
if(_40d||_40c.match(/\$\{([^\}]+)\}/g)){
return (_40e[key]=_40c);
}else{
return (_40e[key]=dijit._Templated._createNodesFromText(_40c)[0]);
}
};
dijit._Templated._sanitizeTemplateString=function(_411){
if(_411){
_411=_411.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");
var _412=_411.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_412){
_411=_412[1];
}
}else{
_411="";
}
return _411;
};
if(dojo.isIE){
dojo.addOnWindowUnload(function(){
var _413=dijit._Templated._templateCache;
for(var key in _413){
var _415=_413[key];
if(!isNaN(_415.nodeType)){
dojo._destroyElement(_415);
}
delete _413[key];
}
});
}
(function(){
var _416={cell:{re:/^<t[dh][\s\r\n>]/i,pre:"<table><tbody><tr>",post:"</tr></tbody></table>"},row:{re:/^<tr[\s\r\n>]/i,pre:"<table><tbody>",post:"</tbody></table>"},section:{re:/^<(thead|tbody|tfoot)[\s\r\n>]/i,pre:"<table>",post:"</table>"}};
var tn;
dijit._Templated._createNodesFromText=function(text){
if(tn&&tn.ownerDocument!=dojo.doc){
dojo._destroyElement(tn);
tn=undefined;
}
if(!tn){
tn=dojo.doc.createElement("div");
tn.style.display="none";
dojo.body().appendChild(tn);
}
var _419="none";
var _41a=text.replace(/^\s+/,"");
for(var type in _416){
var map=_416[type];
if(map.re.test(_41a)){
_419=type;
text=map.pre+text+map.post;
break;
}
}
tn.innerHTML=text;
if(tn.normalize){
tn.normalize();
}
var tag={cell:"tr",row:"tbody",section:"table"}[_419];
var _41e=(typeof tag!="undefined")?tn.getElementsByTagName(tag)[0]:tn;
var _41f=[];
while(_41e.firstChild){
_41f.push(_41e.removeChild(_41e.firstChild));
}
tn.innerHTML="";
return _41f;
};
})();
dojo.extend(dijit._Widget,{dojoAttachEvent:"",dojoAttachPoint:"",waiRole:"",waiState:""});
}
if(!dojo._hasResource["dijit._Container"]){
dojo._hasResource["dijit._Container"]=true;
dojo.provide("dijit._Container");
dojo.declare("dijit._Contained",null,{getParent:function(){
for(var p=this.domNode.parentNode;p;p=p.parentNode){
var id=p.getAttribute&&p.getAttribute("widgetId");
if(id){
var _422=dijit.byId(id);
return _422.isContainer?_422:null;
}
}
return null;
},_getSibling:function(_423){
var node=this.domNode;
do{
node=node[_423+"Sibling"];
}while(node&&node.nodeType!=1);
if(!node){
return null;
}
var id=node.getAttribute("widgetId");
return dijit.byId(id);
},getPreviousSibling:function(){
return this._getSibling("previous");
},getNextSibling:function(){
return this._getSibling("next");
},getIndexInParent:function(){
var p=this.getParent();
if(!p||!p.getIndexOfChild){
return -1;
}
return p.getIndexOfChild(this);
}});
dojo.declare("dijit._Container",null,{isContainer:true,buildRendering:function(){
this.inherited(arguments);
if(!this.containerNode){
this.containerNode=this.domNode;
}
},addChild:function(_427,_428){
var _429=this.containerNode;
if(_428&&typeof _428=="number"){
var _42a=dojo.query("> [widgetId]",_429);
if(_42a&&_42a.length>=_428){
_429=_42a[_428-1];
_428="after";
}
}
dojo.place(_427.domNode,_429,_428);
if(this._started&&!_427._started){
_427.startup();
}
},removeChild:function(_42b){
if(typeof _42b=="number"&&_42b>0){
_42b=this.getChildren()[_42b];
}
if(!_42b||!_42b.domNode){
return;
}
var node=_42b.domNode;
node.parentNode.removeChild(node);
},_nextElement:function(node){
do{
node=node.nextSibling;
}while(node&&node.nodeType!=1);
return node;
},_firstElement:function(node){
node=node.firstChild;
if(node&&node.nodeType!=1){
node=this._nextElement(node);
}
return node;
},getChildren:function(){
return dojo.query("> [widgetId]",this.containerNode).map(dijit.byNode);
},hasChildren:function(){
return !!this._firstElement(this.containerNode);
},destroyDescendants:function(_42f){
dojo.forEach(this.getChildren(),function(_430){
_430.destroyRecursive(_42f);
});
},_getSiblingOfChild:function(_431,dir){
var node=_431.domNode;
var _434=(dir>0?"nextSibling":"previousSibling");
do{
node=node[_434];
}while(node&&(node.nodeType!=1||!dijit.byNode(node)));
return node?dijit.byNode(node):null;
},getIndexOfChild:function(_435){
var _436=this.getChildren();
for(var i=0,c;c=_436[i];i++){
if(c==_435){
return i;
}
}
return -1;
}});
dojo.declare("dijit._KeyNavContainer",[dijit._Container],{_keyNavCodes:{},connectKeyNavHandlers:function(_439,_43a){
var _43b=this._keyNavCodes={};
var prev=dojo.hitch(this,this.focusPrev);
var next=dojo.hitch(this,this.focusNext);
dojo.forEach(_439,function(code){
_43b[code]=prev;
});
dojo.forEach(_43a,function(code){
_43b[code]=next;
});
this.connect(this.domNode,"onkeypress","_onContainerKeypress");
this.connect(this.domNode,"onfocus","_onContainerFocus");
},startupKeyNavChildren:function(){
dojo.forEach(this.getChildren(),dojo.hitch(this,"_startupChild"));
},addChild:function(_440,_441){
dijit._KeyNavContainer.superclass.addChild.apply(this,arguments);
this._startupChild(_440);
},focus:function(){
this.focusFirstChild();
},focusFirstChild:function(){
this.focusChild(this._getFirstFocusableChild());
},focusNext:function(){
if(this.focusedChild&&this.focusedChild.hasNextFocalNode&&this.focusedChild.hasNextFocalNode()){
this.focusedChild.focusNext();
return;
}
var _442=this._getNextFocusableChild(this.focusedChild,1);
if(_442.getFocalNodes){
this.focusChild(_442,_442.getFocalNodes()[0]);
}else{
this.focusChild(_442);
}
},focusPrev:function(){
if(this.focusedChild&&this.focusedChild.hasPrevFocalNode&&this.focusedChild.hasPrevFocalNode()){
this.focusedChild.focusPrev();
return;
}
var _443=this._getNextFocusableChild(this.focusedChild,-1);
if(_443.getFocalNodes){
var _444=_443.getFocalNodes();
this.focusChild(_443,_444[_444.length-1]);
}else{
this.focusChild(_443);
}
},focusChild:function(_445,node){
if(_445){
if(this.focusedChild&&_445!==this.focusedChild){
this._onChildBlur(this.focusedChild);
}
this.focusedChild=_445;
if(node&&_445.focusFocalNode){
_445.focusFocalNode(node);
}else{
_445.focus();
}
}
},_startupChild:function(_447){
if(_447.getFocalNodes){
dojo.forEach(_447.getFocalNodes(),function(node){
dojo.attr(node,"tabindex",-1);
this._connectNode(node);
},this);
}else{
var node=_447.focusNode||_447.domNode;
if(_447.isFocusable()){
dojo.attr(node,"tabindex",-1);
}
this._connectNode(node);
}
},_connectNode:function(node){
this.connect(node,"onfocus","_onNodeFocus");
this.connect(node,"onblur","_onNodeBlur");
},_onContainerFocus:function(evt){
if(evt.target===this.domNode){
this.focusFirstChild();
}
},_onContainerKeypress:function(evt){
if(evt.ctrlKey||evt.altKey){
return;
}
var func=this._keyNavCodes[evt.charOrCode];
if(func){
func();
dojo.stopEvent(evt);
}
},_onNodeFocus:function(evt){
dojo.attr(this.domNode,"tabindex",-1);
var _44f=dijit.getEnclosingWidget(evt.target);
if(_44f&&_44f.isFocusable()){
this.focusedChild=_44f;
}
dojo.stopEvent(evt);
},_onNodeBlur:function(evt){
if(this.tabIndex){
dojo.attr(this.domNode,"tabindex",this.tabIndex);
}
dojo.stopEvent(evt);
},_onChildBlur:function(_451){
},_getFirstFocusableChild:function(){
return this._getNextFocusableChild(null,1);
},_getNextFocusableChild:function(_452,dir){
if(_452){
_452=this._getSiblingOfChild(_452,dir);
}
var _454=this.getChildren();
for(var i=0;i<_454.length;i++){
if(!_452){
_452=_454[(dir>0)?0:(_454.length-1)];
}
if(_452.isFocusable()){
return _452;
}
_452=this._getSiblingOfChild(_452,dir);
}
return null;
}});
}
if(!dojo._hasResource["dijit.layout._LayoutWidget"]){
dojo._hasResource["dijit.layout._LayoutWidget"]=true;
dojo.provide("dijit.layout._LayoutWidget");
dojo.declare("dijit.layout._LayoutWidget",[dijit._Widget,dijit._Container,dijit._Contained],{baseClass:"dijitLayoutContainer",isLayoutContainer:true,postCreate:function(){
dojo.addClass(this.domNode,"dijitContainer");
dojo.addClass(this.domNode,this.baseClass);
},startup:function(){
if(this._started){
return;
}
dojo.forEach(this.getChildren(),function(_456){
_456.startup();
});
if(!this.getParent||!this.getParent()){
this.resize();
this.connect(dojo.global,"onresize","resize");
}
this.inherited(arguments);
},resize:function(_457,_458){
var node=this.domNode;
if(_457){
dojo.marginBox(node,_457);
if(_457.t){
node.style.top=_457.t+"px";
}
if(_457.l){
node.style.left=_457.l+"px";
}
}
var mb=_458||{};
dojo.mixin(mb,_457||{});
if(!("h" in mb)||!("w" in mb)){
mb=dojo.mixin(dojo.marginBox(node),mb);
}
var cs=dojo.getComputedStyle(node);
var me=dojo._getMarginExtents(node,cs);
var be=dojo._getBorderExtents(node,cs);
var bb=this._borderBox={w:mb.w-(me.w+be.w),h:mb.h-(me.h+be.h)};
var pe=dojo._getPadExtents(node,cs);
this._contentBox={l:dojo._toPixelValue(node,cs.paddingLeft),t:dojo._toPixelValue(node,cs.paddingTop),w:bb.w-pe.w,h:bb.h-pe.h};
this.layout();
},layout:function(){
},_setupChild:function(_460){
if(_460.baseClass){
dojo.addClass(_460.domNode,this.baseClass+"-"+_460.baseClass);
}
},addChild:function(_461,_462){
this.inherited(arguments);
if(this._started){
this._setupChild(_461);
}
},removeChild:function(_463){
if(_463.baseClass){
dojo.removeClass(_463.domNode,this.baseClass+"-"+_463.baseClass);
}
this.inherited(arguments);
}});
dijit.layout.marginBox2contentBox=function(node,mb){
var cs=dojo.getComputedStyle(node);
var me=dojo._getMarginExtents(node,cs);
var pb=dojo._getPadBorderExtents(node,cs);
return {l:dojo._toPixelValue(node,cs.paddingLeft),t:dojo._toPixelValue(node,cs.paddingTop),w:mb.w-(me.w+pb.w),h:mb.h-(me.h+pb.h)};
};
(function(){
var _469=function(word){
return word.substring(0,1).toUpperCase()+word.substring(1);
};
var size=function(_46c,dim){
_46c.resize?_46c.resize(dim):dojo.marginBox(_46c.domNode,dim);
dojo.mixin(_46c,dojo.marginBox(_46c.domNode));
dojo.mixin(_46c,dim);
};
dijit.layout.layoutChildren=function(_46e,dim,_470){
dim=dojo.mixin({},dim);
dojo.addClass(_46e,"dijitLayoutContainer");
_470=dojo.filter(_470,function(item){
return item.layoutAlign!="client";
}).concat(dojo.filter(_470,function(item){
return item.layoutAlign=="client";
}));
dojo.forEach(_470,function(_473){
var elm=_473.domNode,pos=_473.layoutAlign;
var _476=elm.style;
_476.left=dim.l+"px";
_476.top=dim.t+"px";
_476.bottom=_476.right="auto";
dojo.addClass(elm,"dijitAlign"+_469(pos));
if(pos=="top"||pos=="bottom"){
size(_473,{w:dim.w});
dim.h-=_473.h;
if(pos=="top"){
dim.t+=_473.h;
}else{
_476.top=dim.t+dim.h+"px";
}
}else{
if(pos=="left"||pos=="right"){
size(_473,{h:dim.h});
dim.w-=_473.w;
if(pos=="left"){
dim.l+=_473.w;
}else{
_476.left=dim.l+dim.w+"px";
}
}else{
if(pos=="client"){
size(_473,dim);
}
}
}
});
};
})();
}
if(!dojo._hasResource["dojo.html"]){
dojo._hasResource["dojo.html"]=true;
dojo.provide("dojo.html");
(function(){
var _477=0;
dojo.html._secureForInnerHtml=function(cont){
return cont.replace(/(?:\s*<!DOCTYPE\s[^>]+>|<title[^>]*>[\s\S]*?<\/title>)/ig,"");
};
dojo.html._emptyNode=function(node){
while(node.firstChild){
dojo._destroyElement(node.firstChild);
}
};
dojo.html._setNodeContent=function(node,cont,_47c){
if(_47c){
dojo.html._emptyNode(node);
}
if(typeof cont=="string"){
var pre="",post="",walk=0,name=node.nodeName.toLowerCase();
switch(name){
case "tr":
pre="<tr>";
post="</tr>";
walk+=1;
case "tbody":
case "thead":
pre="<tbody>"+pre;
post+="</tbody>";
walk+=1;
case "table":
pre="<table>"+pre;
post+="</table>";
walk+=1;
break;
}
if(walk){
var n=node.ownerDocument.createElement("div");
n.innerHTML=pre+cont+post;
do{
n=n.firstChild;
}while(--walk);
dojo.forEach(n.childNodes,function(n){
node.appendChild(n.cloneNode(true));
});
}else{
node.innerHTML=cont;
}
}else{
if(cont.nodeType){
node.appendChild(cont);
}else{
dojo.forEach(cont,function(n){
node.appendChild(n.cloneNode(true));
});
}
}
return node;
};
dojo.declare("dojo.html._ContentSetter",null,{node:"",content:"",id:"",cleanContent:false,extractContent:false,parseContent:false,constructor:function(_484,node){
dojo.mixin(this,_484||{});
node=this.node=dojo.byId(this.node||node);
if(!this.id){
this.id=["Setter",(node)?node.id||node.tagName:"",_477++].join("_");
}
if(!(this.node||node)){
new Error(this.declaredClass+": no node provided to "+this.id);
}
},set:function(cont,_487){
if(undefined!==cont){
this.content=cont;
}
if(_487){
this._mixin(_487);
}
this.onBegin();
this.setContent();
this.onEnd();
return this.node;
},setContent:function(){
var node=this.node;
if(!node){
console.error("setContent given no node");
}
try{
node=dojo.html._setNodeContent(node,this.content);
}
catch(e){
var _489=this.onContentError(e);
try{
node.innerHTML=_489;
}
catch(e){
console.error("Fatal "+this.declaredClass+".setContent could not change content due to "+e.message,e);
}
}
this.node=node;
},empty:function(){
if(this.parseResults&&this.parseResults.length){
dojo.forEach(this.parseResults,function(w){
if(w.destroy){
w.destroy();
}
});
delete this.parseResults;
}
dojo.html._emptyNode(this.node);
},onBegin:function(){
var cont=this.content;
if(dojo.isString(cont)){
if(this.cleanContent){
cont=dojo.html._secureForInnerHtml(cont);
}
if(this.extractContent){
var _48c=cont.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_48c){
cont=_48c[1];
}
}
}
this.empty();
this.content=cont;
return this.node;
},onEnd:function(){
if(this.parseContent){
this._parse();
}
return this.node;
},tearDown:function(){
delete this.parseResults;
delete this.node;
delete this.content;
},onContentError:function(err){
return "Error occured setting content: "+err;
},_mixin:function(_48e){
var _48f={},key;
for(key in _48e){
if(key in _48f){
continue;
}
this[key]=_48e[key];
}
},_parse:function(){
var _491=this.node;
try{
this.parseResults=dojo.parser.parse(_491,true);
}
catch(e){
this._onError("Content",e,"Error parsing in _ContentSetter#"+this.id);
}
},_onError:function(type,err,_494){
var _495=this["on"+type+"Error"].call(this,err);
if(_494){
console.error(_494,err);
}else{
if(_495){
dojo.html._setNodeContent(this.node,_495,true);
}
}
}});
dojo.html.set=function(node,cont,_498){
if(undefined==cont){
console.warn("dojo.html.set: no cont argument provided, using empty string");
cont="";
}
if(!_498){
return dojo.html._setNodeContent(node,cont,true);
}else{
var op=new dojo.html._ContentSetter(dojo.mixin(_498,{content:cont,node:node}));
return op.set();
}
};
})();
}
if(!dojo._hasResource["dijit.layout.ContentPane"]){
dojo._hasResource["dijit.layout.ContentPane"]=true;
dojo.provide("dijit.layout.ContentPane");
dojo.declare("dijit.layout.ContentPane",dijit._Widget,{href:"",extractContent:false,parseOnLoad:true,preventCache:false,preload:false,refreshOnShow:false,loadingMessage:"<span class='dijitContentPaneLoading'>${loadingState}</span>",errorMessage:"<span class='dijitContentPaneError'>${errorState}</span>",isLoaded:false,baseClass:"dijitContentPane",doLayout:true,_isRealContent:true,postMixInProperties:function(){
this.inherited(arguments);
var _49a=dojo.i18n.getLocalization("dijit","loading",this.lang);
this.loadingMessage=dojo.string.substitute(this.loadingMessage,_49a);
this.errorMessage=dojo.string.substitute(this.errorMessage,_49a);
},buildRendering:function(){
this.inherited(arguments);
if(!this.containerNode){
this.containerNode=this.domNode;
}
},postCreate:function(){
this.domNode.title="";
if(!dijit.hasWaiRole(this.domNode)){
dijit.setWaiRole(this.domNode,"group");
}
dojo.addClass(this.domNode,this.baseClass);
},startup:function(){
if(this._started){
return;
}
if(this.doLayout!="false"&&this.doLayout!==false){
this._checkIfSingleChild();
if(this._singleChild){
this._singleChild.startup();
}
}
this._loadCheck();
this.inherited(arguments);
},_checkIfSingleChild:function(){
var _49b=dojo.query(">",this.containerNode),_49c=_49b.filter(function(node){
return dojo.hasAttr(node,"dojoType")||dojo.hasAttr(node,"widgetId");
}),_49e=dojo.filter(_49c.map(dijit.byNode),function(_49f){
return _49f&&_49f.domNode&&_49f.resize;
});
if(_49b.length==_49c.length&&_49e.length==1){
this.isContainer=true;
this._singleChild=_49e[0];
}else{
delete this.isContainer;
delete this._singleChild;
}
},refresh:function(){
return this._prepareLoad(true);
},setHref:function(href){
dojo.deprecated("dijit.layout.ContentPane.setHref() is deprecated.\tUse attr('href', ...) instead.","","2.0");
return this.attr("href",href);
},_setHrefAttr:function(href){
this.href=href;
if(this._created){
return this._prepareLoad();
}
},setContent:function(data){
dojo.deprecated("dijit.layout.ContentPane.setContent() is deprecated.  Use attr('content', ...) instead.","","2.0");
this.attr("content",data);
},_setContentAttr:function(data){
this.href="";
this.cancel();
this._setContent(data||"");
this._isDownloaded=false;
if(this.doLayout!="false"&&this.doLayout!==false){
this._checkIfSingleChild();
if(this._singleChild&&this._singleChild.resize){
this._singleChild.startup();
var cb=this._contentBox||dojo.contentBox(this.containerNode);
this._singleChild.resize({w:cb.w,h:cb.h});
}
}
},_getContentAttr:function(){
return this.containerNode.innerHTML;
},cancel:function(){
if(this._xhrDfd&&(this._xhrDfd.fired==-1)){
this._xhrDfd.cancel();
}
delete this._xhrDfd;
},destroyRecursive:function(_4a5){
if(this._beingDestroyed){
return;
}
this._beingDestroyed=true;
this.inherited(arguments);
},resize:function(size){
dojo.marginBox(this.domNode,size);
var node=this.containerNode,mb=dojo.mixin(dojo.marginBox(node),size||{});
var cb=this._contentBox=dijit.layout.marginBox2contentBox(node,mb);
if(this._singleChild&&this._singleChild.resize){
this._singleChild.resize({w:cb.w,h:cb.h});
}
},_prepareLoad:function(_4aa){
this.cancel();
this.isLoaded=false;
this._loadCheck(_4aa);
},_isShown:function(){
if("open" in this){
return this.open;
}else{
var node=this.domNode;
return (node.style.display!="none")&&(node.style.visibility!="hidden");
}
},_loadCheck:function(_4ac){
var _4ad=this._isShown();
if(this.href&&(_4ac||(this.preload&&!this.isLoaded&&!this._xhrDfd)||(this.refreshOnShow&&_4ad&&!this._xhrDfd)||(!this.isLoaded&&_4ad&&!this._xhrDfd))){
this._downloadExternalContent();
}
},_downloadExternalContent:function(){
this._setContent(this.onDownloadStart(),true);
var self=this;
var _4af={preventCache:(this.preventCache||this.refreshOnShow),url:this.href,handleAs:"text"};
if(dojo.isObject(this.ioArgs)){
dojo.mixin(_4af,this.ioArgs);
}
var hand=this._xhrDfd=(this.ioMethod||dojo.xhrGet)(_4af);
hand.addCallback(function(html){
try{
self._isDownloaded=true;
self._setContent(html,false);
self.onDownloadEnd();
}
catch(err){
self._onError("Content",err);
}
delete self._xhrDfd;
return html;
});
hand.addErrback(function(err){
if(!hand.cancelled){
self._onError("Download",err);
}
delete self._xhrDfd;
return err;
});
},_onLoadHandler:function(data){
this.isLoaded=true;
try{
this.onLoad(data);
}
catch(e){
console.error("Error "+this.widgetId+" running custom onLoad code");
}
},_onUnloadHandler:function(){
this.isLoaded=false;
try{
this.onUnload();
}
catch(e){
console.error("Error "+this.widgetId+" running custom onUnload code");
}
},destroyDescendants:function(){
if(this._isRealContent){
this._onUnloadHandler();
}
var _4b4=this._contentSetter;
if(_4b4){
_4b4.empty();
}else{
this.inherited(arguments);
dojo.html._emptyNode(this.containerNode);
}
},_setContent:function(cont,_4b6){
this.destroyDescendants();
this._isRealContent=!_4b6;
var _4b7=this._contentSetter;
if(!(_4b7&&_4b7 instanceof dojo.html._ContentSetter)){
_4b7=this._contentSetter=new dojo.html._ContentSetter({node:this.containerNode,_onError:dojo.hitch(this,this._onError),onContentError:dojo.hitch(this,function(e){
var _4b9=this.onContentError(e);
try{
this.containerNode.innerHTML=_4b9;
}
catch(e){
console.error("Fatal "+this.id+" could not change content due to "+e.message,e);
}
})});
}
var _4ba=dojo.mixin({cleanContent:this.cleanContent,extractContent:this.extractContent,parseContent:this.parseOnLoad},this._contentSetterParams||{});
dojo.mixin(_4b7,_4ba);
_4b7.set((dojo.isObject(cont)&&cont.domNode)?cont.domNode:cont);
delete this._contentSetterParams;
if(!_4b6){
this._onLoadHandler(cont);
}
},_onError:function(type,err,_4bd){
var _4be=this["on"+type+"Error"].call(this,err);
if(_4bd){
console.error(_4bd,err);
}else{
if(_4be){
this._setContent(_4be,true);
}
}
},_createSubWidgets:function(){
try{
dojo.parser.parse(this.containerNode,true);
}
catch(e){
this._onError("Content",e,"Couldn't create widgets in "+this.id+(this.href?" from "+this.href:""));
}
},onLoad:function(data){
},onUnload:function(){
},onDownloadStart:function(){
return this.loadingMessage;
},onContentError:function(_4c0){
},onDownloadError:function(_4c1){
return this.errorMessage;
},onDownloadEnd:function(){
}});
}
if(!dojo._hasResource["dijit.form.Form"]){
dojo._hasResource["dijit.form.Form"]=true;
dojo.provide("dijit.form.Form");
dojo.declare("dijit.form._FormMixin",null,{reset:function(){
dojo.forEach(this.getDescendants(),function(_4c2){
if(_4c2.reset){
_4c2.reset();
}
});
},validate:function(){
var _4c3=false;
return dojo.every(dojo.map(this.getDescendants(),function(_4c4){
_4c4._hasBeenBlurred=true;
var _4c5=_4c4.disabled||!_4c4.validate||_4c4.validate();
if(!_4c5&&!_4c3){
dijit.scrollIntoView(_4c4.containerNode||_4c4.domNode);
_4c4.focus();
_4c3=true;
}
return _4c5;
}),function(item){
return item;
});
},setValues:function(val){
dojo.deprecated(this.declaredClass+"::setValues() is deprecated. Use attr('value', val) instead.","","2.0");
return this.attr("value",val);
},_setValueAttr:function(obj){
var map={};
dojo.forEach(this.getDescendants(),function(_4ca){
if(!_4ca.name){
return;
}
var _4cb=map[_4ca.name]||(map[_4ca.name]=[]);
_4cb.push(_4ca);
});
for(var name in map){
if(!map.hasOwnProperty(name)){
continue;
}
var _4cd=map[name],_4ce=dojo.getObject(name,false,obj);
if(_4ce===undefined){
continue;
}
if(!dojo.isArray(_4ce)){
_4ce=[_4ce];
}
if(typeof _4cd[0].checked=="boolean"){
dojo.forEach(_4cd,function(w,i){
w.attr("value",dojo.indexOf(_4ce,w.value)!=-1);
});
}else{
if(_4cd[0]._multiValue){
_4cd[0].attr("value",_4ce);
}else{
dojo.forEach(_4cd,function(w,i){
w.attr("value",_4ce[i]);
});
}
}
}
},getValues:function(){
dojo.deprecated(this.declaredClass+"::getValues() is deprecated. Use attr('value') instead.","","2.0");
return this.attr("value");
},_getValueAttr:function(){
var obj={};
dojo.forEach(this.getDescendants(),function(_4d4){
var name=_4d4.name;
if(!name||_4d4.disabled){
return;
}
var _4d6=_4d4.attr("value");
if(typeof _4d4.checked=="boolean"){
if(/Radio/.test(_4d4.declaredClass)){
if(_4d6!==false){
dojo.setObject(name,_4d6,obj);
}
}else{
var ary=dojo.getObject(name,false,obj);
if(!ary){
ary=[];
dojo.setObject(name,ary,obj);
}
if(_4d6!==false){
ary.push(_4d6);
}
}
}else{
dojo.setObject(name,_4d6,obj);
}
});
return obj;
},isValid:function(){
this._invalidWidgets=[];
return dojo.every(this.getDescendants(),function(_4d8){
var _4d9=_4d8.disabled||!_4d8.isValid||_4d8.isValid();
if(!_4d9){
this._invalidWidgets.push(_4d8);
}
return _4d9;
},this);
},onValidStateChange:function(_4da){
},_widgetChange:function(_4db){
var _4dc=this._lastValidState;
if(!_4db||this._lastValidState===undefined){
_4dc=this.isValid();
if(this._lastValidState===undefined){
this._lastValidState=_4dc;
}
}else{
if(_4db.isValid){
this._invalidWidgets=dojo.filter(this._invalidWidgets||[],function(w){
return (w!=_4db);
},this);
if(!_4db.isValid()&&!_4db.attr("disabled")){
this._invalidWidgets.push(_4db);
}
_4dc=(this._invalidWidgets.length===0);
}
}
if(_4dc!==this._lastValidState){
this._lastValidState=_4dc;
this.onValidStateChange(_4dc);
}
},connectChildren:function(){
dojo.forEach(this._changeConnections,dojo.hitch(this,"disconnect"));
var _4de=this;
var _4df=this._changeConnections=[];
dojo.forEach(dojo.filter(this.getDescendants(),function(item){
return item.validate;
}),function(_4e1){
_4df.push(_4de.connect(_4e1,"validate",dojo.hitch(_4de,"_widgetChange",_4e1)));
_4df.push(_4de.connect(_4e1,"_setDisabledAttr",dojo.hitch(_4de,"_widgetChange",_4e1)));
});
this._widgetChange(null);
},startup:function(){
this.inherited(arguments);
this._changeConnections=[];
this.connectChildren();
}});
dojo.declare("dijit.form.Form",[dijit._Widget,dijit._Templated,dijit.form._FormMixin],{name:"",action:"",method:"",encType:"","accept-charset":"",accept:"",target:"",templateString:"<form dojoAttachPoint='containerNode' dojoAttachEvent='onreset:_onReset,onsubmit:_onSubmit' name='${name}'></form>",attributeMap:dojo.mixin(dojo.clone(dijit._Widget.prototype.attributeMap),{action:"",method:"",encType:"","accept-charset":"",accept:"",target:""}),execute:function(_4e2){
},onExecute:function(){
},_setEncTypeAttr:function(_4e3){
this.encType=_4e3;
dojo.attr(this.domNode,"encType",_4e3);
if(dojo.isIE){
this.domNode.encoding=_4e3;
}
},postCreate:function(){
if(dojo.isIE&&this.srcNodeRef&&this.srcNodeRef.attributes){
var item=this.srcNodeRef.attributes.getNamedItem("encType");
if(item&&!item.specified&&(typeof item.value=="string")){
this.attr("encType",item.value);
}
}
this.inherited(arguments);
},onReset:function(e){
return true;
},_onReset:function(e){
var faux={returnValue:true,preventDefault:function(){
this.returnValue=false;
},stopPropagation:function(){
},currentTarget:e.currentTarget,target:e.target};
if(!(this.onReset(faux)===false)&&faux.returnValue){
this.reset();
}
dojo.stopEvent(e);
return false;
},_onSubmit:function(e){
var fp=dijit.form.Form.prototype;
if(this.execute!=fp.execute||this.onExecute!=fp.onExecute){
dojo.deprecated("dijit.form.Form:execute()/onExecute() are deprecated. Use onSubmit() instead.","","2.0");
this.onExecute();
this.execute(this.getValues());
}
if(this.onSubmit(e)===false){
dojo.stopEvent(e);
}
},onSubmit:function(e){
return this.isValid();
},submit:function(){
if(!(this.onSubmit()===false)){
this.containerNode.submit();
}
}});
}
if(!dojo._hasResource["dijit.Dialog"]){
dojo._hasResource["dijit.Dialog"]=true;
dojo.provide("dijit.Dialog");
dojo.declare("dijit.DialogUnderlay",[dijit._Widget,dijit._Templated],{templateString:"<div class='dijitDialogUnderlayWrapper' id='${id}_wrapper'><div class='dijitDialogUnderlay ${class}' id='${id}' dojoAttachPoint='node'></div></div>",attributeMap:{},postCreate:function(){
dojo.body().appendChild(this.domNode);
this.bgIframe=new dijit.BackgroundIframe(this.domNode);
},layout:function(){
var _4eb=dijit.getViewport();
var is=this.node.style,os=this.domNode.style;
os.top=_4eb.t+"px";
os.left=_4eb.l+"px";
is.width=_4eb.w+"px";
is.height=_4eb.h+"px";
var _4ee=dijit.getViewport();
if(_4eb.w!=_4ee.w){
is.width=_4ee.w+"px";
}
if(_4eb.h!=_4ee.h){
is.height=_4ee.h+"px";
}
},show:function(){
this.domNode.style.display="block";
this.layout();
if(this.bgIframe.iframe){
this.bgIframe.iframe.style.display="block";
}
},hide:function(){
this.domNode.style.display="none";
if(this.bgIframe.iframe){
this.bgIframe.iframe.style.display="none";
}
},uninitialize:function(){
if(this.bgIframe){
this.bgIframe.destroy();
}
}});
dojo.declare("dijit._DialogMixin",null,{attributeMap:dijit._Widget.prototype.attributeMap,execute:function(_4ef){
},onCancel:function(){
},onExecute:function(){
},_onSubmit:function(){
this.onExecute();
this.execute(this.attr("value"));
},_getFocusItems:function(_4f0){
var _4f1=dijit._getTabNavigable(dojo.byId(_4f0));
this._firstFocusItem=_4f1.lowest||_4f1.first||_4f0;
this._lastFocusItem=_4f1.last||_4f1.highest||this._firstFocusItem;
if(dojo.isMoz&&this._firstFocusItem.tagName.toLowerCase()=="input"&&dojo.attr(this._firstFocusItem,"type").toLowerCase()=="file"){
dojo.attr(_4f0,"tabindex","0");
this._firstFocusItem=_4f0;
}
}});
dojo.declare("dijit.Dialog",[dijit.layout.ContentPane,dijit._Templated,dijit.form._FormMixin,dijit._DialogMixin],{templateString:null,templateString:"<div class=\"dijitDialog\" tabindex=\"-1\" waiRole=\"dialog\" waiState=\"labelledby-${id}_title\">\n\t<div dojoAttachPoint=\"titleBar\" class=\"dijitDialogTitleBar\">\n\t<span dojoAttachPoint=\"titleNode\" class=\"dijitDialogTitle\" id=\"${id}_title\"></span>\n\t<span dojoAttachPoint=\"closeButtonNode\" class=\"dijitDialogCloseIcon\" dojoAttachEvent=\"onclick: onCancel\" title=\"${buttonCancel}\">\n\t\t<span dojoAttachPoint=\"closeText\" class=\"closeText\" title=\"${buttonCancel}\">x</span>\n\t</span>\n\t</div>\n\t\t<div dojoAttachPoint=\"containerNode\" class=\"dijitDialogPaneContent\"></div>\n</div>\n",attributeMap:dojo.mixin(dojo.clone(dijit._Widget.prototype.attributeMap),{title:[{node:"titleNode",type:"innerHTML"},{node:"titleBar",type:"attribute"}]}),open:false,duration:dijit.defaultDuration,refocus:true,autofocus:true,_firstFocusItem:null,_lastFocusItem:null,doLayout:false,draggable:true,postMixInProperties:function(){
var _4f2=dojo.i18n.getLocalization("dijit","common");
dojo.mixin(this,_4f2);
this.inherited(arguments);
},postCreate:function(){
var s=this.domNode.style;
s.visibility="hidden";
s.position="absolute";
s.display="";
s.top="-9999px";
dojo.body().appendChild(this.domNode);
this.inherited(arguments);
this.connect(this,"onExecute","hide");
this.connect(this,"onCancel","hide");
this._modalconnects=[];
},onLoad:function(){
this._position();
this.inherited(arguments);
},_endDrag:function(e){
if(e&&e.node&&e.node===this.domNode){
var vp=dijit.getViewport();
var p=e._leftTop||dojo.coords(e.node,true);
this._relativePosition={t:p.t-vp.t,l:p.l-vp.l};
}
},_setup:function(){
var node=this.domNode;
if(this.titleBar&&this.draggable){
this._moveable=(dojo.isIE==6)?new dojo.dnd.TimedMoveable(node,{handle:this.titleBar}):new dojo.dnd.Moveable(node,{handle:this.titleBar,timeout:0});
dojo.subscribe("/dnd/move/stop",this,"_endDrag");
}else{
dojo.addClass(node,"dijitDialogFixed");
}
this._underlay=new dijit.DialogUnderlay({id:this.id+"_underlay","class":dojo.map(this["class"].split(/\s/),function(s){
return s+"_underlay";
}).join(" ")});
var _4f9=this._underlay;
this._fadeIn=dojo.fadeIn({node:node,duration:this.duration,onBegin:dojo.hitch(_4f9,"show")});
this._fadeOut=dojo.fadeOut({node:node,duration:this.duration,onEnd:function(){
node.style.visibility="hidden";
node.style.top="-9999px";
_4f9.hide();
}});
},uninitialize:function(){
if(this._fadeIn&&this._fadeIn.status()=="playing"){
this._fadeIn.stop();
}
if(this._fadeOut&&this._fadeOut.status()=="playing"){
this._fadeOut.stop();
}
if(this._underlay){
this._underlay.destroy();
}
if(this._moveable){
this._moveable.destroy();
}
},_size:function(){
var mb=dojo.marginBox(this.domNode);
var _4fb=dijit.getViewport();
if(mb.w>=_4fb.w||mb.h>=_4fb.h){
dojo.style(this.containerNode,{width:Math.min(mb.w,Math.floor(_4fb.w*0.75))+"px",height:Math.min(mb.h,Math.floor(_4fb.h*0.75))+"px",overflow:"auto",position:"relative"});
}
},_position:function(){
if(!dojo.hasClass(dojo.body(),"dojoMove")){
var node=this.domNode;
var _4fd=dijit.getViewport();
var p=this._relativePosition;
var mb=p?null:dojo.marginBox(node);
dojo.style(node,{left:Math.floor(_4fd.l+(p?p.l:(_4fd.w-mb.w)/2))+"px",top:Math.floor(_4fd.t+(p?p.t:(_4fd.h-mb.h)/2))+"px"});
}
},_onKey:function(evt){
if(evt.charOrCode){
var dk=dojo.keys;
var node=evt.target;
if(evt.charOrCode===dk.TAB){
this._getFocusItems(this.domNode);
}
var _503=(this._firstFocusItem==this._lastFocusItem);
if(node==this._firstFocusItem&&evt.shiftKey&&evt.charOrCode===dk.TAB){
if(!_503){
dijit.focus(this._lastFocusItem);
}
dojo.stopEvent(evt);
}else{
if(node==this._lastFocusItem&&evt.charOrCode===dk.TAB&&!evt.shiftKey){
if(!_503){
dijit.focus(this._firstFocusItem);
}
dojo.stopEvent(evt);
}else{
while(node){
if(node==this.domNode){
if(evt.charOrCode==dk.ESCAPE){
this.onCancel();
}else{
return;
}
}
node=node.parentNode;
}
if(evt.charOrCode!==dk.TAB){
dojo.stopEvent(evt);
}else{
if(!dojo.isOpera){
try{
this._firstFocusItem.focus();
}
catch(e){
}
}
}
}
}
}
},show:function(){
if(this.open){
return;
}
if(!this._alreadyInitialized){
this._setup();
this._alreadyInitialized=true;
}
if(this._fadeOut.status()=="playing"){
this._fadeOut.stop();
}
this._modalconnects.push(dojo.connect(window,"onscroll",this,"layout"));
this._modalconnects.push(dojo.connect(window,"onresize",this,"layout"));
this._modalconnects.push(dojo.connect(dojo.doc.documentElement,"onkeypress",this,"_onKey"));
dojo.style(this.domNode,{opacity:0,visibility:""});
this.open=true;
this._loadCheck();
this._size();
this._position();
this._fadeIn.play();
this._savedFocus=dijit.getFocus(this);
if(this.autofocus){
this._getFocusItems(this.domNode);
setTimeout(dojo.hitch(dijit,"focus",this._firstFocusItem),50);
}
},hide:function(){
if(!this._alreadyInitialized){
return;
}
if(this._fadeIn.status()=="playing"){
this._fadeIn.stop();
}
this._fadeOut.play();
if(this._scrollConnected){
this._scrollConnected=false;
}
dojo.forEach(this._modalconnects,dojo.disconnect);
this._modalconnects=[];
if(this.refocus){
this.connect(this._fadeOut,"onEnd",dojo.hitch(dijit,"focus",this._savedFocus));
}
if(this._relativePosition){
delete this._relativePosition;
}
this.open=false;
},layout:function(){
if(this.domNode.style.visibility!="hidden"){
this._underlay.layout();
this._position();
}
},destroy:function(){
dojo.forEach(this._modalconnects,dojo.disconnect);
if(this.refocus&&this.open){
setTimeout(dojo.hitch(dijit,"focus",this._savedFocus),25);
}
this.inherited(arguments);
}});
dojo.declare("dijit.TooltipDialog",[dijit.layout.ContentPane,dijit._Templated,dijit.form._FormMixin,dijit._DialogMixin],{title:"",doLayout:false,autofocus:true,"class":"dijitTooltipDialog",_firstFocusItem:null,_lastFocusItem:null,templateString:null,templateString:"<div waiRole=\"presentation\">\n\t<div class=\"dijitTooltipContainer\" waiRole=\"presentation\">\n\t\t<div class =\"dijitTooltipContents dijitTooltipFocusNode\" dojoAttachPoint=\"containerNode\" tabindex=\"-1\" waiRole=\"dialog\"></div>\n\t</div>\n\t<div class=\"dijitTooltipConnector\" waiRole=\"presentation\"></div>\n</div>\n",postCreate:function(){
this.inherited(arguments);
this.connect(this.containerNode,"onkeypress","_onKey");
this.containerNode.title=this.title;
},orient:function(node,_505,_506){
this.domNode.className=this["class"]+" dijitTooltipAB"+(_506.charAt(1)=="L"?"Left":"Right")+" dijitTooltip"+(_506.charAt(0)=="T"?"Below":"Above");
},onOpen:function(pos){
this.orient(this.domNode,pos.aroundCorner,pos.corner);
this._loadCheck();
if(this.autofocus){
this._getFocusItems(this.containerNode);
dijit.focus(this._firstFocusItem);
}
},_onKey:function(evt){
var node=evt.target;
var dk=dojo.keys;
if(evt.charOrCode===dk.TAB){
this._getFocusItems(this.containerNode);
}
var _50b=(this._firstFocusItem==this._lastFocusItem);
if(evt.charOrCode==dk.ESCAPE){
this.onCancel();
dojo.stopEvent(evt);
}else{
if(node==this._firstFocusItem&&evt.shiftKey&&evt.charOrCode===dk.TAB){
if(!_50b){
dijit.focus(this._lastFocusItem);
}
dojo.stopEvent(evt);
}else{
if(node==this._lastFocusItem&&evt.charOrCode===dk.TAB&&!evt.shiftKey){
if(!_50b){
dijit.focus(this._firstFocusItem);
}
dojo.stopEvent(evt);
}else{
if(evt.charOrCode===dk.TAB){
evt.stopPropagation();
}
}
}
}
}});
}
if(!dojo._hasResource["dijit._editor.selection"]){
dojo._hasResource["dijit._editor.selection"]=true;
dojo.provide("dijit._editor.selection");
dojo.mixin(dijit._editor.selection,{getType:function(){
if(dojo.doc.selection){
return dojo.doc.selection.type.toLowerCase();
}else{
var _50c="text";
var oSel;
try{
oSel=dojo.global.getSelection();
}
catch(e){
}
if(oSel&&oSel.rangeCount==1){
var _50e=oSel.getRangeAt(0);
if((_50e.startContainer==_50e.endContainer)&&((_50e.endOffset-_50e.startOffset)==1)&&(_50e.startContainer.nodeType!=3)){
_50c="control";
}
}
return _50c;
}
},getSelectedText:function(){
if(dojo.doc.selection){
if(dijit._editor.selection.getType()=="control"){
return null;
}
return dojo.doc.selection.createRange().text;
}else{
var _50f=dojo.global.getSelection();
if(_50f){
return _50f.toString();
}
}
return "";
},getSelectedHtml:function(){
if(dojo.doc.selection){
if(dijit._editor.selection.getType()=="control"){
return null;
}
return dojo.doc.selection.createRange().htmlText;
}else{
var _510=dojo.global.getSelection();
if(_510&&_510.rangeCount){
var frag=_510.getRangeAt(0).cloneContents();
var div=dojo.doc.createElement("div");
div.appendChild(frag);
return div.innerHTML;
}
return null;
}
},getSelectedElement:function(){
if(dijit._editor.selection.getType()=="control"){
if(dojo.doc.selection){
var _513=dojo.doc.selection.createRange();
if(_513&&_513.item){
return dojo.doc.selection.createRange().item(0);
}
}else{
var _514=dojo.global.getSelection();
return _514.anchorNode.childNodes[_514.anchorOffset];
}
}
return null;
},getParentElement:function(){
if(dijit._editor.selection.getType()=="control"){
var p=this.getSelectedElement();
if(p){
return p.parentNode;
}
}else{
if(dojo.doc.selection){
var r=dojo.doc.selection.createRange();
r.collapse(true);
return r.parentElement();
}else{
var _517=dojo.global.getSelection();
if(_517){
var node=_517.anchorNode;
while(node&&(node.nodeType!=1)){
node=node.parentNode;
}
return node;
}
}
}
return null;
},hasAncestorElement:function(_519){
return this.getAncestorElement.apply(this,arguments)!=null;
},getAncestorElement:function(_51a){
var node=this.getSelectedElement()||this.getParentElement();
return this.getParentOfType(node,arguments);
},isTag:function(node,tags){
if(node&&node.tagName){
var _nlc=node.tagName.toLowerCase();
for(var i=0;i<tags.length;i++){
var _tlc=String(tags[i]).toLowerCase();
if(_nlc==_tlc){
return _tlc;
}
}
}
return "";
},getParentOfType:function(node,tags){
while(node){
if(this.isTag(node,tags).length){
return node;
}
node=node.parentNode;
}
return null;
},collapse:function(_523){
if(window["getSelection"]){
var _524=dojo.global.getSelection();
if(_524.removeAllRanges){
if(_523){
_524.collapseToStart();
}else{
_524.collapseToEnd();
}
}else{
_524.collapse(_523);
}
}else{
if(dojo.doc.selection){
var _525=dojo.doc.selection.createRange();
_525.collapse(_523);
_525.select();
}
}
},remove:function(){
var _s=dojo.doc.selection;
if(_s){
if(_s.type.toLowerCase()!="none"){
_s.clear();
}
return _s;
}else{
_s=dojo.global.getSelection();
_s.deleteFromDocument();
return _s;
}
},selectElementChildren:function(_527,_528){
var _529=dojo.global;
var _52a=dojo.doc;
_527=dojo.byId(_527);
if(_52a.selection&&dojo.body().createTextRange){
var _52b=_527.ownerDocument.body.createTextRange();
_52b.moveToElementText(_527);
if(!_528){
try{
_52b.select();
}
catch(e){
}
}
}else{
if(_529.getSelection){
var _52c=_529.getSelection();
if(_52c.setBaseAndExtent){
_52c.setBaseAndExtent(_527,0,_527,_527.innerText.length-1);
}else{
if(_52c.selectAllChildren){
_52c.selectAllChildren(_527);
}
}
}
}
},selectElement:function(_52d,_52e){
var _52f,_530=dojo.doc;
_52d=dojo.byId(_52d);
if(_530.selection&&dojo.body().createTextRange){
try{
_52f=dojo.body().createControlRange();
_52f.addElement(_52d);
if(!_52e){
_52f.select();
}
}
catch(e){
this.selectElementChildren(_52d,_52e);
}
}else{
if(dojo.global.getSelection){
var _531=dojo.global.getSelection();
if(_531.removeAllRanges){
_52f=_530.createRange();
_52f.selectNode(_52d);
_531.removeAllRanges();
_531.addRange(_52f);
}
}
}
}});
}
if(!dojo._hasResource["dijit._editor.range"]){
dojo._hasResource["dijit._editor.range"]=true;
dojo.provide("dijit._editor.range");
dijit.range={};
dijit.range.getIndex=function(node,_533){
var ret=[],retR=[];
var stop=_533;
var _537=node;
var _538,n;
while(node!=stop){
var i=0;
_538=node.parentNode;
while((n=_538.childNodes[i++])){
if(n===node){
--i;
break;
}
}
if(i>=_538.childNodes.length){
dojo.debug("Error finding index of a node in dijit.range.getIndex");
}
ret.unshift(i);
retR.unshift(i-_538.childNodes.length);
node=_538;
}
if(ret.length>0&&_537.nodeType==3){
n=_537.previousSibling;
while(n&&n.nodeType==3){
ret[ret.length-1]--;
n=n.previousSibling;
}
n=_537.nextSibling;
while(n&&n.nodeType==3){
retR[retR.length-1]++;
n=n.nextSibling;
}
}
return {o:ret,r:retR};
};
dijit.range.getNode=function(_53b,_53c){
if(!dojo.isArray(_53b)||_53b.length==0){
return _53c;
}
var node=_53c;
dojo.every(_53b,function(i){
if(i>=0&&i<node.childNodes.length){
node=node.childNodes[i];
}else{
node=null;
console.debug("Error: can not find node with index",_53b,"under parent node",_53c);
return false;
}
return true;
});
return node;
};
dijit.range.getCommonAncestor=function(n1,n2){
var _541=function(n){
var as=[];
while(n){
as.unshift(n);
if(n.nodeName!="BODY"){
n=n.parentNode;
}else{
break;
}
}
return as;
};
var n1as=_541(n1);
var n2as=_541(n2);
var m=Math.min(n1as.length,n2as.length);
var com=n1as[0];
for(var i=1;i<m;i++){
if(n1as[i]===n2as[i]){
com=n1as[i];
}else{
break;
}
}
return com;
};
dijit.range.getAncestor=function(node,_54a,root){
root=root||node.ownerDocument.body;
while(node&&node!==root){
var name=node.nodeName.toUpperCase();
if(_54a.test(name)){
return node;
}
node=node.parentNode;
}
return null;
};
dijit.range.BlockTagNames=/^(?:P|DIV|H1|H2|H3|H4|H5|H6|ADDRESS|PRE|OL|UL|LI|DT|DE)$/;
dijit.range.getBlockAncestor=function(node,_54e,root){
root=root||node.ownerDocument.body;
_54e=_54e||dijit.range.BlockTagNames;
var _550=null,_551;
while(node&&node!==root){
var name=node.nodeName.toUpperCase();
if(!_550&&_54e.test(name)){
_550=node;
}
if(!_551&&(/^(?:BODY|TD|TH|CAPTION)$/).test(name)){
_551=node;
}
node=node.parentNode;
}
return {blockNode:_550,blockContainer:_551||node.ownerDocument.body};
};
dijit.range.atBeginningOfContainer=function(_553,node,_555){
var _556=false;
var _557=(_555==0);
if(!_557&&node.nodeType==3){
if(dojo.trim(node.nodeValue.substr(0,_555))==0){
_557=true;
}
}
if(_557){
var _558=node;
_556=true;
while(_558&&_558!==_553){
if(_558.previousSibling){
_556=false;
break;
}
_558=_558.parentNode;
}
}
return _556;
};
dijit.range.atEndOfContainer=function(_559,node,_55b){
var _55c=false;
var _55d=(_55b==(node.length||node.childNodes.length));
if(!_55d&&node.nodeType==3){
if(dojo.trim(node.nodeValue.substr(_55b))==0){
_55d=true;
}
}
if(_55d){
var _55e=node;
_55c=true;
while(_55e&&_55e!==_559){
if(_55e.nextSibling){
_55c=false;
break;
}
_55e=_55e.parentNode;
}
}
return _55c;
};
dijit.range.adjacentNoneTextNode=function(_55f,next){
var node=_55f;
var len=(0-_55f.length)||0;
var prop=next?"nextSibling":"previousSibling";
while(node){
if(node.nodeType!=3){
break;
}
len+=node.length;
node=node[prop];
}
return [node,len];
};
dijit.range._w3c=Boolean(window["getSelection"]);
dijit.range.create=function(){
if(dijit.range._w3c){
return dojo.doc.createRange();
}else{
return new dijit.range.W3CRange;
}
};
dijit.range.getSelection=function(win,_565){
if(dijit.range._w3c){
return win.getSelection();
}else{
var s=new dijit.range.ie.selection(win);
if(!_565){
s._getCurrentSelection();
}
return s;
}
};
if(!dijit.range._w3c){
dijit.range.ie={cachedSelection:{},selection:function(win){
this._ranges=[];
this.addRange=function(r,_569){
this._ranges.push(r);
if(!_569){
r._select();
}
this.rangeCount=this._ranges.length;
};
this.removeAllRanges=function(){
this._ranges=[];
this.rangeCount=0;
};
var _56a=function(){
var r=win.document.selection.createRange();
var type=win.document.selection.type.toUpperCase();
if(type=="CONTROL"){
return new dijit.range.W3CRange(dijit.range.ie.decomposeControlRange(r));
}else{
return new dijit.range.W3CRange(dijit.range.ie.decomposeTextRange(r));
}
};
this.getRangeAt=function(i){
return this._ranges[i];
};
this._getCurrentSelection=function(){
this.removeAllRanges();
var r=_56a();
if(r){
this.addRange(r,true);
}
};
},decomposeControlRange:function(_56f){
var _570=_56f.item(0),_571=_56f.item(_56f.length-1);
var _572=_570.parentNode,_573=_571.parentNode;
var _574=dijit.range.getIndex(_570,_572).o;
var _575=dijit.range.getIndex(_571,_573).o+1;
return [[_572,_574],[_573,_575]];
},getEndPoint:function(_576,end){
var _578=_576.duplicate();
_578.collapse(!end);
var _579="EndTo"+(end?"End":"Start");
var _57a=_578.parentElement();
var _57b,_57c,_57d;
if(_57a.childNodes.length>0){
dojo.every(_57a.childNodes,function(node,i){
var _580;
if(node.nodeType!=3){
_578.moveToElementText(node);
if(_578.compareEndPoints(_579,_576)>0){
_57b=node.previousSibling;
if(_57d&&_57d.nodeType==3){
_57b=_57d;
_580=true;
}else{
_57b=_57a;
_57c=i;
return false;
}
}else{
if(i==_57a.childNodes.length-1){
_57b=_57a;
_57c=_57a.childNodes.length;
return false;
}
}
}else{
if(i==_57a.childNodes.length-1){
_57b=node;
_580=true;
}
}
if(_580&&_57b){
var _581=dijit.range.adjacentNoneTextNode(_57b)[0];
if(_581){
_57b=_581.nextSibling;
}else{
_57b=_57a.firstChild;
}
var _582=dijit.range.adjacentNoneTextNode(_57b);
_581=_582[0];
var _583=_582[1];
if(_581){
_578.moveToElementText(_581);
_578.collapse(false);
}else{
_578.moveToElementText(_57a);
}
_578.setEndPoint(_579,_576);
_57c=_578.text.length-_583;
return false;
}
_57d=node;
return true;
});
}else{
_57b=_57a;
_57c=0;
}
if(!end&&_57b.nodeType!=3&&_57c==_57b.childNodes.length){
if(_57b.nextSibling&&_57b.nextSibling.nodeType==3){
_57b=_57b.nextSibling;
_57c=0;
}
}
return [_57b,_57c];
},setEndPoint:function(_584,_585,_586){
var _587=_584.duplicate(),node,len;
if(_585.nodeType!=3){
_587.moveToElementText(_585);
_587.collapse(true);
if(_586==_585.childNodes.length){
if(_586>0){
node=_585.lastChild;
len=0;
while(node&&node.nodeType==3){
len+=node.length;
_585=node;
node=node.previousSibling;
}
if(node){
_587.moveToElementText(node);
}
_587.collapse(false);
_586=len;
}else{
_587.moveToElementText(_585);
_587.collapse(true);
}
}else{
if(_586>0){
node=_585.childNodes[_586-1];
if(node.nodeType==3){
_585=node;
_586=node.length;
}else{
_587.moveToElementText(node);
_587.collapse(false);
}
}
}
}
if(_585.nodeType==3){
var _58a=dijit.range.adjacentNoneTextNode(_585);
var _58b=_58a[0];
len=_58a[1];
if(_58b){
_587.moveToElementText(_58b);
_587.collapse(false);
if(_58b.contentEditable!="inherit"){
len++;
}
}else{
_587.moveToElementText(_585.parentNode);
_587.collapse(true);
}
_586+=len;
if(_586>0){
if(_587.move("character",_586)!=_586){
console.error("Error when moving!");
}
}
}
return _587;
},decomposeTextRange:function(_58c){
var _58d=dijit.range.ie.getEndPoint(_58c);
var _58e=_58d[0],_58f=_58d[1];
var _590=_58d[0],_591=_58d[1];
if(_58c.htmlText.length){
if(_58c.htmlText==_58c.text){
_591=_58f+_58c.text.length;
}else{
_58d=dijit.range.ie.getEndPoint(_58c,true);
_590=_58d[0],_591=_58d[1];
}
}
return [[_58e,_58f],[_590,_591]];
},setRange:function(_592,_593,_594,_595,_596,_597){
var _598=dijit.range.ie.setEndPoint(_592,_593,_594);
_592.setEndPoint("StartToStart",_598);
var _599=_598;
if(!_597){
_599=dijit.range.ie.setEndPoint(_592,_595,_596);
}
_592.setEndPoint("EndToEnd",_599);
return _592;
}};
dojo.declare("dijit.range.W3CRange",null,{constructor:function(){
if(arguments.length>0){
this.setStart(arguments[0][0][0],arguments[0][0][1]);
this.setEnd(arguments[0][1][0],arguments[0][1][1]);
}else{
this.commonAncestorContainer=null;
this.startContainer=null;
this.startOffset=0;
this.endContainer=null;
this.endOffset=0;
this.collapsed=true;
}
},_simpleSetEndPoint:function(node,_59b,end){
var r=(this._body||node.ownerDocument.body).createTextRange();
if(node.nodeType!=1){
r.moveToElementText(node.parentNode);
}else{
r.moveToElementText(node);
}
r.collapse(true);
_59b.setEndPoint(end?"EndToEnd":"StartToStart",r);
},_updateInternal:function(){
if(this.startContainer!==this.endContainer){
this.commonAncestorContainer=dijit.range.getCommonAncestor(this.startContainer,this.endContainer);
}else{
this.commonAncestorContainer=this.startContainer;
}
this.collapsed=(this.startContainer===this.endContainer)&&(this.startOffset==this.endOffset);
},setStart:function(node,_59f){
_59f=parseInt(_59f);
if(this.startContainer===node&&this.startOffset==_59f){
return;
}
delete this._cachedBookmark;
this.startContainer=node;
this.startOffset=_59f;
if(!this.endContainer){
this.setEnd(node,_59f);
}else{
this._updateInternal();
}
},setEnd:function(node,_5a1){
_5a1=parseInt(_5a1);
if(this.endContainer===node&&this.endOffset==_5a1){
return;
}
delete this._cachedBookmark;
this.endContainer=node;
this.endOffset=_5a1;
if(!this.startContainer){
this.setStart(node,_5a1);
}else{
this._updateInternal();
}
},setStartAfter:function(node,_5a3){
this._setPoint("setStart",node,_5a3,1);
},setStartBefore:function(node,_5a5){
this._setPoint("setStart",node,_5a5,0);
},setEndAfter:function(node,_5a7){
this._setPoint("setEnd",node,_5a7,1);
},setEndBefore:function(node,_5a9){
this._setPoint("setEnd",node,_5a9,0);
},_setPoint:function(what,node,_5ac,ext){
var _5ae=dijit.range.getIndex(node,node.parentNode).o;
this[what](node.parentNode,_5ae.pop()+ext);
},_getIERange:function(){
var r=(this._body||this.endContainer.ownerDocument.body).createTextRange();
dijit.range.ie.setRange(r,this.startContainer,this.startOffset,this.endContainer,this.endOffset,this.collapsed);
return r;
},getBookmark:function(body){
this._getIERange();
return this._cachedBookmark;
},_select:function(){
var r=this._getIERange();
r.select();
},deleteContents:function(){
var r=this._getIERange();
r.pasteHTML("");
this.endContainer=this.startContainer;
this.endOffset=this.startOffset;
this.collapsed=true;
},cloneRange:function(){
var r=new dijit.range.W3CRange([[this.startContainer,this.startOffset],[this.endContainer,this.endOffset]]);
r._body=this._body;
return r;
},detach:function(){
this._body=null;
this.commonAncestorContainer=null;
this.startContainer=null;
this.startOffset=0;
this.endContainer=null;
this.endOffset=0;
this.collapsed=true;
}});
}
}
if(!dojo._hasResource["dijit._editor.html"]){
dojo._hasResource["dijit._editor.html"]=true;
dojo.provide("dijit._editor.html");
dijit._editor.escapeXml=function(str,_5b5){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_5b5){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dijit._editor.getNodeHtml=function(node){
var _5b7;
switch(node.nodeType){
case 1:
_5b7="<"+node.nodeName.toLowerCase();
var _5b8=[];
if(dojo.isIE&&node.outerHTML){
var s=node.outerHTML;
s=s.substr(0,s.indexOf(">")).replace(/(['"])[^"']*\1/g,"");
var reg=/([^\s=]+)=/g;
var m,key;
while((m=reg.exec(s))){
key=m[1];
if(key.substr(0,3)!="_dj"){
if(key=="src"||key=="href"){
if(node.getAttribute("_djrealurl")){
_5b8.push([key,node.getAttribute("_djrealurl")]);
continue;
}
}
var val;
switch(key){
case "style":
val=node.style.cssText.toLowerCase();
break;
case "class":
val=node.className;
break;
default:
val=node.getAttribute(key);
}
_5b8.push([key,val.toString()]);
}
}
}else{
var attr,i=0;
while((attr=node.attributes[i++])){
var n=attr.name;
if(n.substr(0,3)!="_dj"){
var v=attr.value;
if(n=="src"||n=="href"){
if(node.getAttribute("_djrealurl")){
v=node.getAttribute("_djrealurl");
}
}
_5b8.push([n,v]);
}
}
}
_5b8.sort(function(a,b){
return a[0]<b[0]?-1:(a[0]==b[0]?0:1);
});
var j=0;
while((attr=_5b8[j++])){
_5b7+=" "+attr[0]+"=\""+(dojo.isString(attr[1])?dijit._editor.escapeXml(attr[1],true):attr[1])+"\"";
}
if(node.childNodes.length){
_5b7+=">"+dijit._editor.getChildrenHtml(node)+"</"+node.nodeName.toLowerCase()+">";
}else{
_5b7+=" />";
}
break;
case 3:
_5b7=dijit._editor.escapeXml(node.nodeValue,true);
break;
case 8:
_5b7="<!--"+dijit._editor.escapeXml(node.nodeValue,true)+"-->";
break;
default:
_5b7="<!-- Element not recognized - Type: "+node.nodeType+" Name: "+node.nodeName+"-->";
}
return _5b7;
};
dijit._editor.getChildrenHtml=function(dom){
var out="";
if(!dom){
return out;
}
var _5c7=dom["childNodes"]||dom;
var node,i=0;
while((node=_5c7[i++])){
if(!dojo.isIE||(node.parentNode==dom||!node.parentNode)){
out+=dijit._editor.getNodeHtml(node);
}
}
return out;
};
}
if(!dojo._hasResource["dijit._editor.RichText"]){
dojo._hasResource["dijit._editor.RichText"]=true;
dojo.provide("dijit._editor.RichText");
if(!dojo.config["useXDomain"]||dojo.config["allowXdRichTextSave"]){
if(dojo._postLoad){
(function(){
var _5ca=dojo.doc.createElement("textarea");
_5ca.id=dijit._scopeName+"._editor.RichText.savedContent";
var s=_5ca.style;
s.display="none";
s.position="absolute";
s.top="-100px";
s.left="-100px";
s.height="3px";
s.width="3px";
dojo.body().appendChild(_5ca);
})();
}else{
try{
dojo.doc.write("<textarea id=\""+dijit._scopeName+"._editor.RichText.savedContent\" "+"style=\"display:none;position:absolute;top:-100px;left:-100px;height:3px;width:3px;overflow:hidden;\"></textarea>");
}
catch(e){
}
}
}
dojo.declare("dijit._editor.RichText",dijit._Widget,{constructor:function(_5cc){
this.contentPreFilters=[];
this.contentPostFilters=[];
this.contentDomPreFilters=[];
this.contentDomPostFilters=[];
this.editingAreaStyleSheets=[];
this._keyHandlers={};
this.contentPreFilters.push(dojo.hitch(this,"_preFixUrlAttributes"));
if(dojo.isMoz){
this.contentPreFilters.push(this._fixContentForMoz);
this.contentPostFilters.push(this._removeMozBogus);
}
if(dojo.isSafari){
this.contentPostFilters.push(this._removeSafariBogus);
}
this.onLoadDeferred=new dojo.Deferred();
},inheritWidth:false,focusOnLoad:false,name:"",styleSheets:"",_content:"",height:"300px",minHeight:"1em",isClosed:true,isLoaded:false,_SEPARATOR:"@@**%%__RICHTEXTBOUNDRY__%%**@@",onLoadDeferred:null,isTabIndent:false,postCreate:function(){
if("textarea"==this.domNode.tagName.toLowerCase()){
console.warn("RichText should not be used with the TEXTAREA tag.  See dijit._editor.RichText docs.");
}
dojo.publish(dijit._scopeName+"._editor.RichText::init",[this]);
this.open();
this.setupDefaultShortcuts();
},setupDefaultShortcuts:function(){
var exec=dojo.hitch(this,function(cmd,arg){
return function(){
return !this.execCommand(cmd,arg);
};
});
var _5d0={b:exec("bold"),i:exec("italic"),u:exec("underline"),a:exec("selectall"),s:function(){
this.save(true);
},m:function(){
this.isTabIndent=!this.isTabIndent;
},"1":exec("formatblock","h1"),"2":exec("formatblock","h2"),"3":exec("formatblock","h3"),"4":exec("formatblock","h4"),"\\":exec("insertunorderedlist")};
if(!dojo.isIE){
_5d0.Z=exec("redo");
}
for(var key in _5d0){
this.addKeyHandler(key,true,false,_5d0[key]);
}
},events:["onKeyPress","onKeyDown","onKeyUp","onClick"],captureEvents:[],_editorCommandsLocalized:false,_localizeEditorCommands:function(){
if(this._editorCommandsLocalized){
return;
}
this._editorCommandsLocalized=true;
var _5d2=["div","p","pre","h1","h2","h3","h4","h5","h6","ol","ul","address"];
var _5d3="",_5d4,i=0;
while((_5d4=_5d2[i++])){
if(_5d4.charAt(1)!="l"){
_5d3+="<"+_5d4+"><span>content</span></"+_5d4+"><br/>";
}else{
_5d3+="<"+_5d4+"><li>content</li></"+_5d4+"><br/>";
}
}
var div=dojo.doc.createElement("div");
dojo.style(div,{position:"absolute",left:"-2000px",top:"-2000px"});
dojo.doc.body.appendChild(div);
div.innerHTML=_5d3;
var node=div.firstChild;
while(node){
dijit._editor.selection.selectElement(node.firstChild);
dojo.withGlobal(this.window,"selectElement",dijit._editor.selection,[node.firstChild]);
var _5d8=node.tagName.toLowerCase();
this._local2NativeFormatNames[_5d8]=document.queryCommandValue("formatblock");
this._native2LocalFormatNames[this._local2NativeFormatNames[_5d8]]=_5d8;
node=node.nextSibling.nextSibling;
}
dojo.body().removeChild(div);
},open:function(_5d9){
if((!this.onLoadDeferred)||(this.onLoadDeferred.fired>=0)){
this.onLoadDeferred=new dojo.Deferred();
}
if(!this.isClosed){
this.close();
}
dojo.publish(dijit._scopeName+"._editor.RichText::open",[this]);
this._content="";
if((arguments.length==1)&&(_5d9["nodeName"])){
this.domNode=_5d9;
}
var dn=this.domNode;
var html;
if((dn["nodeName"])&&(dn.nodeName.toLowerCase()=="textarea")){
var ta=this.textarea=dn;
this.name=ta.name;
html=this._preFilterContent(ta.value);
dn=this.domNode=dojo.doc.createElement("div");
dn.setAttribute("widgetId",this.id);
ta.removeAttribute("widgetId");
dn.cssText=ta.cssText;
dn.className+=" "+ta.className;
dojo.place(dn,ta,"before");
var _5dd=dojo.hitch(this,function(){
with(ta.style){
display="block";
position="absolute";
left=top="-1000px";
if(dojo.isIE){
this.__overflow=overflow;
overflow="hidden";
}
}
});
if(dojo.isIE){
setTimeout(_5dd,10);
}else{
_5dd();
}
if(ta.form){
dojo.connect(ta.form,"onsubmit",this,function(){
ta.value=this.getValue();
});
}
}else{
html=this._preFilterContent(dijit._editor.getChildrenHtml(dn));
dn.innerHTML="";
}
if(html==""){
html="&nbsp;";
}
var _5de=dojo.contentBox(dn);
this._oldHeight=_5de.h;
this._oldWidth=_5de.w;
this.savedContent=html;
if((dn["nodeName"])&&(dn.nodeName=="LI")){
dn.innerHTML=" <br>";
}
this.editingArea=dn.ownerDocument.createElement("div");
dn.appendChild(this.editingArea);
if(this.name!=""&&(!dojo.config["useXDomain"]||dojo.config["allowXdRichTextSave"])){
var _5df=dojo.byId(dijit._scopeName+"._editor.RichText.savedContent");
if(_5df.value!=""){
var _5e0=_5df.value.split(this._SEPARATOR),i=0,dat;
while((dat=_5e0[i++])){
var data=dat.split(":");
if(data[0]==this.name){
html=data[1];
_5e0.splice(i,1);
break;
}
}
}
this.connect(window,"onbeforeunload","_saveContent");
}
this.isClosed=false;
if(dojo.isIE||dojo.isSafari||dojo.isOpera){
var burl=dojo.config["dojoBlankHtmlUrl"]||(dojo.moduleUrl("dojo","resources/blank.html")+"");
var ifr=this.editorObject=this.iframe=dojo.doc.createElement("iframe");
ifr.id=this.id+"_iframe";
ifr.src=burl;
ifr.style.border="none";
ifr.style.width="100%";
ifr.frameBorder=0;
this.editingArea.appendChild(ifr);
var h=null;
var _5e7=dojo.hitch(this,function(){
if(h){
dojo.disconnect(h);
h=null;
}
this.window=ifr.contentWindow;
var d=this.document=this.window.document;
d.open();
d.write(this._getIframeDocTxt(html));
d.close();
if(this._layoutMode){
ifr.style.height="100%";
}else{
if(dojo.isIE>=7){
if(this.height){
ifr.style.height=this.height;
}
if(this.minHeight){
ifr.style.minHeight=this.minHeight;
}
}else{
ifr.style.height=this.height?this.height:this.minHeight;
}
}
if(dojo.isIE){
this._localizeEditorCommands();
}
this.onLoad();
this.savedContent=this.getValue(true);
});
if(dojo.isIE&&dojo.isIE<=7){
var t=setInterval(function(){
if(ifr.contentWindow.isLoaded){
clearInterval(t);
_5e7();
}
},100);
}else{
h=dojo.connect(((dojo.isIE)?ifr.contentWindow:ifr),"onload",_5e7);
}
}else{
this._drawIframe(html);
this.savedContent=this.getValue(true);
}
if(dn.nodeName=="LI"){
dn.lastChild.style.marginTop="-1.2em";
}
if(this.domNode.nodeName=="LI"){
this.domNode.lastChild.style.marginTop="-1.2em";
}
dojo.addClass(this.domNode,"RichTextEditable");
},_local2NativeFormatNames:{},_native2LocalFormatNames:{},_localizedIframeTitles:null,_getIframeDocTxt:function(html){
var _cs=dojo.getComputedStyle(this.domNode);
if(dojo.isIE||(!this.height&&!dojo.isMoz)){
html="<div>"+html+"</div>";
}
var font=[_cs.fontWeight,_cs.fontSize,_cs.fontFamily].join(" ");
var _5ed=_cs.lineHeight;
if(_5ed.indexOf("px")>=0){
_5ed=parseFloat(_5ed)/parseFloat(_cs.fontSize);
}else{
if(_5ed.indexOf("em")>=0){
_5ed=parseFloat(_5ed);
}else{
_5ed="1.0";
}
}
var _5ee="";
this.style.replace(/(^|;)(line-|font-?)[^;]+/g,function(_5ef){
_5ee+=_5ef.replace(/^;/g,"")+";";
});
return [this.isLeftToRight()?"<html><head>":"<html dir='rtl'><head>",(dojo.isMoz?"<title>"+this._localizedIframeTitles.iframeEditTitle+"</title>":""),"<style>","body,html {","\tbackground:transparent;","\tpadding: 1em 0 0 0;","\tmargin: -1em 0 0 0;","\theight: 100%;","}","body{","\ttop:0px; left:0px; right:0px;","\tfont:",font,";",((this.height||dojo.isOpera)?"":"position: fixed;"),"\tmin-height:",this.minHeight,";","\tline-height:",_5ed,"}","p{ margin: 1em 0 !important; }",(this.height?"":"body,html{height:auto;overflow-y:hidden;/*for IE*/} body > div {overflow-x:auto;/*for FF to show vertical scrollbar*/}"),"li > ul:-moz-first-node, li > ol:-moz-first-node{ padding-top: 1.2em; } ","li{ min-height:1.2em; }","</style>",this._applyEditingAreaStyleSheets(),"</head><body style='"+_5ee+"'>"+html+"</body></html>"].join("");
},_drawIframe:function(html){
if(!this.iframe){
var ifr=this.iframe=dojo.doc.createElement("iframe");
ifr.id=this.id+"_iframe";
var ifrs=ifr.style;
ifrs.border="none";
ifrs.lineHeight="0";
ifrs.verticalAlign="bottom";
this.editorObject=this.iframe;
this._localizedIframeTitles=dojo.i18n.getLocalization("dijit.form","Textarea");
var _5f3=dojo.query("label[for=\""+this.id+"\"]");
if(_5f3.length){
this._localizedIframeTitles.iframeEditTitle=_5f3[0].innerHTML+" "+this._localizedIframeTitles.iframeEditTitle;
}
}
this.iframe.style.width=this.inheritWidth?this._oldWidth:"100%";
if(this._layoutMode){
this.iframe.style.height="100%";
}else{
if(this.height){
this.iframe.style.height=this.height;
}else{
this.iframe.height=this._oldHeight;
}
}
var _5f4;
if(this.textarea){
_5f4=this.srcNodeRef;
}else{
_5f4=dojo.doc.createElement("div");
_5f4.style.display="none";
_5f4.innerHTML=html;
this.editingArea.appendChild(_5f4);
}
this.editingArea.appendChild(this.iframe);
var _5f5=dojo.hitch(this,function(){
if(!this.editNode){
if(!this.document){
try{
if(this.iframe.contentWindow){
this.window=this.iframe.contentWindow;
this.document=this.iframe.contentWindow.document;
}else{
if(this.iframe.contentDocument){
this.window=this.iframe.contentDocument.window;
this.document=this.iframe.contentDocument;
}
}
}
catch(e){
}
if(!this.document){
setTimeout(_5f5,50);
return;
}
var _5f6=this.document;
_5f6.open();
if(dojo.isAIR){
_5f6.body.innerHTML=html;
}else{
_5f6.write(this._getIframeDocTxt(html));
}
_5f6.close();
dojo._destroyElement(_5f4);
}
if(!this.document.body){
setTimeout(_5f5,50);
return;
}
this.onLoad();
}else{
dojo._destroyElement(_5f4);
this.editNode.innerHTML=html;
this.onDisplayChanged();
}
this._preDomFilterContent(this.editNode);
});
_5f5();
},_applyEditingAreaStyleSheets:function(){
var _5f7=[];
if(this.styleSheets){
_5f7=this.styleSheets.split(";");
this.styleSheets="";
}
_5f7=_5f7.concat(this.editingAreaStyleSheets);
this.editingAreaStyleSheets=[];
var text="",i=0,url;
while((url=_5f7[i++])){
var _5fb=(new dojo._Url(dojo.global.location,url)).toString();
this.editingAreaStyleSheets.push(_5fb);
text+="<link rel=\"stylesheet\" type=\"text/css\" href=\""+_5fb+"\"/>";
}
return text;
},addStyleSheet:function(uri){
var url=uri.toString();
if(url.charAt(0)=="."||(url.charAt(0)!="/"&&!uri.host)){
url=(new dojo._Url(dojo.global.location,url)).toString();
}
if(dojo.indexOf(this.editingAreaStyleSheets,url)>-1){
return;
}
this.editingAreaStyleSheets.push(url);
if(this.document.createStyleSheet){
this.document.createStyleSheet(url);
}else{
var head=this.document.getElementsByTagName("head")[0];
var _5ff=this.document.createElement("link");
with(_5ff){
rel="stylesheet";
type="text/css";
href=url;
}
head.appendChild(_5ff);
}
},removeStyleSheet:function(uri){
var url=uri.toString();
if(url.charAt(0)=="."||(url.charAt(0)!="/"&&!uri.host)){
url=(new dojo._Url(dojo.global.location,url)).toString();
}
var _602=dojo.indexOf(this.editingAreaStyleSheets,url);
if(_602==-1){
return;
}
delete this.editingAreaStyleSheets[_602];
dojo.withGlobal(this.window,"query",dojo,["link:[href=\""+url+"\"]"]).orphan();
},disabled:true,_mozSettingProps:["styleWithCSS","insertBrOnReturn"],_setDisabledAttr:function(_603){
if(!this.editNode||"_delayedDisabled" in this){
this._delayedDisabled=_603;
return;
}
_603=Boolean(_603);
if(dojo.isIE||dojo.isSafari||dojo.isOpera){
var _604=dojo.isIE&&(this.isLoaded||!this.focusOnLoad);
if(_604){
this.editNode.unselectable="on";
}
this.editNode.contentEditable=!_603;
if(_604){
var _605=this;
setTimeout(function(){
_605.editNode.unselectable="off";
},0);
}
}else{
if(_603){
this._mozSettings=[false,this.blockNodeForEnter==="BR"];
}
this.document.designMode=(_603?"off":"on");
if(!_603&&this._mozSettingProps){
var ps=this._mozSettingProps;
for(var n in ps){
if(ps.hasOwnProperty(n)){
try{
this.document.execCommand(n,false,ps[n]);
}
catch(e){
}
}
}
}
}
this.disabled=_603;
},_isResized:function(){
return false;
},onLoad:function(e){
if(!this.window.__registeredWindow){
this.window.__registeredWindow=true;
dijit.registerWin(this.window);
}
if(!dojo.isIE&&(this.height||dojo.isMoz)){
this.editNode=this.document.body;
}else{
this.editNode=this.document.body.firstChild;
var _609=this;
if(dojo.isIE){
var _60a=this.tabStop=dojo.doc.createElement("<div tabIndex=-1>");
this.editingArea.appendChild(_60a);
this.iframe.onfocus=function(){
_609.editNode.setActive();
};
}
}
this.focusNode=this.editNode;
try{
this.attr("disabled",false);
}
catch(e){
var _60b=dojo.connect(this,"onClick",this,function(){
this.attr("disabled",false);
dojo.disconnect(_60b);
});
}
this._preDomFilterContent(this.editNode);
var _60c=this.events.concat(this.captureEvents);
var ap=(this.iframe)?this.document:this.editNode;
dojo.forEach(_60c,function(item){
this.connect(ap,item.toLowerCase(),item);
},this);
if(dojo.isIE){
this.connect(this.document,"onmousedown","_onIEMouseDown");
this.editNode.style.zoom=1;
}
if(this.focusOnLoad){
dojo.addOnLoad(dojo.hitch(this,"focus"));
}
this.onDisplayChanged(e);
if("_delayedDisabled" in this){
var d=this._delayedDisabled;
delete this._delayedDisabled;
this.attr("disabled",d);
}
this.isLoaded=true;
if(this.onLoadDeferred){
this.onLoadDeferred.callback(true);
}
},onKeyDown:function(e){
if(e.keyCode===dojo.keys.TAB&&this.isTabIndent){
dojo.stopEvent(e);
if(this.queryCommandEnabled((e.shiftKey?"outdent":"indent"))){
this.execCommand((e.shiftKey?"outdent":"indent"));
}
}
if(dojo.isIE){
if(e.keyCode==dojo.keys.TAB&&!this.isTabIndent){
if(e.shiftKey&&!e.ctrlKey&&!e.altKey){
this.iframe.focus();
}else{
if(!e.shiftKey&&!e.ctrlKey&&!e.altKey){
this.tabStop.focus();
}
}
}else{
if(e.keyCode===dojo.keys.BACKSPACE&&this.document.selection.type==="Control"){
dojo.stopEvent(e);
this.execCommand("delete");
}else{
if((65<=e.keyCode&&e.keyCode<=90)||(e.keyCode>=37&&e.keyCode<=40)){
e.charCode=e.keyCode;
this.onKeyPress(e);
}
}
}
}else{
if(dojo.isMoz&&!this.isTabIndent){
if(e.keyCode==dojo.keys.TAB&&!e.shiftKey&&!e.ctrlKey&&!e.altKey&&this.iframe){
var _611=dojo.isFF<3?this.iframe.contentDocument:this.iframe;
_611.title=this._localizedIframeTitles.iframeFocusTitle;
this.iframe.focus();
dojo.stopEvent(e);
}else{
if(e.keyCode==dojo.keys.TAB&&e.shiftKey){
if(this.toolbar){
this.toolbar.focus();
}
dojo.stopEvent(e);
}
}
}
}
return true;
},onKeyUp:function(e){
return;
},setDisabled:function(_613){
dojo.deprecated("dijit.Editor::setDisabled is deprecated","use dijit.Editor::attr(\"disabled\",boolean) instead",2);
this.attr("disabled",_613);
},_setValueAttr:function(_614){
this.setValue(_614);
},onKeyPress:function(e){
var c=(e.keyChar&&e.keyChar.toLowerCase())||e.keyCode;
var _617=this._keyHandlers[c];
var args=arguments;
if(_617){
dojo.forEach(_617,function(h){
if((!!h.shift==!!e.shiftKey)&&(!!h.ctrl==!!e.ctrlKey)){
if(!h.handler.apply(this,args)){
e.preventDefault();
}
}
},this);
}
if(!this._onKeyHitch){
this._onKeyHitch=dojo.hitch(this,"onKeyPressed");
}
setTimeout(this._onKeyHitch,1);
return true;
},addKeyHandler:function(key,ctrl,_61c,_61d){
if(!dojo.isArray(this._keyHandlers[key])){
this._keyHandlers[key]=[];
}
this._keyHandlers[key].push({shift:_61c||false,ctrl:ctrl||false,handler:_61d});
},onKeyPressed:function(){
this.onDisplayChanged();
},onClick:function(e){
this.onDisplayChanged(e);
},_onIEMouseDown:function(e){
if(!this._focused&&!this.disabled){
this.focus();
}
},_onBlur:function(e){
this.inherited(arguments);
var _c=this.getValue(true);
if(_c!=this.savedContent){
this.onChange(_c);
this.savedContent=_c;
}
if(dojo.isMoz&&this.iframe){
var _622=dojo.isFF<3?this.iframe.contentDocument:this.iframe;
_622.title=this._localizedIframeTitles.iframeEditTitle;
}
},_initialFocus:true,_onFocus:function(e){
if(dojo.isMoz&&this._initialFocus){
this._initialFocus=false;
if(this.editNode.innerHTML.replace(/^\s+|\s+$/g,"")=="&nbsp;"){
this.placeCursorAtStart();
}
}
this.inherited(arguments);
},blur:function(){
if(!dojo.isIE&&this.window.document.documentElement&&this.window.document.documentElement.focus){
this.window.document.documentElement.focus();
}else{
if(dojo.doc.body.focus){
dojo.doc.body.focus();
}
}
},focus:function(){
if(!dojo.isIE){
dijit.focus(this.iframe);
}else{
if(this.editNode&&this.editNode.focus){
this.iframe.fireEvent("onfocus",document.createEventObject());
}
}
},updateInterval:200,_updateTimer:null,onDisplayChanged:function(e){
if(this._updateTimer){
clearTimeout(this._updateTimer);
}
if(!this._updateHandler){
this._updateHandler=dojo.hitch(this,"onNormalizedDisplayChanged");
}
this._updateTimer=setTimeout(this._updateHandler,this.updateInterval);
},onNormalizedDisplayChanged:function(){
delete this._updateTimer;
},onChange:function(_625){
},_normalizeCommand:function(cmd){
var _627=cmd.toLowerCase();
if(_627=="formatblock"){
if(dojo.isSafari){
_627="heading";
}
}else{
if(_627=="hilitecolor"&&!dojo.isMoz){
_627="backcolor";
}
}
return _627;
},_qcaCache:{},queryCommandAvailable:function(_628){
var ca=this._qcaCache[_628];
if(ca!=undefined){
return ca;
}
return this._qcaCache[_628]=this._queryCommandAvailable(_628);
},_queryCommandAvailable:function(_62a){
var ie=1;
var _62c=1<<1;
var _62d=1<<2;
var _62e=1<<3;
var _62f=1<<4;
var _630=dojo.isSafari;
function isSupportedBy(_631){
return {ie:Boolean(_631&ie),mozilla:Boolean(_631&_62c),safari:Boolean(_631&_62d),safari420:Boolean(_631&_62f),opera:Boolean(_631&_62e)};
};
var _632=null;
switch(_62a.toLowerCase()){
case "bold":
case "italic":
case "underline":
case "subscript":
case "superscript":
case "fontname":
case "fontsize":
case "forecolor":
case "hilitecolor":
case "justifycenter":
case "justifyfull":
case "justifyleft":
case "justifyright":
case "delete":
case "selectall":
case "toggledir":
_632=isSupportedBy(_62c|ie|_62d|_62e);
break;
case "createlink":
case "unlink":
case "removeformat":
case "inserthorizontalrule":
case "insertimage":
case "insertorderedlist":
case "insertunorderedlist":
case "indent":
case "outdent":
case "formatblock":
case "inserthtml":
case "undo":
case "redo":
case "strikethrough":
case "tabindent":
_632=isSupportedBy(_62c|ie|_62e|_62f);
break;
case "blockdirltr":
case "blockdirrtl":
case "dirltr":
case "dirrtl":
case "inlinedirltr":
case "inlinedirrtl":
_632=isSupportedBy(ie);
break;
case "cut":
case "copy":
case "paste":
_632=isSupportedBy(ie|_62c|_62f);
break;
case "inserttable":
_632=isSupportedBy(_62c|ie);
break;
case "insertcell":
case "insertcol":
case "insertrow":
case "deletecells":
case "deletecols":
case "deleterows":
case "mergecells":
case "splitcell":
_632=isSupportedBy(ie|_62c);
break;
default:
return false;
}
return (dojo.isIE&&_632.ie)||(dojo.isMoz&&_632.mozilla)||(dojo.isSafari&&_632.safari)||(_630&&_632.safari420)||(dojo.isOpera&&_632.opera);
},execCommand:function(_633,_634){
var _635;
this.focus();
_633=this._normalizeCommand(_633);
if(_634!=undefined){
if(_633=="heading"){
throw new Error("unimplemented");
}else{
if((_633=="formatblock")&&dojo.isIE){
_634="<"+_634+">";
}
}
}
if(_633=="inserthtml"){
_634=this._preFilterContent(_634);
_635=true;
if(dojo.isIE){
var _636=this.document.selection.createRange();
if(this.document.selection.type.toUpperCase()=="CONTROL"){
var n=_636.item(0);
while(_636.length){
_636.remove(_636.item(0));
}
n.outerHTML=_634;
}else{
_636.pasteHTML(_634);
}
_636.select();
}else{
if(dojo.isMoz&&!_634.length){
this._sCall("remove");
}else{
_635=this.document.execCommand(_633,false,_634);
}
}
}else{
if((_633=="unlink")&&(this.queryCommandEnabled("unlink"))&&(dojo.isMoz||dojo.isSafari)){
var a=this._sCall("getAncestorElement",["a"]);
this._sCall("selectElement",[a]);
_635=this.document.execCommand("unlink",false,null);
}else{
if((_633=="hilitecolor")&&(dojo.isMoz)){
this.document.execCommand("styleWithCSS",false,true);
_635=this.document.execCommand(_633,false,_634);
this.document.execCommand("styleWithCSS",false,false);
}else{
if((dojo.isIE)&&((_633=="backcolor")||(_633=="forecolor"))){
_634=arguments.length>1?_634:null;
_635=this.document.execCommand(_633,false,_634);
}else{
_634=arguments.length>1?_634:null;
if(_634||_633!="createlink"){
_635=this.document.execCommand(_633,false,_634);
}
}
}
}
}
this.onDisplayChanged();
return _635;
},queryCommandEnabled:function(_639){
if(this.disabled){
return false;
}
_639=this._normalizeCommand(_639);
if(dojo.isMoz||dojo.isSafari){
if(_639=="unlink"){
this._sCall("hasAncestorElement",["a"]);
}else{
if(_639=="inserttable"){
return true;
}
}
}
if(dojo.isSafari){
if(_639=="copy"){
_639="cut";
}else{
if(_639=="paste"){
return true;
}
}
}
if(_639=="indent"){
var li=this._sCall("getAncestorElement",["li"]);
var n=li&&li.previousSibling;
while(n){
if(n.nodeType==1){
return true;
}
n=n.previousSibling;
}
return false;
}else{
if(_639=="outdent"){
return this._sCall("hasAncestorElement",["li"]);
}
}
var elem=dojo.isIE?this.document.selection.createRange():this.document;
return elem.queryCommandEnabled(_639);
},queryCommandState:function(_63d){
if(this.disabled){
return false;
}
_63d=this._normalizeCommand(_63d);
return this.document.queryCommandState(_63d);
},queryCommandValue:function(_63e){
if(this.disabled){
return false;
}
var r;
_63e=this._normalizeCommand(_63e);
if(dojo.isIE&&_63e=="formatblock"){
r=this._native2LocalFormatNames[this.document.queryCommandValue(_63e)];
}else{
r=this.document.queryCommandValue(_63e);
}
return r;
},_sCall:function(name,args){
return dojo.withGlobal(this.window,name,dijit._editor.selection,args);
},placeCursorAtStart:function(){
this.focus();
var _642=false;
if(dojo.isMoz){
var _643=this.editNode.firstChild;
while(_643){
if(_643.nodeType==3){
if(_643.nodeValue.replace(/^\s+|\s+$/g,"").length>0){
_642=true;
this._sCall("selectElement",[_643]);
break;
}
}else{
if(_643.nodeType==1){
_642=true;
this._sCall("selectElementChildren",[_643]);
break;
}
}
_643=_643.nextSibling;
}
}else{
_642=true;
this._sCall("selectElementChildren",[this.editNode]);
}
if(_642){
this._sCall("collapse",[true]);
}
},placeCursorAtEnd:function(){
this.focus();
var _644=false;
if(dojo.isMoz){
var last=this.editNode.lastChild;
while(last){
if(last.nodeType==3){
if(last.nodeValue.replace(/^\s+|\s+$/g,"").length>0){
_644=true;
this._sCall("selectElement",[last]);
break;
}
}else{
if(last.nodeType==1){
_644=true;
if(last.lastChild){
this._sCall("selectElement",[last.lastChild]);
}else{
this._sCall("selectElement",[last]);
}
break;
}
}
last=last.previousSibling;
}
}else{
_644=true;
this._sCall("selectElementChildren",[this.editNode]);
}
if(_644){
this._sCall("collapse",[false]);
}
},getValue:function(_646){
if(this.textarea){
if(this.isClosed||!this.isLoaded){
return this.textarea.value;
}
}
return this._postFilterContent(null,_646);
},_getValueAttr:function(){
return this.getValue();
},setValue:function(html){
if(!this.isLoaded){
this.onLoadDeferred.addCallback(dojo.hitch(this,function(){
this.setValue(html);
}));
return;
}
if(this.textarea&&(this.isClosed||!this.isLoaded)){
this.textarea.value=html;
}else{
html=this._preFilterContent(html);
var node=this.isClosed?this.domNode:this.editNode;
node.innerHTML=html;
this._preDomFilterContent(node);
}
this.onDisplayChanged();
},replaceValue:function(html){
if(this.isClosed){
this.setValue(html);
}else{
if(this.window&&this.window.getSelection&&!dojo.isMoz){
this.setValue(html);
}else{
if(this.window&&this.window.getSelection){
html=this._preFilterContent(html);
this.execCommand("selectall");
if(dojo.isMoz&&!html){
html="&nbsp;";
}
this.execCommand("inserthtml",html);
this._preDomFilterContent(this.editNode);
}else{
if(this.document&&this.document.selection){
this.setValue(html);
}
}
}
}
},_preFilterContent:function(html){
var ec=html;
dojo.forEach(this.contentPreFilters,function(ef){
if(ef){
ec=ef(ec);
}
});
return ec;
},_preDomFilterContent:function(dom){
dom=dom||this.editNode;
dojo.forEach(this.contentDomPreFilters,function(ef){
if(ef&&dojo.isFunction(ef)){
ef(dom);
}
},this);
},_postFilterContent:function(dom,_650){
var ec;
if(!dojo.isString(dom)){
dom=dom||this.editNode;
if(this.contentDomPostFilters.length){
if(_650){
dom=dojo.clone(dom);
}
dojo.forEach(this.contentDomPostFilters,function(ef){
dom=ef(dom);
});
}
ec=dijit._editor.getChildrenHtml(dom);
}else{
ec=dom;
}
if(!dojo.trim(ec.replace(/^\xA0\xA0*/,"").replace(/\xA0\xA0*$/,"")).length){
ec="";
}
dojo.forEach(this.contentPostFilters,function(ef){
ec=ef(ec);
});
return ec;
},_saveContent:function(e){
var _655=dojo.byId(dijit._scopeName+"._editor.RichText.savedContent");
_655.value+=this._SEPARATOR+this.name+":"+this.getValue();
},escapeXml:function(str,_657){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_657){
str=str.replace(/'/gm,"&#39;");
}
return str;
},getNodeHtml:function(node){
dojo.deprecated("dijit.Editor::getNodeHtml is deprecated","use dijit._editor.getNodeHtml instead",2);
return dijit._editor.getNodeHtml(node);
},getNodeChildrenHtml:function(dom){
dojo.deprecated("dijit.Editor::getNodeChildrenHtml is deprecated","use dijit._editor.getChildrenHtml instead",2);
return dijit._editor.getChildrenHtml(dom);
},close:function(save,_65b){
if(this.isClosed){
return false;
}
if(!arguments.length){
save=true;
}
this._content=this.getValue();
var _65c=(this.savedContent!=this._content);
if(this.interval){
clearInterval(this.interval);
}
if(this.textarea){
with(this.textarea.style){
position="";
left=top="";
if(dojo.isIE){
overflow=this.__overflow;
this.__overflow=null;
}
}
this.textarea.value=save?this._content:this.savedContent;
dojo._destroyElement(this.domNode);
this.domNode=this.textarea;
}else{
this.domNode.innerHTML=save?this._content:this.savedContent;
}
dojo.removeClass(this.domNode,"RichTextEditable");
this.isClosed=true;
this.isLoaded=false;
delete this.editNode;
if(this.window&&this.window._frameElement){
this.window._frameElement=null;
}
this.window=null;
this.document=null;
this.editingArea=null;
this.editorObject=null;
return _65c;
},destroyRendering:function(){
},destroy:function(){
this.destroyRendering();
if(!this.isClosed){
this.close(false);
}
this.inherited("destroy",arguments);
},_removeMozBogus:function(html){
return html.replace(/\stype="_moz"/gi,"").replace(/\s_moz_dirty=""/gi,"");
},_removeSafariBogus:function(html){
return html.replace(/\sclass="webkit-block-placeholder"/gi,"");
},_fixContentForMoz:function(html){
return html.replace(/<(\/)?strong([ \>])/gi,"<$1b$2").replace(/<(\/)?em([ \>])/gi,"<$1i$2");
},_preFixUrlAttributes:function(html){
return html.replace(/(?:(<a(?=\s).*?\shref=)("|')(.*?)\2)|(?:(<a\s.*?href=)([^"'][^ >]+))/gi,"$1$4$2$3$5$2 _djrealurl=$2$3$5$2").replace(/(?:(<img(?=\s).*?\ssrc=)("|')(.*?)\2)|(?:(<img\s.*?src=)([^"'][^ >]+))/gi,"$1$4$2$3$5$2 _djrealurl=$2$3$5$2");
}});
}
if(!dojo._hasResource["dijit.Toolbar"]){
dojo._hasResource["dijit.Toolbar"]=true;
dojo.provide("dijit.Toolbar");
dojo.declare("dijit.Toolbar",[dijit._Widget,dijit._Templated,dijit._KeyNavContainer],{templateString:"<div class=\"dijit dijitToolbar\" waiRole=\"toolbar\" tabIndex=\"${tabIndex}\" dojoAttachPoint=\"containerNode\">"+"</div>",tabIndex:"0",postCreate:function(){
this.connectKeyNavHandlers(this.isLeftToRight()?[dojo.keys.LEFT_ARROW]:[dojo.keys.RIGHT_ARROW],this.isLeftToRight()?[dojo.keys.RIGHT_ARROW]:[dojo.keys.LEFT_ARROW]);
},startup:function(){
if(this._started){
return;
}
this.startupKeyNavChildren();
this.inherited(arguments);
}});
dojo.declare("dijit.ToolbarSeparator",[dijit._Widget,dijit._Templated],{templateString:"<div class=\"dijitToolbarSeparator dijitInline\"></div>",postCreate:function(){
dojo.setSelectable(this.domNode,false);
},isFocusable:function(){
return false;
}});
}
if(!dojo._hasResource["dijit.form._FormWidget"]){
dojo._hasResource["dijit.form._FormWidget"]=true;
dojo.provide("dijit.form._FormWidget");
dojo.declare("dijit.form._FormWidget",[dijit._Widget,dijit._Templated],{baseClass:"",name:"",alt:"",value:"",type:"text",tabIndex:"0",disabled:false,readOnly:false,intermediateChanges:false,attributeMap:dojo.mixin(dojo.clone(dijit._Widget.prototype.attributeMap),{value:"focusNode",disabled:"focusNode",readOnly:"focusNode",id:"focusNode",tabIndex:"focusNode",alt:"focusNode"}),_setDisabledAttr:function(_661){
this.disabled=_661;
dojo.attr(this.focusNode,"disabled",_661);
dijit.setWaiState(this.focusNode,"disabled",_661);
if(_661){
this._hovering=false;
this._active=false;
this.focusNode.removeAttribute("tabIndex");
}else{
this.focusNode.setAttribute("tabIndex",this.tabIndex);
}
this._setStateClass();
},setDisabled:function(_662){
dojo.deprecated("setDisabled("+_662+") is deprecated. Use attr('disabled',"+_662+") instead.","","2.0");
this.attr("disabled",_662);
},_scroll:true,_onFocus:function(e){
if(this._scroll){
dijit.scrollIntoView(this.domNode);
}
this.inherited(arguments);
},_onMouse:function(_664){
var _665=_664.currentTarget;
if(_665&&_665.getAttribute){
this.stateModifier=_665.getAttribute("stateModifier")||"";
}
if(!this.disabled){
switch(_664.type){
case "mouseenter":
case "mouseover":
this._hovering=true;
this._active=this._mouseDown;
break;
case "mouseout":
case "mouseleave":
this._hovering=false;
this._active=false;
break;
case "mousedown":
this._active=true;
this._mouseDown=true;
var _666=this.connect(dojo.body(),"onmouseup",function(){
if(this._mouseDown&&this.isFocusable()){
this.focus();
}
this._active=false;
this._mouseDown=false;
this._setStateClass();
this.disconnect(_666);
});
break;
}
this._setStateClass();
}
},isFocusable:function(){
return !this.disabled&&!this.readOnly&&this.focusNode&&(dojo.style(this.domNode,"display")!="none");
},focus:function(){
dijit.focus(this.focusNode);
},_setStateClass:function(){
var _667=this.baseClass.split(" ");
function multiply(_668){
_667=_667.concat(dojo.map(_667,function(c){
return c+_668;
}),"dijit"+_668);
};
if(this.checked){
multiply("Checked");
}
if(this.state){
multiply(this.state);
}
if(this.selected){
multiply("Selected");
}
if(this.disabled){
multiply("Disabled");
}else{
if(this.readOnly){
multiply("ReadOnly");
}else{
if(this._active){
multiply(this.stateModifier+"Active");
}else{
if(this._focused){
multiply("Focused");
}
if(this._hovering){
multiply(this.stateModifier+"Hover");
}
}
}
}
var tn=this.stateNode||this.domNode,_66b={};
dojo.forEach(tn.className.split(" "),function(c){
_66b[c]=true;
});
if("_stateClasses" in this){
dojo.forEach(this._stateClasses,function(c){
delete _66b[c];
});
}
dojo.forEach(_667,function(c){
_66b[c]=true;
});
var _66f=[];
for(var c in _66b){
_66f.push(c);
}
tn.className=_66f.join(" ");
this._stateClasses=_667;
},compare:function(val1,val2){
if((typeof val1=="number")&&(typeof val2=="number")){
return (isNaN(val1)&&isNaN(val2))?0:(val1-val2);
}else{
if(val1>val2){
return 1;
}else{
if(val1<val2){
return -1;
}else{
return 0;
}
}
}
},onChange:function(_673){
},_onChangeActive:false,_handleOnChange:function(_674,_675){
this._lastValue=_674;
if(this._lastValueReported==undefined&&(_675===null||!this._onChangeActive)){
this._resetValue=this._lastValueReported=_674;
}
if((this.intermediateChanges||_675||_675===undefined)&&((typeof _674!=typeof this._lastValueReported)||this.compare(_674,this._lastValueReported)!=0)){
this._lastValueReported=_674;
if(this._onChangeActive){
this.onChange(_674);
}
}
},create:function(){
this.inherited(arguments);
this._onChangeActive=true;
this._setStateClass();
},destroy:function(){
if(this._layoutHackHandle){
clearTimeout(this._layoutHackHandle);
}
this.inherited(arguments);
},setValue:function(_676){
dojo.deprecated("dijit.form._FormWidget:setValue("+_676+") is deprecated.  Use attr('value',"+_676+") instead.","","2.0");
this.attr("value",_676);
},getValue:function(){
dojo.deprecated(this.declaredClass+"::getValue() is deprecated. Use attr('value') instead.","","2.0");
return this.attr("value");
},_layoutHack:function(){
if(dojo.isFF==2&&!this._layoutHackHandle){
var node=this.domNode;
var old=node.style.opacity;
node.style.opacity="0.999";
this._layoutHackHandle=setTimeout(dojo.hitch(this,function(){
this._layoutHackHandle=null;
node.style.opacity=old;
}),0);
}
}});
dojo.declare("dijit.form._FormValueWidget",dijit.form._FormWidget,{attributeMap:dojo.mixin(dojo.clone(dijit.form._FormWidget.prototype.attributeMap),{value:""}),postCreate:function(){
if(dojo.isIE||dojo.isSafari){
this.connect(this.focusNode||this.domNode,"onkeydown",this._onKeyDown);
}
if(this._resetValue===undefined){
this._resetValue=this.value;
}
},_setValueAttr:function(_679,_67a){
this.value=_679;
this._handleOnChange(_679,_67a);
},_getValueAttr:function(_67b){
return this._lastValue;
},undo:function(){
this._setValueAttr(this._lastValueReported,false);
},reset:function(){
this._hasBeenBlurred=false;
this._setValueAttr(this._resetValue,true);
},_valueChanged:function(){
var v=this.attr("value");
var lv=this._lastValueReported;
return ((v!==null&&(v!==undefined)&&v.toString)?v.toString():"")!==((lv!==null&&(lv!==undefined)&&lv.toString)?lv.toString():"");
},_onKeyDown:function(e){
if(e.keyCode==dojo.keys.ESCAPE&&!e.ctrlKey&&!e.altKey){
var te;
if(dojo.isIE){
e.preventDefault();
te=document.createEventObject();
te.keyCode=dojo.keys.ESCAPE;
te.shiftKey=e.shiftKey;
e.srcElement.fireEvent("onkeypress",te);
}else{
if(dojo.isSafari){
te=document.createEvent("Events");
te.initEvent("keypress",true,true);
te.keyCode=dojo.keys.ESCAPE;
te.shiftKey=e.shiftKey;
e.target.dispatchEvent(te);
}
}
}
},_onKeyPress:function(e){
if(e.charOrCode==dojo.keys.ESCAPE&&!e.ctrlKey&&!e.altKey&&this._valueChanged()){
this.undo();
dojo.stopEvent(e);
return false;
}else{
if(this.intermediateChanges){
var _681=this;
setTimeout(function(){
_681._handleOnChange(_681.attr("value"),false);
},0);
}
}
return true;
}});
}
if(!dojo._hasResource["dijit.form.Button"]){
dojo._hasResource["dijit.form.Button"]=true;
dojo.provide("dijit.form.Button");
dojo.declare("dijit.form.Button",dijit.form._FormWidget,{label:"",showLabel:true,iconClass:"",type:"button",baseClass:"dijitButton",templateString:"<span class=\"dijit dijitReset dijitLeft dijitInline\"\n\tdojoAttachEvent=\"ondijitclick:_onButtonClick,onmouseenter:_onMouse,onmouseleave:_onMouse,onmousedown:_onMouse\"\n\t><span class=\"dijitReset dijitRight dijitInline\"\n\t\t><span class=\"dijitReset dijitInline dijitButtonNode\"\n\t\t\t><button class=\"dijitReset dijitStretch dijitButtonContents\"\n\t\t\t\tdojoAttachPoint=\"titleNode,focusNode\" \n\t\t\t\tname=\"${name}\" type=\"${type}\" waiRole=\"button\" waiState=\"labelledby-${id}_label\"\n\t\t\t\t><span class=\"dijitReset dijitInline\" dojoAttachPoint=\"iconNode\" \n\t\t\t\t\t><span class=\"dijitReset dijitToggleButtonIconChar\">&#10003;</span \n\t\t\t\t></span \n\t\t\t\t><span class=\"dijitReset dijitInline dijitButtonText\" \n\t\t\t\t\tid=\"${id}_label\"  \n\t\t\t\t\tdojoAttachPoint=\"containerNode\"\n\t\t\t\t></span\n\t\t\t></button\n\t\t></span\n\t></span\n></span>\n",attributeMap:dojo.mixin(dojo.clone(dijit.form._FormWidget.prototype.attributeMap),{label:{node:"containerNode",type:"innerHTML"},iconClass:{node:"iconNode",type:"class"}}),_onClick:function(e){
if(this.disabled||this.readOnly){
return false;
}
this._clicked();
return this.onClick(e);
},_onButtonClick:function(e){
if(e.type!="click"&&!(this.type=="submit"||this.type=="reset")){
dojo.stopEvent(e);
}
if(this._onClick(e)===false){
e.preventDefault();
}else{
if(this.type=="submit"&&!this.focusNode.form){
for(var node=this.domNode;node.parentNode;node=node.parentNode){
var _685=dijit.byNode(node);
if(_685&&typeof _685._onSubmit=="function"){
_685._onSubmit(e);
break;
}
}
}
}
},_fillContent:function(_686){
if(_686&&!("label" in this.params)){
this.attr("label",_686.innerHTML);
}
},postCreate:function(){
if(this.showLabel==false){
dojo.addClass(this.containerNode,"dijitDisplayNone");
}
dojo.setSelectable(this.focusNode,false);
this.inherited(arguments);
},onClick:function(e){
return true;
},_clicked:function(e){
},setLabel:function(_689){
dojo.deprecated("dijit.form.Button.setLabel() is deprecated.  Use attr('label', ...) instead.","","2.0");
this.attr("label",_689);
},_setLabelAttr:function(_68a){
this.containerNode.innerHTML=this.label=_68a;
this._layoutHack();
if(this.showLabel==false&&!this.params.title){
this.titleNode.title=dojo.trim(this.containerNode.innerText||this.containerNode.textContent||"");
}
}});
dojo.declare("dijit.form.DropDownButton",[dijit.form.Button,dijit._Container],{baseClass:"dijitDropDownButton",templateString:"<span class=\"dijit dijitReset dijitLeft dijitInline\"\n\tdojoAttachEvent=\"onmouseenter:_onMouse,onmouseleave:_onMouse,onmousedown:_onMouse,onclick:_onDropDownClick,onkeydown:_onDropDownKeydown,onblur:_onDropDownBlur,onkeypress:_onKey\"\n\t><span class='dijitReset dijitRight dijitInline'\n\t\t><span class='dijitReset dijitInline dijitButtonNode'\n\t\t\t><button class=\"dijitReset dijitStretch dijitButtonContents\" \n\t\t\t\ttype=\"${type}\" name=\"${name}\"\n\t\t\t\tdojoAttachPoint=\"focusNode,titleNode\" \n\t\t\t\twaiRole=\"button\" waiState=\"haspopup-true,labelledby-${id}_label\"\n\t\t\t\t><span class=\"dijitReset dijitInline\" \n\t\t\t\t\tdojoAttachPoint=\"iconNode\"\n\t\t\t\t></span\n\t\t\t\t><span class=\"dijitReset dijitInline dijitButtonText\"  \n\t\t\t\t\tdojoAttachPoint=\"containerNode,popupStateNode\" \n\t\t\t\t\tid=\"${id}_label\"\n\t\t\t\t></span\n\t\t\t\t><span class=\"dijitReset dijitInline dijitArrowButtonInner\">&thinsp;</span\n\t\t\t\t><span class=\"dijitReset dijitInline dijitArrowButtonChar\">&#9660;</span\n\t\t\t></button\n\t\t></span\n\t></span\n></span>\n",_fillContent:function(){
if(this.srcNodeRef){
var _68b=dojo.query("*",this.srcNodeRef);
dijit.form.DropDownButton.superclass._fillContent.call(this,_68b[0]);
this.dropDownContainer=this.srcNodeRef;
}
},startup:function(){
if(this._started){
return;
}
if(!this.dropDown){
var _68c=dojo.query("[widgetId]",this.dropDownContainer)[0];
this.dropDown=dijit.byNode(_68c);
delete this.dropDownContainer;
}
dijit.popup.prepare(this.dropDown.domNode);
this.inherited(arguments);
},destroyDescendants:function(){
if(this.dropDown){
this.dropDown.destroyRecursive();
delete this.dropDown;
}
this.inherited(arguments);
},_onArrowClick:function(e){
if(this.disabled||this.readOnly){
return;
}
this._toggleDropDown();
},_onDropDownClick:function(e){
var _68f=dojo.isFF&&dojo.isFF<3&&navigator.appVersion.indexOf("Macintosh")!=-1;
if(!_68f||e.detail!=0||this._seenKeydown){
this._onArrowClick(e);
}
this._seenKeydown=false;
},_onDropDownKeydown:function(e){
this._seenKeydown=true;
},_onDropDownBlur:function(e){
this._seenKeydown=false;
},_onKey:function(e){
if(this.disabled||this.readOnly){
return;
}
if(e.charOrCode==dojo.keys.DOWN_ARROW){
if(!this.dropDown||this.dropDown.domNode.style.visibility=="hidden"){
dojo.stopEvent(e);
this._toggleDropDown();
}
}
},_onBlur:function(){
this._closeDropDown();
this.inherited(arguments);
},_toggleDropDown:function(){
if(this.disabled||this.readOnly){
return;
}
dijit.focus(this.popupStateNode);
var _693=this.dropDown;
if(!_693){
return;
}
if(!this._opened){
if(_693.href&&!_693.isLoaded){
var self=this;
var _695=dojo.connect(_693,"onLoad",function(){
dojo.disconnect(_695);
self._openDropDown();
});
_693._loadCheck(true);
return;
}else{
this._openDropDown();
}
}else{
this._closeDropDown();
}
},_openDropDown:function(){
var _696=this.dropDown;
var _697=_696.domNode.style.width;
var self=this;
dijit.popup.open({parent:this,popup:_696,around:this.domNode,orient:this.isLeftToRight()?{"BL":"TL","BR":"TR","TL":"BL","TR":"BR"}:{"BR":"TR","BL":"TL","TR":"BR","TL":"BL"},onExecute:function(){
self._closeDropDown(true);
},onCancel:function(){
self._closeDropDown(true);
},onClose:function(){
_696.domNode.style.width=_697;
self.popupStateNode.removeAttribute("popupActive");
self._opened=false;
}});
if(this.domNode.offsetWidth>_696.domNode.offsetWidth){
var _699=null;
if(!this.isLeftToRight()){
_699=_696.domNode.parentNode;
var _69a=_699.offsetLeft+_699.offsetWidth;
}
dojo.marginBox(_696.domNode,{w:this.domNode.offsetWidth});
if(_699){
_699.style.left=_69a-this.domNode.offsetWidth+"px";
}
}
this.popupStateNode.setAttribute("popupActive","true");
this._opened=true;
if(_696.focus){
_696.focus();
}
},_closeDropDown:function(_69b){
if(this._opened){
dijit.popup.close(this.dropDown);
if(_69b){
this.focus();
}
this._opened=false;
}
}});
dojo.declare("dijit.form.ComboButton",dijit.form.DropDownButton,{templateString:"<table class='dijit dijitReset dijitInline dijitLeft'\n\tcellspacing='0' cellpadding='0' waiRole=\"presentation\"\n\t><tbody waiRole=\"presentation\"><tr waiRole=\"presentation\"\n\t\t><td class=\"dijitReset dijitStretch dijitButtonContents dijitButtonNode\"\n\t\t\tdojoAttachEvent=\"ondijitclick:_onButtonClick,onmouseenter:_onMouse,onmouseleave:_onMouse,onmousedown:_onMouse\"  dojoAttachPoint=\"titleNode\"\n\t\t\twaiRole=\"button\" waiState=\"labelledby-${id}_label\"\n\t\t\t><div class=\"dijitReset dijitInline\" dojoAttachPoint=\"iconNode\" waiRole=\"presentation\"></div\n\t\t\t><div class=\"dijitReset dijitInline dijitButtonText\" id=\"${id}_label\" dojoAttachPoint=\"containerNode\" waiRole=\"presentation\"></div\n\t\t></td\n\t\t><td class='dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton'\n\t\t\tdojoAttachPoint=\"popupStateNode,focusNode\"\n\t\t\tdojoAttachEvent=\"ondijitclick:_onArrowClick, onkeypress:_onKey,onmouseenter:_onMouse,onmouseleave:_onMouse\"\n\t\t\tstateModifier=\"DownArrow\"\n\t\t\ttitle=\"${optionsTitle}\" name=\"${name}\"\n\t\t\twaiRole=\"button\" waiState=\"haspopup-true\"\n\t\t\t><div class=\"dijitReset dijitArrowButtonInner\" waiRole=\"presentation\">&thinsp;</div\n\t\t\t><div class=\"dijitReset dijitArrowButtonChar\" waiRole=\"presentation\">&#9660;</div\n\t\t></td\n\t></tr></tbody\n></table>\n",attributeMap:dojo.mixin(dojo.clone(dijit.form.Button.prototype.attributeMap),{id:"",name:"",tabIndex:["focusNode","titleNode"]}),optionsTitle:"",baseClass:"dijitComboButton",_focusedNode:null,postCreate:function(){
this.inherited(arguments);
this._focalNodes=[this.titleNode,this.popupStateNode];
dojo.forEach(this._focalNodes,dojo.hitch(this,function(node){
if(dojo.isIE){
this.connect(node,"onactivate",this._onNodeFocus);
this.connect(node,"ondeactivate",this._onNodeBlur);
}else{
this.connect(node,"onfocus",this._onNodeFocus);
this.connect(node,"onblur",this._onNodeBlur);
}
}));
},focusFocalNode:function(node){
this._focusedNode=node;
dijit.focus(node);
},hasNextFocalNode:function(){
return this._focusedNode!==this.getFocalNodes()[1];
},focusNext:function(){
this._focusedNode=this.getFocalNodes()[this._focusedNode?1:0];
dijit.focus(this._focusedNode);
},hasPrevFocalNode:function(){
return this._focusedNode!==this.getFocalNodes()[0];
},focusPrev:function(){
this._focusedNode=this.getFocalNodes()[this._focusedNode?0:1];
dijit.focus(this._focusedNode);
},getFocalNodes:function(){
return this._focalNodes;
},_onNodeFocus:function(evt){
this._focusedNode=evt.currentTarget;
var fnc=this._focusedNode==this.focusNode?"dijitDownArrowButtonFocused":"dijitButtonContentsFocused";
dojo.addClass(this._focusedNode,fnc);
},_onNodeBlur:function(evt){
var fnc=evt.currentTarget==this.focusNode?"dijitDownArrowButtonFocused":"dijitButtonContentsFocused";
dojo.removeClass(evt.currentTarget,fnc);
},_onBlur:function(){
this.inherited(arguments);
this._focusedNode=null;
}});
dojo.declare("dijit.form.ToggleButton",dijit.form.Button,{baseClass:"dijitToggleButton",checked:false,attributeMap:dojo.mixin(dojo.clone(dijit.form.Button.prototype.attributeMap),{checked:"focusNode"}),_clicked:function(evt){
this.attr("checked",!this.checked);
},_setCheckedAttr:function(_6a3){
this.checked=_6a3;
dojo.attr(this.focusNode||this.domNode,"checked",_6a3);
dijit.setWaiState(this.focusNode||this.domNode,"pressed",_6a3);
this._setStateClass();
this._handleOnChange(_6a3,true);
},setChecked:function(_6a4){
dojo.deprecated("setChecked("+_6a4+") is deprecated. Use attr('checked',"+_6a4+") instead.","","2.0");
this.attr("checked",_6a4);
},reset:function(){
this._hasBeenBlurred=false;
this.attr("checked",this.params.checked||false);
}});
}
if(!dojo._hasResource["dijit._editor._Plugin"]){
dojo._hasResource["dijit._editor._Plugin"]=true;
dojo.provide("dijit._editor._Plugin");
dojo.declare("dijit._editor._Plugin",null,{constructor:function(args,node){
if(args){
dojo.mixin(this,args);
}
this._connects=[];
},editor:null,iconClassPrefix:"dijitEditorIcon",button:null,queryCommand:null,command:"",commandArg:null,useDefaultCommand:true,buttonClass:dijit.form.Button,getLabel:function(key){
return this.editor.commands[key];
},_initButton:function(_6a8){
if(this.command.length){
var _6a9=this.getLabel(this.command);
var _6aa=this.iconClassPrefix+" "+this.iconClassPrefix+this.command.charAt(0).toUpperCase()+this.command.substr(1);
if(!this.button){
_6a8=dojo.mixin({label:_6a9,showLabel:false,iconClass:_6aa,dropDown:this.dropDown,tabIndex:"-1"},_6a8||{});
this.button=new this.buttonClass(_6a8);
}
}
},destroy:function(f){
dojo.forEach(this._connects,dojo.disconnect);
},connect:function(o,f,tf){
this._connects.push(dojo.connect(o,f,this,tf));
},updateState:function(){
var _e=this.editor;
var _c=this.command;
if(!_e){
return;
}
if(!_e.isLoaded){
return;
}
if(!_c.length){
return;
}
if(this.button){
try{
var _6b1=_e.queryCommandEnabled(_c);
if(this.enabled!==_6b1){
this.enabled=_6b1;
this.button.attr("disabled",!_6b1);
}
if(typeof this.button.checked=="boolean"){
var _6b2=_e.queryCommandState(_c);
if(this.checked!==_6b2){
this.checked=_6b2;
this.button.attr("checked",_e.queryCommandState(_c));
}
}
}
catch(e){
console.debug(e);
}
}
},setEditor:function(_6b3){
this.editor=_6b3;
this._initButton();
if(this.command.length&&!this.editor.queryCommandAvailable(this.command)){
if(this.button){
this.button.domNode.style.display="none";
}
}
if(this.button&&this.useDefaultCommand){
this.connect(this.button,"onClick",dojo.hitch(this.editor,"execCommand",this.command,this.commandArg));
}
this.connect(this.editor,"onNormalizedDisplayChanged","updateState");
},setToolbar:function(_6b4){
if(this.button){
_6b4.addChild(this.button);
}
}});
}
if(!dojo._hasResource["dijit._editor.plugins.EnterKeyHandling"]){
dojo._hasResource["dijit._editor.plugins.EnterKeyHandling"]=true;
dojo.provide("dijit._editor.plugins.EnterKeyHandling");
dojo.declare("dijit._editor.plugins.EnterKeyHandling",dijit._editor._Plugin,{blockNodeForEnter:"BR",constructor:function(args){
if(args){
dojo.mixin(this,args);
}
},setEditor:function(_6b6){
this.editor=_6b6;
if(this.blockNodeForEnter=="BR"){
if(dojo.isIE){
_6b6.contentDomPreFilters.push(dojo.hitch(this,"regularPsToSingleLinePs"));
_6b6.contentDomPostFilters.push(dojo.hitch(this,"singleLinePsToRegularPs"));
_6b6.onLoadDeferred.addCallback(dojo.hitch(this,"_fixNewLineBehaviorForIE"));
}else{
_6b6.onLoadDeferred.addCallback(dojo.hitch(this,function(d){
try{
this.editor.document.execCommand("insertBrOnReturn",false,true);
}
catch(e){
}
return d;
}));
}
}else{
if(this.blockNodeForEnter){
dojo["require"]("dijit._editor.range");
var h=dojo.hitch(this,this.handleEnterKey);
_6b6.addKeyHandler(13,0,0,h);
_6b6.addKeyHandler(13,0,1,h);
this.connect(this.editor,"onKeyPressed","onKeyPressed");
}
}
},connect:function(o,f,tf){
if(!this._connects){
this._connects=[];
}
this._connects.push(dojo.connect(o,f,this,tf));
},destroy:function(){
dojo.forEach(this._connects,dojo.disconnect);
this._connects=[];
},onKeyPressed:function(e){
if(this._checkListLater){
if(dojo.withGlobal(this.editor.window,"isCollapsed",dijit)){
var _6bd=dojo.withGlobal(this.editor.window,"getAncestorElement",dijit._editor.selection,["LI"]);
if(!_6bd){
dijit._editor.RichText.prototype.execCommand.call(this.editor,"formatblock",this.blockNodeForEnter);
var _6be=dojo.withGlobal(this.editor.window,"getAncestorElement",dijit._editor.selection,[this.blockNodeForEnter]);
if(_6be){
_6be.innerHTML=this.bogusHtmlContent;
if(dojo.isIE){
var r=this.editor.document.selection.createRange();
r.move("character",-1);
r.select();
}
}else{
alert("onKeyPressed: Can not find the new block node");
}
}else{
if(dojo.isMoz){
if(_6bd.parentNode.parentNode.nodeName=="LI"){
_6bd=_6bd.parentNode.parentNode;
}
}
var fc=_6bd.firstChild;
if(fc&&fc.nodeType==1&&(fc.nodeName=="UL"||fc.nodeName=="OL")){
_6bd.insertBefore(fc.ownerDocument.createTextNode(" "),fc);
var _6c1=dijit.range.create();
_6c1.setStart(_6bd.firstChild,0);
var _6c2=dijit.range.getSelection(this.editor.window,true);
_6c2.removeAllRanges();
_6c2.addRange(_6c1);
}
}
}
this._checkListLater=false;
}
if(this._pressedEnterInBlock){
if(this._pressedEnterInBlock.previousSibling){
this.removeTrailingBr(this._pressedEnterInBlock.previousSibling);
}
delete this._pressedEnterInBlock;
}
},bogusHtmlContent:"&nbsp;",blockNodes:/^(?:P|H1|H2|H3|H4|H5|H6|LI)$/,handleEnterKey:function(e){
if(!this.blockNodeForEnter){
return true;
}
var _6c4,_6c5,_6c6,doc=this.editor.document,br;
if(e.shiftKey||this.blockNodeForEnter=="BR"){
var _6c9=dojo.withGlobal(this.editor.window,"getParentElement",dijit._editor.selection);
var _6ca=dijit.range.getAncestor(_6c9,this.blockNodes);
if(_6ca){
if(!e.shiftKey&&_6ca.tagName=="LI"){
return true;
}
_6c4=dijit.range.getSelection(this.editor.window);
_6c5=_6c4.getRangeAt(0);
if(!_6c5.collapsed){
_6c5.deleteContents();
}
if(dijit.range.atBeginningOfContainer(_6ca,_6c5.startContainer,_6c5.startOffset)){
if(e.shiftKey){
br=doc.createElement("br");
_6c6=dijit.range.create();
_6ca.insertBefore(br,_6ca.firstChild);
_6c6.setStartBefore(br.nextSibling);
_6c4.removeAllRanges();
_6c4.addRange(_6c6);
}else{
dojo.place(br,_6ca,"before");
}
}else{
if(dijit.range.atEndOfContainer(_6ca,_6c5.startContainer,_6c5.startOffset)){
_6c6=dijit.range.create();
br=doc.createElement("br");
if(e.shiftKey){
_6ca.appendChild(br);
_6ca.appendChild(doc.createTextNode(" "));
_6c6.setStart(_6ca.lastChild,0);
}else{
dojo.place(br,_6ca,"after");
_6c6.setStartAfter(_6ca);
}
_6c4.removeAllRanges();
_6c4.addRange(_6c6);
}else{
return true;
}
}
}else{
dijit._editor.RichText.prototype.execCommand.call(this.editor,"inserthtml","<br>");
}
return false;
}
var _6cb=true;
_6c4=dijit.range.getSelection(this.editor.window);
_6c5=_6c4.getRangeAt(0);
if(!_6c5.collapsed){
_6c5.deleteContents();
}
var _6cc=dijit.range.getBlockAncestor(_6c5.endContainer,null,this.editor.editNode);
var _6cd=_6cc.blockNode;
if((this._checkListLater=(_6cd&&(_6cd.nodeName=="LI"||_6cd.parentNode.nodeName=="LI")))){
if(dojo.isMoz){
this._pressedEnterInBlock=_6cd;
}
if(/^(?:\s|&nbsp;)$/.test(_6cd.innerHTML)){
_6cd.innerHTML="";
}
return true;
}
if(!_6cc.blockNode||_6cc.blockNode===this.editor.editNode){
dijit._editor.RichText.prototype.execCommand.call(this.editor,"formatblock",this.blockNodeForEnter);
_6cc={blockNode:dojo.withGlobal(this.editor.window,"getAncestorElement",dijit._editor.selection,[this.blockNodeForEnter]),blockContainer:this.editor.editNode};
if(_6cc.blockNode){
if(!(_6cc.blockNode.textContent||_6cc.blockNode.innerHTML).replace(/^\s+|\s+$/g,"").length){
this.removeTrailingBr(_6cc.blockNode);
return false;
}
}else{
_6cc.blockNode=this.editor.editNode;
}
_6c4=dijit.range.getSelection(this.editor.window);
_6c5=_6c4.getRangeAt(0);
}
var _6ce=doc.createElement(this.blockNodeForEnter);
_6ce.innerHTML=this.bogusHtmlContent;
this.removeTrailingBr(_6cc.blockNode);
if(dijit.range.atEndOfContainer(_6cc.blockNode,_6c5.endContainer,_6c5.endOffset)){
if(_6cc.blockNode===_6cc.blockContainer){
_6cc.blockNode.appendChild(_6ce);
}else{
dojo.place(_6ce,_6cc.blockNode,"after");
}
_6cb=false;
_6c6=dijit.range.create();
_6c6.setStart(_6ce,0);
_6c4.removeAllRanges();
_6c4.addRange(_6c6);
if(this.editor.height){
_6ce.scrollIntoView(false);
}
}else{
if(dijit.range.atBeginningOfContainer(_6cc.blockNode,_6c5.startContainer,_6c5.startOffset)){
dojo.place(_6ce,_6cc.blockNode,_6cc.blockNode===_6cc.blockContainer?"first":"before");
if(_6ce.nextSibling&&this.editor.height){
_6ce.nextSibling.scrollIntoView(false);
}
_6cb=false;
}else{
if(dojo.isMoz){
this._pressedEnterInBlock=_6cc.blockNode;
}
}
}
return _6cb;
},removeTrailingBr:function(_6cf){
var para=/P|DIV|LI/i.test(_6cf.tagName)?_6cf:dijit._editor.selection.getParentOfType(_6cf,["P","DIV","LI"]);
if(!para){
return;
}
if(para.lastChild){
if((para.childNodes.length>1&&para.lastChild.nodeType==3&&/^[\s\xAD]*$/.test(para.lastChild.nodeValue))||(para.lastChild&&para.lastChild.tagName=="BR")){
dojo._destroyElement(para.lastChild);
}
}
if(!para.childNodes.length){
para.innerHTML=this.bogusHtmlContent;
}
},_fixNewLineBehaviorForIE:function(d){
if(this.editor.document.__INSERTED_EDITIOR_NEWLINE_CSS===undefined){
var _6d2="p{margin:0 !important;}";
var _6d3=function(_6d4,doc,URI){
if(!_6d4){
return null;
}
if(!doc){
doc=document;
}
var _6d7=doc.createElement("style");
_6d7.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
console.debug("No head tag in document, aborting styles");
return null;
}else{
head.appendChild(_6d7);
}
if(_6d7.styleSheet){
var _6d9=function(){
try{
_6d7.styleSheet.cssText=_6d4;
}
catch(e){
console.debug(e);
}
};
if(_6d7.styleSheet.disabled){
setTimeout(_6d9,10);
}else{
_6d9();
}
}else{
var _6da=doc.createTextNode(_6d4);
_6d7.appendChild(_6da);
}
return _6d7;
};
_6d3(_6d2,this.editor.document);
this.editor.document.__INSERTED_EDITIOR_NEWLINE_CSS=true;
return d;
}
return null;
},regularPsToSingleLinePs:function(_6db,_6dc){
function wrapLinesInPs(el){
function wrapNodes(_6de){
var newP=_6de[0].ownerDocument.createElement("p");
_6de[0].parentNode.insertBefore(newP,_6de[0]);
dojo.forEach(_6de,function(node){
newP.appendChild(node);
});
};
var _6e1=0;
var _6e2=[];
var _6e3;
while(_6e1<el.childNodes.length){
_6e3=el.childNodes[_6e1];
if(_6e3.nodeType==3||(_6e3.nodeType==1&&_6e3.nodeName!="BR"&&dojo.style(_6e3,"display")!="block")){
_6e2.push(_6e3);
}else{
var _6e4=_6e3.nextSibling;
if(_6e2.length){
wrapNodes(_6e2);
_6e1=(_6e1+1)-_6e2.length;
if(_6e3.nodeName=="BR"){
dojo._destroyElement(_6e3);
}
}
_6e2=[];
}
_6e1++;
}
if(_6e2.length){
wrapNodes(_6e2);
}
};
function splitP(el){
var _6e6=null;
var _6e7=[];
var _6e8=el.childNodes.length-1;
for(var i=_6e8;i>=0;i--){
_6e6=el.childNodes[i];
if(_6e6.nodeName=="BR"){
var newP=_6e6.ownerDocument.createElement("p");
dojo.place(newP,el,"after");
if(_6e7.length==0&&i!=_6e8){
newP.innerHTML="&nbsp;";
}
dojo.forEach(_6e7,function(node){
newP.appendChild(node);
});
dojo._destroyElement(_6e6);
_6e7=[];
}else{
_6e7.unshift(_6e6);
}
}
};
var _6ec=[];
var ps=_6db.getElementsByTagName("p");
dojo.forEach(ps,function(p){
_6ec.push(p);
});
dojo.forEach(_6ec,function(p){
if((p.previousSibling)&&(p.previousSibling.nodeName=="P"||dojo.style(p.previousSibling,"display")!="block")){
var newP=p.parentNode.insertBefore(this.document.createElement("p"),p);
newP.innerHTML=_6dc?"":"&nbsp;";
}
splitP(p);
},this.editor);
wrapLinesInPs(_6db);
return _6db;
},singleLinePsToRegularPs:function(_6f1){
function getParagraphParents(node){
var ps=node.getElementsByTagName("p");
var _6f4=[];
for(var i=0;i<ps.length;i++){
var p=ps[i];
var _6f7=false;
for(var k=0;k<_6f4.length;k++){
if(_6f4[k]===p.parentNode){
_6f7=true;
break;
}
}
if(!_6f7){
_6f4.push(p.parentNode);
}
}
return _6f4;
};
function isParagraphDelimiter(node){
if(node.nodeType!=1||node.tagName!="P"){
return dojo.style(node,"display")=="block";
}else{
if(!node.childNodes.length||node.innerHTML=="&nbsp;"){
return true;
}
}
return false;
};
var _6fa=getParagraphParents(_6f1);
for(var i=0;i<_6fa.length;i++){
var _6fc=_6fa[i];
var _6fd=null;
var node=_6fc.firstChild;
var _6ff=null;
while(node){
if(node.nodeType!="1"||node.tagName!="P"){
_6fd=null;
}else{
if(isParagraphDelimiter(node)){
_6ff=node;
_6fd=null;
}else{
if(_6fd==null){
_6fd=node;
}else{
if((!_6fd.lastChild||_6fd.lastChild.nodeName!="BR")&&(node.firstChild)&&(node.firstChild.nodeName!="BR")){
_6fd.appendChild(this.editor.document.createElement("br"));
}
while(node.firstChild){
_6fd.appendChild(node.firstChild);
}
_6ff=node;
}
}
}
node=node.nextSibling;
if(_6ff){
dojo._destroyElement(_6ff);
_6ff=null;
}
}
}
return _6f1;
}});
}
if(!dojo._hasResource["dijit.Editor"]){
dojo._hasResource["dijit.Editor"]=true;
dojo.provide("dijit.Editor");
dojo.declare("dijit.Editor",dijit._editor.RichText,{plugins:null,extraPlugins:null,constructor:function(){
if(!dojo.isArray(this.plugins)){
this.plugins=["undo","redo","|","cut","copy","paste","|","bold","italic","underline","strikethrough","|","insertOrderedList","insertUnorderedList","indent","outdent","|","justifyLeft","justifyRight","justifyCenter","justifyFull","dijit._editor.plugins.EnterKeyHandling"];
}
this._plugins=[];
this._editInterval=this.editActionInterval*1000;
if(dojo.isIE){
this.events.push("onBeforeDeactivate");
}
},postCreate:function(){
if(this.customUndo){
dojo["require"]("dijit._editor.range");
this._steps=this._steps.slice(0);
this._undoedSteps=this._undoedSteps.slice(0);
}
if(dojo.isArray(this.extraPlugins)){
this.plugins=this.plugins.concat(this.extraPlugins);
}
this.inherited(arguments);
this.commands=dojo.i18n.getLocalization("dijit._editor","commands",this.lang);
if(!this.toolbar){
this.toolbar=new dijit.Toolbar({});
dojo.place(this.toolbar.domNode,this.editingArea,"before");
}
dojo.forEach(this.plugins,this.addPlugin,this);
this.onNormalizedDisplayChanged();
this.toolbar.startup();
},destroy:function(){
dojo.forEach(this._plugins,function(p){
if(p&&p.destroy){
p.destroy();
}
});
this._plugins=[];
this.toolbar.destroy();
delete this.toolbar;
this.inherited(arguments);
},addPlugin:function(_701,_702){
var args=dojo.isString(_701)?{name:_701}:_701;
if(!args.setEditor){
var o={"args":args,"plugin":null,"editor":this};
dojo.publish(dijit._scopeName+".Editor.getPlugin",[o]);
if(!o.plugin){
var pc=dojo.getObject(args.name);
if(pc){
o.plugin=new pc(args);
}
}
if(!o.plugin){
console.warn("Cannot find plugin",_701);
return;
}
_701=o.plugin;
}
if(arguments.length>1){
this._plugins[_702]=_701;
}else{
this._plugins.push(_701);
}
_701.setEditor(this);
if(dojo.isFunction(_701.setToolbar)){
_701.setToolbar(this.toolbar);
}
},startup:function(){
},resize:function(){
dijit.layout._LayoutWidget.prototype.resize.apply(this,arguments);
},layout:function(){
this.editingArea.style.height=(this._contentBox.h-dojo.marginBox(this.toolbar.domNode).h)+"px";
if(this.iframe){
this.iframe.style.height="100%";
}
this._layoutMode=true;
},onBeforeDeactivate:function(e){
if(this.customUndo){
this.endEditing(true);
}
this._saveSelection();
},customUndo:dojo.isIE,editActionInterval:3,beginEditing:function(cmd){
if(!this._inEditing){
this._inEditing=true;
this._beginEditing(cmd);
}
if(this.editActionInterval>0){
if(this._editTimer){
clearTimeout(this._editTimer);
}
this._editTimer=setTimeout(dojo.hitch(this,this.endEditing),this._editInterval);
}
},_steps:[],_undoedSteps:[],execCommand:function(cmd){
if(this.customUndo&&(cmd=="undo"||cmd=="redo")){
return this[cmd]();
}else{
if(this.customUndo){
this.endEditing();
this._beginEditing();
}
try{
var r=this.inherited("execCommand",arguments);
if(dojo.isSafari&&cmd=="paste"&&!r){
var su=dojo.string.substitute,_isM=navigator.userAgent.indexOf("Macintosh")!=-1;
alert(su(this.commands.systemShortcut,[this.commands[cmd],su(this.commands[_isM?"appleKey":"ctrlKey"],["V"])]));
}
}
catch(e){
if(dojo.isMoz&&/copy|cut|paste/.test(cmd)){
var sub=dojo.string.substitute,_70d={cut:"X",copy:"C",paste:"V"},_70e=navigator.userAgent.indexOf("Macintosh")!=-1;
alert(sub(this.commands.systemShortcutFF,[this.commands[cmd],sub(this.commands[_70e?"appleKey":"ctrlKey"],[_70d[cmd]])]));
}
r=false;
}
if(this.customUndo){
this._endEditing();
}
return r;
}
},queryCommandEnabled:function(cmd){
if(this.customUndo&&(cmd=="undo"||cmd=="redo")){
return cmd=="undo"?(this._steps.length>1):(this._undoedSteps.length>0);
}else{
return this.inherited("queryCommandEnabled",arguments);
}
},focus:function(){
var _710=0;
if(this._savedSelection&&dojo.isIE){
_710=dijit._curFocus!=this.editNode;
}
this.inherited(arguments);
if(_710){
this._restoreSelection();
}
},_moveToBookmark:function(b){
var _712=b;
if(dojo.isIE){
if(dojo.isArray(b)){
_712=[];
dojo.forEach(b,function(n){
_712.push(dijit.range.getNode(n,this.editNode));
},this);
}
}else{
var r=dijit.range.create();
r.setStart(dijit.range.getNode(b.startContainer,this.editNode),b.startOffset);
r.setEnd(dijit.range.getNode(b.endContainer,this.editNode),b.endOffset);
_712=r;
}
dojo.withGlobal(this.window,"moveToBookmark",dijit,[_712]);
},_changeToStep:function(from,to){
this.setValue(to.text);
var b=to.bookmark;
if(!b){
return;
}
this._moveToBookmark(b);
},undo:function(){
this.endEditing(true);
var s=this._steps.pop();
if(this._steps.length>0){
this.focus();
this._changeToStep(s,this._steps[this._steps.length-1]);
this._undoedSteps.push(s);
this.onDisplayChanged();
return true;
}
return false;
},redo:function(){
this.endEditing(true);
var s=this._undoedSteps.pop();
if(s&&this._steps.length>0){
this.focus();
this._changeToStep(this._steps[this._steps.length-1],s);
this._steps.push(s);
this.onDisplayChanged();
return true;
}
return false;
},endEditing:function(_71a){
if(this._editTimer){
clearTimeout(this._editTimer);
}
if(this._inEditing){
this._endEditing(_71a);
this._inEditing=false;
}
},_getBookmark:function(){
var b=dojo.withGlobal(this.window,dijit.getBookmark);
var tmp=[];
if(dojo.isIE){
if(dojo.isArray(b)){
dojo.forEach(b,function(n){
tmp.push(dijit.range.getIndex(n,this.editNode).o);
},this);
b=tmp;
}
}else{
tmp=dijit.range.getIndex(b.startContainer,this.editNode).o;
b={startContainer:tmp,startOffset:b.startOffset,endContainer:b.endContainer===b.startContainer?tmp:dijit.range.getIndex(b.endContainer,this.editNode).o,endOffset:b.endOffset};
}
return b;
},_beginEditing:function(cmd){
if(this._steps.length===0){
this._steps.push({"text":this.savedContent,"bookmark":this._getBookmark()});
}
},_endEditing:function(_71f){
var v=this.getValue(true);
this._undoedSteps=[];
this._steps.push({text:v,bookmark:this._getBookmark()});
},onKeyDown:function(e){
if(!dojo.isIE&&!this.iframe&&e.keyCode==dojo.keys.TAB&&!this.tabIndent){
this._saveSelection();
}
if(!this.customUndo){
this.inherited("onKeyDown",arguments);
return;
}
var k=e.keyCode,ks=dojo.keys;
if(e.ctrlKey&&!e.altKey){
if(k==90||k==122){
dojo.stopEvent(e);
this.undo();
return;
}else{
if(k==89||k==121){
dojo.stopEvent(e);
this.redo();
return;
}
}
}
this.inherited("onKeyDown",arguments);
switch(k){
case ks.ENTER:
case ks.BACKSPACE:
case ks.DELETE:
this.beginEditing();
break;
case 88:
case 86:
if(e.ctrlKey&&!e.altKey&&!e.metaKey){
this.endEditing();
if(e.keyCode==88){
this.beginEditing("cut");
setTimeout(dojo.hitch(this,this.endEditing),1);
}else{
this.beginEditing("paste");
setTimeout(dojo.hitch(this,this.endEditing),1);
}
break;
}
default:
if(!e.ctrlKey&&!e.altKey&&!e.metaKey&&(e.keyCode<dojo.keys.F1||e.keyCode>dojo.keys.F15)){
this.beginEditing();
break;
}
case ks.ALT:
this.endEditing();
break;
case ks.UP_ARROW:
case ks.DOWN_ARROW:
case ks.LEFT_ARROW:
case ks.RIGHT_ARROW:
case ks.HOME:
case ks.END:
case ks.PAGE_UP:
case ks.PAGE_DOWN:
this.endEditing(true);
break;
case ks.CTRL:
case ks.SHIFT:
case ks.TAB:
break;
}
},_onBlur:function(){
this.inherited("_onBlur",arguments);
this.endEditing(true);
},_saveSelection:function(){
this._savedSelection=this._getBookmark();
},_restoreSelection:function(){
if(this._savedSelection){
this._moveToBookmark(this._savedSelection);
delete this._savedSelection;
}
},_onFocus:function(){
this._restoreSelection();
this.inherited(arguments);
},onClick:function(){
this.endEditing(true);
this.inherited("onClick",arguments);
}});
dojo.subscribe(dijit._scopeName+".Editor.getPlugin",null,function(o){
if(o.plugin){
return;
}
var args=o.args,p;
var _p=dijit._editor._Plugin;
var name=args.name;
switch(name){
case "undo":
case "redo":
case "cut":
case "copy":
case "paste":
case "insertOrderedList":
case "insertUnorderedList":
case "indent":
case "outdent":
case "justifyCenter":
case "justifyFull":
case "justifyLeft":
case "justifyRight":
case "delete":
case "selectAll":
case "removeFormat":
case "unlink":
case "insertHorizontalRule":
p=new _p({command:name});
break;
case "bold":
case "italic":
case "underline":
case "strikethrough":
case "subscript":
case "superscript":
p=new _p({buttonClass:dijit.form.ToggleButton,command:name});
break;
case "|":
p=new _p({button:new dijit.ToolbarSeparator()});
}
o.plugin=p;
});
}
if(!dojo._hasResource["dijit.form.TextBox"]){
dojo._hasResource["dijit.form.TextBox"]=true;
dojo.provide("dijit.form.TextBox");
dojo.declare("dijit.form.TextBox",dijit.form._FormValueWidget,{trim:false,uppercase:false,lowercase:false,propercase:false,maxLength:"",templateString:"<input class=\"dijit dijitReset dijitLeft\" dojoAttachPoint='textbox,focusNode' name=\"${name}\"\n\tdojoAttachEvent='onmouseenter:_onMouse,onmouseleave:_onMouse,onfocus:_onMouse,onblur:_onMouse,onkeypress:_onKeyPress'\n\tautocomplete=\"off\" type=\"${type}\"\n\t/>\n",baseClass:"dijitTextBox",attributeMap:dojo.mixin(dojo.clone(dijit.form._FormValueWidget.prototype.attributeMap),{maxLength:"focusNode"}),_getValueAttr:function(){
return this.parse(this.attr("displayedValue"),this.constraints);
},_setValueAttr:function(_729,_72a,_72b){
var _72c;
if(_729!==undefined){
_72c=this.filter(_729);
if(_72c!==null&&((typeof _72c!="number")||!isNaN(_72c))){
if(typeof _72b!="string"){
_72b=this.format(_72c,this.constraints);
}
}else{
_72b="";
}
}
if(_72b!=null&&_72b!=undefined){
this.textbox.value=_72b;
}
dijit.form.TextBox.superclass._setValueAttr.call(this,_72c,_72a);
},displayedValue:"",getDisplayedValue:function(){
dojo.deprecated(this.declaredClass+"::getDisplayedValue() is deprecated. Use attr('displayedValue') instead.","","2.0");
return this.attr("displayedValue");
},_getDisplayedValueAttr:function(){
return this.filter(this.textbox.value);
},setDisplayedValue:function(_72d){
dojo.deprecated(this.declaredClass+"::setDisplayedValue() is deprecated. Use attr('displayedValue', ...) instead.","","2.0");
this.attr("displayedValue",_72d);
},_setDisplayedValueAttr:function(_72e){
this.textbox.value=_72e;
this._setValueAttr(this.attr("value"));
},format:function(_72f,_730){
return ((_72f==null||_72f==undefined)?"":(_72f.toString?_72f.toString():_72f));
},parse:function(_731,_732){
return _731;
},postCreate:function(){
this.textbox.setAttribute("value",this.textbox.value);
this.inherited(arguments);
this._layoutHack();
},filter:function(val){
if(typeof val!="string"){
return val;
}
if(this.trim){
val=dojo.trim(val);
}
if(this.uppercase){
val=val.toUpperCase();
}
if(this.lowercase){
val=val.toLowerCase();
}
if(this.propercase){
val=val.replace(/[^\s]+/g,function(word){
return word.substring(0,1).toUpperCase()+word.substring(1);
});
}
return val;
},_setBlurValue:function(){
this._setValueAttr(this.attr("value"),(this.isValid?this.isValid():true));
},_onBlur:function(){
this._setBlurValue();
this.inherited(arguments);
}});
dijit.selectInputText=function(_735,_736,stop){
var _738=dojo.global;
var _739=dojo.doc;
_735=dojo.byId(_735);
if(isNaN(_736)){
_736=0;
}
if(isNaN(stop)){
stop=_735.value?_735.value.length:0;
}
_735.focus();
if(_739["selection"]&&dojo.body()["createTextRange"]){
if(_735.createTextRange){
var _73a=_735.createTextRange();
with(_73a){
collapse(true);
moveStart("character",_736);
moveEnd("character",stop);
select();
}
}
}else{
if(_738["getSelection"]){
var _73b=_738.getSelection();
if(_735.setSelectionRange){
_735.setSelectionRange(_736,stop);
}
}
}
};
}
if(!dojo._hasResource["dijit.Tooltip"]){
dojo._hasResource["dijit.Tooltip"]=true;
dojo.provide("dijit.Tooltip");
dojo.declare("dijit._MasterTooltip",[dijit._Widget,dijit._Templated],{duration:dijit.defaultDuration,templateString:"<div class=\"dijitTooltip dijitTooltipLeft\" id=\"dojoTooltip\">\n\t<div class=\"dijitTooltipContainer dijitTooltipContents\" dojoAttachPoint=\"containerNode\" waiRole='alert'></div>\n\t<div class=\"dijitTooltipConnector\"></div>\n</div>\n",postCreate:function(){
dojo.body().appendChild(this.domNode);
this.bgIframe=new dijit.BackgroundIframe(this.domNode);
this.fadeIn=dojo.fadeIn({node:this.domNode,duration:this.duration,onEnd:dojo.hitch(this,"_onShow")});
this.fadeOut=dojo.fadeOut({node:this.domNode,duration:this.duration,onEnd:dojo.hitch(this,"_onHide")});
},show:function(_73c,_73d,_73e){
if(this.aroundNode&&this.aroundNode===_73d){
return;
}
if(this.fadeOut.status()=="playing"){
this._onDeck=arguments;
return;
}
this.containerNode.innerHTML=_73c;
this.domNode.style.top=(this.domNode.offsetTop+1)+"px";
var _73f={};
var ltr=this.isLeftToRight();
dojo.forEach((_73e&&_73e.length)?_73e:dijit.Tooltip.defaultPosition,function(pos){
switch(pos){
case "after":
_73f[ltr?"BR":"BL"]=ltr?"BL":"BR";
break;
case "before":
_73f[ltr?"BL":"BR"]=ltr?"BR":"BL";
break;
case "below":
_73f[ltr?"BL":"BR"]=ltr?"TL":"TR";
_73f[ltr?"BR":"BL"]=ltr?"TR":"TL";
break;
case "above":
default:
_73f[ltr?"TL":"TR"]=ltr?"BL":"BR";
_73f[ltr?"TR":"TL"]=ltr?"BR":"BL";
break;
}
});
var pos=dijit.placeOnScreenAroundElement(this.domNode,_73d,_73f,dojo.hitch(this,"orient"));
dojo.style(this.domNode,"opacity",0);
this.fadeIn.play();
this.isShowingNow=true;
this.aroundNode=_73d;
},orient:function(node,_744,_745){
node.className="dijitTooltip "+{"BL-TL":"dijitTooltipBelow dijitTooltipABLeft","TL-BL":"dijitTooltipAbove dijitTooltipABLeft","BR-TR":"dijitTooltipBelow dijitTooltipABRight","TR-BR":"dijitTooltipAbove dijitTooltipABRight","BR-BL":"dijitTooltipRight","BL-BR":"dijitTooltipLeft"}[_744+"-"+_745];
},_onShow:function(){
if(dojo.isIE){
this.domNode.style.filter="";
}
},hide:function(_746){
if(this._onDeck&&this._onDeck[1]==_746){
this._onDeck=null;
}else{
if(this.aroundNode===_746){
this.fadeIn.stop();
this.isShowingNow=false;
this.aroundNode=null;
this.fadeOut.play();
}else{
}
}
},_onHide:function(){
this.domNode.style.cssText="";
if(this._onDeck){
this.show.apply(this,this._onDeck);
this._onDeck=null;
}
}});
dijit.showTooltip=function(_747,_748,_749){
if(!dijit._masterTT){
dijit._masterTT=new dijit._MasterTooltip();
}
return dijit._masterTT.show(_747,_748,_749);
};
dijit.hideTooltip=function(_74a){
if(!dijit._masterTT){
dijit._masterTT=new dijit._MasterTooltip();
}
return dijit._masterTT.hide(_74a);
};
dojo.declare("dijit.Tooltip",dijit._Widget,{label:"",showDelay:400,connectId:[],position:[],postCreate:function(){
dojo.addClass(this.domNode,"dijitTooltipData");
this._connectNodes=[];
dojo.forEach(this.connectId,function(id){
var node=dojo.byId(id);
if(node){
this._connectNodes.push(node);
dojo.forEach(["onMouseEnter","onMouseLeave","onFocus","onBlur"],function(_74d){
this.connect(node,_74d.toLowerCase(),"_"+_74d);
},this);
if(dojo.isIE){
node.style.zoom=1;
}
}
},this);
},_onMouseEnter:function(e){
this._onHover(e);
},_onMouseLeave:function(e){
this._onUnHover(e);
},_onFocus:function(e){
this._focus=true;
this._onHover(e);
this.inherited(arguments);
},_onBlur:function(e){
this._focus=false;
this._onUnHover(e);
this.inherited(arguments);
},_onHover:function(e){
if(!this._showTimer){
var _753=e.target;
this._showTimer=setTimeout(dojo.hitch(this,function(){
this.open(_753);
}),this.showDelay);
}
},_onUnHover:function(e){
if(this._focus){
return;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
this.close();
},open:function(_755){
_755=_755||this._connectNodes[0];
if(!_755){
return;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
dijit.showTooltip(this.label||this.domNode.innerHTML,_755,this.position);
this._connectNode=_755;
},close:function(){
if(this._connectNode){
dijit.hideTooltip(this._connectNode);
delete this._connectNode;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
},uninitialize:function(){
this.close();
}});
dijit.Tooltip.defaultPosition=["after","before"];
}
if(!dojo._hasResource["dijit.form.ValidationTextBox"]){
dojo._hasResource["dijit.form.ValidationTextBox"]=true;
dojo.provide("dijit.form.ValidationTextBox");
dojo.declare("dijit.form.ValidationTextBox",dijit.form.TextBox,{templateString:"<div class=\"dijit dijitReset dijitInlineTable dijitLeft\"\n\tid=\"widget_${id}\"\n\tdojoAttachEvent=\"onmouseenter:_onMouse,onmouseleave:_onMouse,onmousedown:_onMouse\" waiRole=\"presentation\"\n\t><div style=\"overflow:hidden;\"\n\t\t><div class=\"dijitReset dijitValidationIcon\"><br></div\n\t\t><div class=\"dijitReset dijitValidationIconText\">&Chi;</div\n\t\t><div class=\"dijitReset dijitInputField\"\n\t\t\t><input class=\"dijitReset\" dojoAttachPoint='textbox,focusNode' dojoAttachEvent='onfocus:_update,onkeyup:_update,onblur:_onMouse,onkeypress:_onKeyPress' autocomplete=\"off\"\n\t\t\ttype='${type}' name='${name}'\n\t\t/></div\n\t></div\n></div>\n",baseClass:"dijitTextBox",required:false,promptMessage:"",invalidMessage:"$_unset_$",constraints:{},regExp:".*",regExpGen:function(_756){
return this.regExp;
},state:"",tooltipPosition:[],_setValueAttr:function(){
this.inherited(arguments);
this.validate(this._focused);
},validator:function(_757,_758){
return (new RegExp("^(?:"+this.regExpGen(_758)+")"+(this.required?"":"?")+"$")).test(_757)&&(!this.required||!this._isEmpty(_757))&&(this._isEmpty(_757)||this.parse(_757,_758)!==undefined);
},_isValidSubset:function(){
return this.textbox.value.search(this._partialre)==0;
},isValid:function(_759){
return this.validator(this.textbox.value,this.constraints);
},_isEmpty:function(_75a){
return /^\s*$/.test(_75a);
},getErrorMessage:function(_75b){
return this.invalidMessage;
},getPromptMessage:function(_75c){
return this.promptMessage;
},_maskValidSubsetError:true,validate:function(_75d){
var _75e="";
var _75f=this.disabled||this.isValid(_75d);
if(_75f){
this._maskValidSubsetError=true;
}
var _760=!_75f&&_75d&&this._isValidSubset();
var _761=this._isEmpty(this.textbox.value);
this.state=(_75f||(!this._hasBeenBlurred&&_761)||_760)?"":"Error";
if(this.state=="Error"){
this._maskValidSubsetError=false;
}
this._setStateClass();
dijit.setWaiState(this.focusNode,"invalid",_75f?"false":"true");
if(_75d){
if(_761){
_75e=this.getPromptMessage(true);
}
if(!_75e&&(this.state=="Error"||(_760&&!this._maskValidSubsetError))){
_75e=this.getErrorMessage(true);
}
}
this.displayMessage(_75e);
return _75f;
},_message:"",displayMessage:function(_762){
if(this._message==_762){
return;
}
this._message=_762;
dijit.hideTooltip(this.domNode);
if(_762){
dijit.showTooltip(_762,this.domNode,this.tooltipPosition);
}
},_refreshState:function(){
this.validate(this._focused);
},_update:function(e){
this._refreshState();
this._onMouse(e);
},constructor:function(){
this.constraints={};
},postMixInProperties:function(){
this.inherited(arguments);
this.constraints.locale=this.lang;
this.messages=dojo.i18n.getLocalization("dijit.form","validate",this.lang);
if(this.invalidMessage=="$_unset_$"){
this.invalidMessage=this.messages.invalidMessage;
}
var p=this.regExpGen(this.constraints);
this.regExp=p;
var _765="";
if(p!=".*"){
this.regExp.replace(/\\.|\[\]|\[.*?[^\\]{1}\]|\{.*?\}|\(\?[=:!]|./g,function(re){
switch(re.charAt(0)){
case "{":
case "+":
case "?":
case "*":
case "^":
case "$":
case "|":
case "(":
_765+=re;
break;
case ")":
_765+="|$)";
break;
default:
_765+="(?:"+re+"|$)";
break;
}
});
}
try{
"".search(_765);
}
catch(e){
_765=this.regExp;
console.debug("RegExp error in "+this.declaredClass+": "+this.regExp);
}
this._partialre="^(?:"+_765+")$";
},_setDisabledAttr:function(_767){
this.inherited(arguments);
if(this.valueNode){
this.valueNode.disabled=_767;
}
this._refreshState();
},_setRequiredAttr:function(_768){
this.required=_768;
dijit.setWaiState(this.focusNode,"required",_768);
this._refreshState();
},postCreate:function(){
if(dojo.isIE){
var s=dojo.getComputedStyle(this.focusNode);
if(s){
var ff=s.fontFamily;
if(ff){
this.focusNode.style.fontFamily=ff;
}
}
}
this.inherited(arguments);
}});
dojo.declare("dijit.form.MappedTextBox",dijit.form.ValidationTextBox,{serialize:function(val,_76c){
return val.toString?val.toString():"";
},toString:function(){
var val=this.filter(this.attr("value"));
return val!=null?(typeof val=="string"?val:this.serialize(val,this.constraints)):"";
},validate:function(){
this.valueNode.value=this.toString();
return this.inherited(arguments);
},buildRendering:function(){
this.inherited(arguments);
var _76e=this.textbox;
var _76f=(this.valueNode=dojo.doc.createElement("input"));
_76f.setAttribute("type",_76e.type);
dojo.style(_76f,"display","none");
this.valueNode.name=this.textbox.name;
dojo.place(_76f,_76e,"after");
this.textbox.name=this.textbox.name+"_displayed_";
this.textbox.removeAttribute("name");
},_setDisabledAttr:function(_770){
this.inherited(arguments);
dojo.attr(this.valueNode,"disabled",_770);
}});
dojo.declare("dijit.form.RangeBoundTextBox",dijit.form.MappedTextBox,{rangeMessage:"",rangeCheck:function(_771,_772){
var _773="min" in _772;
var _774="max" in _772;
if(_773||_774){
return (!_773||this.compare(_771,_772.min)>=0)&&(!_774||this.compare(_771,_772.max)<=0);
}
return true;
},isInRange:function(_775){
return this.rangeCheck(this.attr("value"),this.constraints);
},_isDefinitelyOutOfRange:function(){
var val=this.attr("value");
var _777=false;
var _778=false;
if("min" in this.constraints){
var min=this.constraints.min;
val=this.compare(val,((typeof min=="number")&&min>=0&&val!=0)?0:min);
_777=(typeof val=="number")&&val<0;
}
if("max" in this.constraints){
var max=this.constraints.max;
val=this.compare(val,((typeof max!="number")||max>0)?max:0);
_778=(typeof val=="number")&&val>0;
}
return _777||_778;
},_isValidSubset:function(){
return this.inherited(arguments)&&!this._isDefinitelyOutOfRange();
},isValid:function(_77b){
return this.inherited(arguments)&&((this._isEmpty(this.textbox.value)&&!this.required)||this.isInRange(_77b));
},getErrorMessage:function(_77c){
if(dijit.form.RangeBoundTextBox.superclass.isValid.call(this,false)&&!this.isInRange(_77c)){
return this.rangeMessage;
}
return this.inherited(arguments);
},postMixInProperties:function(){
this.inherited(arguments);
if(!this.rangeMessage){
this.messages=dojo.i18n.getLocalization("dijit.form","validate",this.lang);
this.rangeMessage=this.messages.rangeMessage;
}
},postCreate:function(){
this.inherited(arguments);
if(this.constraints.min!==undefined){
dijit.setWaiState(this.focusNode,"valuemin",this.constraints.min);
}
if(this.constraints.max!==undefined){
dijit.setWaiState(this.focusNode,"valuemax",this.constraints.max);
}
},_setValueAttr:function(_77d,_77e){
dijit.setWaiState(this.focusNode,"valuenow",_77d);
this.inherited(arguments);
}});
}
if(!dojo._hasResource["dojo.data.util.sorter"]){
dojo._hasResource["dojo.data.util.sorter"]=true;
dojo.provide("dojo.data.util.sorter");
dojo.data.util.sorter.basicComparator=function(a,b){
var ret=0;
if(a>b||typeof a==="undefined"||a===null){
ret=1;
}else{
if(a<b||typeof b==="undefined"||b===null){
ret=-1;
}
}
return ret;
};
dojo.data.util.sorter.createSortFunction=function(_782,_783){
var _784=[];
function createSortFunction(attr,dir){
return function(_787,_788){
var a=_783.getValue(_787,attr);
var b=_783.getValue(_788,attr);
var _78b=null;
if(_783.comparatorMap){
if(typeof attr!=="string"){
attr=_783.getIdentity(attr);
}
_78b=_783.comparatorMap[attr]||dojo.data.util.sorter.basicComparator;
}
_78b=_78b||dojo.data.util.sorter.basicComparator;
return dir*_78b(a,b);
};
};
var _78c;
for(var i=0;i<_782.length;i++){
_78c=_782[i];
if(_78c.attribute){
var _78e=(_78c.descending)?-1:1;
_784.push(createSortFunction(_78c.attribute,_78e));
}
}
return function(rowA,rowB){
var i=0;
while(i<_784.length){
var ret=_784[i++](rowA,rowB);
if(ret!==0){
return ret;
}
}
return 0;
};
};
}
if(!dojo._hasResource["dojo.data.util.simpleFetch"]){
dojo._hasResource["dojo.data.util.simpleFetch"]=true;
dojo.provide("dojo.data.util.simpleFetch");
dojo.data.util.simpleFetch.fetch=function(_793){
_793=_793||{};
if(!_793.store){
_793.store=this;
}
var self=this;
var _795=function(_796,_797){
if(_797.onError){
var _798=_797.scope||dojo.global;
_797.onError.call(_798,_796,_797);
}
};
var _799=function(_79a,_79b){
var _79c=_79b.abort||null;
var _79d=false;
var _79e=_79b.start?_79b.start:0;
var _79f=(_79b.count&&(_79b.count!==Infinity))?(_79e+_79b.count):_79a.length;
_79b.abort=function(){
_79d=true;
if(_79c){
_79c.call(_79b);
}
};
var _7a0=_79b.scope||dojo.global;
if(!_79b.store){
_79b.store=self;
}
if(_79b.onBegin){
_79b.onBegin.call(_7a0,_79a.length,_79b);
}
if(_79b.sort){
_79a.sort(dojo.data.util.sorter.createSortFunction(_79b.sort,self));
}
if(_79b.onItem){
for(var i=_79e;(i<_79a.length)&&(i<_79f);++i){
var item=_79a[i];
if(!_79d){
_79b.onItem.call(_7a0,item,_79b);
}
}
}
if(_79b.onComplete&&!_79d){
var _7a3=null;
if(!_79b.onItem){
_7a3=_79a.slice(_79e,_79f);
}
_79b.onComplete.call(_7a0,_7a3,_79b);
}
};
this._fetchItems(_793,_799,_795);
return _793;
};
}
if(!dojo._hasResource["dojo.data.util.filter"]){
dojo._hasResource["dojo.data.util.filter"]=true;
dojo.provide("dojo.data.util.filter");
dojo.data.util.filter.patternToRegExp=function(_7a4,_7a5){
var rxp="^";
var c=null;
for(var i=0;i<_7a4.length;i++){
c=_7a4.charAt(i);
switch(c){
case "\\":
rxp+=c;
i++;
rxp+=_7a4.charAt(i);
break;
case "*":
rxp+=".*";
break;
case "?":
rxp+=".";
break;
case "$":
case "^":
case "/":
case "+":
case ".":
case "|":
case "(":
case ")":
case "{":
case "}":
case "[":
case "]":
rxp+="\\";
default:
rxp+=c;
}
}
rxp+="$";
if(_7a5){
return new RegExp(rxp,"mi");
}else{
return new RegExp(rxp,"m");
}
};
}
if(!dojo._hasResource["dijit.form.ComboBox"]){
dojo._hasResource["dijit.form.ComboBox"]=true;
dojo.provide("dijit.form.ComboBox");
dojo.declare("dijit.form.ComboBoxMixin",null,{item:null,pageSize:Infinity,store:null,fetchProperties:{},query:{},autoComplete:true,highlightMatch:"first",searchDelay:100,searchAttr:"name",labelAttr:"",labelType:"text",queryExpr:"${0}*",ignoreCase:true,hasDownArrow:true,templateString:"<div class=\"dijit dijitReset dijitInlineTable dijitLeft\"\n\tid=\"widget_${id}\"\n\tdojoAttachEvent=\"onmouseenter:_onMouse,onmouseleave:_onMouse,onmousedown:_onMouse\" dojoAttachPoint=\"comboNode\" waiRole=\"combobox\" tabIndex=\"-1\"\n\t><div style=\"overflow:hidden;\"\n\t\t><div class='dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton'\n\t\t\tdojoAttachPoint=\"downArrowNode\" waiRole=\"presentation\"\n\t\t\tdojoAttachEvent=\"onmousedown:_onArrowMouseDown,onmouseup:_onMouse,onmouseenter:_onMouse,onmouseleave:_onMouse\"\n\t\t\t><div class=\"dijitArrowButtonInner\">&thinsp;</div\n\t\t\t><div class=\"dijitArrowButtonChar\">&#9660;</div\n\t\t></div\n\t\t><div class=\"dijitReset dijitValidationIcon\"><br></div\n\t\t><div class=\"dijitReset dijitValidationIconText\">&Chi;</div\n\t\t><div class=\"dijitReset dijitInputField\"\n\t\t\t><input type=\"text\" autocomplete=\"off\" name=\"${name}\" class='dijitReset'\n\t\t\tdojoAttachEvent=\"onkeypress:_onKeyPress, onfocus:_update, compositionend\"\n\t\t\tdojoAttachPoint=\"textbox,focusNode\" waiRole=\"textbox\" waiState=\"haspopup-true,autocomplete-list\"\n\t\t/></div\n\t></div\n></div>\n",baseClass:"dijitComboBox",_getCaretPos:function(_7a9){
var pos=0;
if(typeof (_7a9.selectionStart)=="number"){
pos=_7a9.selectionStart;
}else{
if(dojo.isIE){
var tr=dojo.doc.selection.createRange().duplicate();
var ntr=_7a9.createTextRange();
tr.move("character",0);
ntr.move("character",0);
try{
ntr.setEndPoint("EndToEnd",tr);
pos=String(ntr.text).replace(/\r/g,"").length;
}
catch(e){
}
}
}
return pos;
},_setCaretPos:function(_7ad,_7ae){
_7ae=parseInt(_7ae);
dijit.selectInputText(_7ad,_7ae,_7ae);
},_setDisabledAttr:function(_7af){
dijit.setWaiState(this.comboNode,"disabled",_7af);
},_onKeyPress:function(evt){
var key=evt.charOrCode;
if(evt.altKey||(evt.ctrlKey&&(key!="x"&&key!="v"))||evt.key==dojo.keys.SHIFT){
return;
}
var _7b2=false;
var pw=this._popupWidget;
var dk=dojo.keys;
if(this._isShowingNow){
pw.handleKey(key);
}
switch(key){
case dk.PAGE_DOWN:
case dk.DOWN_ARROW:
if(!this._isShowingNow||this._prev_key_esc){
this._arrowPressed();
_7b2=true;
}else{
this._announceOption(pw.getHighlightedOption());
}
dojo.stopEvent(evt);
this._prev_key_backspace=false;
this._prev_key_esc=false;
break;
case dk.PAGE_UP:
case dk.UP_ARROW:
if(this._isShowingNow){
this._announceOption(pw.getHighlightedOption());
}
dojo.stopEvent(evt);
this._prev_key_backspace=false;
this._prev_key_esc=false;
break;
case dk.ENTER:
var _7b5;
if(this._isShowingNow&&(_7b5=pw.getHighlightedOption())){
if(_7b5==pw.nextButton){
this._nextSearch(1);
dojo.stopEvent(evt);
break;
}else{
if(_7b5==pw.previousButton){
this._nextSearch(-1);
dojo.stopEvent(evt);
break;
}
}
}else{
this._setDisplayedValueAttr(this.attr("displayedValue"),true);
}
evt.preventDefault();
case dk.TAB:
var _7b6=this.attr("displayedValue");
if(pw&&(_7b6==pw._messages["previousMessage"]||_7b6==pw._messages["nextMessage"])){
break;
}
if(this._isShowingNow){
this._prev_key_backspace=false;
this._prev_key_esc=false;
if(pw.getHighlightedOption()){
pw.attr("value",{target:pw.getHighlightedOption()});
}
this._lastQuery=null;
this._hideResultList();
}
break;
case " ":
this._prev_key_backspace=false;
this._prev_key_esc=false;
if(this._isShowingNow&&pw.getHighlightedOption()){
dojo.stopEvent(evt);
this._selectOption();
this._hideResultList();
}else{
_7b2=true;
}
break;
case dk.ESCAPE:
this._prev_key_backspace=false;
this._prev_key_esc=true;
if(this._isShowingNow){
dojo.stopEvent(evt);
this._hideResultList();
}else{
this.inherited(arguments);
}
break;
case dk.DELETE:
case dk.BACKSPACE:
this._prev_key_esc=false;
this._prev_key_backspace=true;
_7b2=true;
break;
case dk.RIGHT_ARROW:
case dk.LEFT_ARROW:
this._prev_key_backspace=false;
this._prev_key_esc=false;
break;
default:
this._prev_key_backspace=false;
this._prev_key_esc=false;
_7b2=typeof key=="string";
}
if(this.searchTimer){
clearTimeout(this.searchTimer);
}
if(_7b2){
setTimeout(dojo.hitch(this,"_startSearchFromInput"),1);
}
},_autoCompleteText:function(text){
var fn=this.focusNode;
dijit.selectInputText(fn,fn.value.length);
var _7b9=this.ignoreCase?"toLowerCase":"substr";
if(text[_7b9](0).indexOf(this.focusNode.value[_7b9](0))==0){
var cpos=this._getCaretPos(fn);
if((cpos+1)>fn.value.length){
fn.value=text;
dijit.selectInputText(fn,cpos);
}
}else{
fn.value=text;
dijit.selectInputText(fn);
}
},_openResultList:function(_7bb,_7bc){
if(this.disabled||this.readOnly||(_7bc.query[this.searchAttr]!=this._lastQuery)){
return;
}
this._popupWidget.clearResultList();
if(!_7bb.length){
this._hideResultList();
return;
}
var _7bd=new String(this.store.getValue(_7bb[0],this.searchAttr));
if(_7bd&&this.autoComplete&&!this._prev_key_backspace&&(_7bc.query[this.searchAttr]!="*")){
this._autoCompleteText(_7bd);
}
_7bc._maxOptions=this._maxOptions;
this._popupWidget.createOptions(_7bb,_7bc,dojo.hitch(this,"_getMenuLabelFromItem"));
this._showResultList();
if(_7bc.direction){
if(1==_7bc.direction){
this._popupWidget.highlightFirstOption();
}else{
if(-1==_7bc.direction){
this._popupWidget.highlightLastOption();
}
}
this._announceOption(this._popupWidget.getHighlightedOption());
}
},_showResultList:function(){
this._hideResultList();
var _7be=this._popupWidget.getItems(),_7bf=Math.min(_7be.length,this.maxListLength);
this._arrowPressed();
this.displayMessage("");
dojo.style(this._popupWidget.domNode,{width:"",height:""});
var best=this.open();
var _7c1=dojo.marginBox(this._popupWidget.domNode);
this._popupWidget.domNode.style.overflow=((best.h==_7c1.h)&&(best.w==_7c1.w))?"hidden":"auto";
var _7c2=best.w;
if(best.h<this._popupWidget.domNode.scrollHeight){
_7c2+=16;
}
dojo.marginBox(this._popupWidget.domNode,{h:best.h,w:Math.max(_7c2,this.domNode.offsetWidth)});
dijit.setWaiState(this.comboNode,"expanded","true");
},_hideResultList:function(){
if(this._isShowingNow){
dijit.popup.close(this._popupWidget);
this._arrowIdle();
this._isShowingNow=false;
dijit.setWaiState(this.comboNode,"expanded","false");
dijit.removeWaiState(this.focusNode,"activedescendant");
}
},_setBlurValue:function(){
var _7c3=this.attr("displayedValue");
var pw=this._popupWidget;
if(pw&&(_7c3==pw._messages["previousMessage"]||_7c3==pw._messages["nextMessage"])){
this._setValueAttr(this._lastValueReported,true);
}else{
this.attr("displayedValue",_7c3);
}
},_onBlur:function(){
this._hideResultList();
this._arrowIdle();
this.inherited(arguments);
},_announceOption:function(node){
if(node==null){
return;
}
var _7c6;
if(node==this._popupWidget.nextButton||node==this._popupWidget.previousButton){
_7c6=node.innerHTML;
}else{
_7c6=this.store.getValue(node.item,this.searchAttr);
}
this.focusNode.value=this.focusNode.value.substring(0,this._getCaretPos(this.focusNode));
dijit.setWaiState(this.focusNode,"activedescendant",dojo.attr(node,"id"));
this._autoCompleteText(_7c6);
},_selectOption:function(evt){
var tgt=null;
if(!evt){
evt={target:this._popupWidget.getHighlightedOption()};
}
if(!evt.target){
this.attr("displayedValue",this.attr("displayedValue"));
return;
}else{
tgt=evt.target;
}
if(!evt.noHide){
this._hideResultList();
this._setCaretPos(this.focusNode,this.store.getValue(tgt.item,this.searchAttr).length);
}
this._doSelect(tgt);
},_doSelect:function(tgt){
this.item=tgt.item;
this.attr("value",this.store.getValue(tgt.item,this.searchAttr));
},_onArrowMouseDown:function(evt){
if(this.disabled||this.readOnly){
return;
}
dojo.stopEvent(evt);
this.focus();
if(this._isShowingNow){
this._hideResultList();
}else{
this._startSearch("");
}
},_startSearchFromInput:function(){
this._startSearch(this.focusNode.value.replace(/([\\\*\?])/g,"\\$1"));
},_getQueryString:function(text){
return dojo.string.substitute(this.queryExpr,[text]);
},_startSearch:function(key){
if(!this._popupWidget){
var _7cd=this.id+"_popup";
this._popupWidget=new dijit.form._ComboBoxMenu({onChange:dojo.hitch(this,this._selectOption),id:_7cd});
dijit.removeWaiState(this.focusNode,"activedescendant");
dijit.setWaiState(this.textbox,"owns",_7cd);
}
this.item=null;
var _7ce=dojo.clone(this.query);
this._lastInput=key;
this._lastQuery=_7ce[this.searchAttr]=this._getQueryString(key);
this.searchTimer=setTimeout(dojo.hitch(this,function(_7cf,_7d0){
var _7d1={queryOptions:{ignoreCase:this.ignoreCase,deep:true},query:_7cf,onBegin:dojo.hitch(this,"_setMaxOptions"),onComplete:dojo.hitch(this,"_openResultList"),onError:function(_7d2){
console.error("dijit.form.ComboBox: "+_7d2);
dojo.hitch(_7d0,"_hideResultList")();
},start:0,count:this.pageSize};
dojo.mixin(_7d1,_7d0.fetchProperties);
var _7d3=_7d0.store.fetch(_7d1);
var _7d4=function(_7d5,_7d6){
_7d5.start+=_7d5.count*_7d6;
_7d5.direction=_7d6;
this.store.fetch(_7d5);
};
this._nextSearch=this._popupWidget.onPage=dojo.hitch(this,_7d4,_7d3);
},_7ce,this),this.searchDelay);
},_setMaxOptions:function(size,_7d8){
this._maxOptions=size;
},_getValueField:function(){
return this.searchAttr;
},_arrowPressed:function(){
if(!this.disabled&&!this.readOnly&&this.hasDownArrow){
dojo.addClass(this.downArrowNode,"dijitArrowButtonActive");
}
},_arrowIdle:function(){
if(!this.disabled&&!this.readOnly&&this.hasDownArrow){
dojo.removeClass(this.downArrowNode,"dojoArrowButtonPushed");
}
},compositionend:function(evt){
this._onKeyPress({charCode:-1});
},constructor:function(){
this.query={};
this.fetchProperties={};
},postMixInProperties:function(){
if(!this.hasDownArrow){
this.baseClass="dijitTextBox";
}
if(!this.store){
var _7da=this.srcNodeRef;
this.store=new dijit.form._ComboBoxDataStore(_7da);
if(!this.value||((typeof _7da.selectedIndex=="number")&&_7da.selectedIndex.toString()===this.value)){
var item=this.store.fetchSelectedItem();
if(item){
this.value=this.store.getValue(item,this._getValueField());
}
}
}
},_postCreate:function(){
var _7dc=dojo.query("label[for=\""+this.id+"\"]");
if(_7dc.length){
_7dc[0].id=(this.id+"_label");
var cn=this.comboNode;
dijit.setWaiState(cn,"labelledby",_7dc[0].id);
}
},uninitialize:function(){
if(this._popupWidget){
this._hideResultList();
this._popupWidget.destroy();
}
},_getMenuLabelFromItem:function(item){
var _7df=this.store.getValue(item,this.labelAttr||this.searchAttr);
var _7e0=this.labelType;
if(this.highlightMatch!="none"&&this.labelType=="text"&&this._lastInput){
_7df=this.doHighlight(_7df,this._escapeHtml(this._lastInput));
_7e0="html";
}
return {html:_7e0=="html",label:_7df};
},doHighlight:function(_7e1,find){
var _7e3="i"+(this.highlightMatch=="all"?"g":"");
var _7e4=this._escapeHtml(_7e1);
var ret=_7e4.replace(new RegExp("^("+find+")",_7e3),"<span class=\"dijitComboBoxHighlightMatch\">$1</span>");
if(_7e4==ret){
ret=_7e4.replace(new RegExp(" ("+find+")",_7e3)," <span class=\"dijitComboBoxHighlightMatch\">$1</span>");
}
return ret;
},_escapeHtml:function(str){
str=String(str).replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
return str;
},open:function(){
this._isShowingNow=true;
return dijit.popup.open({popup:this._popupWidget,around:this.domNode,parent:this});
},reset:function(){
this.item=null;
this.inherited(arguments);
}});
dojo.declare("dijit.form._ComboBoxMenu",[dijit._Widget,dijit._Templated],{templateString:"<ul class='dijitReset dijitMenu' dojoAttachEvent='onmousedown:_onMouseDown,onmouseup:_onMouseUp,onmouseover:_onMouseOver,onmouseout:_onMouseOut' tabIndex='-1' style='overflow: \"auto\"; overflow-x: \"hidden\";'>"+"<li class='dijitMenuItem dijitMenuPreviousButton' dojoAttachPoint='previousButton'></li>"+"<li class='dijitMenuItem dijitMenuNextButton' dojoAttachPoint='nextButton'></li>"+"</ul>",_messages:null,postMixInProperties:function(){
this._messages=dojo.i18n.getLocalization("dijit.form","ComboBox",this.lang);
this.inherited("postMixInProperties",arguments);
},_setValueAttr:function(_7e7){
this.value=_7e7;
this.onChange(_7e7);
},onChange:function(_7e8){
},onPage:function(_7e9){
},postCreate:function(){
this.previousButton.innerHTML=this._messages["previousMessage"];
this.nextButton.innerHTML=this._messages["nextMessage"];
this.inherited(arguments);
},onClose:function(){
this._blurOptionNode();
},_createOption:function(item,_7eb){
var _7ec=_7eb(item);
var _7ed=dojo.doc.createElement("li");
dijit.setWaiRole(_7ed,"option");
if(_7ec.html){
_7ed.innerHTML=_7ec.label;
}else{
_7ed.appendChild(dojo.doc.createTextNode(_7ec.label));
}
if(_7ed.innerHTML==""){
_7ed.innerHTML="&nbsp;";
}
_7ed.item=item;
return _7ed;
},createOptions:function(_7ee,_7ef,_7f0){
this.previousButton.style.display=(_7ef.start==0)?"none":"";
dojo.attr(this.previousButton,"id",this.id+"_prev");
dojo.forEach(_7ee,function(item,i){
var _7f3=this._createOption(item,_7f0);
_7f3.className="dijitReset dijitMenuItem";
dojo.attr(_7f3,"id",this.id+i);
this.domNode.insertBefore(_7f3,this.nextButton);
},this);
var _7f4=false;
if(_7ef._maxOptions&&_7ef._maxOptions!=-1){
if((_7ef.start+_7ef.count)<_7ef._maxOptions){
_7f4=true;
}else{
if((_7ef.start+_7ef.count)>(_7ef._maxOptions-1)){
if(_7ef.count==_7ee.length){
_7f4=true;
}
}
}
}else{
if(_7ef.count==_7ee.length){
_7f4=true;
}
}
this.nextButton.style.display=_7f4?"":"none";
dojo.attr(this.nextButton,"id",this.id+"_next");
},clearResultList:function(){
while(this.domNode.childNodes.length>2){
this.domNode.removeChild(this.domNode.childNodes[this.domNode.childNodes.length-2]);
}
},getItems:function(){
return this.domNode.childNodes;
},getListLength:function(){
return this.domNode.childNodes.length-2;
},_onMouseDown:function(evt){
dojo.stopEvent(evt);
},_onMouseUp:function(evt){
if(evt.target===this.domNode){
return;
}else{
if(evt.target==this.previousButton){
this.onPage(-1);
}else{
if(evt.target==this.nextButton){
this.onPage(1);
}else{
var tgt=evt.target;
while(!tgt.item){
tgt=tgt.parentNode;
}
this._setValueAttr({target:tgt},true);
}
}
}
},_onMouseOver:function(evt){
if(evt.target===this.domNode){
return;
}
var tgt=evt.target;
if(!(tgt==this.previousButton||tgt==this.nextButton)){
while(!tgt.item){
tgt=tgt.parentNode;
}
}
this._focusOptionNode(tgt);
},_onMouseOut:function(evt){
if(evt.target===this.domNode){
return;
}
this._blurOptionNode();
},_focusOptionNode:function(node){
if(this._highlighted_option!=node){
this._blurOptionNode();
this._highlighted_option=node;
dojo.addClass(this._highlighted_option,"dijitMenuItemHover");
}
},_blurOptionNode:function(){
if(this._highlighted_option){
dojo.removeClass(this._highlighted_option,"dijitMenuItemHover");
this._highlighted_option=null;
}
},_highlightNextOption:function(){
var fc=this.domNode.firstChild;
if(!this.getHighlightedOption()){
this._focusOptionNode(fc.style.display=="none"?fc.nextSibling:fc);
}else{
var ns=this._highlighted_option.nextSibling;
if(ns&&ns.style.display!="none"){
this._focusOptionNode(ns);
}
}
dijit.scrollIntoView(this._highlighted_option);
},highlightFirstOption:function(){
this._focusOptionNode(this.domNode.firstChild.nextSibling);
dijit.scrollIntoView(this._highlighted_option);
},highlightLastOption:function(){
this._focusOptionNode(this.domNode.lastChild.previousSibling);
dijit.scrollIntoView(this._highlighted_option);
},_highlightPrevOption:function(){
var lc=this.domNode.lastChild;
if(!this.getHighlightedOption()){
this._focusOptionNode(lc.style.display=="none"?lc.previousSibling:lc);
}else{
var ps=this._highlighted_option.previousSibling;
if(ps&&ps.style.display!="none"){
this._focusOptionNode(ps);
}
}
dijit.scrollIntoView(this._highlighted_option);
},_page:function(up){
var _801=0;
var _802=this.domNode.scrollTop;
var _803=dojo.style(this.domNode,"height");
if(!this.getHighlightedOption()){
this._highlightNextOption();
}
while(_801<_803){
if(up){
if(!this.getHighlightedOption().previousSibling||this._highlighted_option.previousSibling.style.display=="none"){
break;
}
this._highlightPrevOption();
}else{
if(!this.getHighlightedOption().nextSibling||this._highlighted_option.nextSibling.style.display=="none"){
break;
}
this._highlightNextOption();
}
var _804=this.domNode.scrollTop;
_801+=(_804-_802)*(up?-1:1);
_802=_804;
}
},pageUp:function(){
this._page(true);
},pageDown:function(){
this._page(false);
},getHighlightedOption:function(){
var ho=this._highlighted_option;
return (ho&&ho.parentNode)?ho:null;
},handleKey:function(key){
switch(key){
case dojo.keys.DOWN_ARROW:
this._highlightNextOption();
break;
case dojo.keys.PAGE_DOWN:
this.pageDown();
break;
case dojo.keys.UP_ARROW:
this._highlightPrevOption();
break;
case dojo.keys.PAGE_UP:
this.pageUp();
break;
}
}});
dojo.declare("dijit.form.ComboBox",[dijit.form.ValidationTextBox,dijit.form.ComboBoxMixin],{postMixInProperties:function(){
dijit.form.ComboBoxMixin.prototype.postMixInProperties.apply(this,arguments);
dijit.form.ValidationTextBox.prototype.postMixInProperties.apply(this,arguments);
},postCreate:function(){
dijit.form.ComboBoxMixin.prototype._postCreate.apply(this,arguments);
dijit.form.ValidationTextBox.prototype.postCreate.apply(this,arguments);
},_setDisabledAttr:function(_807){
dijit.form.ValidationTextBox.prototype._setDisabledAttr.apply(this,arguments);
dijit.form.ComboBoxMixin.prototype._setDisabledAttr.apply(this,arguments);
},_setValueAttr:function(_808,_809){
if(!_808){
_808="";
}
dijit.form.ValidationTextBox.prototype._setValueAttr.call(this,_808,_809);
}});
dojo.declare("dijit.form._ComboBoxDataStore",null,{constructor:function(root){
this.root=root;
dojo.query("> option",root).forEach(function(node){
node.innerHTML=dojo.trim(node.innerHTML);
});
},getValue:function(item,_80d,_80e){
return (_80d=="value")?item.value:(item.innerText||item.textContent||"");
},isItemLoaded:function(_80f){
return true;
},getFeatures:function(){
return {"dojo.data.api.Read":true,"dojo.data.api.Identity":true};
},_fetchItems:function(args,_811,_812){
if(!args.query){
args.query={};
}
if(!args.query.name){
args.query.name="";
}
if(!args.queryOptions){
args.queryOptions={};
}
var _813=dojo.data.util.filter.patternToRegExp(args.query.name,args.queryOptions.ignoreCase),_814=dojo.query("> option",this.root).filter(function(_815){
return (_815.innerText||_815.textContent||"").match(_813);
});
if(args.sort){
_814.sort(dojo.data.util.sorter.createSortFunction(args.sort,this));
}
_811(_814,args);
},close:function(_816){
return;
},getLabel:function(item){
return item.innerHTML;
},getIdentity:function(item){
return dojo.attr(item,"value");
},fetchItemByIdentity:function(args){
var item=dojo.query("option[value='"+args.identity+"']",this.root)[0];
args.onItem(item);
},fetchSelectedItem:function(){
var root=this.root,si=root.selectedIndex;
return dojo.query("> option:nth-child("+(si!=-1?si+1:1)+")",root)[0];
}});
dojo.extend(dijit.form._ComboBoxDataStore,dojo.data.util.simpleFetch);
}
dojo.i18n._preloadLocalizations("dojo.nls.dojo-packaged",["nl","tr","no","ko","el","en","ROOT","zh-cn","hu","es","fi-fi","pt-br","fi","xx","ru","it","fr","iw","cs","de-de","fr-fr","it-it","es-es","ja","da","pl","de","sv","pt","zh-tw","pt-pt","nl-nl","ko-kr","ar","en-us","zh","ja-jp"]);

dojo.provide("quickr.share.config");

var _webUri = "/developerworks/mydeveloperworks/wikis/";
var _webCommonUri = "/developerworks/mydeveloperworks/wikis/nav/common/";

var _svc = "/developerworks/mydeveloperworks/wikis/form/";
var _anonSvc = _svc + "anonymous/api/";
var _authSvc = _svc + "api/";
var _feedSvc = "/developerworks/mydeveloperworks/wikis/basic/";
var _anonFeedSvc = _feedSvc + "anonymous/api/";
var _authFeedSvc = _feedSvc + "api/";
var _draftRoot = _authSvc + "library/{libraryId}/draft/";
var _anonymousDraftRoot = _anonSvc + "userlibrary/{userId}/draft/";

quickr.share.config = {
   dir: "ltr",
   
   language: "en",
   translationLanguage: "en",
   formattingLanguageParam: "en",

   applicationUri: _webUri,
   version: "Release v2.5.0.0 20090813_1642",
   versionShort: "20101010.172603",
   baseUri: _webUri,
   baseCommonUri: _webCommonUri,
   
   baseUriPath: new dojo._Url(_webUri).path,
   
   homeUri: "http://quickr.tap.ibm.com",
   helpUri: _webUri + "help/doc/en/wframe.html",
   demoUri: "https://download.boulder.ibm.com/ibmdl/pub/software/dw/ibm/mydw/wikis/wikis.html",
   proxyUri: _webUri +"ajaxProxy/",
   application: "quickr.share.wiki.Wiki",
   
   wikiTextEnabled: true,
   editorType: "ck",
   ckeditorScript: _webUri+"static/js/20101010.172603/ckeditor/ckeditor.js?lang=en",
   
   disablePages: false,
   disableLinkNavigation: true,
   detailedDownloads: true,
   connectionsServer: "//profiles.tap.ibm.com",
   quickrConnectorsInstallUri: "//rtpgsa.ibm.com/~tlrankin/public/mediaLibrary/qkrconn.exe",

   connectionsHomepageUri: "/homepage",
   lotusSupportForumsUri: "//www-10.lotus.com/ldd/lcforum.nsf",
   productFeedbackUri: "//www.lotus.com/ldd/doc/cct/nextgen.nsf/feedback_choice?OpenForm&Context=footer+ventura+2.0",
   
   deployment: "connections",   
      
   services: {
      basicAuth: {
         fileDirectFeedUri: _authFeedSvc + "library/{libraryId}/document/{fileId}/feed",
         anonymousFileDirectFeedUri: _anonFeedSvc + "library/{libraryId}/document/{fileId}/feed"
      },
      wikiDocumentsFeedUri: _authSvc + "wiki/{wikiLabel}/feed",
      myWikiDocumentsFeedUri: _authSvc + "wiki/{wikiLabel}/mypages",
      anonymousWikiDocumentsFeedUri: _anonSvc + "wiki/{wikiLabel}/feed",
      myWikisFeedUri: _authSvc + "mywikis/feed",
      wikisFeedUri: _authSvc + "wikis/feed",
      anonymousWikisFeedUri: _anonSvc + "wikis/feed",
      newWikisFeedUri: _authSvc + "wikis/new",
      anonymousNewWikisFeedUri: _anonSvc + "wikis/new",
      updatedWikisFeedUri: _authSvc + "wikis/updated",
      anonymousUpdatedWikisFeedUri: _anonSvc + "wikis/updated",
      mostVisitedWikisFeedUri: _authSvc + "wikis/mostvisited",
      anonymousMostVisitedWikisFeedUri: _anonSvc + "wikis/mostvisited",
      mostCommentedWikisFeedUri: _authSvc + "wikis/mostcommented",
      anonymousMostCommentedWikisFeedUri: _anonSvc + "wikis/mostcommented",
      mostRecommendedWikisFeedUri: _authSvc + "wikis/mostrecommended",
      anonymousMostRecommendedWikisFeedUri: _anonSvc + "wikis/mostrecommended",
      wikiEntryUri: _authSvc + "wiki/{wikiLabel}/entry",
      anonymousWikiEntryUri: _anonSvc + "wiki/{wikiLabel}/entry",
      wikiNavUri: _authSvc + "library/{libraryId}/nav/{pageId}/feed",
      anonymousWikiNavUri: _anonSvc + "library/{libraryId}/nav/{pageId}/feed",
      wikiDraftCreateUri: _authSvc + "wikipage/draft/{wikiLabel}/entry",
      wikiDragAndDropUri: _authSvc + "wiki/{libraryId}/dnd/{pageId}",
      
      taggedWikisFeedUri: _authSvc + "wikis/tagged",
      anonymousTaggedWikisFeedUri: _anonSvc + "wikis/tagged",
      ratedWikisFeedUri: _authSvc + "wikis/rated",
      anonymousRatedWikisFeedUri: _anonSvc + "wikis/rated",
	  myTaggedWikisFeedUri: _authSvc + "mywikis/tagged",
	  
      authenticationUri: _svc + "authenticated",
      logoutUri: "/wikis/ibm_security_logout",
 
      introspectionUri: _authSvc + "introspection",
   
      personUri: _authSvc + "people/feed",
      anonymousPersonUri: _anonSvc + "people/feed",
      
      groupUri: _anonSvc + "groups/feed",

      applicationRolesUri: _authSvc + "applications/{libraryId}/roles",
      applicationMembersUri: _authSvc + "applications/{libraryId}/members",
      wikiMembersUri: _authSvc + "wiki/{wikiLabel}/members",
      applicationRoleMembersUri: _authSvc + "applications/{libraryId}/roles/{role}/members",
      
      draftUri: _draftRoot + "{draftId}/entry",
      
      anonymousDraftUri: _anonymousDraftRoot + "{draftId}/entry",
      
      draftEntry: {
         auth: _draftRoot + "{draftId}/entry",
         anon: _anonymousDraftRoot + "{draftId}/entry"
      },
      
      draftFeedUri: _draftRoot + "{draftId}/feed",
            
      recommendationsUri: _authSvc + "library/{libraryId}/document/{fileId}/recommendation/{userId}/entry",
      personalRecommendationsUri: _authSvc + "library/document/{fileId}/recommendation/{userId}/entry",
      
      privateDraftsFeed: {
         auth: _authSvc + "view/WorkingDrafts/feed"
      },            
   
      wikiConversionUri: _authSvc + "wikiconvert",
      wikiComparisonUri: _authSvc + "diff",
      anonymousWikiComparisonUri: _anonSvc + "diff",
      
      tagServiceUri: _authSvc + "tags/feed",
      anonymousTagServiceUri: _anonSvc + "tags/feed",      
      wikiTagServiceUri: _authSvc + "wiki/{wikiLabel}/tags",      
      anonymousWikiTagServiceUri: _anonSvc + "wiki/{wikiLabel}/tags",      

      wikiHomepageServiceUri: _authSvc + "wiki/{wikiLabel}/homepage/entry",
      anonymousWikiHomepageServiceUri: _anonSvc + "wiki/{wikiLabel}/homepage/entry",
      
      wikiPageServiceUri: _authSvc + "wiki/{wikiLabel}/page/{pageId}/entry",
      anonymousWikiPageServiceUri: _anonSvc + "wiki/{wikiLabel}/page/{pageId}/entry",

      fileDownloadInfoUri: _authSvc + "library/{libraryId}/document/{fileId}/downloadedby/feed",
      anonymousFileDownloadInfoUri: _anonSvc + "library/{libraryId}/document/{fileId}/downloadedby/feed",
      fileDirectUri: _authSvc + "library/{libraryId}/document/{fileId}/entry",
      anonymousFileDirectUri: _anonSvc + "library/{libraryId}/document/{fileId}/entry",
      wikiVersionUri: _authSvc + "wikipage/{libraryId}/{fileId}/version/{versionId}",
      fileDirectFeedUri: _authSvc + "library/{libraryId}/document/{fileId}/feed",
      anonymousFileDirectFeedUri: _anonSvc + "library/{libraryId}/document/{fileId}/feed",
      filestreamDirectFeedUri: _authSvc + "library/{libraryId}/feed",
      
      connections: {
	      enabled: {
	         homepage: true,
         profiles: true,
         communities: true,
         blogs: true,
         dogear: true,
         activities: true,
         files: true,
         wikis: true,
         search: true
	      },
	      uri: {
	         homepage: "https://www.ibm.com/developerworks/mydeveloperworks/homepage",
         profiles: "https://www.ibm.com/developerworks/mydeveloperworks/profiles",
         communities: "https://www.ibm.com/developerworks/mydeveloperworks/groups",
         blogs: "https://www.ibm.com/developerworks/mydeveloperworks/blogs",
         dogear: "https://www.ibm.com/developerworks/mydeveloperworks/bookmarks",
         activities: "https://www.ibm.com/developerworks/mydeveloperworks/activities",
         files: "https://www.ibm.com/developerworks/mydeveloperworks/files",
         wikis: "https://www.ibm.com/developerworks/mydeveloperworks/wikis",
         search: "https://www.ibm.com/developerworks/mydeveloperworks/search"
	      }
	   },
            

   profileCardUri: "https://www.ibm.com/mydeveloperworks/developerworks/profiles/ibm_semanticTagServlet/javascript/semanticTagService.js",

   userPhotoUri: "https://www.ibm.com/developerworks/mydeveloperworks/profiles/photo.do?userid={uid}",

      communityPhotoUri: "//communities.tap.ibm.com/communities/service/html/image?communityUuid={communityId}&displayDefault=true",
      communitySearchUri: "/gallery/community/data/search_communities?q={query}",
      communityFilestreamUri: "/gallery/data/feed?tag_filter=%22community%3A{communityId}%22",
      allTaggedUri: "/gallery/browse?displayMediaSet=0&m_oB=0&m_oD=1&tag_filter={tag}",
      
      timeout: {
         request: 100,
         update: 200,
         upload: 500,
         retrieveFiles: 100,
         userSearch: 200,
         userTypeahead: 10
      },
      uploadMonitor: {
         timeout: 30,
         interval: 30,
         maxAttempts: 4,
         maxFailures: 2
      },
      
      comments: {pageSize: 20},
      shareInfo: {pageSize: 100}
   },
   
   validImageExtensions: ["jpeg","jpg","bmp","png","tif","tiff","gif","raw"],
   
   validation: {
      warnForDownload: 150
   },
   
   type: {
      isImage: function(ext) {
         return dojo.indexOf(["jpg","bmp","png","tiff","jpeg","gif"], ext) != -1;
      }
   },
   
   
   auth: {
   	className: "com.ibm.ajax.auth"
   },


   autosave: {
      regularTimerLength: 300000,
      onPauseTimerLength: 15000,
      numRetrievedUnsavedChanges: 20
   },
      
   siteLinks: [
      {
          home: true,
          generateUri: function(routes) {
             return "#";
          },
          getName: function(routes) {
             var nls = dojo.i18n.getLocalization("quickr.share.wiki", "wiki");
             return nls.HEADER.WIKIS;
          },
          getTitle: function() {
             var nls = dojo.i18n.getLocalization("quickr.share.wiki", "wiki");
             return nls.HEADER.WIKIS;
          }
      }
   ],

   logout: function(url) {
      var url = (typeof url == "string") ? url : "/";
      var d = document;
      var form = d.createElement("form");
         form.style.position = "absolute";
         form.style.left = form.style.top = "0px";
         form.style.visibility = "hidden";
         form.method = "POST";
         form.action = quickr.share.config.services.logoutUri;
         var input = d.createElement("input");
            input.type = "hidden";
            input.name = "logoutExitPage";
            input.value = url;
         form.appendChild(input);
         var input = d.createElement("input");
            input.type = "submit";
            input.name = "logout";
            input.value = "Log out";
         form.appendChild(input);
      d.body.appendChild(form);
      form.submit();
   },

   templates: {
      "quickr.share.wiki.scenes.About": "templates/about.jsp",  
      "quickr.share.wiki.scenes.Toolbox": "templates/toolbox.jsp",
      "quickr.share.wiki.scenes.Statistics": "templates/statistics.jsp"
   },
   actions: {
      myWikiCreatePage: function(app, scene, opt) {
         return [
            new quickr.share.wiki.action.CreatePage(app, scene, opt)
         ];
      },
      draftList: function(app, scene) {
         return [
            new quickr.share.wiki.action.EditDraft(app,scene),
            new quickr.share.wiki.action.DiscardDraft(app,scene)
         ];
      },
      fileList: function(app, scene) {
         return [
            new quickr.share.action.ShareFile(app, scene), 
            new quickr.share.action.StopSharing(app, scene), 
            new quickr.share.action.EditFile(app, scene),
            new quickr.share.action.DeleteFile(app, scene)
         ];
      },
      fileSummary: function(app, scene) {
         return [
            new quickr.share.action.DownloadFile(app, scene), 
            new quickr.share.action.ShareFile(app, scene), 
            new quickr.share.action.StopSharing(app, scene), 
            new quickr.share.action.EditFile(app, scene),
            new quickr.share.action.DeleteFile(app, scene)
         ];
      },
      pageList: function(app, scene) {
         return [
            new quickr.share.action.SharePage(app, scene), 
            new quickr.share.action.StopSharing(app, scene, {page:true}), 
            new quickr.share.action.EditPage(app, scene),
            new quickr.share.action.DeletePage(app, scene)
         ];
      },      
      pageSummary: function(app, scene) {
         return [
            new quickr.share.action.EditPage(app, scene),
            new quickr.share.action.DownloadPage(app, scene),
            new quickr.share.action.SharePage(app, scene),
            new quickr.share.action.StopSharing(app, scene, {page:true}), 
            new quickr.share.action.DeletePage(app, scene)
         ];
      },
      wikiPageView: function(app, scene, opt) {
         return [
            new quickr.share.wiki.action.CreateChildPage(app, scene, opt),
            new quickr.share.wiki.action.CreateSiblingPage(app, scene, opt),
            new quickr.share.wiki.action.PrintPage(app, scene, opt),
            new quickr.share.wiki.action.DeletePage(app, scene),
            new quickr.share.wiki.action.MoveWikiPage(app, scene)
         ];
      },
      allWikis: function(app, scene) {
         return [
            new quickr.share.wiki.action.CreateWiki(app, scene)
         ];
      },
      myWikis: function(app, scene) {
         return [
            new quickr.share.wiki.action.CreateWiki(app, scene)
         ];
      },
      wikiHome: function(app, scene) {
         return [
            new quickr.share.wiki.action.CreateWiki(app, scene)
         ];
      },
      members: function(app, scene, opt) {
      	return [
      		new quickr.share.wiki.action.AddMembers(app, scene)
      	];
      },
      memberItem: function(app, scene, opt) {
      	return [
      		new quickr.share.wiki.action.EditMember(app, scene, opt),
      		new quickr.share.wiki.action.RemoveMember(app, scene, opt)
      	];
      }
   },
   iWidgets: function(app) {
      return [
         {'name':app.nls.INSERT_WIDGET.BLUE_STOCK_WIDGET,'code':'<div class="PageiWidget"><script>dojo.require("dojo.i18n");dojo.require("com.ibm.enabler");</script><SPAN class="mm_iWidget" style="color: blue; font-size: 12pt; font-family: courier;" id="1"><A class="mm_Definition" href="/wikis/iwidgets/stocksample/stock.xml" _fcksavedurl="/quickrshare/iwidgets/stocksample/stock.xml" style="visibility: hidden;"> </A><SPAN class="mm_ItemSet" title="attributes"><A class="mm_Item" href="#company" style="visibility: hidden;">IBM</A><A class="mm_Item" href="#stock" style="visibility: hidden;">125</A></SPAN></SPAN></div>'},
         {'name':app.nls.INSERT_WIDGET.GREEN_STOCK_WIDGET,'code':'<div class="PageiWidget"><script>dojo.require("dojo.i18n");dojo.require("com.ibm.enabler");</script><SPAN class="mm_iWidget" style="color: green; font-size: 12pt; font-family: courier;" id="2"><A class="mm_Definition" href="/wikis/iwidgets/stocksample/stock.xml" _fcksavedurl="/quickrshare/iwidgets/stocksample/stock.xml" style="visibility: hidden;"> </A><SPAN class="mm_ItemSet" title="attributes"><A class="mm_Item" href="#company" style="visibility: hidden;">IBM</A><A class="mm_Item" href="#stock" style="visibility: hidden;">125</A></SPAN></SPAN></div>'}
      ];
   }
};
quickr.share.config.securedUrls = [_authSvc, _authFeedSvc];

CKEDITOR_BASEPATH=quickr.share.config.baseUri+'static/js/20101010.172603/ckeditor/';

quickr.share.config.securedUrls = [_authSvc, _authFeedSvc];

// Connections SemTagSvc setup
var livetextCfg = [];
var SemTagSvcConfig = {
   baseUrl: dojo.getObject("quickr.share.config.services.connections.uri.profiles"),
   isBidiRTL: false,
   loadCssFiles: false,
   appChksum: "20101010.172603",
   proxyURL: "/developerworks/mydeveloperworks/wikis/ajaxProxy/"
};

function doSemTagSvcOnload() {
      var useSemTagSvc = false;
      
      if (dojo.getObject("quickr.share.config.services.connections.enabled.profiles")) {
         useSemTagSvc = true;
         dojo.require("lconn.profiles.bizCard.bizCardUI");
         var profilesBizCardConfig = {
            id: "hcard",
            match:".vcard",
            processEnclosedTags:false,
            tagHandler: lconn.profiles.bizCard.bizCard,
            loaded: true,
            baseURL: dojo.getObject("quickr.share.config.services.connections.uri.profiles")
         };
         livetextCfg.push(profilesBizCardConfig);
      }

      if (dojo.getObject("quickr.share.config.services.connections.enabled.communities")) {
         useSemTagSvc = true;
         dojo.require("lconn.communities.bizCard.bizCardUI");
         var communitiesBizCardConfig = {
            id: "hgroup",
            match:".vcomm",
            processEnclosedTags:false,
            tagHandler: lconn.communities.bizCard.bizCard,
            loaded: true,
            baseURL: dojo.getObject("quickr.share.config.services.connections.uri.communities")
         };
         livetextCfg.push(communitiesBizCardConfig);
      }

      if(useSemTagSvc && !window['SemTagSvc']) {
         dojo.require("com.ibm.mm.livetext.serviceImpl");
         var SemTagSvc = window['SemTagSvc'] = new com.ibm.mm.livetext.serviceImpl();
         SemTagSvc.init();
         SemTagSvc.processUntilAvailable = dojo.getObject("lconn.core.bizCard.bizCardUtils.processUntilAvailable");

         dojo.require("lconn.core.bizCard.bizCardUtils");
         lconn.core.bizCard.bizCardUtils.init();

         console.log("semantic tag service loaded");
      }
}


/* /js/dojo/nls/wiki-packaged_en.js */
dojo.provide("dojo.nls.wiki-packaged_en");dojo.provide("dojo.cldr.nls.number");dojo.cldr.nls.number._built=true;dojo.provide("dojo.cldr.nls.number.en");dojo.cldr.nls.number.en={"group":",","percentSign":"%","exponential":"E","percentFormat":"#,##0%","scientificFormat":"#E0","list":";","infinity":"∞","patternDigit":"#","minusSign":"-","decimal":".","nan":"NaN","nativeZeroDigit":"0","perMille":"‰","decimalFormat":"#,##0.###","currencyFormat":"¤#,##0.00;(¤#,##0.00)","plusSign":"+","currencySpacing-afterCurrency-currencyMatch":"[:letter:]","currencySpacing-beforeCurrency-surroundingMatch":"[:digit:]","currencySpacing-afterCurrency-insertBetween":" ","currencySpacing-afterCurrency-surroundingMatch":"[:digit:]","currencySpacing-beforeCurrency-currencyMatch":"[:letter:]","currencySpacing-beforeCurrency-insertBetween":" "};dojo.provide("quickr.share.wiki.nls.wiki");quickr.share.wiki.nls.wiki._built=true;dojo.provide("quickr.share.wiki.nls.wiki.en");quickr.share.wiki.nls.wiki.en={"WIKI_SEARCH":{"SEARCH_USERS_BUTTON":"Search","LOADING":"Loading...","TITLE_BLURB":"Need to find someone's Wiki?  Enter the person's name or e-mail address in the search field, below.  As you type, we'll show you a list of possible matches. If you can't find the person you are searching for in the list, just click the Search button to see a list of all the possible matches in the directory.","ERROR_LINK":"Search for Wikis","LABEL":"Start typing part of the title of a wiki to see suggested matches.","TITLE":"Find a Wiki","PLACEHOLDER":"Type a title","NO_MATCHES":"No matches","NO_RESULTS":"No results for '${0}'"},"WIKI_CONFIRMNEWPAGE":{"HASNOTBEENCREATED":"has not been created yet","FOLLOWEDLINK":"You have followed a link to or entered the address of a page that has not been created yet.","NOTHANKS":"No thanks - take me back","CREATETHISPAGE":"Create This Page"},"CREATE_CHILD_PAGE":{"ACTION":"Create Child","ACTION_TOOLTIP":"Create a new child page."},"CHANGE_PROPAGATE_PAGE":{"ERROR_TIMEOUT":"The file was not updated because the server could not be contacted.  Click the checkbox to try again.","ERROR":"The file was not updated due to an error.","ERROR_CANCEL":"The file was not updated because the request was cancelled.  Click the checkbox to try again."},"SHARING":{"EVT_EDIT_ONE":{"DAY":"${user} added ${list} as a contributor on ${EEEE} at ${time}","YEAR":"${user} added ${list} as a contributor on ${date_long}","MONTH":"${user} added ${list} as a contributor on ${MMM} ${dd}","TODAY":"${user} added ${list} as a contributor today at ${time}","YESTERDAY":"${user} added ${list} as a contributor yesterday at ${time}"},"SHARED_WITH_MANY":{"DAY":"Shared with ${user} and ${count} on ${EEEE} at ${time}","YEAR":"Shared with ${user} and ${count} on ${date_long}","MONTH":"Shared with ${user} and ${count} on ${MMM} ${dd}","TODAY":"Shared with ${user} and ${count} today at ${time}","YESTERDAY":"Shared with ${user} and ${count} yesterday at ${time}"},"EVT_VIEW_MANY":{"DAY":"${user} shared with ${list} on ${EEEE} at ${time}","YEAR":"${user} shared with ${list} on ${date_long}","MONTH":"${user} shared with ${list} on ${MMM} ${dd}","TODAY":"${user} shared with ${list} today at ${time}","YESTERDAY":"${user} shared with ${list} yesterday at ${time}"},"USERS_POPUP_PAGE":{"DEMOTE_ERROR_CANCEL":"The selected person was not made a reader because the request was cancelled.  Please try again.","DEMOTE_ERROR_NOT_FOUND":"The selected person was not made a reader because the page has been deleted or is no longer visible to you.","EMPTY_READERS":"Not shared with anyone as a reader","DEMOTE_ERROR":"An error prevented making the selected person a reader.","ERROR_TIMEOUT":"The server could not be contacted.","DEMOTE":"Make this person a reader","EMPTY_CONTRIBUTORS":"No one else may contribute to this page","ERROR_NOT_FOUND":"This information can not be displayed because the page has been deleted or is no longer visible to you.","ERROR":"The server could not be contacted.","ERROR_ACCESS_DENIED":"This information can not be displayed because the page has been deleted or is no longer visible to you.","CONTRIBUTORS_LABEL":"Contributors: ","EMPTY":"Not shared with anyone","DEMOTE_ERROR_ACCESS_DENIED":"The selected person was not made a reader because the page has been deleted or is no longer visible to you.","ERROR_CANCEL":"The request was cancelled.  Please try again.","READERS_LABEL":"Readers: ","DEMOTE_ERROR_TIMEOUT":"The selected person was not made a reader because the server could not be contacted.  Please try again."},"SHARED_WITH_TWO_1":"one other","EVT_EDIT_MANY":{"DAY":"${user} added ${list} as contributors on ${EEEE} at ${time}","YEAR":"${user} added ${list} as contributors on ${date_long}","MONTH":"${user} added ${list} as contributors on ${MMM} ${dd}","TODAY":"${user} added ${list} as contributors today at ${time}","YESTERDAY":"${user} added ${list} as contributors yesterday at ${time}"},"EXPAND_ERROR":{"CANCEL":"The details of this share could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this share could not be loaded because the document has been deleted or is no longer visible.","TIMEOUT":"The details of this share could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this share from being displayed.  Please try again later."},"SHARED_BY":{"DAY":"Shared by ${user} on ${EEEE} at ${time}","YEAR":"Shared by ${user} on ${date_long}","MONTH":"Shared by ${user} on ${MMM} ${dd}","TODAY":"Shared by ${user} today at ${time}","YESTERDAY":"Shared by ${user} yesterday at ${time}"},"SHARED_WITH_MANY_1":"${0} others","USERS_POPUP_FILE":{"DEMOTE_ERROR_CANCEL":"The selected person was not made a reader because the request was cancelled.  Please try again.","DEMOTE_ERROR_NOT_FOUND":"The selected person was not made a reader because the file has been deleted or is no longer visible to you.","EMPTY_READERS":"Not shared with anyone as a reader","DEMOTE_ERROR":"An error prevented making the selected person a reader.","ERROR_TIMEOUT":"The server could not be contacted.","DEMOTE":"Make this person a reader","EMPTY_CONTRIBUTORS":"No one else may contribute to this file","ERROR_NOT_FOUND":"This information can not be displayed because the file has been deleted or is no longer visible to you.","ERROR":"The server could not be contacted.","ERROR_ACCESS_DENIED":"This information can not be displayed because the file has been deleted or is no longer visible to you.","CONTRIBUTORS_LABEL":"Contributors: ","EMPTY":"Not shared with anyone","DEMOTE_ERROR_ACCESS_DENIED":"The selected person was not made a reader because the file has been deleted or is no longer visible to you.","ERROR_CANCEL":"The request was cancelled.  Please try again.","READERS_LABEL":"Readers: ","DEMOTE_ERROR_TIMEOUT":"The selected person was not made a reader because the server could not be contacted.  Please try again."},"EVT_VIEW_ONE":{"DAY":"${user} shared with ${list} on ${EEEE} at ${time}","YEAR":"${user} shared with ${list} on ${date_long}","MONTH":"${user} shared with ${list} on ${MMM} ${dd}","TODAY":"${user} shared with ${list} today at ${time}","YESTERDAY":"${user} shared with ${list} yesterday at ${time}"},"SHARED_WITH_TWO":{"DAY":"Shared with ${user} and ${count} on ${EEEE} at ${time}","YEAR":"Shared with ${user} and ${count} on ${date_long}","MONTH":"Shared with ${user} and ${count} on ${MMM} ${dd}","TODAY":"Shared with ${user} and ${count} today at ${time}","YESTERDAY":"Shared with ${user} and ${count} yesterday at ${time}"},"SHARED_WITH":{"DAY":"Shared with ${user} on ${EEEE} at ${time}","YEAR":"Shared with ${user} on ${date_long}","MONTH":"Shared with ${user} on ${MMM} ${dd}","TODAY":"Shared with ${user} today at ${time}","YESTERDAY":"Shared with ${user} yesterday at ${time}"}},"VIEWS":{"MEDIA_TOOLTIP":"Each file is shown with a large icon and a pop-up","MEDIA":"Tiles","PAGE_DETAILS_TOOLTIP":"Pages arranged in a table","SUMMARY_TOOLTIP":"A list with info about each file","DETAILS":"Details","MEMBERS_DETAILS_TOOLTIP":"Members arranged in a table","MAP_TOOLTIP":"Files arranged according to their relevance","MAP":"Map","WIKI_DETAILS_TOOLTIP":"Wikis arranged in a table","MEMBERS_SUMMARY_TOOLTIP":"A list with info about each member","PAGE_SUMMARY_TOOLTIP":"A list with info about each page","DETAILS_TOOLTIP":"Files arranged in a table","SUMMARY":"Summary","WIKI_SUMMARY_TOOLTIP":"A list with info about each wiki"},"LOADING":"Loading...","FEEDS":{"IE6SUBSCRIBE":"Warning: This link is meant for feed readers and may display incorrectly in your browser, click OK to continue, Cancel to return to page."},"EDIT_ATTACHMENT":{"ERROR_NAME_EXISTS":"The attachment cannot be renamed because another attachment has the same name.","ERROR_MAX_CONTENT_SIZE":"The attachment could not be replaced because it is larger than the maximum allowed attachment size of ${0}","EDITERROR":"The attachment's metadata was not edited due to an error","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Edit Attachment","ERROR_QUOTA_VIOLATION":"The attachment could not be replaced because the wiki is almost full.  To replace with this file, ${0} of files, attachments, or versions would have to be removed. ","LIMIT_HELP":"You can replace the contents of this attachment by selecting a different file.  You must choose a file that is smaller than ${limit} - attachments above this size are not allowed.","DESCRIPTION_LABEL":"Description: ","REPLACE_CONFIRM":"The attachment you have selected has a different extension than the existing attachment.  Click 'OK' to proceed with changing the file type.  To select a different file, click 'Cancel'","ERROR_TIMEOUT":"The attachment was not edited because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CONCURRENT_MODIFICATION":"This attachment was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Clicking 'OK' will overwrite the changes.   ","WARN_SPECIFY_NAME":"File name is a required field. ","ERROR_CANCEL":"The attachment was not edited because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The attachment could not be edited because you are not a contributor.","ERROR_NOT_LOGGED_IN":"You must be logged in to edit this attachment.  Click 'OK' to be prompted to log in.","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","OK":"OK","REPLACEERROR":"The attachment's contents were not replaced due to an error.","NAME_LABEL":"File name: ","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","WARN_EXTENSION":"The file you are replacing must have the same extension.","REPLACE_LABEL":"Replace contents:"},"MYWIKIS":{"USERS_WIKIS":"${0}'s Wikis","NODESCRIPTION":"No description"},"HELP":"Help","EDIT_MEMBER":{"NOSUCHMEMBER":"The member you are trying to edit does not exist. ","UNAUTHORIZED":"You don't have enough privileges to edit the role for this member.","EDITROLE":"Change the role for user ${0}","TITLE":"Edit Member","ACTION_TOOLTIP":"Change the role for this member of the Wiki","ACTION":"Edit","CANTEDITROLE":"You can't change the role for this member."},"ELLIPSIS":"...","BACK_TO_PAGE":"Back to Page","WARNING":"Warning","COMMENTS":{"TRIM_LONG_COMMENT_CONFIRM":"Shortening will remove the text beyond the comment limit.  Click 'OK' to shorten or 'Cancel' to edit the comment yourself.","COMMENT_DELETED":{"DAY":"Comment deleted by ${user} on ${EEEE} at ${time}","YEAR":"Comment deleted by ${user} on ${date_long}","MONTH":"Comment deleted by ${user} on ${MMM} ${dd}","TODAY":"Comment deleted by ${user} today at ${time}","YESTERDAY":"Comment deleted by ${user} yesterday at ${time}"},"ERROR_EDIT":"Your comment could not be updated.  Please try again later.","COMMENT_CREATED":{"DAY":"${user} commented on ${timestamp}","YEAR":"${user} commented on ${timestamp}","MONTH":"${user} commented on ${timestamp}","TODAY":"${user} commented ${timestamp}","YESTERDAY":"${user} commented ${timestamp}"},"ERROR_NO_CONTENT_EDIT":"Please enter your comment and click 'Save.'  If you no longer wish to edit your comment click 'Cancel.'","COUNT":"${0}-${1} of ${2}","COMMENT_COUNT_MANY":"${0} comments","ERROR_DELETE_NOT_LOGGED_IN":"You must be logged in to delete this comment.  Click 'Delete' to be prompted to log in.","TRIM_LONG_COMMENT":"Shorten comment?","DELETECONFIRM":"Are you sure you wish to delete this comment?","ERROR_EDIT_NOT_LOGGED_IN":"You must be logged in to edit this comment.  Click 'Save' to be prompted to log in.","ITEMS_PER_PAGE":" items per page.","COMMENT_LABEL":"Comment:","SAVE":"Save","ERROR_CREATE_ACCESS_DENIED":"Your comment could not be saved because the file has been deleted or is no longer visible to you.","COMMENT_EDITED":{"DAY":"Edited on ${EEEE}","YEAR":"Edited on ${date_long}","MONTH":"Edited on ${MMM} ${dd}","TODAY":"Edited today at ${time}","YESTERDAY":"Edited yesterday at ${time}"},"EDIT":"Edit","PREVIOUS":"Previous","CANCEL":"Cancel","ERROR_CREATE_CANCEL":"Your comment could not be saved because the request was cancelled.  Click 'Save' to try again.","COMMENT_COUNT_ONE":"${0} comment","DELETEREASON":"Reason for deleting this comment:","ERROR_DELETE":"Your comment could not be deleted.  Please try again later.","SUBSCRIBE_TO_COMMENTS_TOOLTIP":"Follow changes to these comments through your feed reader","ERROR_EDIT_CANCEL":"Your comment could not be updated because the request was cancelled.  Click 'Save' to try again.","LINK":"Link","VIEW_COMMENTS_FILE":"View comments on this file","LOADING":"Loading comments...","NEXT":"Next","PAGE":"Page","ERROR_DELETE_TIMEOUT":"Your comment could not be deleted because the server could not be contacted.  Click 'Delete' to try again.","ERROR_DELETE_ACCESS_DENIED":"Your comment could not be deleted because the file has been deleted or is no longer visible to you.","ERROR_EDIT_NOT_FOUND":"Your comment could not be updated because the file has been deleted or is no longer visible to you.","COMMENT_CREATED_TIME":{"DAY":"${EEEE} at ${time}","YEAR":"${date_long}","MONTH":"${MMM} ${dd}","TODAY":"today at ${time}","YESTERDAY":"yesterday at ${time}"},"ERROR_CREATE_NOT_FOUND":"Your comment could not be saved because the file has been deleted or is no longer visible to you.","ERROR_NO_CONTENT":"Please enter your comment and click 'Save.'  If you no longer wish to leave a comment click 'Cancel.'","ERROR_CREATE_NOT_LOGGED_IN":"You must be logged in to create this comment.  Click 'Save' to be prompted to log in.","ERROR_CREATE_TIMEOUT":"Your comment could not be saved because the server could not be contacted.  Click 'Save' to try again.","ERROR_EDIT_ACCESS_DENIED":"Your comment could not be updated because the file has been deleted or is no longer visible to you.","SUBSCRIBE_TO_COMMENTS":"Subscribe to these comments","DELETE":"Delete","ERROR_DELETE_CANCEL":"Your comment could not be deleted because the request was cancelled.  Click 'Delete' to try again.","ERROR_DELETE_NOT_FOUND":"Your comment could not be deleted because the file has been deleted or is no longer visible to you.","NOHYPHENCOUNT":"${0} of ${1}","JUMP_TO_LAST":"Most recent","WARN_LONG_COMMENT":"The comment is too long.","ERROR_CREATE":"Your comment could not be saved.  Please try again later.","VIEW_COMMENTS_PAGE":"View comments on this page","EMPTY":"There are no comments.","ADD_COMMENT":"Add a comment","ERROR_EDIT_TIMEOUT":"Your comment could not be updated because the server could not be contacted.  Click 'Save' to try again."},"FILTERS":{"MY_TAGS":{"TITLE":"My Tags"},"EVENT":{"TITLE":"Events","COMMENTS":"Comments","PEOPLE_JOINED":"People joined","SHARED_WITH":"Shared with","RECOMMENDATIONS":"Recommendations","MEDIA_UPDATES":"File updates"},"SHARE":{"NOT_PUBLIC_TOOLTIP":"Files that aren't public but are shared with one or more people","SELECTIVE_LONG":"Files that aren't public but are shared with one or more people","NOT_PUBLIC_LONG":"Files that aren't public but are shared with one or more people","PUBLIC_LONG":"Files that are visible to everyone","PRIVATE_TOOLTIP":"Files that only I can see","PRIVATE":"with no one (private)","NOT_PUBLIC":"with one or more people","TITLE":"Shared","PRIVATE_LONG":"Private to me","PUBLIC":"with everyone (public)","PUBLIC_TOOLTIP":"Files that are visible to everyone","SELECTIVE":"with one or more people","SELECTIVE_TOOLTIP":"Files that aren't public but are shared with one or more people"},"TYPE":{"PAGES_LONG":"Pages only","TITLE":"Type","PAGES_TOOLTIP":"All pages created in this wiki","FILES":"uploaded files","FILES_LONG":"Uploaded files only","FILES_TOOLTIP":"Any file that was uploaded from a computer","PAGES":"pages"},"ALL_TAGS":{"TITLE":"Everyone's Tags"},"MEMBER_TYPE":{"GROUP_TITLE":"Group","GROUP_LONG":"Groups only","USER_TOOLTIP":"Users who are members of the wiki","VIRTUAL_TITLE":"Special Group","VIRTUAL_TOOLTIP":"Special groups which are members of the wiki","GROUP":"groups","USER_TITLE":"User","VIRTUAL":"special groups","TITLE":"Member Type","USER_LONG":"Users only","USER":"users","GROUP_TOOLTIP":"Groups which are members of the wiki ","VIRTUAL_LONG":"Special groups only"},"SHARED_BY":{"TITLE":"Shared By","OPTION_EMPTY_TOOLTIP":"Only show files that were shared by a specific person","OPTION":"by ${0}","FILTER":"Shared by ${0}","OPTION_EMPTY":"by a specific person:"},"DATE":{"TODAY_LONG":"Only updated since midnight today ","TODAY_TOOLTIP":"Since midnight today","LASTYEAR_TOOLTIP":"Last 365 days","LASTWEEK":"last week","LASTWEEK_TOOLTIP":"Last 7 days","LASTMONTH_TOOLTIP":"Last 30 days","TITLE":"Date","LASTWEEK_LONG":"Only updated in the last seven days ","LASTMONTH_LONG":"Only updated in the last thirty days ","TODAY":"today","LASTMONTH":"last 30 days","LASTYEAR_LONG":"Only updated in the last year ","LASTYEAR":"last year"},"PERMISSION":{"EDIT_TOOLTIP_INBOUND":"Files you can contribute to","EDIT":"contribute","EDIT_TOOLTIP_OUTBOUND":"Files other people can contribute to","VIEW":"read","VIEW_LONG_OUTBOUND":"Files other people can read but not contribute to","VIEW_TOOLTIP_INBOUND":"Files you can read but not contribute to","VIEW_LONG_INBOUND":"Files you can read but not contribute to","EDIT_LONG_OUTBOUND":"Files other people can contribute to","VIEW_TOOLTIP_OUTBOUND":"Files other people can read but not contribute to","EDIT_LONG_INBOUND":"Files you can contribute to","TITLE":"Permission"},"SHARED_WITH":{"TITLE":"Shared With","OPTION_EMPTY_TOOLTIP":"Only show files that were shared with a specific person","OPTION":"with ${0}","FILTER":"Shared with ${0}","OPTION_EMPTY":"with a specific person:"},"USER_TAGS":{"TITLE":"This Person's Tags"}},"DOWNLOAD_INFO":{"PAGE":{"EMPTY":"Anonymous users only","ERROR":"Unable to load page view information","LOADING":"Loading..."},"FILE":{"EMPTY":"Anonymous users only","ERROR":"Unable to load download information","LOADING":"Loading..."}},"SIZE":{"B":"${0} B","MB":"${0} MB","GB":"${0} GB","KB":"${0} KB"},"FOOTER":{"HELP":{"FORUMS":"Support forums","HEADING":"Help","HELP":"Help"},"TOOLS":{"ADMINPAGE":"Admin","HEADING":"Tools","BROWSERPLUGINS":"Browser plugins","METRICS":"System metrics"},"ABOUT":{"CONNECTIONSONLINE":"IBM Lotus Connections on ibm.com","SUBMITFEEDBACK":"Submit feedback","ABOUT":"About","HEADING":"About"},"FILE_BUG":"File a Bug Report","DOWNLOAD_CONNECTORS":"Download Connectors","CONNECTIONS":{"HEADING":"IBM Lotus Connections","HOME":"Home","DEMO":"Demo"}},"SHARE_INFO":{"FILE":{"DOWNLOADED_CURRENT":"${0} has downloaded the most recent version of this file.","DOWNLOADED_NEVER":"${0} has not yet downloaded this file.","DOWNLOADED_OLDER":"${0} has downloaded an older version of this file."},"LOADING":"Loading...","SHOW_INVOLVED":"Which shares apply to me?","ERROR":"Unable to load share information","PAGE":{"DOWNLOADED_CURRENT":"${0} has viewed the most recent version of this page.","DOWNLOADED_NEVER":"${0} has not yet viewed this page.","DOWNLOADED_OLDER":"${0} has viewed an older version of this page."}},"ATTACHMENTS":{"ADDATTACHMENT":"Add an attachment","EDIT":"Edit","SHOW":"Show","LOADING":"Loading attachments...","ATTACHMENT":"Attachment","DELETE":"Delete","PREVIOUS":"Previous","PAGE":"Page","ERROR":"An error occurred","NEXT":"Next","NO_ATTACHMENTS":"No attachments exist","COUNT":"${0}-${1} of ${2}","DATE":{"RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"DELETEERROR":"The attachment was not deleted due to an error.","DELETE_ERROR_CANCEL":"The attachment was not deleted because the request was cancelled.  Click delete to try again.","DELETE_ERROR_TIMEOUT":"The attachment was not deleted because the server could not be contacted.  Click delete to try again."},"UPLOAD_ATTACHMENT":{"WARN_LONG_DESCRIPTION":"The description is too long.","CONFIRM_REPLACE":"Another attachment to this page with the same name already exists.  Do you wish to replace the contents of the existing attachment?","NOTE_LABEL":"Note: ","ERROR_MAX_CONTENT_SIZE":"The attachment could not be uploaded because it is larger than the maximum allowed attachment size of ${0}","CONTENTS_LABEL":"File: ","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Upload Attachment","ERROR_QUOTA_VIOLATION":"The attachment could not be uploaded because the wiki is almost full.  To upload this attachment, ${0} of files, attachments, or versions would have to be removed.","WARN_LONG_FILENAME":"The file name is too long. ","LIMIT_HELP":"Files must be smaller than ${limit}.","DESCRIPTION_LABEL":"Description: ","TAGS_LABEL":"Tags: ","WARN_NO_FILENAME":"File name is a required field.","ERROR_TIMEOUT":"The attachment could not be uploaded because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CANCEL":"The attachment could not uploaded because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The attachment could not be uploaded because you are not a contributor.","ERROR_NOT_LOGGED_IN":"You must be logged in to upload this attachment.  Click 'OK' to be prompted to log in.","TRIM_LONG_FILENAME":"Shorten file name?","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","TRIM_LONG_DESCRIPTION":"Shorten description?","ERROR":"The attachment could not be uploaded.  Please try again later","OK":"OK","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","NAME_LABEL":"File name: ","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","WARN_INVALID_CHARS_IN_NAME":"File names may not contain the following characters: \\ / : * ? \" < > | [ ]","SELECT_FILE":"Please select a file to upload"},"SESSION_TIMEOUT":"Your Connections session has expired.  Click 'OK' to log in again.","FILE":{"EXPAND_ERROR":{"CANCEL":"The details of this file could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this file could not be loaded because file has been deleted or is no longer visible.","TIMEOUT":"The details of this file could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this file from being displayed.  Please try again later."}},"TAGGER":{"CANCEL_TOOLTIP":"Cancel tag editing","REMOVEERROR_NOT_FOUND":"The tag could not be removed because the document has been deleted or is no longer visible.","LOADING":"Loading tags...","ADD_REMOVE_TAGS":"Add or remove tags","REMOVEERROR_ACCESS_DENIED":"The tag could not be removed because you do not have permission to contribute to this document.","CREATEERROR_TIMEOUT":"The tag could not be created because the server could not be contacted.  Click 'OK' to try again.","REMOVECONFIRM":"Are you sure you want to remove the tag ${0}?","WARN_LONG_TAG":"The tag '${0}' is too long.","ADD_REMOVE_TAGS_TOOLTIP":"Add or remove tags on this item","LOADERROR_TIMEOUT":"The tags could not be loaded: request timed out.","CREATEERROR":"The tag could not be created.  Please try again later.","CREATEERROR_NOT_FOUND":"The tag could not be created because the document has been deleted or is no longer visible.","NO_RESULTS":"No results for '${0}'","REMOVE":"Remove tag","LOADERROR_CANCEL":"The tags could not be loaded: request cancelled.","INVALID_CHAR_WARN_LONG":"One or more tags you have entered contain invalid characters: ${0}","REMOVEERROR_TIMEOUT":"The tag could not be removed because the server could not be contacted.  Click 'OK' to try again.","ERROR_LOADING":"An error has occured loading the tags.","NONE":"None","TRIM_TAGS":"Shorten tags?","CREATEERROR_CANCEL":"The tag could not be created because the request was cancelled.  Click 'OK' to try again.","SEPARATOR":",","LOADERROR_NOTFOUND":"The tags could not be loaded: file not found.","OK":"OK","INVALID_CHAR_WARN":"!","REMOVEERROR":"The tag could not be removed.","ADD_TAGS":"Add tags","CANCEL":"Cancel","CREATEERROR_ACCESS_DENIED":"The tag could not be created because you do not have permission to contribute to this document.","TRIM_TAG":"Shorten tag?","REMOVEERROR_CANCEL":"The tag could not be removed because the request was cancelled.  Click 'OK' to try again.","WARN_LONG_TAGS":"The specified tags are too long.","NOTAGS":"No Tags"},"WIKI_UPDATED":{"SHOW":"Show Changes"},"COMMUNITIES":{"COMMUNITY_WIKI_TITLE":"This wiki is associated with a Group.","COMMUNITY_WIKI":"Group Wiki"},"ERROR_IN_APP_TITLE":"Oops, that didn't work","SEARCH":{"SEARCH_ALT":"Search","HEADING_THIS":"Search Results within This Wiki: ${0}","SEARCH":"Search","REL_DATES":"Related Dates","TAGS":"Tags","DATES":"Dates","FILES":"Search Files","HEADING":"Search Results within Wikis","ADD_TO_FAVORITES":"Add to Favorite People","USER_RESULTS":"People search results for name and e-mail: ${0}","COMMUNITIES":"Search Groups","PEOPLE":"People","ACTIVITIES":"Search Activities","REL_TAGS":"Related Tags","DOGEAR":"Search Bookmarks","ALL_LABEL":"Search All","PEOPLE_DEFAULT":"Name or e-mail","REL_PEOPLE":"Related People","ALL":"All Areas","BLOGS":"Search Blogs","WIKIS":"Search Wikis","HEADING_MY":"Search Results within My Wikis","PROFILES":"Search Profiles"},"ERROR_OCCURRED":"An error occurred.  Contact your Lotus Connections administrator.","OK":"OK","SORTS":{"MOSTRECENT":"Most Recent","DN_TOOLTIP_REVERSE":"Sort by distinguished name in reverse alphabetical order","MOSTCOMMENTED_TOOLTIP":"Sort from most commented to least commented","MOSTDOWNLOADED":"Most Downloaded","HIGHESTRECOMMENDED":"Most Recommended","TITLE_TOOLTIP_REVERSE":"Sort by name in reverse alphabetical order","MOSTDOWNLOADED_TOOLTIP_REVERSE":"Sort from least downloaded to most downloaded","EMAIL_TOOLTIP":"Sort by email in alphabetical order","MOSTCOMMENTED":"Most Commented","HIGHESTRECOMMENDED_TOOLTIP":"Sort from most recommended to least recommended","TITLE":"Name","SHARED_ON_TOOLTIP_REVERSE":"Sort from least recently shared to most recently shared","EMAIL_TOOLTIP_REVERSE":"Sort by email in reverse alphabetical order","MOSTVISITED_TOOLTIP":"Sort from most visited to least visited","TITLE_TOOLTIP":"Sort by name in alphabetical order","SIZE_TOOLTIP":"Sort by size from largest to smallest","MOSTRECENT_SHARE":"Most Recently Shared","TYPE_TOOLTIP":"Sort by type in alphabetical order","MOSTDOWNLOADED_TOOLTIP":"Sort from most downloaded to least downloaded","MOSTCOMMENTED_TOOLTIP_REVERSE":"Sort from least commented to most commented","SHARED_ON_TOOLTIP":"Sort from most recently shared to least recently shared","MOSTRECENT_TOOLTIP":"Sort from most recently updated to least recently updated","HIGHESTRECOMMENDED_TOOLTIP_REVERSE":"Sort from least recommended to most recommended","SIZE_TOOLTIP_REVERSE":"Sort by size from smallest to largest","MOSTVISITED_TOOLTIP_REVERSE":"Sort from least visited to most visited","TYPE_TOOLTIP_REVERSE":"Sort by type in reverse alphabetical order","MOSTVISITED":"Most Visited","DN_TOOLTIP":"Sort by distinguished name in alphabetical order","ADDED_TOOLTIP_REVERSE":"Sort from least recently added to most recently added","MOSTRECENT_TOOLTIP_REVERSE":"Sort from least recently updated to most recently updated","ADDED_TOOLTIP":"Sort from most recently added to least recently added"},"WATCHLIST":{"TIP1":"The watchlist displays the names of people you add to your list. Click the name to view that person's files.","REMOVECONFIRM":"Are you sure you want to remove this person from your watchlist?","TIP2":"To add someone to your watchlist, go to the wiki of the person whose name you want to add, and then click the link Add to Watchlist.","MYWATCHLIST":"My Watchlist","LOADING":"Loading...","CLOSE":"Close Watchlist","ADDUSER":"Add ${0} to Watchlist...","OPEN":"Open Watchlist","REMOVE":"Remove from Watchlist","HELP":"Watchlist Help","EMPTY":"There are no people being watched."},"STOP_SHARING_FILE":{"CONFIRM":"Are you sure you wish to remove all shares on this file?\n\n${0}","TITLE":"Stop Sharing","TIMEOUT_ERROR":"The file could not be shared because the server could not be contacted.  Click 'Stop Sharing' to try again.","CONFIRM_PUBLIC":"Are you sure you wish to remove all shares on this file?\nNote: Because this file is public, everyone will still be able to see the file.\n\n${0}","NOT_FOUND_ERROR":"The file has been deleted or is no longer visible to you.","CANCEL_ERROR":"The file could not be shared because the request was cancelled.  Click 'Stop Sharing' to try again.","ERROR":"The shares on this file could not be removed.  Please try again later.","TOOLTIP":"Remove all shares on this file"},"UPLOAD":{"DESCRIPTION":"Description","FILE":"File","NAME":"Name"},"SUBSCRIBE_TO_PAGE_TOOLTIP":"Follow changes to this page through your feed reader","DATE":{"MONTHS_ABBR":["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"],"WIKI_CREATED":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","MONTH":"${MMM} ${dd}","TODAY":"today at ${time}","YESTERDAY":"yesterday at ${time}"},"PM":"PM","YESTERDAY":"yesterday","CREATED":{"DAY":"created ${EEee} at ${time}","YEAR":"created ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"created ${MMM} ${dd}","TODAY":"created today at ${time}","YESTERDAY":"created yesterday at ${time}"},"FULL":"${EEEE}, ${date_long} ${time_long}","AUTOSAVED_SHORT":{"DAY":"Autosaved ${EEee} at ${time}","YEAR":"Autosaved ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Autosaved ${MMM} ${dd}","TODAY":"Autosaved at ${time}","YESTERDAY":"Autosaved yesterday at ${time}"},"ADDED":{"DAY":"Added ${EEee} at ${time}","YEAR":"Added ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Added ${MMM} ${dd}","TODAY":"Added today at ${time}","YESTERDAY":"Added yesterday at ${time}"},"TODAY_U":"Today","TODAY":"today","YESTERDAY_U":"Yesterday","RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"WIKIPAGE":{"SECTION":{"VERSION":"Version","CHILDREN":{"TITLE":"Child Pages","LINK":"Create new child page","NONE":"No children exist"},"COMPARE":"Wiki text comparison","INFOSIZE":"${0} (${1} including page, attachments, and all versions)","HIERARCHY":{"MOVE":"Move Page","TITLE":"Hierarchy"},"REFRESH":"Refresh","RESTORE":"Restore this version"},"ACTIONS":{"TEXT":"Page Actions","TOOLTIP":{"EDITOR":"Create a child page or peer page, delete the page, print the page, or move the page.","READER":"Print the page."}},"ERROR":{"ACCESS_DENIED_ANON":{"TITLE":"You do not have access to this page","MESSAGES":"You do not have permission to view this page.  You may have access if you log in. "},"GENERAL":{"MESSAGES":"Something went wrong - click the back button and try again. "},"ACCESS_DENIED":{"TITLE":"You do not have access to this page","MESSAGES":"You do not have permission to view this page.   "},"WIKI":{"TITLE":"We can't find that Wiki","MESSAGES":"The Wiki can't be found - click the back button and try again.  If this doesn't work the wiki may have been deleted."},"DEFAULT":{"TITLE":"That page cannot be displayed.   ","MESSAGES":"That page cannot be displayed.   "}},"MODE":{"ATTACHMENTS":"Page Attachments","COMMENTS":"Comments","VERSIONS":"Versions","COMPARE":"Version Comparison","INFO":"Page Info"}},"PAGING":{"PREVIOUS":"Previous","COUNT":"${0}-${1} of ${2}","NEXT":"Next"},"APP_LOAD_BLURB":"Please wait while the application loads...","CONNSEARCH":{"SEARCH_ALT":"Search","SCOPE_CONNECTIONS_ACTIVITIES":{"LABEL":"Activities","HOVER":"Search Activities"},"SEARCH":"Search","HINT":"Search","FILES":"Files belonging to...","SCOPE_CONNECTIONS_ALL":{"LABEL":"All My developerWorks","HOVER":"Search all of My developerWorks"},"SCOPE_CONNECTIONS_DOGEAR":{"LABEL":"Bookmarks","HOVER":"Search Bookmarks"},"FAVORITES":"Favorites for...","USER_RESULTS":"People search results for name and e-mail: ${0}","COMMUNITIES":"Groups","PEOPLE":"People","SCOPE_ALLWIKIS":{"LABEL":"Public Wikis","HOVER":"Search Public Wikis"},"SCOPE_CONNECTIONS_BLOGS":{"LABEL":"Blogs","HOVER":"Search Blogs"},"HOVER":"Refine search options","SCOPE_THISWIKI":{"LABEL":"This Wiki","HOVER":"Search This Wiki"},"SCOPE_CONNECTIONS_ADVANCED":{"LABEL":"Advanced search","HOVER":"Go to the advanced search page"},"PEOPLE_DEFAULT":"Name or e-mail","INTERESTED":"People interested in...","SCOPE_CONNECTIONS_COMMUNITIES":{"LABEL":"Groups","HOVER":"Search Groups"},"SCOPE_CONNECTIONS_FILES":{"LABEL":"Files","HOVER":"Search Files"},"SCOPE_MYWIKIS":{"LABEL":"My Wikis","HOVER":"Search My Wikis"},"SCOPE_CONNECTIONS_PROFILES":{"LABEL":"Profiles","HOVER":"Search Profiles"}},"TITLEBAR":{"SEARCH":"Search","GO":"Go","ALLUSERS":"Find People","HOME":"Wikis","SHARES":"My Shares","MYCHANNEL":"My Place","ALLUSERS_TITLE":"Search for other people","MYCHANNEL_TITLE":"All of your files","OFFLINE":"Offline","SHARES_TITLE":"All of the shares that you are involved in","HOME_TITLE":"See what's happening in wikis"},"MYDWBC":{"MYDW_BC1":"developerWorks","MYDW_BC1_LINK":"//www.ibm.com/developerworks/","MYDW_BC2":"My developerWorks","MYDW_BC2_LINK":"//www.ibm.com/developerworks/mydeveloperworks/","MYDW_BC3":"Connect","MYDW_BC3_LINK":"//www.ibm.com/developerworks/mydeveloperworks/connect"},"MYDWBANNER":"My developerWorks: Files","TOGGLE_SECTION":"Expand and collapse this section","ERROR_IN_APP_MESSAGE":"Something went wrong - click the back button and try again.  If this doesn't work report the problem to the support forum. If someone sent you this link, check to see if you've been granted permission.","JAVASCRIPT_DISABLED_TITLE":"Turn on JavaScript","EMOTICONS":{"BLOCK":"Block","COOL":"Cool","ANGEL":"Angel","THUMBS_DOWN":"Thumbs down","CRYING":"Crying","RED_FLAG":"Red flag","CROSS":"Cross","HAPPY":"Happy","BIG_SMILE":"Big smile","SURPRISED":"Surprised","HYSTERICAL":"Hysterical","LIGHT_BULB":"Light bulb","GREEN_FLAG":"Green flag","SAD":"Sad","CONFUSED":"Confused","SHY":"Shy","WARNING":"Warning","WINK":"Wink","TONGUE":"Tongue","LAUGH":"Laugh","GOOFY":"Goofy","STAR":"Star","EYEBROW":"Eyebrow","INFO":"Info","QUESTION":"Question","TICK":"Tick","THUMBS_UP":"Thumbs up","ANGRY":"Angry"},"EDIT_WIKI":{"DESC_LABEL":"Description:","ERROR_LOAD":"Couldn't load Wiki settings.","CREATOR":"Wiki Creator:","CANCEL":"Cancel","DELETE":"Delete Wiki","SAVE":"Save","BUSY":"Loading...","ERROR_SAVE":"Couldn't save Wiki settings.","TITLE":"Settings","ERROR_DESCRIPTION_TOO_LONG":"The Wiki description is too long. ","TAGS_LABEL":"Tags:","ERROR_SHORTEN_DESCRIPTION":"Shorten Wiki description?","OK":"OK","WIKITITLE":"Wiki Title:"},"CHANGE_PROPAGATE_FILE":{"ERROR_TIMEOUT":"The file was not updated because the server could not be contacted.  Click the checkbox to try again.","ERROR":"The file was not updated due to an error.","ERROR_CANCEL":"The file was not updated because the request was cancelled.  Click the checkbox to try again."},"WIKI_MEMBERSHIP":{"COUNT_OTHERS_PUBLIC_1":"${0} people","SEARCH_TOOLTIP":"Search the directory","SHARE_PERMISSION":"Make these people contributors to this page","COUNT_OTHERS_SINGLE_PUBLIC":"This page is public and is shared with ${0}.","SHARE_WITH":"Share with:","USER":"User","READER":"Reader","COUNT_NONE_PUBLIC":"This Wiki is public and you are not required to add members.","SELECT_USER":"Members:","COUNT_OTHERS_PUBLIC":"This page is public and is shared with ${0}.","PROPAGATE_SHARED":"All members can add other members","AUTHENTICATED":"Authenticated Users","WARN_LONG_MESSAGE":"The message is too long.","ANONYMOUS":"Anonymous Users","COUNT_OTHERS_SINGLE_1":"1 person","CANCEL":"Cancel","OWNER":"Owner","PROPAGATE":"Allow this page to be shared by other people","ERROR":"The page could not be shared.  Please try again later.","EDITOR":"Editor","REMOVE_USER_TOOLTIP":"Remove member","NOT_LOGGED_IN_ERROR":"You must be logged in to share this page.  Click 'OK' to be prompted to log in.","SELECT_USER_ERROR":"Please select a person to share with.","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you and cannot be shared.","PROPAGATE_OWNER":"Only you can add members","GROUP":"Group","SELF_REFERENCE_ERROR":"You cannot add yourself as a member.","DIALOG_TITLE":"Add members to this Wiki","TRIM_LONG_MESSAGE":"Shorten message?","PROPAGATE_PUBLIC":"Everyone can add members","CANCEL_ERROR":"The page was not shared because the request was cancelled.  Click 'OK' to try again.","MANAGER":"Manager","COUNT_NONE":"This Wiki has no members other than yourself.","TRIM_LONG_DESCRIPTION_MESSAGE":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","OK":"OK","MAX_SHARES_ERROR":"The maximum number of shares has been exceeded.","SHARE_TOOLTIP":"Allow others to read or contribute to this page","COMMUNITY_INFO":"You manage community wiki membership and roles in the community that owns the wiki. You edit community membership and roles by opening its business card and accessing its Members page.","TIMEOUT_ERROR":"The page was not shared because the server could not be contacted.  Click 'OK' to try again.","ADD_FROM_FAVORITES":"Add a person from your favorite wikis","WARN_LONG_DESCRIPTION":"The description is too long.","BUSY":"Applying...","COUNT_OTHERS_1":"${0} people","ACCESS_DENIED_ERROR":"You no longer have permission to share this page.","OWNER_REFERENCE_ERROR":"You cannot add the owner of the Wiki as a member.","COUNT_OTHERS_SINGLE":"This page is shared with ${0}.","TRIM_LONG_DESCRIPTION":"Shorten description?","COUNT_OTHERS_SINGLE_PUBLIC_1":"1 person","EXPAND_SECTION":"Add people as members of the Wiki...","COUNT_OTHERS":"${0} is a member of this Wiki.","MESSAGE_LABEL":"Message:"},"CONTENT":{"COLUMN_SIZE":"Size","COLUMN_SHARED_WITH":"Shared With","LOADING":"Loading... ","ELLIPSIS":"...","OF_PAGES":" of ${0}.","PRIVATE":"Private","SHARE_MESSAGE":{"LIST_SEP":", "},"DISCARD_DRAFT_TOOLTIP":"Discard these unsaved changes","DELETEPAGE_ERROR_TIMEOUT":"The page was not deleted because the server could not be contacted.  Click delete to try again.","DELETEPAGE_ERROR_NOT_FOUND":"This page has already been deleted or is no longer visible to you.","COLUMN_ADDED":"Added","SHARED":{"COUNT_ONE":"1 person","COUNT_MANY":"${0} people","MANY_1":"${0} people","ONE_1":"1 person","MANY":"Shared with ${0}","BASE":"Shared with you","ONE":"Shared with ${0}"},"DELETE_ERROR_TIMEOUT":"The file was not deleted because the server could not be contacted.  Click delete to try again.","EDIT_PAGE_DRAFT_CONFIRM":"You made changes to this file that were not saved. Do you wish to recover and edit with those changes? If you wish to edit the current version instead, you must select cancel and discard the existing unsaved changes.","DOWNLOAD_TOOLTIP_ONE":"${0} download","COMPARE_ERROR":"Could not compare this page.  Please try again.","MORE":"more","SHARE_TOOLTIP":"Allow others to read or contribute to this file","COLUMN_LAST_MODIFIED":"Updated","DELETEPAGE_ERROR_CANCEL":"The page was not deleted because the request was cancelled.  Click delete to try again.","REPLACE":"Replace","DELETESHAREERROR":"The share could not be removed","COLUMN_EMAIL":"Email","ONE_DOWNLOAD":"1","DISCARDDRAFT_ERROR_NOT_FOUND":"These unsaved changes have already been discarded.","TAGS_LABEL":"Tags:","DELETE_ERROR_CANCEL":"The file was not deleted because the request was cancelled.  Click delete to try again.","TAG_TOOLTIP":"Filter by tag '${0}'","USERERROR_TITLE":"We can't find that wiki","EDIT_PAGE_ERROR":"The page could not be edited due to an error","OPEN_WIKI":"Open Wiki","DELETESHARECONFIRM":"Are you sure you wish to stop sharing with ${0}?","DOWNLOADS":"${0}","COUNT":"${0}-${1} of ${2}","COLUMN_SHARED_BY":"Shared By","SHOW":"Show ","DISCARD":"Discard","HIDE_EXTRA":"Hide extra information","COLUMN_SHARED_ON":"Shared On","CREATE_PAGE_EXISTS_ERROR":"A page or file with the name you have specified already exists. Please choose a different name.","PUBLIC":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"Public and shared with ${0}","BASE":"Public","ONE":"Public and shared with ${0}"},"DELETE_TOOLTIP":"Delete this file","USERERROR_MESSAGES":"The wiki can't be found - click the back button and try again.  If this doesn't work the wiki may have been archived or disabled.","ERROR_REQUEST_TIMEOUT":"The server could not be contacted.","SHARE":"Share","HITS":"Page hits","DISCARDDRAFT_ERROR":"These unsaved changes were not discarded due to an error.","DELETESHAREERROR_TIMEOUT":"The share was not deleted because the server could not be contacted.  Click 'X' to try again.","ERROR_REQUEST_UNKNOWN":"An unknown error has occurred.","PREVIOUS":"Previous","DELETE":"Delete","DISCARDDRAFT_ERROR_TIMEOUT":"These unsaved changes were not discarded because the server could not be contacted.  Click discard to try again.","EDIT_DRAFT_TOOLTIP":"Work with these unsaved changes","COLUMN_RATING":"Recommend","DELETESHARE":"Remove this share","VIEW_SELECTION":"Display:","SHOWING":"Showing ","JUMP_TO_PAGE":"Jump to page  ","EDIT_PAGE_EXISTS_ERROR":"A page or file with the name you have specified already exists. Please choose a different name.","DISCARDDRAFT_ERROR_CANCEL":"These unsaved changes were not discarded because the request was cancelled.  Click discard to try again.","DELETEPAGE_CONFIRM":"Are you sure you wish to delete this page?\n\n${0}","DELETESHAREERROR_NOT_FOUND":"The share was not deleted because the file has been deleted or is no longer visible to you.","OPEN_PAGE":"Open Page","OTHER_PEOPLE_FILE":"Other people who have shared this file","EMPTY":{"MY_MEDIA":{"FILTERED":{"FILES":"There are no files in this wiki that match your filters.","MEDIA":"There are no files or pages in this wiki that match your filters.","PAGES":"There are no pages in this wiki that match your filters."},"NORMAL":{"FILES":"There are no files in this wiki.","MEDIA":"There are no files or pages in this wiki.","PAGES":"There are no pages in this wiki."}},"SHARED_WITH_ME":{"FILTERED":{"FILES":"There are no files shared with you that match your filters.","MEDIA":"There are no files or pages shared with you that match your filters.","PAGES":"There are no pages shared with you that match your filters."},"NORMAL":{"FILES":"There are no files shared with you.","MEDIA":"There are no files or pages shared with you.","PAGES":"There are no pages shared with you."}},"WATCHLIST":{"FILTERED":{"MEDIA":"There are no people being watched that match your filters."},"NORMAL":{"MEDIA":"There are no people being watched."}},"SHARED_BY_ME":{"FILTERED":{"FILES":"There are no files shared by you that match your filters.","MEDIA":"There are no files or pages shared by you that match your filters.","PAGES":"There are no pages shared by you that match your filters."},"NORMAL":{"FILES":"There are no files shared by you.","MEDIA":"There are no files or pages shared by you.","PAGES":"There are no pages shared by you."}},"DEFAULT":"There are no files or pages in this wiki."},"REVERT_CONFIRM":"You are about to replace the current version of this page with version ${0}, which was created ${1} by ${2}. Do you want to proceed?","DOWNLOAD_TOOLTIP_MANY":"${0} downloads","EDIT":"Edit","USERERROR":"The wiki you have requested cannot be displayed.","EDIT_PAGE_ERROR_TIMEOUT":"The page was not edited because the server could not be contacted.  Click 'OK' to retry your request.","RECOMMEND":"Recommend","ERROR_REQUEST_CANCELLED":"The request was cancelled.","DISCARDDRAFT_CONFIRM":"Are you sure you wish to discard these unsaved changes?","COLUMN_DOWNLOAD":"Downloads","ERROR":"An unknown error has occurred.","VIEW":"View","TAGGED_WITH":"Tagged with '${0}' ","COMPARE":"Compare","NOHYPHENCOUNT":"${0} of ${1}","DELETEERROR":"The file was not deleted due to an error.","EDIT_PAGE_ERROR_CANCEL":"The page was not edited because the request was cancelled.  Click 'OK' to retry your request.","VIEW_EXTRA":"View more information","COLUMN_LAST_MODIFIED_BY":"Updated By","EDIT_TOOLTIP":"Change the name, description, or contents of this file","COLUMN_NAME":"Name","HIDE":"hide","FILTERED_BY":"Filtered by: ","ITEMS_PER_PAGE":" items per page.","EDIT_PAGE_TOOLTIP":"Change the name, description, or contents of this page","PAGE":"Page","DELETECONFIRM":"Are you sure you wish to delete this file?\n\n${0}","NEXT":"Next","SHARE_PAGE_TOOLTIP":"Allow others to read or contribute to this page","DELETE_PAGE_TOOLTIP":"Delete this page","DELETESHAREERROR_CANCEL":"The share was not deleted because the request was cancelled.  Click 'X' to try again.","DELETE_ERROR_NOT_FOUND":"This file has already been deleted or is no longer visible to you.","COLUMN_TYPE":"Type","USER_HAS_NO_PAGES":"There are no pages in this wiki","DELETEPAGE_ERROR":"The page was not deleted due to an error.","CREATE_PAGE_ERROR":"The page could not be created due to an error","DELETESHARE_TOOLTIP":"Stop sharing with this person","REVERT":"Restore","SORT_BY":"Sort by: ","DOWNLOAD":"Download","USER_HAS_NO_FILES":"There are no files in this wiki","COLUMN_DN":"Distinguished Name","REMOVE_FILTER_TOOLTIP":"Remove this filter"},"CANCEL":"Cancel","WIKI_NAVLIST":{"ACTIVE":"Most Active","SITEMAP":"Site Map","TITLE":"All Pages","SEARCHBOX":"Find a page","OWNED":"Owned By Me","EDITED":"Pages Edited by Me","ALPHABETICAL":"Pages Index","NEW":"New Wikis","UPDATED":"Recently Updated"},"TAGLIST":{"EMPTY":"No tags found","NO_TAGS":"No tags found","ALL_TITLE":"View all tags.","NEXT":"Next","POPUPTITLE":"All Tags","LIST_TITLE":"View a list of the most popular tags.","OPEN":"Open","CLOUD":"cloud","LOADING":"Loading...","PREVIOUS":"Previous","SHOW_MORE":"Show less popular tags","CLOUD_TITLE":"View a tag cloud of the most popular tags.","ERROR_REQUEST_TIMEOUT":"Tags could not be loaded because the server could not be contacted.","ERROR":"Error loading tags","ALL":"all","VIEW_AS":"View as","LIST":"list","ERROR_REQUEST_CANCELLED":"Tags could not be loaded because the request was cancelled."},"ROLE_OPTIONS":{"ROLE":"Role:"},"CREATE_PAGE":{"ACTION":"New Page","ACTION_TOOLTIP":"Create a new page"},"APP":{"ERRORS":{"CANTCREATEPAGE":{"ACT":"Back to Page","TITLE":"You can't create a new page","MESSAGES":"You have insufficient privileges to create new pages in this Wiki.  You may have to request editor privileges to the administrator(s) of this Wiki. "},"CANTEDITPAGE":{"ACT":"Back to Page","TITLE":"You can't edit this page","MESSAGES":"You have insufficient privileges to edit pages in this Wiki.  You may have to request editor privileges to the administrator(s) of this Wiki. "},"CANTMANAGEMEMBERS":{"ACT":"Back to Wiki","TITLE":"You can't manage members","MESSAGES":"You have insufficient privileges to manage members in this Wiki.  You may have to request manager privileges to the administrator(s) of this Wiki. "},"LOGIN":{"ACT":"Log in now","TITLE":"You must be logged in","MESSAGES":"Certain portions of Wikis can only be accessed when you are logged in.  You may browse anonymously, but this page will not be visible until you authenticate."},"SERVER_ERROR":"An unexpected error has occurred. Please contact your system administrator."},"WINDOW":{"TITLE":"Wikis","STATUSBAR":"Wikis - Ready"}},"MENUBAR":{"HELP_TITLE":"Help","HELP":"Help"},"INSERT_WIDGET":{"GREEN_STOCK_WIDGET":"Green Stock Widget","NOTASCRIPT":"Entered text doesn't appear to be a script","WIDGET_PROPERTIES_WIDTH":"Width","WIDGET_PROPERTIES_INVALID_WIDTH":"Please enter a numeric width","BLUE_STOCK_WIDGET":"Blue Stock Widget","WIDGET_PROPERTIES_DIALOG_TITLE":"iWidget Properties","WIDGET_PROPERTIES_RT_CLK_MENU":"iWidget Properties","WIDGET_TOOLBAR_BUTTON_TITLE":"Insert iWidget","BUSY":"Adding...","WIDGET_PROPERTIES_HEIGHT":"Height","TITLE":"Insert iWidget or IFrame","CAPTION":"Please provide copy your script tag into the text field below.","WIDGET_PROPERTIES_INVALID_HEIGHT":"Please enter a numeric height"},"WINDOWTITLE":{"FINDPEOPLE":"Find People","MYWIKIS":"My Wikis - Wikis","WIKI_ACCESS":"Wiki Access ","WIKIPAGE":"${0} - ${1}","MYPAGES":"Pages Edited by ${0} in ${1}","FILEERROR":"Error - Wiki for ${0}","ABOUT":"About Wikis","WIKIPAGEERROR":"Error - Cannot display page","PAGESHOME":"${0} - Wiki for ${1}","DOCUMENTHOME":"${0} - Wiki for ${1}","WELCOME":"Welcome - Wikis","MEMBERS":"Members of ${0} - Wikis ","PAGEERROR":"Error - Wiki for ${0}","TOOLS":"Tools","STATISTICS":"Statistics","OFFLINE":"Offline","USERHOMEERROR":"Error - Wiki","USERCHANNEL":"${0} - Wiki for ${1}","OFFLINEERROR":"Error - Offline","WIKI_CREATE":"Create a New Wiki","FAQ":"Frequently Asked Questions (FAQ)","LOGIN":"Log in","USERSHARES":"My Shares","PUBLICWIKIS":"Public Wikis - Wikis","PAGEINDEX":"Page Index of ${0} ","WHATSNEW":"Wikis"},"SIDEBAR":{"HIDE":"Hide Sidebar »","ALERT":"The sidebar will now be collapsed by default when you use Wikis.\n\nTo see the sidebar again, move your mouse to the far right edge of the page.  You will see a gray bar appear with an arrow.  Clicking on this bar will restore the sidebar.","HIDE_TOOLTIP":"Click to hide the sidebar","SHOW_TOOLTIP":"Resize the sidebar"},"TIPS":{"P2":"Check back frequently - new help and new features are constantly being added.","OLDER":"Older","HIDE_TIPS":"Hide Tips","H":"Welcome to Wikis","ERROR":"Unable to load help","NEWER":"Newer","P1":"Wikis make it easy to keep all your important files online."},"LOGINHELP":{"P2":"Here's what you can do while logged in:","NOW":"Log in now!","TITLE":"Log in to Participate!","ACT1":"Upload files and create pages","ACT2":"Share and collaborate on files with your colleagues","ACT3":"Discuss files by leaving comments","ACT4":"Recommend content to others","ACT5":"Follow what your favorite people are doing","P1":"You're currently logged out of Wikis.  You can still view public files and pages, but you won't be able to interact with other people."},"DELETE_WIKI":{"TEXT":"Deleting this wiki will permanently delete all data associated with this wiki. This action cannot be undone, so make sure you want to delete this wiki.","CANCEL":"Cancel","DELETE":"Delete Wiki","SAVE":"Delete this wiki ","BUSY":"Loading...","TITLE":"Are you sure you want to delete this wiki?","ACTION_TOOLTIP":"Delete this wiki.","OK":"Delete this wiki","ERROR_DELETE":"Couldn't delete Wiki.","ACTION":"Delete wiki"},"WIKI_ACCESS":{"TITLE":"Manage Access","EDITORS_SETTINGS":{"EDITORS_AND_OWNERS":"Wiki editors and managers only","TITLE":"Who can edit this wiki?","ALL_LOGGED_IN":"All logged in users"},"READERS_SETTINGS":{"ALL_USERS":"All users","MEMBERS_ONLY":"Wiki members only","TITLE":"Who can read this wiki?"},"VISIBILITY_SETTINGS":{"TITLE":"Who can find this wiki?","EVERYONE_PUBLIC":"Everyone (public)","MEMBERS_AND_OWNERS":"Only Wiki Members and Owners (restricted)"},"ERROR":"The settings could not be changed.  Please try again later.","SAVE":"Save"},"REMOVE_MEMBER":{"NOSUCHMEMBER":"The member you are trying to remove does not exist. ","UNAUTHORIZED":"You don't have enough privileges to remove this member.","CONFIRM":"Are you sure you want to remove member ${0}?","TITLE":"Remove Member","ACTION_TOOLTIP":"Remove this member from the Wiki","ACTION":"Remove"},"WIKI_HOME":{"HAS_CREATED":"${0} created ${1} ${time}","CREATED":"Created ${time}","NODESCRIPTION":"No description","SIDEBAR":{"RECOMMENDED":"recommended","MOSTRECOMMENDED":"Most Recommended","CLICKTOCOLLAPSESECTION":"click to collapse section","NO_ITEMS":"No items found","POPULARTAGS":"Popular Tags","MOSTCOMMENTED":"Most Comments","MOSTVISITS":"Most Visits","SEARCHBOX":"Find tags"},"HAS_UPDATED":"${0} updated ${1} ${time}"},"NOTIFY_COMMENT":{"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","NOTIFY":"Comments","NOTIFY_TOOLTIP":"Send me e-mails when people comment on this page","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."}},"NOTIFY_CONTENT":{"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","NOTIFY":"Page changes","NOTIFY_TOOLTIP":"Send me e-mails when the contents of this page change","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."}},"WIKI":{"REFERENCE":{"HORIZONTAL":"---- horizontal line","BOLD":"**bold**","TABLES":"Tables:","CENTERED_PARAGRAPH":"%%(text-align: center)centered paragraph%%","FULL_GUIDE":"Full guide","HEADINGS":"Headings:","LINK":{"CURRENT_PLACE_FILE":"[[/file/same_place_file_link]]","IMAGE":"{{imageURL|alt_text}}","ANOTHER_PLACE_PAGE":"[[/personalplace/userid/page_link]]","ANOTHER_PLACE_FILE":"[[/personalplace/userid/file/file_link]]","CURRENT_PLACE_PAGE":"[[/same_place_page_link]]","ATTACHMENT":"[[^attachment_link]]","PAGE":"[[wiki_page_link]]","URL":"[[URL|link_text]]"},"TEXTFORMATTING":"Text formatting:","STRIKE":"--strikethrough--","LISTS":"Lists:","INDENT_ONCE":"> indent once","H1":"= Head 1 =","H2":"== Head 2 ==","H3":"=== Head 3 ===","TABLE":{"HEADER":"|=table head|=head 2|","CELL":"|table cell|cell 2|"},"MARKUP_REFERENCE":"Wiki markup guide","BULLETED":{"FIRST":"* bulleted item","SUB":"** indented bulleted item"},"ITALICS":"//italics//","NUMBERED":{"FIRST":"# numbered item","SUB":"## indented numbered item"},"UNDERLINE":"__underline__","LINKING":"Linking:","INDENT_TWICE":">> indent twice"}},"WELCOMECONTENT":{"CLOSE":"Close the \"Welcome to Wikis\" section","ICON_ALT":"Wikis logo","LEARN_MORE":"Learn More","TITLE":"Welcome to Wikis","WATCH_DEMO":"Watch Demo","BLURB":"Use Wikis to create a central, collaborative place to manage knowledge and content with your team."},"MOVEPAGE":{"REORDER_TAB":"Reorder Peer Pages","SUBMIT_BUTTON_LABEL":"Move","CANNOTCHOOSEASCHILD":"You cannot choose a descendant of the current page as a parent","DOWN":"Move Down ","CANNOTCHOOSEASPARENT":"You cannot choose the current page as a parent","MAKETOPLEVEL":"Make this a top level page","CURRENTPAGELABEL":"${0} (current page)","LIST_TEXT1":"Choose a parent page from the list of pages in this wiki or ","LIST_TEXT2":"choose a parent page from the list of pages in this wiki","TITLE":"Move This Page","MANUAL_TEXT1":"enter the page name manually","MANUAL_TEXT2":"Enter a parent page name manually or ","NONEXISTING_PARENT":"The page you typed does not exist. Type an existing page, or click \"Browse...\" to select an existing page.","REORDER_LABEL":"Reorder children of ${0}:","CHOOSE_BUTTON":"Browse...","INPUT_LABEL":"Type or browse for a parent page: ","UP":"Move Up","CANCEL_BUTTON_LABEL":"Cancel","TOPLEVEL":"top level","PARENT_TAB":"Find Parent Page","CHOOSE_BUTTON_TOOLTIP":"Browse pages","REORDER_LABEL2":"Reorder top level"},"PIVOTS":{"MEDIA_DESC":"All files from ${userName} visible to you.  ","ACTIVITY_DESC":"Changes made by ${userName}","WHATS_NEW_GLOBAL_DESC":"New events from everyone","PROFILE_TOOLTIP":"View this person's profile","MEDIA_LONG":"${0}'s Place ","ACTIVITY_LONG":"${0}'s Changes ","MEDIA":"Files","MY_WATCHLIST_TOOLTIP":"View people on your watchlist","MY_MEDIA_DESC":"All of your files.","SHARED_WITH_ME_DESC":"All of the shares that other people have created for you.  To see information about each file, click 'more'.","WHATS_NEW_GLOBAL_LONG":"What's new for everyone ","ACTIVITY_TOOLTIP":"See what this person has done or what has changed in this wiki","MY_MEDIA_LONG":"${0}'s Place ","SHARED_WITH_ME_LONG":"Shared With Me ","ACTIVITY":"History","MY_MEDIA_TOOLTIP":"View files and pages in your wiki","SHARED_WITH_ME":"Shared With Me","WHATS_NEW_GLOBAL":"What's new for everyone","SHARED_BY_ME_DESC":"All of the shares that you have created for other people.  To see information about each file, click 'more'.","WATCHLIST_DESC":"Displaying the ${userName}'s watchlist.","MEDIA_TOOLTIP":"View this person's wiki","SHARED_BY_ME_LONG":"Shared By Me ","WATCHLIST":"Watchlist","SHARED_BY_ME":"Shared By Me","WATCHLIST_LONG":"${0}'s Watchlist ","MY_WATCHLIST_DESC":"Displaying your watchlist.","SHARED_WITH_ME_TOOLTIP":"View shares that other people have created for you","WHATS_NEW_PERSONAL_DESC":"New events in your watchlist","PROFILE":"Profile","WHATS_NEW_PERSONAL_LONG":"What's new for me ","MY_MEDIA":"My Files","SHARED_BY_ME_TOOLTIP":"View shares that you have created for other people ","WHATS_NEW_PERSONAL":"What's new for me","WATCHLIST_TOOLTIP":"See who this person is watching"},"MM_TAG":{"TYPE":"Type a tag","ADD":"Add another tag","FIND":"Find a tag","SELECTED":"Selected Tags","WARNING":"More than 3 tag filters can not be applied. Remove at least one filter before filtering by another tag. "},"SHARE_PAGE":{"COUNT_OTHERS_PUBLIC_1":"${0} people","SEARCH_TOOLTIP":"Search the directory","SHARE_PERMISSION":"Make these people contributors to this page","COUNT_OTHERS_SINGLE_PUBLIC":"This page is public and is shared with ${0}.","SHARE_WITH":"Share with:","COUNT_NONE_PUBLIC":"This page is public and is not shared with anyone.","SELECT_USER":"Share With:","COUNT_OTHERS_PUBLIC":"This page is public and is shared with ${0}.","PROPAGATE_SHARED":"All readers can share this page","WARN_LONG_MESSAGE":"The message is too long.","COUNT_OTHERS_SINGLE_1":"1 person","CANCEL":"Cancel","PROPAGATE":"Allow this page to be shared by other people","ERROR":"The page could not be shared.  Please try again later.","REMOVE_USER_TOOLTIP":"Remove user","NOT_LOGGED_IN_ERROR":"You must be logged in to share this page.  Click 'OK' to be prompted to log in.","SELECT_USER_ERROR":"Please select a person to share with.","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you and cannot be shared.","PROPAGATE_OWNER":"Only you can share this page","SELF_REFERENCE_ERROR":"You cannot share this page with yourself.","DIALOG_TITLE":"Share a Page","TRIM_LONG_MESSAGE":"Shorten message?","PROPAGATE_PUBLIC":"Everyone can share this page","CANCEL_ERROR":"The page was not shared because the request was cancelled.  Click 'OK' to try again.","COUNT_NONE":"This page is not shared with anyone.","TRIM_LONG_DESCRIPTION_MESSAGE":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","OK":"OK","MAX_SHARES_ERROR":"The maximum number of shares has been exceeded.","SHARE_TOOLTIP":"Allow others to read or contribute to this page","TIMEOUT_ERROR":"The page was not shared because the server could not be contacted.  Click 'OK' to try again.","ADD_FROM_FAVORITES":"Share with a person from your favorite wikis","WARN_LONG_DESCRIPTION":"The description is too long.","BUSY":"Sharing...","COUNT_OTHERS_1":"${0} people","ACCESS_DENIED_ERROR":"You no longer have permission to share this page.","OWNER_REFERENCE_ERROR":"You cannot share with the owner of the page.","COUNT_OTHERS_SINGLE":"This page is shared with ${0}.","TRIM_LONG_DESCRIPTION":"Shorten description?","COUNT_OTHERS_SINGLE_PUBLIC_1":"1 person","EXPAND_SECTION":"Share with specific people...","COUNT_OTHERS":"This page is shared with ${0}.","MESSAGE_LABEL":"Message:"},"RECOMMEND":{"ONE_HAS_RECOMMENDED":"${0} has recommended this file.","RECOMMEND":"Recommend this file.","UNRECOMMEND":"Remove your recommendation.","LOADING":"Loading...","ONE":"1 person","FIRST_TO_RECOMMEND":"Be the first to recommend this file.","RECOMMEND_COUNT_MANY":"${0} recommendations","ERROR_TIMEOUT":"Your recommendation could not be saved because the server could not be contacted.  Click the button to try again.","PAGE":{"ONE_HAS_RECOMMENDED":"${0} has recommended this page.","RECOMMEND":"Recommend this page.","UNRECOMMEND":"Remove your recommendation.","LOADING":"Loading...","ONE":"1 person","FIRST_TO_RECOMMEND":"Be the first to recommend this page.","ERROR_TIMEOUT":"Your recommendation could not be saved because the server could not be contacted.  Click the button to try again.","ERROR_CANCEL":"Your recommendation could not be saved because the request was cancelled.  Click the button to try again.","NOT_RECOMMENDED":"This page has not been recommended.","YOU_AND_X_HAVE_RECOMMENDED":"${0}, including you, have recommended this page.","UNRECOMMEND_TOOLTIP":"Remove your recommendation from this page\t","RECOMMEND_TOOLTIP":"Recommend this page to your colleagues","X_HAVE_RECOMMENDED":"${0} have recommended this page.","OK":"OK","FIRST_TO_RECOMMEND_TOOLTIP":"Recommend this page to your colleagues","CANCEL":"Cancel","ACCESS_DENIED":"Your recommendation could not be saved because the page has been deleted or is no longer visible.","NOT_FOUND":"Your recommendation could not be saved because the page has been deleted or is no longer visible.","ERROR_RETRIEVE":"Unable to retrieve recommendations at this time.","ERROR_SAVE":"Your recommendation could not be saved.  Please try again later.","YOU_HAVE_RECOMMENDED":"You have recommended this page.","MANY":"${0} people"},"ERROR_CANCEL":"Your recommendation could not be saved because the request was cancelled.  Click the button to try again.","NOT_RECOMMENDED":"This file has not been recommended.","YOU_AND_X_HAVE_RECOMMENDED":"${0}, including you, have recommended this file.","NOT_RECOMMENDED_ICON":"Not recommended icon","UNRECOMMEND_TOOLTIP":"Remove your recommendation from this file","RECOMMEND_TOOLTIP":"Recommend this file to your colleagues","X_HAVE_RECOMMENDED":"${0} have recommended this file.","OK":"OK","FIRST_TO_RECOMMEND_TOOLTIP":"Recommend this file to your colleagues","RECOMMENDED_ICON":"Recommended icon","CANCEL":"Cancel","ACCESS_DENIED":"Your recommendation could not be saved because the file has been deleted or is no longer visible.","NOT_FOUND":"Your recommendation could not be saved because the file has been deleted or is no longer visible.","ERROR_RETRIEVE":"Unable to retrieve recommendations at this time.","ERROR_SAVE":"Your recommendation could not be saved.  Please try again later.","ADD_REMOVE":"Add or remove your recommendation","YOU_HAVE_RECOMMENDED":"You have recommended this file.","MANY":"${0} people","RECOMMEND_COUNT_ONE":"1 recommendation"},"ADD_FAVORITE":{"ACTION":"Add To Favorites"},"WIKI_DETAILS":{"ATTACHMENTS":"Attachments","ABOUT":"About","PAGEINFO":"Page Info","HISTORY":"History of Changes"},"HTML":{"REFERENCE":{"MARKUP_REFERENCE":"HTML guide","ITALICS":"<em>italics</em>","H1":"<h1>Large heading</h1>","H2":"<h2>Medium heading</h2>","H3":"<h3>Small heading</h3>","INDENT_ONCE":"<div style=\"margin-left: 40px\">indent once</div> ","LINK":{"URL":"<a href=\"http://www.example.com\">Example link</a>"},"TABLE":{"CLOSE":"</table>","OPEN":"<table>","TR":{"OPEN":"<tr>","CLOSE":"</tr>"},"HEADER1":"<th>header 1</th>","CELL1":"<td>cell 1</td>","HEADER2":"<th>header 2</th>","CELL2":"<td>cell 2</td>","TBODY":{"OPEN":"<tbody>","CLOSE":"</tbody>"}},"STRIKE":"<strike>strikethrough</strike>","BOLD":"<strong>bold</strong>","LIST":{"CLOSE":"</li>","ALPHA":{"SUB1":"<li>b.a</li>","FIRST":"<li>a</li>","SUB2":"<li>b.b</li>","THIRD":"<li>c</li>","SECOND":"<li>b"},"UNORDERED":{"OPEN":"<ul>","TITLE":"Unordered list:","CLOSE":"</ul>"},"ORDERED":{"OPEN":"<ol>","TITLE":"Ordered list:","CLOSE":"</ol>"},"NUMBER":{"SUB1":"<li>2.1</li>","FIRST":"<li>1</li>","SUB2":"<li>2.2</li>","THIRD":"<li>3</li>","SECOND":"<li>2"}},"UNDERLINE":"<u>underline</u>","INDENT_TWICE":"<div style=\"margin-left: 80px\">indent twice</div>","CENTERED_PARAGRAPH":"<div style=\"text-align: center\">centered paragraph</div>"}},"CREATE_SIBLING_PAGE":{"ACTION":"Create Peer","ACTION_TOOLTIP":"Create a new peer page."},"APP_NAME_TITLE_BAR":"Wikis","PAGECREATE":{"ERROR_CANCEL":"The page was not created because the request was cancelled.  Click 'Create' to retry your request.","BREADCRUMBS":{"LAST":"New Page"},"WILLBECHILDOF":"This page will be created as a child of: $(0} ","ERROR_NOT_LOGGED_IN":"You must be logged in to create this page.  Click 'Create' to be prompted to log in.","ERROR_ACCESS_DENIED":"The page could not be created because you are not a contributor.","ERROR_TIMEOUT":"The page was not created because the server could not be contacted.  Click 'Create' to retry your request.","ERROR_QUOTA_VIOLATION":"The page could not be created because the wiki is almost full.  To create this page, ${0} of files, attachments, or versions would have to be removed. ","ERROR_MAX_CONTENT_SIZE":"The page could not be created because it is larger than the maximum allowed page size of ${0}"},"NOTIFY":{"FILE":{"NOTIFY":"Notify me when this file is modified.","UNSUBSCRIBE":"You will no longer receive notifications about this file.","SUBSCRIBE":"You will now receive notifications about modifications and comments on this file."},"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"ENABLE_SUCCESS":"E-mail notification enabled.","SUCCESS_IMG":"Success","NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","DISABLE_SUCCESS":"E-mail notification disabled.","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."},"PAGE":{"NOTIFY":"Notify me when this page is modified.","UNSUBSCRIBE":"You will no longer receive notifications about this page.","SUBSCRIBE":"You will now receive notifications about modifications and comments on this page."}},"UPLOAD_FILE":{"WARN_LONG_FILENAME":"The file name is too long. ","TAGS_LABEL":"Tags:","SELECT_USER":"Please select one or more people to share with","WARN_LONG_MESSAGE":"The message is too long.","WARN_LONG_TAG":"The tag '${0}' is too long.","ACTION_TOOLTIP":"","CANCEL":"Cancel","TRIM_LONG_FILENAME":"Shorten file name?","TRIM_TAG":"Shorten tag?","SELECT_FILE":"Please select a file to upload","ERROR":"The file could not be uploaded.  Please try again later","TRIM_LONG_MESSAGE_CONFIRM":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","ERROR_ACCESS_DENIED":"The file could not be replaced because you are not a contributor to this wiki.","ACTION":"Upload a File","WARN_NO_FILENAME":"File name is a required field.","NOTE_LABEL":"Note: ","TRANSFER":"Uploading ${0} @ ${1}/s ","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","ERROR_TIMEOUT":"The file could not be uploaded because the server could not be contacted.  Click 'OK' to try again.","DIALOG_TITLE":"Upload File","TRIM_LONG_MESSAGE":"Shorten message?","ERROR_MAX_CONTENT_SIZE":"The file could not be uploaded because it is larger than the maximum allowed file size of ${0}","OK":"OK","ERROR_QUOTA_VIOLATION":"The file could not be uploaded because the wiki is almost full.  To upload this file, ${0} of files, attachments, or versions would have to be removed.","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","WARN_LONG_TAGS":"The specified tags are too long.","WARN_INVALID_CHARS_IN_NAME":"File names may not contain the following characters: \\ / : * ? \" < > | [ ]","WARN_LONG_DESCRIPTION":"The description is too long. ","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","CONTENTS_LABEL":"File: ","BUSY":"Uploading...","DESCRIPTION_LABEL":"Description: ","ERROR_NOT_LOGGED_IN":"You must be logged in to upload this file.  Click 'OK' to be prompted to log in.","CONFIRM_REPLACE":"Another file with the same name already exists in this file stream.  Do you wish to replace the contents of the existing file?\nNote: Only the contents of the file will be changed, all other information will remain the same.","PUBLIC_LABEL":"Make this file public (visible to everyone)","TRIM_LONG_DESCRIPTION":"Shorten description?","VISIBILITY_LABEL":"Visibility: ","ERROR_CANCEL":"The file could not be uploaded because the request was cancelled.  Click 'OK' to try again.","TRIM_TAGS":"Shorten tags?","NAME_LABEL":"File name: "},"NOTIFY_FILE":{"SUBSCRIBE":{"CONTENT":"You will now recieve notifications when this file is changed.","ALL":"You will now recieve notifications when this file is changed or commented on.","COMMENT":"You will now recieve notifications when this file is commented on."},"ERROR":"Your notification settings were not changed due to an error.  Please try again.","LABEL":"Notify me of: ","UNSUBSCRIBE":{"CONTENT":"You will no longer recieve notifications when this file is changed.","ALL":"You will no longer recieve notifications when this file is changed or commented on.","COMMENT":"You will no longer recieve notifications when this file is commented on."}},"ERROR":{"GENERAL":"An error occured retrieving the information.","NOURL":"No URL specified"},"UNSAVED_CHANGES":{"ALERT":"You have unsaved changes to the following pages:","EXPIRES":{"DAY":"Will be deleted ${EEee} at ${time}","YEAR":"Will be deleted ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Will be deleted ${MMM} ${dd}","TODAY":"Will be deleted today at ${time}","YESTERDAY":"Scheduled for deletion"},"AUTOSAVED":{"DAY":"${name} page in the ${wikiname} wiki autosaved ${EEee} at ${time}","YEAR":"${name} page in the ${wikiname} wiki autosaved ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${name} page in the ${wikiname} wiki autosaved ${MMM} ${dd}","TODAY":"${name} page in the ${wikiname} wiki autosaved today at ${time}","YESTERDAY":"${name} page in the ${wikiname} wiki autosaved yesterday at ${time}"},"AUTOSAVED_EXPIRES":{"DAY":"${name} page in the ${wikiname} wiki autosaved ${EEee} at ${time}. ${expires}","YEAR":"${name} page in the ${wikiname} wiki autosaved ${date_long}. ${expires}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${name} page in the ${wikiname} wiki autosaved ${MMM} ${dd}. ${expires}","TODAY":"${name} page in the ${wikiname} wiki autosaved today at ${time}. ${expires}","YESTERDAY":"${name} page in the ${wikiname} wiki autosaved yesterday at ${time}. ${expires}"},"PAGE_AUTOSAVED":{"DAY":"This page has unsaved changes that were autosaved ${EEee} at ${time}","YEAR":"This page has unsaved changes that were autosaved ${date_long}","FULL":"This page has unsaved changes that were autosaved ${EEEE}, ${date_long} ${time_long}","MONTH":"This page has unsaved changes that were autosaved ${MMM} ${dd}","TODAY":"This page has unsaved changes that were autosaved today at ${time}","YESTERDAY":"This page has unsaved changes that were autosaved yesterday at ${time} "}},"VERSIONS":{"ERROR_REQUEST_UNKNOWN":"An unknown error has occurred.","NEXT":"Next","VIEW_MOST_RECENT":"View most recent","COMPARE_RECENT":"Compare to most recent","TO":"to:","COUNT":"${0}-${1} of ${2}","DELETE":"Delete","DELETEERROR":"The version was not deleted due to an error.","LOADING":"Loading versions...","PREVIOUS":"Previous","DELETE_ALL_CONFIRM":"Are you sure you want to delete all versions prior to ${0}?","REVERT_CONFIRM":"You are about to replace the current version of this page with version ${0}, which was created ${1} by ${2}. Do you want to proceed?","NEW_CHANGED":"New/Changed","COMPARING":"Comparing wiki text of:","REVERT":{"ERROR_CANCEL":"The version was not restored because the request was cancelled.  Click 'Restore' again to retry your request.","ERROR_NAME_EXISTS":"The version could not be restored because another page or file has the same name.","ERROR_NOT_FOUND":"The version could not be restored because it has been deleted or is no longer visible to you.","ERROR_ACCESS_DENIED":"The version could not be restored because you are not a contributor.   ","ERROR_TIMEOUT":"The version was not restored because the server could not be contacted.  Click 'Restore' again to retry your request.","GENERIC_ERROR":"The version could not be restored because of an unknown error.  Click 'Restore' again to retry your request.","ERROR_QUOTA_VIOLATION":"The version could not be restored because it would cause the wiki to exceed its size quota.","ERROR_MAX_CONTENT_SIZE":"The version could not be restored because it is larger than the maximum allowed page size of ${0}"},"BY":"by ","PAGE":"Page","DELETED":"Deleted","REVERT_VERSION":"Restore version ${0}","MOST_RECENT":"(most recent)","SHOW_COMPARISON":"Show comparison","COMPARE_VERSION":"Compare version","ERROR_REQUEST_TIMEOUT":"The server could not be contacted.","CONTENT":{"DOWNLOAD":"Download (${0})","VIEW":"View","REVERT":"Restore"},"REVERT_DESCRIPTION":"Restored from version ${0}","ERROR":"Unable to load version information.","NO_VERSIONS":"No versions","SHOW":"Show","DATE":{"RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${MMM} ${dd},${YYYY}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"INFO":"Version ${0} created ${1} by","DELETE_ALL":"Delete all versions prior to version","ERROR_REQUEST_CANCELLED":"The request was cancelled.","KEY":"Key:","VERSION_NUMBER":"Version ${0} "},"APP_LOAD":"Welcome to Wikis","LOGIN":{"PASSWORD_LABEL":"Password:","LEGAL":"Licensed Materials - Property of IBM Corp. © IBM Corporation 2007, 2009. IBM, the IBM logo, ibm.com and Lotus are trademarks of IBM Corporation in the United States, other countries, or both. U.S. Government Users Restricted Rights: Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp. Please see the About page for further information.","ICON_TITLE":"Wikis icon","DESCRIPTION_TITLE":"What can you do with Wikis?","PRODUCT":"Wikis","USER_LABEL":"User name:","DESCRIPTION":"Create a central, collaborative place to manage knowledge and content with your team. With Wikis, everyone on your team can quickly contribute and share information.","TITLE":"Log in to Wikis","ERROR":"Your user name and/or password does not match any existing accounts.  Please check and try again.","PRODUCT_BLURB":"The easy way to create content together.","BUTTON":"Log In"},"WIKI_EDITOR":{"STYLE":{"LTR_LANG":"LTR Language","RTL_LANG":"RTL Language"}},"PRINT_PAGE":{"ACTION":"Print Page","ACTION_TOOLTIP":"Print this page"},"HEADER":{"UPDATES_TITLE":"Click to view the list of updated Wikis","LOGOUT":"Log out","LOGOUT_TITLE":"Click to log out of Wikis","MYWIKIS":"My Wikis","MEMBERS":"Members of ${0}","PAGEINDEX":"Pages Index","TAGGEDWIKIS":"Search Results","WIKICREATE":"Start a Wiki","WIKICREATE_TITLE":"Click to start a Wiki","PUBLICWIKIS":"Public Wikis","PUBLICWIKIS_TITLE":"Click to view the list of public Wikis","UPDATES":"Latest Updates","LOGIN":"Log in","LOGO":"Lotus Connections","LOGIN_TITLE":"Click to log in to Wikis","MYWIKIS_TITLE":"Click to view the list of Wikis you are a member of","MYPAGES":"Pages Edited by ${0}"},"PAGEEDIT":{"CREATE_PAGE":"Create a Page","CONVERT_TO_WIKIMARKUP_ERROR":"Error converting to wiki text","EDIT_TITLE":"Click to edit title","TAGS":"Tags:","HTML_SOURCE":"HTML Source","RICH_TEXT":"Rich Text","ERROR_CONCURRENT_MODIFICATION":"This page was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Saving the page will overwrite those edits.   ","DRAFT":"Draft","SAVE_LABEL":"Save","CANCEL_LABEL":"Cancel","WARN_LONG_TAG":"The tag '${0}' is too long.","PROPAGATE_LABEL":"Allow this page to be shared by other people?","ACTION_TOOLTIP":"Click to edit this page","TRIM_TAG":"Shorten tag?","MINOR_CHANGE_TITLE":"Notification:","CREATE_LABEL":"Create","ERROR_ACCESS_DENIED":"The page could not be edited because you are not a contributor.","ACTION":"Edit","NOTE_LABEL":"Note: ","SHARE_PROPAGATE":"Sharing:","ERROR_NOT_FOUND":"The page could not be edited because it has been deleted or is no longer visible to you.","MINOR_CHANGE":"Minor change (no notifications will be sent)?","ERROR_EMPTY_NAME":"Please enter a name.","MAKE_PUBLIC":"Make this page public (visible to everyone)?","ERROR_TIMEOUT":"The page was not edited because the server could not be contacted.  Click 'Save' to retry your request.","NAVIGATE_AWAY_CHOICE":"Are you sure you want to abandon your changes?  Press OK to continue or cancel to return to editing.","ERROR_MAX_CONTENT_SIZE":"The page could not be edited because it is larger than the maximum allowed page size of ${0}","SAVE_AND_CLOSE_LABEL":"Save and Close","QUICKLINK_TOO_LONG":"The selected link name is too long and needs to be shortened.","CHANGE_SUMMARY":"Summary of changes:","ERROR_QUOTA_VIOLATION":"The page could not be edited because it would cause the wiki to exceed its size quota.","WIKI_MARKUP":"Wiki Text","INVALID_XHTML":"Please ensure the page source is valid XHTML.  Switching to rich text mode from source mode will convert HTML to XHTML.","ERROR_SHORTEN_PAGE_DESCRIPTION":"Shorten page description?","CONVERT_TO_RICHTEXT_ERROR":"Error converting wiki text to rich text","ERROR_DESCRIPTION_TOO_LONG":"The page description is too long. ","ERROR_SHORTEN_PAGE_NAME":"Shorten page name?","WARN_LONG_TAGS":"The specified tags are too long.","WARN_INVALID_CHARS_IN_NAME":"Page name may not contain the following characters: \\ / : * ? \" < > | [ ]","ERROR_NAME_TOO_LONG":"The page name is too long. ","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","SUBMIT_LABEL":"Save","ERROR_NAME_EXISTS":"The page cannot be renamed because another page or file has the same name.","SAVE_AND_CLOSE":"Save and Close","BREADCRUMBS":{"LAST":"Editing"},"ERROR_NOT_LOGGED_IN":"You must be logged in to edit this page.  Click 'Save' to be prompted to log in.","VISIBILITY_LABEL":"Visibility:","ERROR_CANCEL":"The page was not edited because the request was cancelled.  Click 'Save' to retry your request.","PREVIEW":"Preview","TRIM_TAGS":"Shorten tags?"},"USERSEARCH":{"SEARCH_USERS_BUTTON":"Search","TITLE_BLURB":"Need to find someone's Wiki?  Enter the person's name or e-mail address in the search field, below.  As you type, we'll show you a list of possible matches. If you can't find the person you are searching for in the list, just click the Search button to see a list of all the possible matches in the directory.","LOADING":"Loading...","ERROR_LINK":"Search for People","TITLE":"Search for People","USER_EMAIL":"E-mail","NO_MATCHES":"No matches","USER_NAME":"Name","NO_RESULTS":"No results for '${0}'","SEARCH_DIRECTORY":"Search the directory..."},"INSERTLINK":{"VALIDATE_ATTACHMENT_MISSING":"Please select an attachment","CURRENT_SELECTION":"Current Selection: ","SUBMIT_BUTTON_LABEL":"OK","NO_ITEMS":"There are no items in this wiki","OPTION_ATTACHMENT":"Attachment","PAGE_NAME_LABEL":"Page name: ","IMAGE_TOOLTIP":"Insert or edit an image","IMAGE_FILE_LABEL":"Image file:","CHOOSE_PAGE_LABEL":"Choose a page:","URL_LABEL":"URL:","EDIT_LINK":"Edit Link","TYPE_LABEL":"Type:","TITLE":"Insert/Edit Link","FILE_LABEL":"File:","TITLE_LABEL":"Link display text:","FROM_LIST_LABEL":"Select from the page list","LINK_TO_UPLOAD_IMAGE":"Upload a new image attachment and link to it","ANOTHER_PERSONS_PLACE":"Another person's wiki","CANCEL_BUTTON_LABEL":"Cancel","VALIDATE_UPLOAD_IMAGE_TYPE":"Please select an image file","EDIT_IMAGE":"Edit Image","TYPE_FILES":"Files","PLACE_WHERE_IMAGE":"Place where the image file is located:","REMOVE_LINK":"Remove Link","SEARCH_FOR_USER":"Search for a person:","NO_ATTACHMENTS":"This page has no existing attachments","LINK_TO_UPLOAD":"Upload a new attachment and link to it","NO_IMAGE_FILES":"There are no image files in this wiki","QUICK_LINK_ALTERNATIVE_MESSAGE":"The selection contains some invalid characters. Please provide an alternative link name.","SAME_AS_PAGE":"Same place as this page","VALIDATE_IMAGE_LINK_MISSING":"Please select a file","IMAGE_TITLE_LABEL":"Alternate text:","QUICK_LINK_DIALOG_TITLE":"Wiki Link","LINK_TO_EXISTING":"Link to an existing attachment of this page","ENTER_MANUALLY_LABEL":"Enter the page name manually","VALIDATE_LINK_MISSING":"Please select a page or file","OPTION_IMAGE_FILE":"Image file","CURRENT_LINK_NAME_NOT_VALID":"The new link name is not valid","ATTACHMENT_TYPE":"Attachment type:","INVALID_CHARS_MESSAGE":"Page name contains invalid characters","VALIDATE_URL_MISSING":"Please enter a URL","NEW_LINK_NAME":"New link name: ","LINK_TO_EXISTING_IMAGE":"Link to an existing image attachment of this page","OPTION_EXTERNAL_URL":"External URL","DESCRIPTION_LABEL":"Description:","TOOLTIP":"Insert or edit a link","INVALID_CHARS_MESSAGE_PART1":"Characters not permitted in a link name include:","OPTION_PAGE_OR_FILE":"Page or file","PLACE_WHERE":"Place where the page or file is located:","NO_IMAGE_ATTACHMENTS":"This page has no existing image attachments","INVALID_CHARS_LIST":"\\ / : * ? \" < > | [ ]","TYPE_ALL":"All","WIKI_TAB":"Wiki Page","NAME_LABEL":"File name:","IMAGE_TITLE":"Insert/Edit Image","QUICK_LINK_BUTTON_LABEL":"Quick Link","TYPE_PAGES":"Pages"},"SUBSCRIBE_TO_PAGE":"Subscribe to this page","DELETE_PAGE":{"UNAUTHORIZED":"You don't have enough privileges to delete this page.","CONFIRM":"Are you sure you wish to delete page ${0}?","ACTION_TOOLTIP":"Delete this page from the wiki.","ACTION":"Delete Page","NOSUCHPAGE":"The page you are trying to delete does not exist."},"BACK_TO_WIKI":"< Back to ${0}","OFFLINEHOME":{"NOTAVAILABLE":"Offline mode is not available unless Google Gears is installed and you have granted it access to the current domain.","USERS":"Users you have access to offline:"},"BACK_TO_APP":"Back to Wikis","PAGE":{"EXPAND_ERROR":{"CANCEL":"The details of this page could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this page could not be loaded because the page has been deleted or is no longer visible.","TIMEOUT":"The details of this page could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this page from being displayed.  Please try again later."}},"JAVASCRIPT_DISABLED":["JavaScript has been disabled in your web browser.  Wikis requires JavaScript in order to function.  Once you have turned it on, please refresh the page.","Refresh the page to continue."],"SITEMAP":{"SITEMAP":"Site Map"},"AUTOSAVE":{"FAILED":"Autosave failed"},"ADD_MEMBERS":{"READERS":"Readers:","CONTRIBUTORS":"Contributors:","NO_MEMBERS_ERROR":"Please select one or more people or groups to add.","BUSY":"Adding...","TITLE":"Add Members","ACTION_TOOLTIP":"Add people or groups as members of this Wiki","CAPTION":"Who do you want to add to this wiki?","EDITORS":"Editors:","ACTION":"Add Members","MANAGERS":"Managers:"},"TOGGLE_SECTION_NAMED":"Expand and collapse ${0} section","WIKI_NAV_TOOLS":{"TITLE":"Site Tools","MEMBERS":"Members and Roles","WIKI_ACCESS":"Wiki Access","ORGANIZE_PAGES":"Organize Pages","SETTINGS":"Settings"},"WIKI_BREADCRUMBS":{"CONFIRMNEWPAGE":"Confirm new page","YOUAREHERE":"You are in:"},"WIKI_TAGS":{"NOTAGS":"Not Tagged Yet","PAGES_COUNT_MANY":"${0} pages","PAGES_COUNT_ONE":"1 page","WHATTAGS":"Tagged with:","PAGES_WITH_TAGS":"${0} with tags ${1}","WITHTAGS":"Wikis with tags:","TAGS_ICON":"Tags icon"},"EDIT_FILE":{"ERROR_NAME_EXISTS":"The file cannot be renamed because another file has the same name.","ERROR_MAX_CONTENT_SIZE":"The file could not be replaced because it is larger than the maximum allowed file size of ${0}","EDITERROR":"The file's metadata was not edited due to an error","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Edit File","ERROR_QUOTA_VIOLATION":"The file could not be replaced because the wiki is almost full.  To replace with this file, ${0} of files, attachments, or versions would have to be removed.","VISIBILITY_LABEL":"Visibility: ","DESCRIPTION_LABEL":"Description: ","REPLACE_CONFIRM":"The file you have selected has a different extension than the current file.  Click 'OK' to proceed with changing the file type.  To select a different file, click 'Cancel'","ERROR_TIMEOUT":"The file was not edited because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CONCURRENT_MODIFICATION":"This file was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Clicking 'OK' will overwrite the changes.   ","WARN_SPECIFY_NAME":"File name is a required field.","ERROR_CANCEL":"The file was not edited because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The file could not be edited because you are not a contributor.","SHARE_PROPAGATE":"Sharing:","ERROR_NOT_LOGGED_IN":"You must be logged in to edit this file.  Click 'OK' to be prompted to log in.","PROPAGATE_LABEL":"Allow this file to be shared by other people","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","OK":"OK","REPLACEERROR":"The file's contents were not replaced due to an error.","NAME_LABEL":"Filename: ","BUSY":"Saving...","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","PUBLIC_LABEL":"Make this file public (visible to everyone)","REPLACE_LABEL":"Replace contents: ","ERROR_NOT_FOUND":"The file could not be edited because it has been deleted or is no longer visible to you."},"STOP_SHARING_PAGE":{"CONFIRM":"Are you sure you wish to remove all shares on this page?\n\n${0}","TITLE":"Stop Sharing","TIMEOUT_ERROR":"The page could not be shared because the server could not be contacted.  Click 'Stop Sharing' to try again.","CONFIRM_PUBLIC":"Are you sure you wish to remove all shares on this page?\nNote: Because this page is public, everyone will still be able to see the page.\n\n${0}","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you.","CANCEL_ERROR":"The page could not be shared because the request was cancelled.  Click 'Stop Sharing' to try again.","ERROR":"The shares on this pages could not be removed.  Please try again later.","TOOLTIP":"Remove all shares on this page"},"WIKI_SERVICE_TITLE_BAR":"Wikis","DOCUMENTCONTENT":{"NODESCRIPPAGE":"No description for this page","VERSIONS":"Versions","SHARE_PROPAGATE_OWNER":"Allow other people to share this file?  When checked, everyone who can see the file will be able to share it.","DOWNLOAD_TOOLTIP":"Download ${0} (${1})","SHARE_PROPAGATE_PUBLIC":"Everyone can share this file.","SIZE":"Size: ","ADDED":"Added: ","SHAREDWITH":"Sharing","TAGS":"Tags: ","ABOUTPAGE":"About this page","TIMESTAMP":"${EEEE}, ${date_long} ${time_long} by ${user}","DOWNLOAD_WARN":"!","UPDATED":"Updated: ","ATTACHMENTS":"Attachments","DOWNLOAD_WARN_LONG":"This file may not download properly because it has a long file name.  To ensure a successful download, use your browser's Save As feature.","DOWNLOAD_LABEL":"Download as: ","NODESCRIPFILE":"No description for this file","PAGE":{"TIMES_DOWNLOADED":"Page views: ","DOWNLOADED_BY":"Page viewed by: ","NO_DOWNLOADS":"None","DOWNLOADS":"${0} (${1} anonymously)"},"SHARED":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to you and is shared with ${0}.","ONE":"This file is visible to you and is shared with ${0}."},"WITH":{"MANY_1":"${0} others","ONE_1":"1 person","MANY":"This file is visible to the owner and is shared with ${0}.","ONE":"This file is visible to the owner and is shared with ${0}."},"BASE":"This file is visible to the owner and is shared with you."},"DESCRIPTION":"Description:","ABOUTFILE":"About this file","ERRORS":{"ACCESS_DENIED_ANON":{"TITLE":"This file is not public","MESSAGES":"You do not have permission to view this file.  If this is your file or it has been shared with you, you must log in to Wikis first. "},"ACCESS_DENIED":{"TITLE":"This file is not public or shared with you.","MESSAGES":"You do not have permission to view this file.  The file is not public and is not shared with you."},"NOT_FOUND_ANON":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed.  You may need to log in to view this file or the owner may have deleted it."},"LOGIN":"Log in now","NOT_FOUND":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed.  Check that you have permission to view this file and that the owner has not deleted it."},"AUTH_REQUIRED_ANON":{"TITLE":"Log in to Wikis","MESSAGES":"To change your notification settings on this file you must be logged in to Wikis. "},"DEFAULT":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed - click the back button and try again. If this doesn't work report the problem to the support forum."},"OWNER_NOT_FOUND":{"TITLE":"The file could not be found","MESSAGES":"The file you have requested has been deleted."}},"COMMENTS":"Comments (${0})","PUBLIC":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to everyone and is shared with ${0}.","ONE":"This file is visible to everyone and is shared with ${0}."},"WITH":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to everyone and is shared with ${0}.","ONE":"This file is visible to everyone and is shared with ${0}."},"BASE":"This file is visible to everyone."},"REQUIRED_NAME":"*Name: ","NAME":"Name:","DOWNLOAD":"Download (${0})","SHARE_PROPAGATE_OFF":"Only the owner can share this file.","FILE":{"TIMES_DOWNLOADED":"Downloads: ","DOWNLOADED_BY":"Downloaded by: ","NO_DOWNLOADS":"None","DOWNLOADS":"${0} (${1} anonymously)"},"CREATE_NEW_PAGE":"Create New Page","PRIVATE":"This file is visible only to you.","BROWSE_OTHER":"Browse other files from ${0}","SHARE_PROPAGATE_ON":"All readers can share this file."},"MORE_ACTIONS":{"TEXT":"More Actions","TOOLTIP":"Delete the wiki."},"CLOSE":"Close","WIKI_CREATE":{"ROLE":"Role","ERROR_SHORTEN_DESCRIPTION":"Shorten Wiki description?","ADD_DESCRIPTION_LINK":"Add a description","ADD_DESCRIPTION_TAGS_LINK":"Add a description and tags","TAGS_LABEL":"Tags:","ADD_GROUPS":"Add groups:","MEMBERSHIP":{"PRIVATE_LABEL":"Private","OPEN_DESC":"Public access with Self Join Membership","OPEN_LABEL":"Open","MODERATED_LABEL":"Moderated","MODERATED_DESC":"Public access with Request Membership","PRIVATE_DESC":"Hidden, Invitation only"},"ERROR_TITLE_TOO_LONG":"The Wiki title is too long. ","WARN_LONG_TAG":"The tag '${0}' is too long.","TITLE":"Create a New Wiki","TRIM_TAG":"Shorten tag?","ERROR_PROVIDE_TITLE":"Please provide a title for the Wiki","TITLE_LABEL":"Title:","ADD_TO_LIST":"Add to list","NAME":"Name","ERROR_TITLE_EXISTS":"A Wiki with this title already exists, please choose another","DIALOG_TITLE":"Start a Wiki","MEMBERS_LABEL":"Members:","NAVIGATE_AWAY_CHOICE":"Are you sure you want to discard your input?  Press OK to continue or cancel to return to creating a Wiki.","CREATE_BTN_LABEL":"Create Wiki","ERROR_SHORTEN_TITLE":"Shorten Wiki title?","ERROR_EMPTY_TITLE":"The Wiki title is empty. ","MEMBERSHIP_LABEL":"Membership:","ERROR_DESCRIPTION_TOO_LONG":"The Wiki description is too long. ","WARN_LONG_TAGS":"The specified tags are too long.","NAME_THIS_WIKI":"Name this wiki:","ADD_TAGS":"Add tags:","ADD_DESCRIPTION":"Add a description:","BUSY":"Creating...","FIX_INVALID_CHARS_IN_TITLE":"Replace invalid characters with '_'?","PERMISSIONSETTINGS_BTN_LABEL":"Permission Settings","ERROR_SERVER_ERROR":"An unexpected error has occurred. Please contact your system administrator.","WARN_INVALID_CHARS_IN_TITLE":"Wiki title may not contain the following characters: \\ / : * ? \" < > | [ ] ","DESC_LABEL":"Description:","ADD_MEMBERS":"Add members:","ADD_GROUPS_LINK":"Add groups","TRIM_TAGS":"Shorten tags?","ADD_DESCRIPTION_TAGS_DOITLATER":"${0} (You can do this later)"},"PAGECONTENT":{"SHARE_PROPAGATE_OWNER":"Allow other people to share this page?  When checked, everyone who can see the page will be able to share it.","SHARE_PROPAGATE_PUBLIC":"Everyone can share this page.","DOWNLOAD_WARN":"!","DOWNLOAD_PAGE_AS_PDF_TOOLTIP":"Download ${0} (${1}) as a pdf","DOWNLOAD_WARN_LONG":"This page may not download properly because it has a long name.  To ensure a successful download, use your browser's Save As feature.","NO_CONTENT":"No Content","DOWNLOAD_RTF":"RTF","SHARED":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to you and is shared with ${0}.","ONE":"This page is visible to you and is shared with ${0}."},"WITH":{"MANY_1":"${0} others","ONE_1":"1 person","MANY":"This page is visible to the owner and is shared with ${0}.","ONE":"This page is visible to the owner and is shared with ${0}."},"BASE":"This page is visible to the owner and is shared with you."},"ERRORS":{"ACCESS_DENIED_ANON":{"TITLE":"This page is not public","MESSAGES":"You do not have permission to view this page.  If this is your page or it has been shared with you, you must log in to Wikis first. "},"ACCESS_DENIED":{"TITLE":"This page is not public or shared with you.","MESSAGES":"You do not have permission to view this page.  The page is not public and is not shared with you."},"NOT_FOUND_ANON":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed.  You may need to log in to view this page or the owner may have deleted it."},"LOGIN":"Log in now","NOT_FOUND":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed.  Check that you have permission to view this page, and that the owner has not deleted it."},"AUTH_REQUIRED_ANON":{"TITLE":"Log in to Wikis","MESSAGES":"To change your notification settings on this page you must be logged in to Wikis. "},"DEFAULT":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed - click the back button and try again. If this doesn't work report the problem to the support forum."},"OWNER_NOT_FOUND":{"TITLE":"The page could not be found","MESSAGES":"The page you have requested has been deleted."}},"DOWNLOAD_HTML":"HTML","PUBLIC":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to everyone and is shared with ${0}.","ONE":"This page is visible to everyone and is shared with ${0}."},"WITH":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to everyone and is shared with ${0}.","ONE":"This page is visible to everyone and is shared with ${0}."},"BASE":"This page is visible to everyone."},"SHARE_PROPAGATE_OFF":"Only the owner can share this page.","DOWNLOAD_PAGE_AS_HTML_TOOLTIP":"Download ${0} (${1}) as html","PRIVATE":"This page is visible only to you.","DOWNLOAD_PAGE_AS_RTF_TOOLTIP":"Download ${0} (${1}) as rich text","SHARE_PROPAGATE_ON":"All readers can share this page.","DOWNLOAD_PDF":"PDF","NODESCRIP":"No description for this page"},"VERSIONCOMPARISON":{"ERRORS":{"DEFAULT":{"TITLE":"Unable to show version comparison","MESSAGES":"Version ${0} cannot be used for a comparison because there is a problem converting it to wiki text.  Return to the page and try comparing other versions."},"TWO":{"TITLE":"Unable to show version comparison","MESSAGES":"Versions ${0} and ${1} cannot be used for a comparison because there is a problem converting them to wiki text.  Return to the page and try comparing other versions."}}}};dojo.provide("quickr.share.wiki.nls.wiki");quickr.share.wiki.nls.wiki._built=true;dojo.provide("quickr.share.wiki.nls.wiki.en");quickr.share.wiki.nls.wiki.en={"WIKI_SEARCH":{"SEARCH_USERS_BUTTON":"Search","LOADING":"Loading...","TITLE_BLURB":"Need to find someone's Wiki?  Enter the person's name or e-mail address in the search field, below.  As you type, we'll show you a list of possible matches. If you can't find the person you are searching for in the list, just click the Search button to see a list of all the possible matches in the directory.","ERROR_LINK":"Search for Wikis","LABEL":"Start typing part of the title of a wiki to see suggested matches.","TITLE":"Find a Wiki","PLACEHOLDER":"Type a title","NO_MATCHES":"No matches","NO_RESULTS":"No results for '${0}'"},"WIKI_CONFIRMNEWPAGE":{"HASNOTBEENCREATED":"has not been created yet","FOLLOWEDLINK":"You have followed a link to or entered the address of a page that has not been created yet.","NOTHANKS":"No thanks - take me back","CREATETHISPAGE":"Create This Page"},"CREATE_CHILD_PAGE":{"ACTION":"Create Child","ACTION_TOOLTIP":"Create a new child page."},"CHANGE_PROPAGATE_PAGE":{"ERROR_TIMEOUT":"The file was not updated because the server could not be contacted.  Click the checkbox to try again.","ERROR":"The file was not updated due to an error.","ERROR_CANCEL":"The file was not updated because the request was cancelled.  Click the checkbox to try again."},"SHARING":{"EVT_EDIT_ONE":{"DAY":"${user} added ${list} as a contributor on ${EEEE} at ${time}","YEAR":"${user} added ${list} as a contributor on ${date_long}","MONTH":"${user} added ${list} as a contributor on ${MMM} ${dd}","TODAY":"${user} added ${list} as a contributor today at ${time}","YESTERDAY":"${user} added ${list} as a contributor yesterday at ${time}"},"SHARED_WITH_MANY":{"DAY":"Shared with ${user} and ${count} on ${EEEE} at ${time}","YEAR":"Shared with ${user} and ${count} on ${date_long}","MONTH":"Shared with ${user} and ${count} on ${MMM} ${dd}","TODAY":"Shared with ${user} and ${count} today at ${time}","YESTERDAY":"Shared with ${user} and ${count} yesterday at ${time}"},"EVT_VIEW_MANY":{"DAY":"${user} shared with ${list} on ${EEEE} at ${time}","YEAR":"${user} shared with ${list} on ${date_long}","MONTH":"${user} shared with ${list} on ${MMM} ${dd}","TODAY":"${user} shared with ${list} today at ${time}","YESTERDAY":"${user} shared with ${list} yesterday at ${time}"},"USERS_POPUP_PAGE":{"DEMOTE_ERROR_CANCEL":"The selected person was not made a reader because the request was cancelled.  Please try again.","DEMOTE_ERROR_NOT_FOUND":"The selected person was not made a reader because the page has been deleted or is no longer visible to you.","EMPTY_READERS":"Not shared with anyone as a reader","DEMOTE_ERROR":"An error prevented making the selected person a reader.","ERROR_TIMEOUT":"The server could not be contacted.","DEMOTE":"Make this person a reader","EMPTY_CONTRIBUTORS":"No one else may contribute to this page","ERROR_NOT_FOUND":"This information can not be displayed because the page has been deleted or is no longer visible to you.","ERROR":"The server could not be contacted.","ERROR_ACCESS_DENIED":"This information can not be displayed because the page has been deleted or is no longer visible to you.","CONTRIBUTORS_LABEL":"Contributors: ","EMPTY":"Not shared with anyone","DEMOTE_ERROR_ACCESS_DENIED":"The selected person was not made a reader because the page has been deleted or is no longer visible to you.","ERROR_CANCEL":"The request was cancelled.  Please try again.","READERS_LABEL":"Readers: ","DEMOTE_ERROR_TIMEOUT":"The selected person was not made a reader because the server could not be contacted.  Please try again."},"SHARED_WITH_TWO_1":"one other","EVT_EDIT_MANY":{"DAY":"${user} added ${list} as contributors on ${EEEE} at ${time}","YEAR":"${user} added ${list} as contributors on ${date_long}","MONTH":"${user} added ${list} as contributors on ${MMM} ${dd}","TODAY":"${user} added ${list} as contributors today at ${time}","YESTERDAY":"${user} added ${list} as contributors yesterday at ${time}"},"EXPAND_ERROR":{"CANCEL":"The details of this share could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this share could not be loaded because the document has been deleted or is no longer visible.","TIMEOUT":"The details of this share could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this share from being displayed.  Please try again later."},"SHARED_BY":{"DAY":"Shared by ${user} on ${EEEE} at ${time}","YEAR":"Shared by ${user} on ${date_long}","MONTH":"Shared by ${user} on ${MMM} ${dd}","TODAY":"Shared by ${user} today at ${time}","YESTERDAY":"Shared by ${user} yesterday at ${time}"},"SHARED_WITH_MANY_1":"${0} others","USERS_POPUP_FILE":{"DEMOTE_ERROR_CANCEL":"The selected person was not made a reader because the request was cancelled.  Please try again.","DEMOTE_ERROR_NOT_FOUND":"The selected person was not made a reader because the file has been deleted or is no longer visible to you.","EMPTY_READERS":"Not shared with anyone as a reader","DEMOTE_ERROR":"An error prevented making the selected person a reader.","ERROR_TIMEOUT":"The server could not be contacted.","DEMOTE":"Make this person a reader","EMPTY_CONTRIBUTORS":"No one else may contribute to this file","ERROR_NOT_FOUND":"This information can not be displayed because the file has been deleted or is no longer visible to you.","ERROR":"The server could not be contacted.","ERROR_ACCESS_DENIED":"This information can not be displayed because the file has been deleted or is no longer visible to you.","CONTRIBUTORS_LABEL":"Contributors: ","EMPTY":"Not shared with anyone","DEMOTE_ERROR_ACCESS_DENIED":"The selected person was not made a reader because the file has been deleted or is no longer visible to you.","ERROR_CANCEL":"The request was cancelled.  Please try again.","READERS_LABEL":"Readers: ","DEMOTE_ERROR_TIMEOUT":"The selected person was not made a reader because the server could not be contacted.  Please try again."},"EVT_VIEW_ONE":{"DAY":"${user} shared with ${list} on ${EEEE} at ${time}","YEAR":"${user} shared with ${list} on ${date_long}","MONTH":"${user} shared with ${list} on ${MMM} ${dd}","TODAY":"${user} shared with ${list} today at ${time}","YESTERDAY":"${user} shared with ${list} yesterday at ${time}"},"SHARED_WITH_TWO":{"DAY":"Shared with ${user} and ${count} on ${EEEE} at ${time}","YEAR":"Shared with ${user} and ${count} on ${date_long}","MONTH":"Shared with ${user} and ${count} on ${MMM} ${dd}","TODAY":"Shared with ${user} and ${count} today at ${time}","YESTERDAY":"Shared with ${user} and ${count} yesterday at ${time}"},"SHARED_WITH":{"DAY":"Shared with ${user} on ${EEEE} at ${time}","YEAR":"Shared with ${user} on ${date_long}","MONTH":"Shared with ${user} on ${MMM} ${dd}","TODAY":"Shared with ${user} today at ${time}","YESTERDAY":"Shared with ${user} yesterday at ${time}"}},"VIEWS":{"MEDIA_TOOLTIP":"Each file is shown with a large icon and a pop-up","MEDIA":"Tiles","PAGE_DETAILS_TOOLTIP":"Pages arranged in a table","SUMMARY_TOOLTIP":"A list with info about each file","DETAILS":"Details","MEMBERS_DETAILS_TOOLTIP":"Members arranged in a table","MAP_TOOLTIP":"Files arranged according to their relevance","MAP":"Map","WIKI_DETAILS_TOOLTIP":"Wikis arranged in a table","MEMBERS_SUMMARY_TOOLTIP":"A list with info about each member","PAGE_SUMMARY_TOOLTIP":"A list with info about each page","DETAILS_TOOLTIP":"Files arranged in a table","SUMMARY":"Summary","WIKI_SUMMARY_TOOLTIP":"A list with info about each wiki"},"LOADING":"Loading...","FEEDS":{"IE6SUBSCRIBE":"Warning: This link is meant for feed readers and may display incorrectly in your browser, click OK to continue, Cancel to return to page."},"EDIT_ATTACHMENT":{"ERROR_NAME_EXISTS":"The attachment cannot be renamed because another attachment has the same name.","ERROR_MAX_CONTENT_SIZE":"The attachment could not be replaced because it is larger than the maximum allowed attachment size of ${0}","EDITERROR":"The attachment's metadata was not edited due to an error","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Edit Attachment","ERROR_QUOTA_VIOLATION":"The attachment could not be replaced because the wiki is almost full.  To replace with this file, ${0} of files, attachments, or versions would have to be removed. ","LIMIT_HELP":"You can replace the contents of this attachment by selecting a different file.  You must choose a file that is smaller than ${limit} - attachments above this size are not allowed.","DESCRIPTION_LABEL":"Description: ","REPLACE_CONFIRM":"The attachment you have selected has a different extension than the existing attachment.  Click 'OK' to proceed with changing the file type.  To select a different file, click 'Cancel'","ERROR_TIMEOUT":"The attachment was not edited because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CONCURRENT_MODIFICATION":"This attachment was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Clicking 'OK' will overwrite the changes.   ","WARN_SPECIFY_NAME":"File name is a required field. ","ERROR_CANCEL":"The attachment was not edited because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The attachment could not be edited because you are not a contributor.","ERROR_NOT_LOGGED_IN":"You must be logged in to edit this attachment.  Click 'OK' to be prompted to log in.","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","OK":"OK","REPLACEERROR":"The attachment's contents were not replaced due to an error.","NAME_LABEL":"File name: ","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","WARN_EXTENSION":"The file you are replacing must have the same extension.","REPLACE_LABEL":"Replace contents:"},"MYWIKIS":{"USERS_WIKIS":"${0}'s Wikis","NODESCRIPTION":"No description"},"HELP":"Help","EDIT_MEMBER":{"NOSUCHMEMBER":"The member you are trying to edit does not exist. ","UNAUTHORIZED":"You don't have enough privileges to edit the role for this member.","EDITROLE":"Change the role for user ${0}","TITLE":"Edit Member","ACTION_TOOLTIP":"Change the role for this member of the Wiki","ACTION":"Edit","CANTEDITROLE":"You can't change the role for this member."},"ELLIPSIS":"...","BACK_TO_PAGE":"Back to Page","WARNING":"Warning","COMMENTS":{"TRIM_LONG_COMMENT_CONFIRM":"Shortening will remove the text beyond the comment limit.  Click 'OK' to shorten or 'Cancel' to edit the comment yourself.","COMMENT_DELETED":{"DAY":"Comment deleted by ${user} on ${EEEE} at ${time}","YEAR":"Comment deleted by ${user} on ${date_long}","MONTH":"Comment deleted by ${user} on ${MMM} ${dd}","TODAY":"Comment deleted by ${user} today at ${time}","YESTERDAY":"Comment deleted by ${user} yesterday at ${time}"},"ERROR_EDIT":"Your comment could not be updated.  Please try again later.","COMMENT_CREATED":{"DAY":"${user} commented on ${timestamp}","YEAR":"${user} commented on ${timestamp}","MONTH":"${user} commented on ${timestamp}","TODAY":"${user} commented ${timestamp}","YESTERDAY":"${user} commented ${timestamp}"},"ERROR_NO_CONTENT_EDIT":"Please enter your comment and click 'Save.'  If you no longer wish to edit your comment click 'Cancel.'","COUNT":"${0}-${1} of ${2}","COMMENT_COUNT_MANY":"${0} comments","ERROR_DELETE_NOT_LOGGED_IN":"You must be logged in to delete this comment.  Click 'Delete' to be prompted to log in.","TRIM_LONG_COMMENT":"Shorten comment?","DELETECONFIRM":"Are you sure you wish to delete this comment?","ERROR_EDIT_NOT_LOGGED_IN":"You must be logged in to edit this comment.  Click 'Save' to be prompted to log in.","ITEMS_PER_PAGE":" items per page.","COMMENT_LABEL":"Comment:","SAVE":"Save","ERROR_CREATE_ACCESS_DENIED":"Your comment could not be saved because the file has been deleted or is no longer visible to you.","COMMENT_EDITED":{"DAY":"Edited on ${EEEE}","YEAR":"Edited on ${date_long}","MONTH":"Edited on ${MMM} ${dd}","TODAY":"Edited today at ${time}","YESTERDAY":"Edited yesterday at ${time}"},"EDIT":"Edit","PREVIOUS":"Previous","CANCEL":"Cancel","ERROR_CREATE_CANCEL":"Your comment could not be saved because the request was cancelled.  Click 'Save' to try again.","COMMENT_COUNT_ONE":"${0} comment","DELETEREASON":"Reason for deleting this comment:","ERROR_DELETE":"Your comment could not be deleted.  Please try again later.","SUBSCRIBE_TO_COMMENTS_TOOLTIP":"Follow changes to these comments through your feed reader","ERROR_EDIT_CANCEL":"Your comment could not be updated because the request was cancelled.  Click 'Save' to try again.","LINK":"Link","VIEW_COMMENTS_FILE":"View comments on this file","LOADING":"Loading comments...","NEXT":"Next","PAGE":"Page","ERROR_DELETE_TIMEOUT":"Your comment could not be deleted because the server could not be contacted.  Click 'Delete' to try again.","ERROR_DELETE_ACCESS_DENIED":"Your comment could not be deleted because the file has been deleted or is no longer visible to you.","ERROR_EDIT_NOT_FOUND":"Your comment could not be updated because the file has been deleted or is no longer visible to you.","COMMENT_CREATED_TIME":{"DAY":"${EEEE} at ${time}","YEAR":"${date_long}","MONTH":"${MMM} ${dd}","TODAY":"today at ${time}","YESTERDAY":"yesterday at ${time}"},"ERROR_CREATE_NOT_FOUND":"Your comment could not be saved because the file has been deleted or is no longer visible to you.","ERROR_NO_CONTENT":"Please enter your comment and click 'Save.'  If you no longer wish to leave a comment click 'Cancel.'","ERROR_CREATE_NOT_LOGGED_IN":"You must be logged in to create this comment.  Click 'Save' to be prompted to log in.","ERROR_CREATE_TIMEOUT":"Your comment could not be saved because the server could not be contacted.  Click 'Save' to try again.","ERROR_EDIT_ACCESS_DENIED":"Your comment could not be updated because the file has been deleted or is no longer visible to you.","SUBSCRIBE_TO_COMMENTS":"Subscribe to these comments","DELETE":"Delete","ERROR_DELETE_CANCEL":"Your comment could not be deleted because the request was cancelled.  Click 'Delete' to try again.","ERROR_DELETE_NOT_FOUND":"Your comment could not be deleted because the file has been deleted or is no longer visible to you.","NOHYPHENCOUNT":"${0} of ${1}","JUMP_TO_LAST":"Most recent","WARN_LONG_COMMENT":"The comment is too long.","ERROR_CREATE":"Your comment could not be saved.  Please try again later.","VIEW_COMMENTS_PAGE":"View comments on this page","EMPTY":"There are no comments.","ADD_COMMENT":"Add a comment","ERROR_EDIT_TIMEOUT":"Your comment could not be updated because the server could not be contacted.  Click 'Save' to try again."},"FILTERS":{"MY_TAGS":{"TITLE":"My Tags"},"EVENT":{"TITLE":"Events","COMMENTS":"Comments","PEOPLE_JOINED":"People joined","SHARED_WITH":"Shared with","RECOMMENDATIONS":"Recommendations","MEDIA_UPDATES":"File updates"},"SHARE":{"NOT_PUBLIC_TOOLTIP":"Files that aren't public but are shared with one or more people","SELECTIVE_LONG":"Files that aren't public but are shared with one or more people","NOT_PUBLIC_LONG":"Files that aren't public but are shared with one or more people","PUBLIC_LONG":"Files that are visible to everyone","PRIVATE_TOOLTIP":"Files that only I can see","PRIVATE":"with no one (private)","NOT_PUBLIC":"with one or more people","TITLE":"Shared","PRIVATE_LONG":"Private to me","PUBLIC":"with everyone (public)","PUBLIC_TOOLTIP":"Files that are visible to everyone","SELECTIVE":"with one or more people","SELECTIVE_TOOLTIP":"Files that aren't public but are shared with one or more people"},"TYPE":{"PAGES_LONG":"Pages only","TITLE":"Type","PAGES_TOOLTIP":"All pages created in this wiki","FILES":"uploaded files","FILES_LONG":"Uploaded files only","FILES_TOOLTIP":"Any file that was uploaded from a computer","PAGES":"pages"},"ALL_TAGS":{"TITLE":"Everyone's Tags"},"MEMBER_TYPE":{"GROUP_TITLE":"Group","GROUP_LONG":"Groups only","USER_TOOLTIP":"Users who are members of the wiki","VIRTUAL_TITLE":"Special Group","VIRTUAL_TOOLTIP":"Special groups which are members of the wiki","GROUP":"groups","USER_TITLE":"User","VIRTUAL":"special groups","TITLE":"Member Type","USER_LONG":"Users only","USER":"users","GROUP_TOOLTIP":"Groups which are members of the wiki ","VIRTUAL_LONG":"Special groups only"},"SHARED_BY":{"TITLE":"Shared By","OPTION_EMPTY_TOOLTIP":"Only show files that were shared by a specific person","OPTION":"by ${0}","FILTER":"Shared by ${0}","OPTION_EMPTY":"by a specific person:"},"DATE":{"TODAY_LONG":"Only updated since midnight today ","TODAY_TOOLTIP":"Since midnight today","LASTYEAR_TOOLTIP":"Last 365 days","LASTWEEK":"last week","LASTWEEK_TOOLTIP":"Last 7 days","LASTMONTH_TOOLTIP":"Last 30 days","TITLE":"Date","LASTWEEK_LONG":"Only updated in the last seven days ","LASTMONTH_LONG":"Only updated in the last thirty days ","TODAY":"today","LASTMONTH":"last 30 days","LASTYEAR_LONG":"Only updated in the last year ","LASTYEAR":"last year"},"PERMISSION":{"EDIT_TOOLTIP_INBOUND":"Files you can contribute to","EDIT":"contribute","EDIT_TOOLTIP_OUTBOUND":"Files other people can contribute to","VIEW":"read","VIEW_LONG_OUTBOUND":"Files other people can read but not contribute to","VIEW_TOOLTIP_INBOUND":"Files you can read but not contribute to","VIEW_LONG_INBOUND":"Files you can read but not contribute to","EDIT_LONG_OUTBOUND":"Files other people can contribute to","VIEW_TOOLTIP_OUTBOUND":"Files other people can read but not contribute to","EDIT_LONG_INBOUND":"Files you can contribute to","TITLE":"Permission"},"SHARED_WITH":{"TITLE":"Shared With","OPTION_EMPTY_TOOLTIP":"Only show files that were shared with a specific person","OPTION":"with ${0}","FILTER":"Shared with ${0}","OPTION_EMPTY":"with a specific person:"},"USER_TAGS":{"TITLE":"This Person's Tags"}},"DOWNLOAD_INFO":{"PAGE":{"EMPTY":"Anonymous users only","ERROR":"Unable to load page view information","LOADING":"Loading..."},"FILE":{"EMPTY":"Anonymous users only","ERROR":"Unable to load download information","LOADING":"Loading..."}},"SIZE":{"B":"${0} B","MB":"${0} MB","GB":"${0} GB","KB":"${0} KB"},"FOOTER":{"HELP":{"FORUMS":"Support forums","HEADING":"Help","HELP":"Help"},"TOOLS":{"ADMINPAGE":"Admin","HEADING":"Tools","BROWSERPLUGINS":"Browser plugins","METRICS":"System metrics"},"ABOUT":{"CONNECTIONSONLINE":"IBM Lotus Connections on ibm.com","SUBMITFEEDBACK":"Submit feedback","ABOUT":"About","HEADING":"About"},"FILE_BUG":"File a Bug Report","DOWNLOAD_CONNECTORS":"Download Connectors","CONNECTIONS":{"HEADING":"IBM Lotus Connections","HOME":"Home","DEMO":"Demo"}},"SHARE_INFO":{"FILE":{"DOWNLOADED_CURRENT":"${0} has downloaded the most recent version of this file.","DOWNLOADED_NEVER":"${0} has not yet downloaded this file.","DOWNLOADED_OLDER":"${0} has downloaded an older version of this file."},"LOADING":"Loading...","SHOW_INVOLVED":"Which shares apply to me?","ERROR":"Unable to load share information","PAGE":{"DOWNLOADED_CURRENT":"${0} has viewed the most recent version of this page.","DOWNLOADED_NEVER":"${0} has not yet viewed this page.","DOWNLOADED_OLDER":"${0} has viewed an older version of this page."}},"ATTACHMENTS":{"ADDATTACHMENT":"Add an attachment","EDIT":"Edit","SHOW":"Show","LOADING":"Loading attachments...","ATTACHMENT":"Attachment","DELETE":"Delete","PREVIOUS":"Previous","PAGE":"Page","ERROR":"An error occurred","NEXT":"Next","NO_ATTACHMENTS":"No attachments exist","COUNT":"${0}-${1} of ${2}","DATE":{"RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"DELETEERROR":"The attachment was not deleted due to an error.","DELETE_ERROR_CANCEL":"The attachment was not deleted because the request was cancelled.  Click delete to try again.","DELETE_ERROR_TIMEOUT":"The attachment was not deleted because the server could not be contacted.  Click delete to try again."},"UPLOAD_ATTACHMENT":{"WARN_LONG_DESCRIPTION":"The description is too long.","CONFIRM_REPLACE":"Another attachment to this page with the same name already exists.  Do you wish to replace the contents of the existing attachment?","NOTE_LABEL":"Note: ","ERROR_MAX_CONTENT_SIZE":"The attachment could not be uploaded because it is larger than the maximum allowed attachment size of ${0}","CONTENTS_LABEL":"File: ","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Upload Attachment","ERROR_QUOTA_VIOLATION":"The attachment could not be uploaded because the wiki is almost full.  To upload this attachment, ${0} of files, attachments, or versions would have to be removed.","WARN_LONG_FILENAME":"The file name is too long. ","LIMIT_HELP":"Files must be smaller than ${limit}.","DESCRIPTION_LABEL":"Description: ","TAGS_LABEL":"Tags: ","WARN_NO_FILENAME":"File name is a required field.","ERROR_TIMEOUT":"The attachment could not be uploaded because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CANCEL":"The attachment could not uploaded because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The attachment could not be uploaded because you are not a contributor.","ERROR_NOT_LOGGED_IN":"You must be logged in to upload this attachment.  Click 'OK' to be prompted to log in.","TRIM_LONG_FILENAME":"Shorten file name?","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","TRIM_LONG_DESCRIPTION":"Shorten description?","ERROR":"The attachment could not be uploaded.  Please try again later","OK":"OK","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","NAME_LABEL":"File name: ","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","WARN_INVALID_CHARS_IN_NAME":"File names may not contain the following characters: \\ / : * ? \" < > | [ ]","SELECT_FILE":"Please select a file to upload"},"SESSION_TIMEOUT":"Your Connections session has expired.  Click 'OK' to log in again.","FILE":{"EXPAND_ERROR":{"CANCEL":"The details of this file could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this file could not be loaded because file has been deleted or is no longer visible.","TIMEOUT":"The details of this file could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this file from being displayed.  Please try again later."}},"TAGGER":{"CANCEL_TOOLTIP":"Cancel tag editing","REMOVEERROR_NOT_FOUND":"The tag could not be removed because the document has been deleted or is no longer visible.","LOADING":"Loading tags...","ADD_REMOVE_TAGS":"Add or remove tags","REMOVEERROR_ACCESS_DENIED":"The tag could not be removed because you do not have permission to contribute to this document.","CREATEERROR_TIMEOUT":"The tag could not be created because the server could not be contacted.  Click 'OK' to try again.","REMOVECONFIRM":"Are you sure you want to remove the tag ${0}?","WARN_LONG_TAG":"The tag '${0}' is too long.","ADD_REMOVE_TAGS_TOOLTIP":"Add or remove tags on this item","LOADERROR_TIMEOUT":"The tags could not be loaded: request timed out.","CREATEERROR":"The tag could not be created.  Please try again later.","CREATEERROR_NOT_FOUND":"The tag could not be created because the document has been deleted or is no longer visible.","NO_RESULTS":"No results for '${0}'","REMOVE":"Remove tag","LOADERROR_CANCEL":"The tags could not be loaded: request cancelled.","INVALID_CHAR_WARN_LONG":"One or more tags you have entered contain invalid characters: ${0}","REMOVEERROR_TIMEOUT":"The tag could not be removed because the server could not be contacted.  Click 'OK' to try again.","ERROR_LOADING":"An error has occured loading the tags.","NONE":"None","TRIM_TAGS":"Shorten tags?","CREATEERROR_CANCEL":"The tag could not be created because the request was cancelled.  Click 'OK' to try again.","SEPARATOR":",","LOADERROR_NOTFOUND":"The tags could not be loaded: file not found.","OK":"OK","INVALID_CHAR_WARN":"!","REMOVEERROR":"The tag could not be removed.","ADD_TAGS":"Add tags","CANCEL":"Cancel","CREATEERROR_ACCESS_DENIED":"The tag could not be created because you do not have permission to contribute to this document.","TRIM_TAG":"Shorten tag?","REMOVEERROR_CANCEL":"The tag could not be removed because the request was cancelled.  Click 'OK' to try again.","WARN_LONG_TAGS":"The specified tags are too long.","NOTAGS":"No Tags"},"WIKI_UPDATED":{"SHOW":"Show Changes"},"COMMUNITIES":{"COMMUNITY_WIKI_TITLE":"This wiki is associated with a Group.","COMMUNITY_WIKI":"Group Wiki"},"ERROR_IN_APP_TITLE":"Oops, that didn't work","SEARCH":{"SEARCH_ALT":"Search","HEADING_THIS":"Search Results within This Wiki: ${0}","SEARCH":"Search","REL_DATES":"Related Dates","TAGS":"Tags","DATES":"Dates","FILES":"Search Files","HEADING":"Search Results within Wikis","ADD_TO_FAVORITES":"Add to Favorite People","USER_RESULTS":"People search results for name and e-mail: ${0}","COMMUNITIES":"Search Groups","PEOPLE":"People","ACTIVITIES":"Search Activities","REL_TAGS":"Related Tags","DOGEAR":"Search Bookmarks","ALL_LABEL":"Search All","PEOPLE_DEFAULT":"Name or e-mail","REL_PEOPLE":"Related People","ALL":"All Areas","BLOGS":"Search Blogs","WIKIS":"Search Wikis","HEADING_MY":"Search Results within My Wikis","PROFILES":"Search Profiles"},"ERROR_OCCURRED":"An error occurred.  Contact your Lotus Connections administrator.","OK":"OK","SORTS":{"MOSTRECENT":"Most Recent","DN_TOOLTIP_REVERSE":"Sort by distinguished name in reverse alphabetical order","MOSTCOMMENTED_TOOLTIP":"Sort from most commented to least commented","MOSTDOWNLOADED":"Most Downloaded","HIGHESTRECOMMENDED":"Most Recommended","TITLE_TOOLTIP_REVERSE":"Sort by name in reverse alphabetical order","MOSTDOWNLOADED_TOOLTIP_REVERSE":"Sort from least downloaded to most downloaded","EMAIL_TOOLTIP":"Sort by email in alphabetical order","MOSTCOMMENTED":"Most Commented","HIGHESTRECOMMENDED_TOOLTIP":"Sort from most recommended to least recommended","TITLE":"Name","SHARED_ON_TOOLTIP_REVERSE":"Sort from least recently shared to most recently shared","EMAIL_TOOLTIP_REVERSE":"Sort by email in reverse alphabetical order","MOSTVISITED_TOOLTIP":"Sort from most visited to least visited","TITLE_TOOLTIP":"Sort by name in alphabetical order","SIZE_TOOLTIP":"Sort by size from largest to smallest","MOSTRECENT_SHARE":"Most Recently Shared","TYPE_TOOLTIP":"Sort by type in alphabetical order","MOSTDOWNLOADED_TOOLTIP":"Sort from most downloaded to least downloaded","MOSTCOMMENTED_TOOLTIP_REVERSE":"Sort from least commented to most commented","SHARED_ON_TOOLTIP":"Sort from most recently shared to least recently shared","MOSTRECENT_TOOLTIP":"Sort from most recently updated to least recently updated","HIGHESTRECOMMENDED_TOOLTIP_REVERSE":"Sort from least recommended to most recommended","SIZE_TOOLTIP_REVERSE":"Sort by size from smallest to largest","MOSTVISITED_TOOLTIP_REVERSE":"Sort from least visited to most visited","TYPE_TOOLTIP_REVERSE":"Sort by type in reverse alphabetical order","MOSTVISITED":"Most Visited","DN_TOOLTIP":"Sort by distinguished name in alphabetical order","ADDED_TOOLTIP_REVERSE":"Sort from least recently added to most recently added","MOSTRECENT_TOOLTIP_REVERSE":"Sort from least recently updated to most recently updated","ADDED_TOOLTIP":"Sort from most recently added to least recently added"},"WATCHLIST":{"TIP1":"The watchlist displays the names of people you add to your list. Click the name to view that person's files.","REMOVECONFIRM":"Are you sure you want to remove this person from your watchlist?","TIP2":"To add someone to your watchlist, go to the wiki of the person whose name you want to add, and then click the link Add to Watchlist.","MYWATCHLIST":"My Watchlist","LOADING":"Loading...","CLOSE":"Close Watchlist","ADDUSER":"Add ${0} to Watchlist...","OPEN":"Open Watchlist","REMOVE":"Remove from Watchlist","HELP":"Watchlist Help","EMPTY":"There are no people being watched."},"STOP_SHARING_FILE":{"CONFIRM":"Are you sure you wish to remove all shares on this file?\n\n${0}","TITLE":"Stop Sharing","TIMEOUT_ERROR":"The file could not be shared because the server could not be contacted.  Click 'Stop Sharing' to try again.","CONFIRM_PUBLIC":"Are you sure you wish to remove all shares on this file?\nNote: Because this file is public, everyone will still be able to see the file.\n\n${0}","NOT_FOUND_ERROR":"The file has been deleted or is no longer visible to you.","CANCEL_ERROR":"The file could not be shared because the request was cancelled.  Click 'Stop Sharing' to try again.","ERROR":"The shares on this file could not be removed.  Please try again later.","TOOLTIP":"Remove all shares on this file"},"UPLOAD":{"DESCRIPTION":"Description","FILE":"File","NAME":"Name"},"SUBSCRIBE_TO_PAGE_TOOLTIP":"Follow changes to this page through your feed reader","DATE":{"MONTHS_ABBR":["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"],"WIKI_CREATED":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","MONTH":"${MMM} ${dd}","TODAY":"today at ${time}","YESTERDAY":"yesterday at ${time}"},"PM":"PM","YESTERDAY":"yesterday","CREATED":{"DAY":"created ${EEee} at ${time}","YEAR":"created ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"created ${MMM} ${dd}","TODAY":"created today at ${time}","YESTERDAY":"created yesterday at ${time}"},"FULL":"${EEEE}, ${date_long} ${time_long}","AUTOSAVED_SHORT":{"DAY":"Autosaved ${EEee} at ${time}","YEAR":"Autosaved ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Autosaved ${MMM} ${dd}","TODAY":"Autosaved at ${time}","YESTERDAY":"Autosaved yesterday at ${time}"},"ADDED":{"DAY":"Added ${EEee} at ${time}","YEAR":"Added ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Added ${MMM} ${dd}","TODAY":"Added today at ${time}","YESTERDAY":"Added yesterday at ${time}"},"TODAY_U":"Today","TODAY":"today","YESTERDAY_U":"Yesterday","RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"WIKIPAGE":{"SECTION":{"VERSION":"Version","CHILDREN":{"TITLE":"Child Pages","LINK":"Create new child page","NONE":"No children exist"},"COMPARE":"Wiki text comparison","INFOSIZE":"${0} (${1} including page, attachments, and all versions)","HIERARCHY":{"MOVE":"Move Page","TITLE":"Hierarchy"},"REFRESH":"Refresh","RESTORE":"Restore this version"},"ACTIONS":{"TEXT":"Page Actions","TOOLTIP":{"EDITOR":"Create a child page or peer page, delete the page, print the page, or move the page.","READER":"Print the page."}},"ERROR":{"ACCESS_DENIED_ANON":{"TITLE":"You do not have access to this page","MESSAGES":"You do not have permission to view this page.  You may have access if you log in. "},"GENERAL":{"MESSAGES":"Something went wrong - click the back button and try again. "},"ACCESS_DENIED":{"TITLE":"You do not have access to this page","MESSAGES":"You do not have permission to view this page.   "},"WIKI":{"TITLE":"We can't find that Wiki","MESSAGES":"The Wiki can't be found - click the back button and try again.  If this doesn't work the wiki may have been deleted."},"DEFAULT":{"TITLE":"That page cannot be displayed.   ","MESSAGES":"That page cannot be displayed.   "}},"MODE":{"ATTACHMENTS":"Page Attachments","COMMENTS":"Comments","VERSIONS":"Versions","COMPARE":"Version Comparison","INFO":"Page Info"}},"PAGING":{"PREVIOUS":"Previous","COUNT":"${0}-${1} of ${2}","NEXT":"Next"},"APP_LOAD_BLURB":"Please wait while the application loads...","CONNSEARCH":{"SEARCH_ALT":"Search","SCOPE_CONNECTIONS_ACTIVITIES":{"LABEL":"Activities","HOVER":"Search Activities"},"SEARCH":"Search","HINT":"Search","FILES":"Files belonging to...","SCOPE_CONNECTIONS_ALL":{"LABEL":"All My developerWorks","HOVER":"Search all of My developerWorks"},"SCOPE_CONNECTIONS_DOGEAR":{"LABEL":"Bookmarks","HOVER":"Search Bookmarks"},"FAVORITES":"Favorites for...","USER_RESULTS":"People search results for name and e-mail: ${0}","COMMUNITIES":"Groups","PEOPLE":"People","SCOPE_ALLWIKIS":{"LABEL":"Public Wikis","HOVER":"Search Public Wikis"},"SCOPE_CONNECTIONS_BLOGS":{"LABEL":"Blogs","HOVER":"Search Blogs"},"HOVER":"Refine search options","SCOPE_THISWIKI":{"LABEL":"This Wiki","HOVER":"Search This Wiki"},"SCOPE_CONNECTIONS_ADVANCED":{"LABEL":"Advanced search","HOVER":"Go to the advanced search page"},"PEOPLE_DEFAULT":"Name or e-mail","INTERESTED":"People interested in...","SCOPE_CONNECTIONS_COMMUNITIES":{"LABEL":"Groups","HOVER":"Search Groups"},"SCOPE_CONNECTIONS_FILES":{"LABEL":"Files","HOVER":"Search Files"},"SCOPE_MYWIKIS":{"LABEL":"My Wikis","HOVER":"Search My Wikis"},"SCOPE_CONNECTIONS_PROFILES":{"LABEL":"Profiles","HOVER":"Search Profiles"}},"TITLEBAR":{"SEARCH":"Search","GO":"Go","ALLUSERS":"Find People","HOME":"Wikis","SHARES":"My Shares","MYCHANNEL":"My Place","ALLUSERS_TITLE":"Search for other people","MYCHANNEL_TITLE":"All of your files","OFFLINE":"Offline","SHARES_TITLE":"All of the shares that you are involved in","HOME_TITLE":"See what's happening in wikis"},"TOGGLE_SECTION":"Expand and collapse this section","ERROR_IN_APP_MESSAGE":"Something went wrong - click the back button and try again.  If this doesn't work report the problem to the support forum. If someone sent you this link, check to see if you've been granted permission.","JAVASCRIPT_DISABLED_TITLE":"Turn on JavaScript","EMOTICONS":{"BLOCK":"Block","COOL":"Cool","ANGEL":"Angel","THUMBS_DOWN":"Thumbs down","CRYING":"Crying","RED_FLAG":"Red flag","CROSS":"Cross","HAPPY":"Happy","BIG_SMILE":"Big smile","SURPRISED":"Surprised","HYSTERICAL":"Hysterical","LIGHT_BULB":"Light bulb","GREEN_FLAG":"Green flag","SAD":"Sad","CONFUSED":"Confused","SHY":"Shy","WARNING":"Warning","WINK":"Wink","TONGUE":"Tongue","LAUGH":"Laugh","GOOFY":"Goofy","STAR":"Star","EYEBROW":"Eyebrow","INFO":"Info","QUESTION":"Question","TICK":"Tick","THUMBS_UP":"Thumbs up","ANGRY":"Angry"},"EDIT_WIKI":{"DESC_LABEL":"Description:","ERROR_LOAD":"Couldn't load Wiki settings.","CREATOR":"Wiki Creator:","CANCEL":"Cancel","DELETE":"Delete Wiki","SAVE":"Save","BUSY":"Loading...","ERROR_SAVE":"Couldn't save Wiki settings.","TITLE":"Settings","ERROR_DESCRIPTION_TOO_LONG":"The Wiki description is too long. ","TAGS_LABEL":"Tags:","ERROR_SHORTEN_DESCRIPTION":"Shorten Wiki description?","OK":"OK","WIKITITLE":"Wiki Title:"},"CHANGE_PROPAGATE_FILE":{"ERROR_TIMEOUT":"The file was not updated because the server could not be contacted.  Click the checkbox to try again.","ERROR":"The file was not updated due to an error.","ERROR_CANCEL":"The file was not updated because the request was cancelled.  Click the checkbox to try again."},"WIKI_MEMBERSHIP":{"COUNT_OTHERS_PUBLIC_1":"${0} people","SEARCH_TOOLTIP":"Search the directory","SHARE_PERMISSION":"Make these people contributors to this page","COUNT_OTHERS_SINGLE_PUBLIC":"This page is public and is shared with ${0}.","SHARE_WITH":"Share with:","USER":"User","READER":"Reader","COUNT_NONE_PUBLIC":"This Wiki is public and you are not required to add members.","SELECT_USER":"Members:","COUNT_OTHERS_PUBLIC":"This page is public and is shared with ${0}.","PROPAGATE_SHARED":"All members can add other members","AUTHENTICATED":"Authenticated Users","WARN_LONG_MESSAGE":"The message is too long.","ANONYMOUS":"Anonymous Users","COUNT_OTHERS_SINGLE_1":"1 person","CANCEL":"Cancel","OWNER":"Owner","PROPAGATE":"Allow this page to be shared by other people","ERROR":"The page could not be shared.  Please try again later.","EDITOR":"Editor","REMOVE_USER_TOOLTIP":"Remove member","NOT_LOGGED_IN_ERROR":"You must be logged in to share this page.  Click 'OK' to be prompted to log in.","SELECT_USER_ERROR":"Please select a person to share with.","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you and cannot be shared.","PROPAGATE_OWNER":"Only you can add members","GROUP":"Group","SELF_REFERENCE_ERROR":"You cannot add yourself as a member.","DIALOG_TITLE":"Add members to this Wiki","TRIM_LONG_MESSAGE":"Shorten message?","PROPAGATE_PUBLIC":"Everyone can add members","CANCEL_ERROR":"The page was not shared because the request was cancelled.  Click 'OK' to try again.","MANAGER":"Manager","COUNT_NONE":"This Wiki has no members other than yourself.","TRIM_LONG_DESCRIPTION_MESSAGE":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","OK":"OK","MAX_SHARES_ERROR":"The maximum number of shares has been exceeded.","SHARE_TOOLTIP":"Allow others to read or contribute to this page","COMMUNITY_INFO":"You manage community wiki membership and roles in the community that owns the wiki. You edit community membership and roles by opening its business card and accessing its Members page.","TIMEOUT_ERROR":"The page was not shared because the server could not be contacted.  Click 'OK' to try again.","ADD_FROM_FAVORITES":"Add a person from your favorite wikis","WARN_LONG_DESCRIPTION":"The description is too long.","BUSY":"Applying...","COUNT_OTHERS_1":"${0} people","ACCESS_DENIED_ERROR":"You no longer have permission to share this page.","OWNER_REFERENCE_ERROR":"You cannot add the owner of the Wiki as a member.","COUNT_OTHERS_SINGLE":"This page is shared with ${0}.","TRIM_LONG_DESCRIPTION":"Shorten description?","COUNT_OTHERS_SINGLE_PUBLIC_1":"1 person","EXPAND_SECTION":"Add people as members of the Wiki...","COUNT_OTHERS":"${0} is a member of this Wiki.","MESSAGE_LABEL":"Message:"},"CONTENT":{"COLUMN_SIZE":"Size","COLUMN_SHARED_WITH":"Shared With","LOADING":"Loading... ","ELLIPSIS":"...","OF_PAGES":" of ${0}.","PRIVATE":"Private","SHARE_MESSAGE":{"LIST_SEP":", "},"DISCARD_DRAFT_TOOLTIP":"Discard these unsaved changes","DELETEPAGE_ERROR_TIMEOUT":"The page was not deleted because the server could not be contacted.  Click delete to try again.","DELETEPAGE_ERROR_NOT_FOUND":"This page has already been deleted or is no longer visible to you.","COLUMN_ADDED":"Added","SHARED":{"COUNT_ONE":"1 person","COUNT_MANY":"${0} people","MANY_1":"${0} people","ONE_1":"1 person","MANY":"Shared with ${0}","BASE":"Shared with you","ONE":"Shared with ${0}"},"DELETE_ERROR_TIMEOUT":"The file was not deleted because the server could not be contacted.  Click delete to try again.","EDIT_PAGE_DRAFT_CONFIRM":"You made changes to this file that were not saved. Do you wish to recover and edit with those changes? If you wish to edit the current version instead, you must select cancel and discard the existing unsaved changes.","DOWNLOAD_TOOLTIP_ONE":"${0} download","COMPARE_ERROR":"Could not compare this page.  Please try again.","MORE":"more","SHARE_TOOLTIP":"Allow others to read or contribute to this file","COLUMN_LAST_MODIFIED":"Updated","DELETEPAGE_ERROR_CANCEL":"The page was not deleted because the request was cancelled.  Click delete to try again.","REPLACE":"Replace","DELETESHAREERROR":"The share could not be removed","COLUMN_EMAIL":"Email","ONE_DOWNLOAD":"1","DISCARDDRAFT_ERROR_NOT_FOUND":"These unsaved changes have already been discarded.","TAGS_LABEL":"Tags:","DELETE_ERROR_CANCEL":"The file was not deleted because the request was cancelled.  Click delete to try again.","TAG_TOOLTIP":"Filter by tag '${0}'","USERERROR_TITLE":"We can't find that wiki","EDIT_PAGE_ERROR":"The page could not be edited due to an error","OPEN_WIKI":"Open Wiki","DELETESHARECONFIRM":"Are you sure you wish to stop sharing with ${0}?","DOWNLOADS":"${0}","COUNT":"${0}-${1} of ${2}","COLUMN_SHARED_BY":"Shared By","SHOW":"Show ","DISCARD":"Discard","HIDE_EXTRA":"Hide extra information","COLUMN_SHARED_ON":"Shared On","CREATE_PAGE_EXISTS_ERROR":"A page or file with the name you have specified already exists. Please choose a different name.","PUBLIC":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"Public and shared with ${0}","BASE":"Public","ONE":"Public and shared with ${0}"},"DELETE_TOOLTIP":"Delete this file","USERERROR_MESSAGES":"The wiki can't be found - click the back button and try again.  If this doesn't work the wiki may have been archived or disabled.","ERROR_REQUEST_TIMEOUT":"The server could not be contacted.","SHARE":"Share","HITS":"Page hits","DISCARDDRAFT_ERROR":"These unsaved changes were not discarded due to an error.","DELETESHAREERROR_TIMEOUT":"The share was not deleted because the server could not be contacted.  Click 'X' to try again.","ERROR_REQUEST_UNKNOWN":"An unknown error has occurred.","PREVIOUS":"Previous","DELETE":"Delete","DISCARDDRAFT_ERROR_TIMEOUT":"These unsaved changes were not discarded because the server could not be contacted.  Click discard to try again.","EDIT_DRAFT_TOOLTIP":"Work with these unsaved changes","COLUMN_RATING":"Recommend","DELETESHARE":"Remove this share","VIEW_SELECTION":"Display:","SHOWING":"Showing ","JUMP_TO_PAGE":"Jump to page  ","EDIT_PAGE_EXISTS_ERROR":"A page or file with the name you have specified already exists. Please choose a different name.","DISCARDDRAFT_ERROR_CANCEL":"These unsaved changes were not discarded because the request was cancelled.  Click discard to try again.","DELETEPAGE_CONFIRM":"Are you sure you wish to delete this page?\n\n${0}","DELETESHAREERROR_NOT_FOUND":"The share was not deleted because the file has been deleted or is no longer visible to you.","OPEN_PAGE":"Open Page","OTHER_PEOPLE_FILE":"Other people who have shared this file","EMPTY":{"MY_MEDIA":{"FILTERED":{"FILES":"There are no files in this wiki that match your filters.","MEDIA":"There are no files or pages in this wiki that match your filters.","PAGES":"There are no pages in this wiki that match your filters."},"NORMAL":{"FILES":"There are no files in this wiki.","MEDIA":"There are no files or pages in this wiki.","PAGES":"There are no pages in this wiki."}},"SHARED_WITH_ME":{"FILTERED":{"FILES":"There are no files shared with you that match your filters.","MEDIA":"There are no files or pages shared with you that match your filters.","PAGES":"There are no pages shared with you that match your filters."},"NORMAL":{"FILES":"There are no files shared with you.","MEDIA":"There are no files or pages shared with you.","PAGES":"There are no pages shared with you."}},"WATCHLIST":{"FILTERED":{"MEDIA":"There are no people being watched that match your filters."},"NORMAL":{"MEDIA":"There are no people being watched."}},"SHARED_BY_ME":{"FILTERED":{"FILES":"There are no files shared by you that match your filters.","MEDIA":"There are no files or pages shared by you that match your filters.","PAGES":"There are no pages shared by you that match your filters."},"NORMAL":{"FILES":"There are no files shared by you.","MEDIA":"There are no files or pages shared by you.","PAGES":"There are no pages shared by you."}},"DEFAULT":"There are no files or pages in this wiki."},"REVERT_CONFIRM":"You are about to replace the current version of this page with version ${0}, which was created ${1} by ${2}. Do you want to proceed?","DOWNLOAD_TOOLTIP_MANY":"${0} downloads","EDIT":"Edit","USERERROR":"The wiki you have requested cannot be displayed.","EDIT_PAGE_ERROR_TIMEOUT":"The page was not edited because the server could not be contacted.  Click 'OK' to retry your request.","RECOMMEND":"Recommend","ERROR_REQUEST_CANCELLED":"The request was cancelled.","DISCARDDRAFT_CONFIRM":"Are you sure you wish to discard these unsaved changes?","COLUMN_DOWNLOAD":"Downloads","ERROR":"An unknown error has occurred.","VIEW":"View","TAGGED_WITH":"Tagged with '${0}' ","COMPARE":"Compare","NOHYPHENCOUNT":"${0} of ${1}","DELETEERROR":"The file was not deleted due to an error.","EDIT_PAGE_ERROR_CANCEL":"The page was not edited because the request was cancelled.  Click 'OK' to retry your request.","VIEW_EXTRA":"View more information","COLUMN_LAST_MODIFIED_BY":"Updated By","EDIT_TOOLTIP":"Change the name, description, or contents of this file","COLUMN_NAME":"Name","HIDE":"hide","FILTERED_BY":"Filtered by: ","ITEMS_PER_PAGE":" items per page.","EDIT_PAGE_TOOLTIP":"Change the name, description, or contents of this page","PAGE":"Page","DELETECONFIRM":"Are you sure you wish to delete this file?\n\n${0}","NEXT":"Next","SHARE_PAGE_TOOLTIP":"Allow others to read or contribute to this page","DELETE_PAGE_TOOLTIP":"Delete this page","DELETESHAREERROR_CANCEL":"The share was not deleted because the request was cancelled.  Click 'X' to try again.","DELETE_ERROR_NOT_FOUND":"This file has already been deleted or is no longer visible to you.","COLUMN_TYPE":"Type","USER_HAS_NO_PAGES":"There are no pages in this wiki","DELETEPAGE_ERROR":"The page was not deleted due to an error.","CREATE_PAGE_ERROR":"The page could not be created due to an error","DELETESHARE_TOOLTIP":"Stop sharing with this person","REVERT":"Restore","SORT_BY":"Sort by: ","DOWNLOAD":"Download","USER_HAS_NO_FILES":"There are no files in this wiki","COLUMN_DN":"Distinguished Name","REMOVE_FILTER_TOOLTIP":"Remove this filter"},"CANCEL":"Cancel","WIKI_NAVLIST":{"ACTIVE":"Most Active","SITEMAP":"Site Map","TITLE":"All Pages","SEARCHBOX":"Find a page","OWNED":"Owned By Me","EDITED":"Pages Edited by Me","ALPHABETICAL":"Pages Index","NEW":"New Wikis","UPDATED":"Recently Updated"},"TAGLIST":{"EMPTY":"No tags found","NO_TAGS":"No tags found","ALL_TITLE":"View all tags.","NEXT":"Next","POPUPTITLE":"All Tags","LIST_TITLE":"View a list of the most popular tags.","OPEN":"Open","CLOUD":"cloud","LOADING":"Loading...","PREVIOUS":"Previous","SHOW_MORE":"Show less popular tags","CLOUD_TITLE":"View a tag cloud of the most popular tags.","ERROR_REQUEST_TIMEOUT":"Tags could not be loaded because the server could not be contacted.","ERROR":"Error loading tags","ALL":"all","VIEW_AS":"View as","LIST":"list","ERROR_REQUEST_CANCELLED":"Tags could not be loaded because the request was cancelled."},"ROLE_OPTIONS":{"ROLE":"Role:"},"CREATE_PAGE":{"ACTION":"New Page","ACTION_TOOLTIP":"Create a new page"},"APP":{"ERRORS":{"CANTCREATEPAGE":{"ACT":"Back to Page","TITLE":"You can't create a new page","MESSAGES":"You have insufficient privileges to create new pages in this Wiki.  You may have to request editor privileges to the administrator(s) of this Wiki. "},"CANTEDITPAGE":{"ACT":"Back to Page","TITLE":"You can't edit this page","MESSAGES":"You have insufficient privileges to edit pages in this Wiki.  You may have to request editor privileges to the administrator(s) of this Wiki. "},"CANTMANAGEMEMBERS":{"ACT":"Back to Wiki","TITLE":"You can't manage members","MESSAGES":"You have insufficient privileges to manage members in this Wiki.  You may have to request manager privileges to the administrator(s) of this Wiki. "},"LOGIN":{"ACT":"Log in now","TITLE":"You must be logged in","MESSAGES":"Certain portions of Wikis can only be accessed when you are logged in.  You may browse anonymously, but this page will not be visible until you authenticate."},"SERVER_ERROR":"An unexpected error has occurred. Please contact your system administrator."},"WINDOW":{"TITLE":"Wikis","STATUSBAR":"Wikis - Ready"}},"MENUBAR":{"HELP_TITLE":"Help","HELP":"Help"},"INSERT_WIDGET":{"GREEN_STOCK_WIDGET":"Green Stock Widget","NOTASCRIPT":"Entered text doesn't appear to be a script","WIDGET_PROPERTIES_WIDTH":"Width","WIDGET_PROPERTIES_INVALID_WIDTH":"Please enter a numeric width","BLUE_STOCK_WIDGET":"Blue Stock Widget","WIDGET_PROPERTIES_DIALOG_TITLE":"iWidget Properties","WIDGET_PROPERTIES_RT_CLK_MENU":"iWidget Properties","WIDGET_TOOLBAR_BUTTON_TITLE":"Insert iWidget","BUSY":"Adding...","WIDGET_PROPERTIES_HEIGHT":"Height","TITLE":"Insert iWidget or IFrame","CAPTION":"Please provide copy your script tag into the text field below.","WIDGET_PROPERTIES_INVALID_HEIGHT":"Please enter a numeric height"},"WINDOWTITLE":{"FINDPEOPLE":"Find People","MYWIKIS":"My Wikis - Wikis","WIKI_ACCESS":"Wiki Access ","WIKIPAGE":"${0} - ${1}","MYPAGES":"Pages Edited by ${0} in ${1}","FILEERROR":"Error - Wiki for ${0}","ABOUT":"About Wikis","WIKIPAGEERROR":"Error - Cannot display page","PAGESHOME":"${0} - Wiki for ${1}","DOCUMENTHOME":"${0} - Wiki for ${1}","WELCOME":"Welcome - Wikis","MEMBERS":"Members of ${0} - Wikis ","PAGEERROR":"Error - Wiki for ${0}","TOOLS":"Tools","STATISTICS":"Statistics","OFFLINE":"Offline","USERHOMEERROR":"Error - Wiki","USERCHANNEL":"${0} - Wiki for ${1}","OFFLINEERROR":"Error - Offline","WIKI_CREATE":"Create a New Wiki","FAQ":"Frequently Asked Questions (FAQ)","LOGIN":"Log in","USERSHARES":"My Shares","PUBLICWIKIS":"Public Wikis - Wikis","PAGEINDEX":"Page Index of ${0} ","WHATSNEW":"Wikis"},"SIDEBAR":{"HIDE":"Hide Sidebar »","ALERT":"The sidebar will now be collapsed by default when you use Wikis.\n\nTo see the sidebar again, move your mouse to the far right edge of the page.  You will see a gray bar appear with an arrow.  Clicking on this bar will restore the sidebar.","HIDE_TOOLTIP":"Click to hide the sidebar","SHOW_TOOLTIP":"Resize the sidebar"},"TIPS":{"P2":"Check back frequently - new help and new features are constantly being added.","OLDER":"Older","HIDE_TIPS":"Hide Tips","H":"Welcome to Wikis","ERROR":"Unable to load help","NEWER":"Newer","P1":"Wikis make it easy to keep all your important files online."},"LOGINHELP":{"P2":"Here's what you can do while logged in:","NOW":"Log in now!","TITLE":"Log in to Participate!","ACT1":"Upload files and create pages","ACT2":"Share and collaborate on files with your colleagues","ACT3":"Discuss files by leaving comments","ACT4":"Recommend content to others","ACT5":"Follow what your favorite people are doing","P1":"You're currently logged out of Wikis.  You can still view public files and pages, but you won't be able to interact with other people."},"DELETE_WIKI":{"TEXT":"Deleting this wiki will permanently delete all data associated with this wiki. This action cannot be undone, so make sure you want to delete this wiki.","CANCEL":"Cancel","DELETE":"Delete Wiki","SAVE":"Delete this wiki ","BUSY":"Loading...","TITLE":"Are you sure you want to delete this wiki?","ACTION_TOOLTIP":"Delete this wiki.","OK":"Delete this wiki","ERROR_DELETE":"Couldn't delete Wiki.","ACTION":"Delete wiki"},"WIKI_ACCESS":{"TITLE":"Manage Access","EDITORS_SETTINGS":{"EDITORS_AND_OWNERS":"Wiki editors and managers only","TITLE":"Who can edit this wiki?","ALL_LOGGED_IN":"All logged in users"},"READERS_SETTINGS":{"ALL_USERS":"All users","MEMBERS_ONLY":"Wiki members only","TITLE":"Who can read this wiki?"},"VISIBILITY_SETTINGS":{"TITLE":"Who can find this wiki?","EVERYONE_PUBLIC":"Everyone (public)","MEMBERS_AND_OWNERS":"Only Wiki Members and Owners (restricted)"},"ERROR":"The settings could not be changed.  Please try again later.","SAVE":"Save"},"REMOVE_MEMBER":{"NOSUCHMEMBER":"The member you are trying to remove does not exist. ","UNAUTHORIZED":"You don't have enough privileges to remove this member.","CONFIRM":"Are you sure you want to remove member ${0}?","TITLE":"Remove Member","ACTION_TOOLTIP":"Remove this member from the Wiki","ACTION":"Remove"},"WIKI_HOME":{"HAS_CREATED":"${0} created ${1} ${time}","CREATED":"Created ${time}","NODESCRIPTION":"No description","SIDEBAR":{"RECOMMENDED":"recommended","MOSTRECOMMENDED":"Most Recommended","CLICKTOCOLLAPSESECTION":"click to collapse section","NO_ITEMS":"No items found","POPULARTAGS":"Popular Tags","MOSTCOMMENTED":"Most Comments","MOSTVISITS":"Most Visits","SEARCHBOX":"Find tags"},"HAS_UPDATED":"${0} updated ${1} ${time}"},"NOTIFY_COMMENT":{"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","NOTIFY":"Comments","NOTIFY_TOOLTIP":"Send me e-mails when people comment on this page","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."}},"NOTIFY_CONTENT":{"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","NOTIFY":"Page changes","NOTIFY_TOOLTIP":"Send me e-mails when the contents of this page change","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."}},"WIKI":{"REFERENCE":{"HORIZONTAL":"---- horizontal line","BOLD":"**bold**","TABLES":"Tables:","CENTERED_PARAGRAPH":"%%(text-align: center)centered paragraph%%","FULL_GUIDE":"Full guide","HEADINGS":"Headings:","LINK":{"CURRENT_PLACE_FILE":"[[/file/same_place_file_link]]","IMAGE":"{{imageURL|alt_text}}","ANOTHER_PLACE_PAGE":"[[/personalplace/userid/page_link]]","ANOTHER_PLACE_FILE":"[[/personalplace/userid/file/file_link]]","CURRENT_PLACE_PAGE":"[[/same_place_page_link]]","ATTACHMENT":"[[^attachment_link]]","PAGE":"[[wiki_page_link]]","URL":"[[URL|link_text]]"},"TEXTFORMATTING":"Text formatting:","STRIKE":"--strikethrough--","LISTS":"Lists:","INDENT_ONCE":"> indent once","H1":"= Head 1 =","H2":"== Head 2 ==","H3":"=== Head 3 ===","TABLE":{"HEADER":"|=table head|=head 2|","CELL":"|table cell|cell 2|"},"MARKUP_REFERENCE":"Wiki markup guide","BULLETED":{"FIRST":"* bulleted item","SUB":"** indented bulleted item"},"ITALICS":"//italics//","NUMBERED":{"FIRST":"# numbered item","SUB":"## indented numbered item"},"UNDERLINE":"__underline__","LINKING":"Linking:","INDENT_TWICE":">> indent twice"}},"WELCOMECONTENT":{"CLOSE":"Close the \"Welcome to Wikis\" section","ICON_ALT":"Wikis logo","LEARN_MORE":"Learn More","TITLE":"Welcome to Wikis","WATCH_DEMO":"Watch Demo","BLURB":"Use Wikis to create a central, collaborative place to manage knowledge and content with your team."},"MOVEPAGE":{"REORDER_TAB":"Reorder Peer Pages","SUBMIT_BUTTON_LABEL":"Move","CANNOTCHOOSEASCHILD":"You cannot choose a descendant of the current page as a parent","DOWN":"Move Down ","CANNOTCHOOSEASPARENT":"You cannot choose the current page as a parent","MAKETOPLEVEL":"Make this a top level page","CURRENTPAGELABEL":"${0} (current page)","LIST_TEXT1":"Choose a parent page from the list of pages in this wiki or ","LIST_TEXT2":"choose a parent page from the list of pages in this wiki","TITLE":"Move This Page","MANUAL_TEXT1":"enter the page name manually","MANUAL_TEXT2":"Enter a parent page name manually or ","NONEXISTING_PARENT":"The page you typed does not exist. Type an existing page, or click \"Browse...\" to select an existing page.","REORDER_LABEL":"Reorder children of ${0}:","CHOOSE_BUTTON":"Browse...","INPUT_LABEL":"Type or browse for a parent page: ","UP":"Move Up","CANCEL_BUTTON_LABEL":"Cancel","TOPLEVEL":"top level","PARENT_TAB":"Find Parent Page","CHOOSE_BUTTON_TOOLTIP":"Browse pages","REORDER_LABEL2":"Reorder top level"},"PIVOTS":{"MEDIA_DESC":"All files from ${userName} visible to you.  ","ACTIVITY_DESC":"Changes made by ${userName}","WHATS_NEW_GLOBAL_DESC":"New events from everyone","PROFILE_TOOLTIP":"View this person's profile","MEDIA_LONG":"${0}'s Place ","ACTIVITY_LONG":"${0}'s Changes ","MEDIA":"Files","MY_WATCHLIST_TOOLTIP":"View people on your watchlist","MY_MEDIA_DESC":"All of your files.","SHARED_WITH_ME_DESC":"All of the shares that other people have created for you.  To see information about each file, click 'more'.","WHATS_NEW_GLOBAL_LONG":"What's new for everyone ","ACTIVITY_TOOLTIP":"See what this person has done or what has changed in this wiki","MY_MEDIA_LONG":"${0}'s Place ","SHARED_WITH_ME_LONG":"Shared With Me ","ACTIVITY":"History","MY_MEDIA_TOOLTIP":"View files and pages in your wiki","SHARED_WITH_ME":"Shared With Me","WHATS_NEW_GLOBAL":"What's new for everyone","SHARED_BY_ME_DESC":"All of the shares that you have created for other people.  To see information about each file, click 'more'.","WATCHLIST_DESC":"Displaying the ${userName}'s watchlist.","MEDIA_TOOLTIP":"View this person's wiki","SHARED_BY_ME_LONG":"Shared By Me ","WATCHLIST":"Watchlist","SHARED_BY_ME":"Shared By Me","WATCHLIST_LONG":"${0}'s Watchlist ","MY_WATCHLIST_DESC":"Displaying your watchlist.","SHARED_WITH_ME_TOOLTIP":"View shares that other people have created for you","WHATS_NEW_PERSONAL_DESC":"New events in your watchlist","PROFILE":"Profile","WHATS_NEW_PERSONAL_LONG":"What's new for me ","MY_MEDIA":"My Files","SHARED_BY_ME_TOOLTIP":"View shares that you have created for other people ","WHATS_NEW_PERSONAL":"What's new for me","WATCHLIST_TOOLTIP":"See who this person is watching"},"MM_TAG":{"TYPE":"Type a tag","ADD":"Add another tag","FIND":"Find a tag","SELECTED":"Selected Tags","WARNING":"More than 3 tag filters can not be applied. Remove at least one filter before filtering by another tag. "},"SHARE_PAGE":{"COUNT_OTHERS_PUBLIC_1":"${0} people","SEARCH_TOOLTIP":"Search the directory","SHARE_PERMISSION":"Make these people contributors to this page","COUNT_OTHERS_SINGLE_PUBLIC":"This page is public and is shared with ${0}.","SHARE_WITH":"Share with:","COUNT_NONE_PUBLIC":"This page is public and is not shared with anyone.","SELECT_USER":"Share With:","COUNT_OTHERS_PUBLIC":"This page is public and is shared with ${0}.","PROPAGATE_SHARED":"All readers can share this page","WARN_LONG_MESSAGE":"The message is too long.","COUNT_OTHERS_SINGLE_1":"1 person","CANCEL":"Cancel","PROPAGATE":"Allow this page to be shared by other people","ERROR":"The page could not be shared.  Please try again later.","REMOVE_USER_TOOLTIP":"Remove user","NOT_LOGGED_IN_ERROR":"You must be logged in to share this page.  Click 'OK' to be prompted to log in.","SELECT_USER_ERROR":"Please select a person to share with.","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you and cannot be shared.","PROPAGATE_OWNER":"Only you can share this page","SELF_REFERENCE_ERROR":"You cannot share this page with yourself.","DIALOG_TITLE":"Share a Page","TRIM_LONG_MESSAGE":"Shorten message?","PROPAGATE_PUBLIC":"Everyone can share this page","CANCEL_ERROR":"The page was not shared because the request was cancelled.  Click 'OK' to try again.","COUNT_NONE":"This page is not shared with anyone.","TRIM_LONG_DESCRIPTION_MESSAGE":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","OK":"OK","MAX_SHARES_ERROR":"The maximum number of shares has been exceeded.","SHARE_TOOLTIP":"Allow others to read or contribute to this page","TIMEOUT_ERROR":"The page was not shared because the server could not be contacted.  Click 'OK' to try again.","ADD_FROM_FAVORITES":"Share with a person from your favorite wikis","WARN_LONG_DESCRIPTION":"The description is too long.","BUSY":"Sharing...","COUNT_OTHERS_1":"${0} people","ACCESS_DENIED_ERROR":"You no longer have permission to share this page.","OWNER_REFERENCE_ERROR":"You cannot share with the owner of the page.","COUNT_OTHERS_SINGLE":"This page is shared with ${0}.","TRIM_LONG_DESCRIPTION":"Shorten description?","COUNT_OTHERS_SINGLE_PUBLIC_1":"1 person","EXPAND_SECTION":"Share with specific people...","COUNT_OTHERS":"This page is shared with ${0}.","MESSAGE_LABEL":"Message:"},"RECOMMEND":{"ONE_HAS_RECOMMENDED":"${0} has recommended this file.","RECOMMEND":"Recommend this file.","UNRECOMMEND":"Remove your recommendation.","LOADING":"Loading...","ONE":"1 person","FIRST_TO_RECOMMEND":"Be the first to recommend this file.","RECOMMEND_COUNT_MANY":"${0} recommendations","ERROR_TIMEOUT":"Your recommendation could not be saved because the server could not be contacted.  Click the button to try again.","PAGE":{"ONE_HAS_RECOMMENDED":"${0} has recommended this page.","RECOMMEND":"Recommend this page.","UNRECOMMEND":"Remove your recommendation.","LOADING":"Loading...","ONE":"1 person","FIRST_TO_RECOMMEND":"Be the first to recommend this page.","ERROR_TIMEOUT":"Your recommendation could not be saved because the server could not be contacted.  Click the button to try again.","ERROR_CANCEL":"Your recommendation could not be saved because the request was cancelled.  Click the button to try again.","NOT_RECOMMENDED":"This page has not been recommended.","YOU_AND_X_HAVE_RECOMMENDED":"${0}, including you, have recommended this page.","UNRECOMMEND_TOOLTIP":"Remove your recommendation from this page\t","RECOMMEND_TOOLTIP":"Recommend this page to your colleagues","X_HAVE_RECOMMENDED":"${0} have recommended this page.","OK":"OK","FIRST_TO_RECOMMEND_TOOLTIP":"Recommend this page to your colleagues","CANCEL":"Cancel","ACCESS_DENIED":"Your recommendation could not be saved because the page has been deleted or is no longer visible.","NOT_FOUND":"Your recommendation could not be saved because the page has been deleted or is no longer visible.","ERROR_RETRIEVE":"Unable to retrieve recommendations at this time.","ERROR_SAVE":"Your recommendation could not be saved.  Please try again later.","YOU_HAVE_RECOMMENDED":"You have recommended this page.","MANY":"${0} people"},"ERROR_CANCEL":"Your recommendation could not be saved because the request was cancelled.  Click the button to try again.","NOT_RECOMMENDED":"This file has not been recommended.","YOU_AND_X_HAVE_RECOMMENDED":"${0}, including you, have recommended this file.","NOT_RECOMMENDED_ICON":"Not recommended icon","UNRECOMMEND_TOOLTIP":"Remove your recommendation from this file","RECOMMEND_TOOLTIP":"Recommend this file to your colleagues","X_HAVE_RECOMMENDED":"${0} have recommended this file.","OK":"OK","FIRST_TO_RECOMMEND_TOOLTIP":"Recommend this file to your colleagues","RECOMMENDED_ICON":"Recommended icon","CANCEL":"Cancel","ACCESS_DENIED":"Your recommendation could not be saved because the file has been deleted or is no longer visible.","NOT_FOUND":"Your recommendation could not be saved because the file has been deleted or is no longer visible.","ERROR_RETRIEVE":"Unable to retrieve recommendations at this time.","ERROR_SAVE":"Your recommendation could not be saved.  Please try again later.","ADD_REMOVE":"Add or remove your recommendation","YOU_HAVE_RECOMMENDED":"You have recommended this file.","MANY":"${0} people","RECOMMEND_COUNT_ONE":"1 recommendation"},"ADD_FAVORITE":{"ACTION":"Add To Favorites"},"WIKI_DETAILS":{"ATTACHMENTS":"Attachments","ABOUT":"About","PAGEINFO":"Page Info","HISTORY":"History of Changes"},"HTML":{"REFERENCE":{"MARKUP_REFERENCE":"HTML guide","ITALICS":"<em>italics</em>","H1":"<h1>Large heading</h1>","H2":"<h2>Medium heading</h2>","H3":"<h3>Small heading</h3>","INDENT_ONCE":"<div style=\"margin-left: 40px\">indent once</div> ","LINK":{"URL":"<a href=\"http://www.example.com\">Example link</a>"},"TABLE":{"CLOSE":"</table>","OPEN":"<table>","TR":{"OPEN":"<tr>","CLOSE":"</tr>"},"HEADER1":"<th>header 1</th>","CELL1":"<td>cell 1</td>","HEADER2":"<th>header 2</th>","CELL2":"<td>cell 2</td>","TBODY":{"OPEN":"<tbody>","CLOSE":"</tbody>"}},"STRIKE":"<strike>strikethrough</strike>","BOLD":"<strong>bold</strong>","LIST":{"CLOSE":"</li>","ALPHA":{"SUB1":"<li>b.a</li>","FIRST":"<li>a</li>","SUB2":"<li>b.b</li>","THIRD":"<li>c</li>","SECOND":"<li>b"},"UNORDERED":{"OPEN":"<ul>","TITLE":"Unordered list:","CLOSE":"</ul>"},"ORDERED":{"OPEN":"<ol>","TITLE":"Ordered list:","CLOSE":"</ol>"},"NUMBER":{"SUB1":"<li>2.1</li>","FIRST":"<li>1</li>","SUB2":"<li>2.2</li>","THIRD":"<li>3</li>","SECOND":"<li>2"}},"UNDERLINE":"<u>underline</u>","INDENT_TWICE":"<div style=\"margin-left: 80px\">indent twice</div>","CENTERED_PARAGRAPH":"<div style=\"text-align: center\">centered paragraph</div>"}},"CREATE_SIBLING_PAGE":{"ACTION":"Create Peer","ACTION_TOOLTIP":"Create a new peer page."},"APP_NAME_TITLE_BAR":"Wikis","PAGECREATE":{"ERROR_CANCEL":"The page was not created because the request was cancelled.  Click 'Create' to retry your request.","BREADCRUMBS":{"LAST":"New Page"},"WILLBECHILDOF":"This page will be created as a child of: $(0} ","ERROR_NOT_LOGGED_IN":"You must be logged in to create this page.  Click 'Create' to be prompted to log in.","ERROR_ACCESS_DENIED":"The page could not be created because you are not a contributor.","ERROR_TIMEOUT":"The page was not created because the server could not be contacted.  Click 'Create' to retry your request.","ERROR_QUOTA_VIOLATION":"The page could not be created because the wiki is almost full.  To create this page, ${0} of files, attachments, or versions would have to be removed. ","ERROR_MAX_CONTENT_SIZE":"The page could not be created because it is larger than the maximum allowed page size of ${0}"},"NOTIFY":{"FILE":{"NOTIFY":"Notify me when this file is modified.","UNSUBSCRIBE":"You will no longer receive notifications about this file.","SUBSCRIBE":"You will now receive notifications about modifications and comments on this file."},"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"ENABLE_SUCCESS":"E-mail notification enabled.","SUCCESS_IMG":"Success","NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","DISABLE_SUCCESS":"E-mail notification disabled.","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."},"PAGE":{"NOTIFY":"Notify me when this page is modified.","UNSUBSCRIBE":"You will no longer receive notifications about this page.","SUBSCRIBE":"You will now receive notifications about modifications and comments on this page."}},"UPLOAD_FILE":{"WARN_LONG_FILENAME":"The file name is too long. ","TAGS_LABEL":"Tags:","SELECT_USER":"Please select one or more people to share with","WARN_LONG_MESSAGE":"The message is too long.","WARN_LONG_TAG":"The tag '${0}' is too long.","ACTION_TOOLTIP":"","CANCEL":"Cancel","TRIM_LONG_FILENAME":"Shorten file name?","TRIM_TAG":"Shorten tag?","SELECT_FILE":"Please select a file to upload","ERROR":"The file could not be uploaded.  Please try again later","TRIM_LONG_MESSAGE_CONFIRM":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","ERROR_ACCESS_DENIED":"The file could not be replaced because you are not a contributor to this wiki.","ACTION":"Upload a File","WARN_NO_FILENAME":"File name is a required field.","NOTE_LABEL":"Note: ","TRANSFER":"Uploading ${0} @ ${1}/s ","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","ERROR_TIMEOUT":"The file could not be uploaded because the server could not be contacted.  Click 'OK' to try again.","DIALOG_TITLE":"Upload File","TRIM_LONG_MESSAGE":"Shorten message?","ERROR_MAX_CONTENT_SIZE":"The file could not be uploaded because it is larger than the maximum allowed file size of ${0}","OK":"OK","ERROR_QUOTA_VIOLATION":"The file could not be uploaded because the wiki is almost full.  To upload this file, ${0} of files, attachments, or versions would have to be removed.","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","WARN_LONG_TAGS":"The specified tags are too long.","WARN_INVALID_CHARS_IN_NAME":"File names may not contain the following characters: \\ / : * ? \" < > | [ ]","WARN_LONG_DESCRIPTION":"The description is too long. ","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","CONTENTS_LABEL":"File: ","BUSY":"Uploading...","DESCRIPTION_LABEL":"Description: ","ERROR_NOT_LOGGED_IN":"You must be logged in to upload this file.  Click 'OK' to be prompted to log in.","CONFIRM_REPLACE":"Another file with the same name already exists in this file stream.  Do you wish to replace the contents of the existing file?\nNote: Only the contents of the file will be changed, all other information will remain the same.","PUBLIC_LABEL":"Make this file public (visible to everyone)","TRIM_LONG_DESCRIPTION":"Shorten description?","VISIBILITY_LABEL":"Visibility: ","ERROR_CANCEL":"The file could not be uploaded because the request was cancelled.  Click 'OK' to try again.","TRIM_TAGS":"Shorten tags?","NAME_LABEL":"File name: "},"NOTIFY_FILE":{"SUBSCRIBE":{"CONTENT":"You will now recieve notifications when this file is changed.","ALL":"You will now recieve notifications when this file is changed or commented on.","COMMENT":"You will now recieve notifications when this file is commented on."},"ERROR":"Your notification settings were not changed due to an error.  Please try again.","LABEL":"Notify me of: ","UNSUBSCRIBE":{"CONTENT":"You will no longer recieve notifications when this file is changed.","ALL":"You will no longer recieve notifications when this file is changed or commented on.","COMMENT":"You will no longer recieve notifications when this file is commented on."}},"ERROR":{"GENERAL":"An error occured retrieving the information.","NOURL":"No URL specified"},"UNSAVED_CHANGES":{"ALERT":"You have unsaved changes to the following pages:","EXPIRES":{"DAY":"Will be deleted ${EEee} at ${time}","YEAR":"Will be deleted ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Will be deleted ${MMM} ${dd}","TODAY":"Will be deleted today at ${time}","YESTERDAY":"Scheduled for deletion"},"AUTOSAVED":{"DAY":"${name} page in the ${wikiname} wiki autosaved ${EEee} at ${time}","YEAR":"${name} page in the ${wikiname} wiki autosaved ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${name} page in the ${wikiname} wiki autosaved ${MMM} ${dd}","TODAY":"${name} page in the ${wikiname} wiki autosaved today at ${time}","YESTERDAY":"${name} page in the ${wikiname} wiki autosaved yesterday at ${time}"},"AUTOSAVED_EXPIRES":{"DAY":"${name} page in the ${wikiname} wiki autosaved ${EEee} at ${time}. ${expires}","YEAR":"${name} page in the ${wikiname} wiki autosaved ${date_long}. ${expires}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${name} page in the ${wikiname} wiki autosaved ${MMM} ${dd}. ${expires}","TODAY":"${name} page in the ${wikiname} wiki autosaved today at ${time}. ${expires}","YESTERDAY":"${name} page in the ${wikiname} wiki autosaved yesterday at ${time}. ${expires}"},"PAGE_AUTOSAVED":{"DAY":"This page has unsaved changes that were autosaved ${EEee} at ${time}","YEAR":"This page has unsaved changes that were autosaved ${date_long}","FULL":"This page has unsaved changes that were autosaved ${EEEE}, ${date_long} ${time_long}","MONTH":"This page has unsaved changes that were autosaved ${MMM} ${dd}","TODAY":"This page has unsaved changes that were autosaved today at ${time}","YESTERDAY":"This page has unsaved changes that were autosaved yesterday at ${time} "}},"VERSIONS":{"ERROR_REQUEST_UNKNOWN":"An unknown error has occurred.","NEXT":"Next","VIEW_MOST_RECENT":"View most recent","COMPARE_RECENT":"Compare to most recent","TO":"to:","COUNT":"${0}-${1} of ${2}","DELETE":"Delete","DELETEERROR":"The version was not deleted due to an error.","LOADING":"Loading versions...","PREVIOUS":"Previous","DELETE_ALL_CONFIRM":"Are you sure you want to delete all versions prior to ${0}?","REVERT_CONFIRM":"You are about to replace the current version of this page with version ${0}, which was created ${1} by ${2}. Do you want to proceed?","NEW_CHANGED":"New/Changed","COMPARING":"Comparing wiki text of:","REVERT":{"ERROR_CANCEL":"The version was not restored because the request was cancelled.  Click 'Restore' again to retry your request.","ERROR_NAME_EXISTS":"The version could not be restored because another page or file has the same name.","ERROR_NOT_FOUND":"The version could not be restored because it has been deleted or is no longer visible to you.","ERROR_ACCESS_DENIED":"The version could not be restored because you are not a contributor.   ","ERROR_TIMEOUT":"The version was not restored because the server could not be contacted.  Click 'Restore' again to retry your request.","GENERIC_ERROR":"The version could not be restored because of an unknown error.  Click 'Restore' again to retry your request.","ERROR_QUOTA_VIOLATION":"The version could not be restored because it would cause the wiki to exceed its size quota.","ERROR_MAX_CONTENT_SIZE":"The version could not be restored because it is larger than the maximum allowed page size of ${0}"},"BY":"by ","PAGE":"Page","DELETED":"Deleted","REVERT_VERSION":"Restore version ${0}","MOST_RECENT":"(most recent)","SHOW_COMPARISON":"Show comparison","COMPARE_VERSION":"Compare version","ERROR_REQUEST_TIMEOUT":"The server could not be contacted.","CONTENT":{"DOWNLOAD":"Download (${0})","VIEW":"View","REVERT":"Restore"},"REVERT_DESCRIPTION":"Restored from version ${0}","ERROR":"Unable to load version information.","NO_VERSIONS":"No versions","SHOW":"Show","DATE":{"RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${MMM} ${dd},${YYYY}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"INFO":"Version ${0} created ${1} by","DELETE_ALL":"Delete all versions prior to version","ERROR_REQUEST_CANCELLED":"The request was cancelled.","KEY":"Key:","VERSION_NUMBER":"Version ${0} "},"APP_LOAD":"Welcome to Wikis","LOGIN":{"PASSWORD_LABEL":"Password:","LEGAL":"Licensed Materials - Property of IBM Corp. © IBM Corporation 2007, 2009. IBM, the IBM logo, ibm.com and Lotus are trademarks of IBM Corporation in the United States, other countries, or both. U.S. Government Users Restricted Rights: Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp. Please see the About page for further information.","ICON_TITLE":"Wikis icon","DESCRIPTION_TITLE":"What can you do with Wikis?","PRODUCT":"Wikis","USER_LABEL":"User name:","DESCRIPTION":"Create a central, collaborative place to manage knowledge and content with your team. With Wikis, everyone on your team can quickly contribute and share information.","TITLE":"Log in to Wikis","ERROR":"Your user name and/or password does not match any existing accounts.  Please check and try again.","PRODUCT_BLURB":"The easy way to create content together.","BUTTON":"Log In"},"WIKI_EDITOR":{"STYLE":{"LTR_LANG":"LTR Language","RTL_LANG":"RTL Language"}},"PRINT_PAGE":{"ACTION":"Print Page","ACTION_TOOLTIP":"Print this page"},"HEADER":{"UPDATES_TITLE":"Click to view the list of updated Wikis","LOGOUT":"Log out","LOGOUT_TITLE":"Click to log out of Wikis","MYWIKIS":"My Wikis","MEMBERS":"Members of ${0}","PAGEINDEX":"Pages Index","TAGGEDWIKIS":"Search Results","WIKICREATE":"Start a Wiki","WIKICREATE_TITLE":"Click to start a Wiki","PUBLICWIKIS":"Public Wikis","PUBLICWIKIS_TITLE":"Click to view the list of public Wikis","UPDATES":"Latest Updates","LOGIN":"Log in","LOGO":"Lotus Connections","LOGIN_TITLE":"Click to log in to Wikis","MYWIKIS_TITLE":"Click to view the list of Wikis you are a member of","MYPAGES":"Pages Edited by ${0}"},"PAGEEDIT":{"CREATE_PAGE":"Create a Page","CONVERT_TO_WIKIMARKUP_ERROR":"Error converting to wiki text","EDIT_TITLE":"Click to edit title","TAGS":"Tags:","HTML_SOURCE":"HTML Source","RICH_TEXT":"Rich Text","ERROR_CONCURRENT_MODIFICATION":"This page was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Saving the page will overwrite those edits.   ","DRAFT":"Draft","SAVE_LABEL":"Save","CANCEL_LABEL":"Cancel","WARN_LONG_TAG":"The tag '${0}' is too long.","PROPAGATE_LABEL":"Allow this page to be shared by other people?","ACTION_TOOLTIP":"Click to edit this page","TRIM_TAG":"Shorten tag?","MINOR_CHANGE_TITLE":"Notification:","CREATE_LABEL":"Create","ERROR_ACCESS_DENIED":"The page could not be edited because you are not a contributor.","ACTION":"Edit","NOTE_LABEL":"Note: ","SHARE_PROPAGATE":"Sharing:","ERROR_NOT_FOUND":"The page could not be edited because it has been deleted or is no longer visible to you.","MINOR_CHANGE":"Minor change (no notifications will be sent)?","ERROR_EMPTY_NAME":"Please enter a name.","MAKE_PUBLIC":"Make this page public (visible to everyone)?","ERROR_TIMEOUT":"The page was not edited because the server could not be contacted.  Click 'Save' to retry your request.","NAVIGATE_AWAY_CHOICE":"Are you sure you want to abandon your changes?  Press OK to continue or cancel to return to editing.","ERROR_MAX_CONTENT_SIZE":"The page could not be edited because it is larger than the maximum allowed page size of ${0}","SAVE_AND_CLOSE_LABEL":"Save and Close","QUICKLINK_TOO_LONG":"The selected link name is too long and needs to be shortened.","CHANGE_SUMMARY":"Summary of changes:","ERROR_QUOTA_VIOLATION":"The page could not be edited because it would cause the wiki to exceed its size quota.","WIKI_MARKUP":"Wiki Text","INVALID_XHTML":"Please ensure the page source is valid XHTML.  Switching to rich text mode from source mode will convert HTML to XHTML.","ERROR_SHORTEN_PAGE_DESCRIPTION":"Shorten page description?","CONVERT_TO_RICHTEXT_ERROR":"Error converting wiki text to rich text","ERROR_DESCRIPTION_TOO_LONG":"The page description is too long. ","ERROR_SHORTEN_PAGE_NAME":"Shorten page name?","WARN_LONG_TAGS":"The specified tags are too long.","WARN_INVALID_CHARS_IN_NAME":"Page name may not contain the following characters: \\ / : * ? \" < > | [ ]","ERROR_NAME_TOO_LONG":"The page name is too long. ","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","SUBMIT_LABEL":"Save","ERROR_NAME_EXISTS":"The page cannot be renamed because another page or file has the same name.","SAVE_AND_CLOSE":"Save and Close","BREADCRUMBS":{"LAST":"Editing"},"ERROR_NOT_LOGGED_IN":"You must be logged in to edit this page.  Click 'Save' to be prompted to log in.","VISIBILITY_LABEL":"Visibility:","ERROR_CANCEL":"The page was not edited because the request was cancelled.  Click 'Save' to retry your request.","PREVIEW":"Preview","TRIM_TAGS":"Shorten tags?"},"USERSEARCH":{"SEARCH_USERS_BUTTON":"Search","TITLE_BLURB":"Need to find someone's Wiki?  Enter the person's name or e-mail address in the search field, below.  As you type, we'll show you a list of possible matches. If you can't find the person you are searching for in the list, just click the Search button to see a list of all the possible matches in the directory.","LOADING":"Loading...","ERROR_LINK":"Search for People","TITLE":"Search for People","USER_EMAIL":"E-mail","NO_MATCHES":"No matches","USER_NAME":"Name","NO_RESULTS":"No results for '${0}'","SEARCH_DIRECTORY":"Search the directory..."},"INSERTLINK":{"VALIDATE_ATTACHMENT_MISSING":"Please select an attachment","CURRENT_SELECTION":"Current Selection: ","SUBMIT_BUTTON_LABEL":"OK","NO_ITEMS":"There are no items in this wiki","OPTION_ATTACHMENT":"Attachment","PAGE_NAME_LABEL":"Page name: ","IMAGE_TOOLTIP":"Insert or edit an image","IMAGE_FILE_LABEL":"Image file:","CHOOSE_PAGE_LABEL":"Choose a page:","URL_LABEL":"URL:","EDIT_LINK":"Edit Link","TYPE_LABEL":"Type:","TITLE":"Insert/Edit Link","FILE_LABEL":"File:","TITLE_LABEL":"Link display text:","FROM_LIST_LABEL":"Select from the page list","LINK_TO_UPLOAD_IMAGE":"Upload a new image attachment and link to it","ANOTHER_PERSONS_PLACE":"Another person's wiki","CANCEL_BUTTON_LABEL":"Cancel","VALIDATE_UPLOAD_IMAGE_TYPE":"Please select an image file","EDIT_IMAGE":"Edit Image","TYPE_FILES":"Files","PLACE_WHERE_IMAGE":"Place where the image file is located:","REMOVE_LINK":"Remove Link","SEARCH_FOR_USER":"Search for a person:","NO_ATTACHMENTS":"This page has no existing attachments","LINK_TO_UPLOAD":"Upload a new attachment and link to it","NO_IMAGE_FILES":"There are no image files in this wiki","QUICK_LINK_ALTERNATIVE_MESSAGE":"The selection contains some invalid characters. Please provide an alternative link name.","SAME_AS_PAGE":"Same place as this page","VALIDATE_IMAGE_LINK_MISSING":"Please select a file","IMAGE_TITLE_LABEL":"Alternate text:","QUICK_LINK_DIALOG_TITLE":"Wiki Link","LINK_TO_EXISTING":"Link to an existing attachment of this page","ENTER_MANUALLY_LABEL":"Enter the page name manually","VALIDATE_LINK_MISSING":"Please select a page or file","OPTION_IMAGE_FILE":"Image file","CURRENT_LINK_NAME_NOT_VALID":"The new link name is not valid","ATTACHMENT_TYPE":"Attachment type:","INVALID_CHARS_MESSAGE":"Page name contains invalid characters","VALIDATE_URL_MISSING":"Please enter a URL","NEW_LINK_NAME":"New link name: ","LINK_TO_EXISTING_IMAGE":"Link to an existing image attachment of this page","OPTION_EXTERNAL_URL":"External URL","DESCRIPTION_LABEL":"Description:","TOOLTIP":"Insert or edit a link","INVALID_CHARS_MESSAGE_PART1":"Characters not permitted in a link name include:","OPTION_PAGE_OR_FILE":"Page or file","PLACE_WHERE":"Place where the page or file is located:","NO_IMAGE_ATTACHMENTS":"This page has no existing image attachments","INVALID_CHARS_LIST":"\\ / : * ? \" < > | [ ]","TYPE_ALL":"All","WIKI_TAB":"Wiki Page","NAME_LABEL":"File name:","IMAGE_TITLE":"Insert/Edit Image","QUICK_LINK_BUTTON_LABEL":"Quick Link","TYPE_PAGES":"Pages"},"SUBSCRIBE_TO_PAGE":"Subscribe to this page","DELETE_PAGE":{"UNAUTHORIZED":"You don't have enough privileges to delete this page.","CONFIRM":"Are you sure you wish to delete page ${0}?","ACTION_TOOLTIP":"Delete this page from the wiki.","ACTION":"Delete Page","NOSUCHPAGE":"The page you are trying to delete does not exist."},"BACK_TO_WIKI":"< Back to ${0}","OFFLINEHOME":{"NOTAVAILABLE":"Offline mode is not available unless Google Gears is installed and you have granted it access to the current domain.","USERS":"Users you have access to offline:"},"BACK_TO_APP":"Back to Wikis","PAGE":{"EXPAND_ERROR":{"CANCEL":"The details of this page could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this page could not be loaded because the page has been deleted or is no longer visible.","TIMEOUT":"The details of this page could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this page from being displayed.  Please try again later."}},"JAVASCRIPT_DISABLED":["JavaScript has been disabled in your web browser.  Wikis requires JavaScript in order to function.  Once you have turned it on, please refresh the page.","Refresh the page to continue."],"SITEMAP":{"SITEMAP":"Site Map"},"AUTOSAVE":{"FAILED":"Autosave failed"},"ADD_MEMBERS":{"READERS":"Readers:","CONTRIBUTORS":"Contributors:","NO_MEMBERS_ERROR":"Please select one or more people or groups to add.","BUSY":"Adding...","TITLE":"Add Members","ACTION_TOOLTIP":"Add people or groups as members of this Wiki","CAPTION":"Who do you want to add to this wiki?","EDITORS":"Editors:","ACTION":"Add Members","MANAGERS":"Managers:"},"TOGGLE_SECTION_NAMED":"Expand and collapse ${0} section","WIKI_NAV_TOOLS":{"TITLE":"Site Tools","MEMBERS":"Members and Roles","WIKI_ACCESS":"Wiki Access","ORGANIZE_PAGES":"Organize Pages","SETTINGS":"Settings"},"WIKI_BREADCRUMBS":{"CONFIRMNEWPAGE":"Confirm new page","YOUAREHERE":"You are in:"},"WIKI_TAGS":{"NOTAGS":"Not Tagged Yet","PAGES_COUNT_MANY":"${0} pages","PAGES_COUNT_ONE":"1 page","WHATTAGS":"Tagged with:","PAGES_WITH_TAGS":"${0} with tags ${1}","WITHTAGS":"Wikis with tags:","TAGS_ICON":"Tags icon"},"EDIT_FILE":{"ERROR_NAME_EXISTS":"The file cannot be renamed because another file has the same name.","ERROR_MAX_CONTENT_SIZE":"The file could not be replaced because it is larger than the maximum allowed file size of ${0}","EDITERROR":"The file's metadata was not edited due to an error","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Edit File","ERROR_QUOTA_VIOLATION":"The file could not be replaced because the wiki is almost full.  To replace with this file, ${0} of files, attachments, or versions would have to be removed.","VISIBILITY_LABEL":"Visibility: ","DESCRIPTION_LABEL":"Description: ","REPLACE_CONFIRM":"The file you have selected has a different extension than the current file.  Click 'OK' to proceed with changing the file type.  To select a different file, click 'Cancel'","ERROR_TIMEOUT":"The file was not edited because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CONCURRENT_MODIFICATION":"This file was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Clicking 'OK' will overwrite the changes.   ","WARN_SPECIFY_NAME":"File name is a required field.","ERROR_CANCEL":"The file was not edited because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The file could not be edited because you are not a contributor.","SHARE_PROPAGATE":"Sharing:","ERROR_NOT_LOGGED_IN":"You must be logged in to edit this file.  Click 'OK' to be prompted to log in.","PROPAGATE_LABEL":"Allow this file to be shared by other people","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","OK":"OK","REPLACEERROR":"The file's contents were not replaced due to an error.","NAME_LABEL":"Filename: ","BUSY":"Saving...","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","PUBLIC_LABEL":"Make this file public (visible to everyone)","REPLACE_LABEL":"Replace contents: ","ERROR_NOT_FOUND":"The file could not be edited because it has been deleted or is no longer visible to you."},"STOP_SHARING_PAGE":{"CONFIRM":"Are you sure you wish to remove all shares on this page?\n\n${0}","TITLE":"Stop Sharing","TIMEOUT_ERROR":"The page could not be shared because the server could not be contacted.  Click 'Stop Sharing' to try again.","CONFIRM_PUBLIC":"Are you sure you wish to remove all shares on this page?\nNote: Because this page is public, everyone will still be able to see the page.\n\n${0}","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you.","CANCEL_ERROR":"The page could not be shared because the request was cancelled.  Click 'Stop Sharing' to try again.","ERROR":"The shares on this pages could not be removed.  Please try again later.","TOOLTIP":"Remove all shares on this page"},"WIKI_SERVICE_TITLE_BAR":"Wikis","DOCUMENTCONTENT":{"NODESCRIPPAGE":"No description for this page","VERSIONS":"Versions","SHARE_PROPAGATE_OWNER":"Allow other people to share this file?  When checked, everyone who can see the file will be able to share it.","DOWNLOAD_TOOLTIP":"Download ${0} (${1})","SHARE_PROPAGATE_PUBLIC":"Everyone can share this file.","SIZE":"Size: ","ADDED":"Added: ","SHAREDWITH":"Sharing","TAGS":"Tags: ","ABOUTPAGE":"About this page","TIMESTAMP":"${EEEE}, ${date_long} ${time_long} by ${user}","DOWNLOAD_WARN":"!","UPDATED":"Updated: ","ATTACHMENTS":"Attachments","DOWNLOAD_WARN_LONG":"This file may not download properly because it has a long file name.  To ensure a successful download, use your browser's Save As feature.","DOWNLOAD_LABEL":"Download as: ","NODESCRIPFILE":"No description for this file","PAGE":{"TIMES_DOWNLOADED":"Page views: ","DOWNLOADED_BY":"Page viewed by: ","NO_DOWNLOADS":"None","DOWNLOADS":"${0} (${1} anonymously)"},"SHARED":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to you and is shared with ${0}.","ONE":"This file is visible to you and is shared with ${0}."},"WITH":{"MANY_1":"${0} others","ONE_1":"1 person","MANY":"This file is visible to the owner and is shared with ${0}.","ONE":"This file is visible to the owner and is shared with ${0}."},"BASE":"This file is visible to the owner and is shared with you."},"DESCRIPTION":"Description:","ABOUTFILE":"About this file","ERRORS":{"ACCESS_DENIED_ANON":{"TITLE":"This file is not public","MESSAGES":"You do not have permission to view this file.  If this is your file or it has been shared with you, you must log in to Wikis first. "},"ACCESS_DENIED":{"TITLE":"This file is not public or shared with you.","MESSAGES":"You do not have permission to view this file.  The file is not public and is not shared with you."},"NOT_FOUND_ANON":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed.  You may need to log in to view this file or the owner may have deleted it."},"LOGIN":"Log in now","NOT_FOUND":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed.  Check that you have permission to view this file and that the owner has not deleted it."},"AUTH_REQUIRED_ANON":{"TITLE":"Log in to Wikis","MESSAGES":"To change your notification settings on this file you must be logged in to Wikis. "},"DEFAULT":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed - click the back button and try again. If this doesn't work report the problem to the support forum."},"OWNER_NOT_FOUND":{"TITLE":"The file could not be found","MESSAGES":"The file you have requested has been deleted."}},"COMMENTS":"Comments (${0})","PUBLIC":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to everyone and is shared with ${0}.","ONE":"This file is visible to everyone and is shared with ${0}."},"WITH":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to everyone and is shared with ${0}.","ONE":"This file is visible to everyone and is shared with ${0}."},"BASE":"This file is visible to everyone."},"REQUIRED_NAME":"*Name: ","NAME":"Name:","DOWNLOAD":"Download (${0})","SHARE_PROPAGATE_OFF":"Only the owner can share this file.","FILE":{"TIMES_DOWNLOADED":"Downloads: ","DOWNLOADED_BY":"Downloaded by: ","NO_DOWNLOADS":"None","DOWNLOADS":"${0} (${1} anonymously)"},"CREATE_NEW_PAGE":"Create New Page","PRIVATE":"This file is visible only to you.","BROWSE_OTHER":"Browse other files from ${0}","SHARE_PROPAGATE_ON":"All readers can share this file."},"MORE_ACTIONS":{"TEXT":"More Actions","TOOLTIP":"Delete the wiki."},"CLOSE":"Close","WIKI_CREATE":{"ROLE":"Role","ERROR_SHORTEN_DESCRIPTION":"Shorten Wiki description?","ADD_DESCRIPTION_LINK":"Add a description","ADD_DESCRIPTION_TAGS_LINK":"Add a description and tags","TAGS_LABEL":"Tags:","ADD_GROUPS":"Add groups:","MEMBERSHIP":{"PRIVATE_LABEL":"Private","OPEN_DESC":"Public access with Self Join Membership","OPEN_LABEL":"Open","MODERATED_LABEL":"Moderated","MODERATED_DESC":"Public access with Request Membership","PRIVATE_DESC":"Hidden, Invitation only"},"ERROR_TITLE_TOO_LONG":"The Wiki title is too long. ","WARN_LONG_TAG":"The tag '${0}' is too long.","TITLE":"Create a New Wiki","TRIM_TAG":"Shorten tag?","ERROR_PROVIDE_TITLE":"Please provide a title for the Wiki","TITLE_LABEL":"Title:","ADD_TO_LIST":"Add to list","NAME":"Name","ERROR_TITLE_EXISTS":"A Wiki with this title already exists, please choose another","DIALOG_TITLE":"Start a Wiki","MEMBERS_LABEL":"Members:","NAVIGATE_AWAY_CHOICE":"Are you sure you want to discard your input?  Press OK to continue or cancel to return to creating a Wiki.","CREATE_BTN_LABEL":"Create Wiki","ERROR_SHORTEN_TITLE":"Shorten Wiki title?","ERROR_EMPTY_TITLE":"The Wiki title is empty. ","MEMBERSHIP_LABEL":"Membership:","ERROR_DESCRIPTION_TOO_LONG":"The Wiki description is too long. ","WARN_LONG_TAGS":"The specified tags are too long.","NAME_THIS_WIKI":"Name this wiki:","ADD_TAGS":"Add tags:","ADD_DESCRIPTION":"Add a description:","BUSY":"Creating...","FIX_INVALID_CHARS_IN_TITLE":"Replace invalid characters with '_'?","PERMISSIONSETTINGS_BTN_LABEL":"Permission Settings","ERROR_SERVER_ERROR":"An unexpected error has occurred. Please contact your system administrator.","WARN_INVALID_CHARS_IN_TITLE":"Wiki title may not contain the following characters: \\ / : * ? \" < > | [ ] ","DESC_LABEL":"Description:","ADD_MEMBERS":"Add members:","ADD_GROUPS_LINK":"Add groups","TRIM_TAGS":"Shorten tags?","ADD_DESCRIPTION_TAGS_DOITLATER":"${0} (You can do this later)"},"PAGECONTENT":{"SHARE_PROPAGATE_OWNER":"Allow other people to share this page?  When checked, everyone who can see the page will be able to share it.","SHARE_PROPAGATE_PUBLIC":"Everyone can share this page.","DOWNLOAD_WARN":"!","DOWNLOAD_PAGE_AS_PDF_TOOLTIP":"Download ${0} (${1}) as a pdf","DOWNLOAD_WARN_LONG":"This page may not download properly because it has a long name.  To ensure a successful download, use your browser's Save As feature.","NO_CONTENT":"No Content","DOWNLOAD_RTF":"RTF","SHARED":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to you and is shared with ${0}.","ONE":"This page is visible to you and is shared with ${0}."},"WITH":{"MANY_1":"${0} others","ONE_1":"1 person","MANY":"This page is visible to the owner and is shared with ${0}.","ONE":"This page is visible to the owner and is shared with ${0}."},"BASE":"This page is visible to the owner and is shared with you."},"ERRORS":{"ACCESS_DENIED_ANON":{"TITLE":"This page is not public","MESSAGES":"You do not have permission to view this page.  If this is your page or it has been shared with you, you must log in to Wikis first. "},"ACCESS_DENIED":{"TITLE":"This page is not public or shared with you.","MESSAGES":"You do not have permission to view this page.  The page is not public and is not shared with you."},"NOT_FOUND_ANON":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed.  You may need to log in to view this page or the owner may have deleted it."},"LOGIN":"Log in now","NOT_FOUND":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed.  Check that you have permission to view this page, and that the owner has not deleted it."},"AUTH_REQUIRED_ANON":{"TITLE":"Log in to Wikis","MESSAGES":"To change your notification settings on this page you must be logged in to Wikis. "},"DEFAULT":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed - click the back button and try again. If this doesn't work report the problem to the support forum."},"OWNER_NOT_FOUND":{"TITLE":"The page could not be found","MESSAGES":"The page you have requested has been deleted."}},"DOWNLOAD_HTML":"HTML","PUBLIC":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to everyone and is shared with ${0}.","ONE":"This page is visible to everyone and is shared with ${0}."},"WITH":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to everyone and is shared with ${0}.","ONE":"This page is visible to everyone and is shared with ${0}."},"BASE":"This page is visible to everyone."},"SHARE_PROPAGATE_OFF":"Only the owner can share this page.","DOWNLOAD_PAGE_AS_HTML_TOOLTIP":"Download ${0} (${1}) as html","PRIVATE":"This page is visible only to you.","DOWNLOAD_PAGE_AS_RTF_TOOLTIP":"Download ${0} (${1}) as rich text","SHARE_PROPAGATE_ON":"All readers can share this page.","DOWNLOAD_PDF":"PDF","NODESCRIP":"No description for this page"},"VERSIONCOMPARISON":{"ERRORS":{"DEFAULT":{"TITLE":"Unable to show version comparison","MESSAGES":"Version ${0} cannot be used for a comparison because there is a problem converting it to wiki text.  Return to the page and try comparing other versions."},"TWO":{"TITLE":"Unable to show version comparison","MESSAGES":"Versions ${0} and ${1} cannot be used for a comparison because there is a problem converting them to wiki text.  Return to the page and try comparing other versions."}}}};dojo.provide("quickr.share.wiki.nls.wiki");quickr.share.wiki.nls.wiki._built=true;dojo.provide("quickr.share.wiki.nls.wiki.en");quickr.share.wiki.nls.wiki.en={"WIKI_SEARCH":{"SEARCH_USERS_BUTTON":"Search","LOADING":"Loading...","TITLE_BLURB":"Need to find someone's Wiki?  Enter the person's name or e-mail address in the search field, below.  As you type, we'll show you a list of possible matches. If you can't find the person you are searching for in the list, just click the Search button to see a list of all the possible matches in the directory.","ERROR_LINK":"Search for Wikis","LABEL":"Start typing part of the title of a wiki to see suggested matches.","TITLE":"Find a Wiki","PLACEHOLDER":"Type a title","NO_MATCHES":"No matches","NO_RESULTS":"No results for '${0}'"},"WIKI_CONFIRMNEWPAGE":{"HASNOTBEENCREATED":"has not been created yet","FOLLOWEDLINK":"You have followed a link to or entered the address of a page that has not been created yet.","NOTHANKS":"No thanks - take me back","CREATETHISPAGE":"Create This Page"},"CREATE_CHILD_PAGE":{"ACTION":"Create Child","ACTION_TOOLTIP":"Create a new child page."},"CHANGE_PROPAGATE_PAGE":{"ERROR_TIMEOUT":"The file was not updated because the server could not be contacted.  Click the checkbox to try again.","ERROR":"The file was not updated due to an error.","ERROR_CANCEL":"The file was not updated because the request was cancelled.  Click the checkbox to try again."},"SHARING":{"EVT_EDIT_ONE":{"DAY":"${user} added ${list} as a contributor on ${EEEE} at ${time}","YEAR":"${user} added ${list} as a contributor on ${date_long}","MONTH":"${user} added ${list} as a contributor on ${MMM} ${dd}","TODAY":"${user} added ${list} as a contributor today at ${time}","YESTERDAY":"${user} added ${list} as a contributor yesterday at ${time}"},"SHARED_WITH_MANY":{"DAY":"Shared with ${user} and ${count} on ${EEEE} at ${time}","YEAR":"Shared with ${user} and ${count} on ${date_long}","MONTH":"Shared with ${user} and ${count} on ${MMM} ${dd}","TODAY":"Shared with ${user} and ${count} today at ${time}","YESTERDAY":"Shared with ${user} and ${count} yesterday at ${time}"},"EVT_VIEW_MANY":{"DAY":"${user} shared with ${list} on ${EEEE} at ${time}","YEAR":"${user} shared with ${list} on ${date_long}","MONTH":"${user} shared with ${list} on ${MMM} ${dd}","TODAY":"${user} shared with ${list} today at ${time}","YESTERDAY":"${user} shared with ${list} yesterday at ${time}"},"USERS_POPUP_PAGE":{"DEMOTE_ERROR_CANCEL":"The selected person was not made a reader because the request was cancelled.  Please try again.","DEMOTE_ERROR_NOT_FOUND":"The selected person was not made a reader because the page has been deleted or is no longer visible to you.","EMPTY_READERS":"Not shared with anyone as a reader","DEMOTE_ERROR":"An error prevented making the selected person a reader.","ERROR_TIMEOUT":"The server could not be contacted.","DEMOTE":"Make this person a reader","EMPTY_CONTRIBUTORS":"No one else may contribute to this page","ERROR_NOT_FOUND":"This information can not be displayed because the page has been deleted or is no longer visible to you.","ERROR":"The server could not be contacted.","ERROR_ACCESS_DENIED":"This information can not be displayed because the page has been deleted or is no longer visible to you.","CONTRIBUTORS_LABEL":"Contributors: ","EMPTY":"Not shared with anyone","DEMOTE_ERROR_ACCESS_DENIED":"The selected person was not made a reader because the page has been deleted or is no longer visible to you.","ERROR_CANCEL":"The request was cancelled.  Please try again.","READERS_LABEL":"Readers: ","DEMOTE_ERROR_TIMEOUT":"The selected person was not made a reader because the server could not be contacted.  Please try again."},"SHARED_WITH_TWO_1":"one other","EVT_EDIT_MANY":{"DAY":"${user} added ${list} as contributors on ${EEEE} at ${time}","YEAR":"${user} added ${list} as contributors on ${date_long}","MONTH":"${user} added ${list} as contributors on ${MMM} ${dd}","TODAY":"${user} added ${list} as contributors today at ${time}","YESTERDAY":"${user} added ${list} as contributors yesterday at ${time}"},"EXPAND_ERROR":{"CANCEL":"The details of this share could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this share could not be loaded because the document has been deleted or is no longer visible.","TIMEOUT":"The details of this share could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this share from being displayed.  Please try again later."},"SHARED_BY":{"DAY":"Shared by ${user} on ${EEEE} at ${time}","YEAR":"Shared by ${user} on ${date_long}","MONTH":"Shared by ${user} on ${MMM} ${dd}","TODAY":"Shared by ${user} today at ${time}","YESTERDAY":"Shared by ${user} yesterday at ${time}"},"SHARED_WITH_MANY_1":"${0} others","USERS_POPUP_FILE":{"DEMOTE_ERROR_CANCEL":"The selected person was not made a reader because the request was cancelled.  Please try again.","DEMOTE_ERROR_NOT_FOUND":"The selected person was not made a reader because the file has been deleted or is no longer visible to you.","EMPTY_READERS":"Not shared with anyone as a reader","DEMOTE_ERROR":"An error prevented making the selected person a reader.","ERROR_TIMEOUT":"The server could not be contacted.","DEMOTE":"Make this person a reader","EMPTY_CONTRIBUTORS":"No one else may contribute to this file","ERROR_NOT_FOUND":"This information can not be displayed because the file has been deleted or is no longer visible to you.","ERROR":"The server could not be contacted.","ERROR_ACCESS_DENIED":"This information can not be displayed because the file has been deleted or is no longer visible to you.","CONTRIBUTORS_LABEL":"Contributors: ","EMPTY":"Not shared with anyone","DEMOTE_ERROR_ACCESS_DENIED":"The selected person was not made a reader because the file has been deleted or is no longer visible to you.","ERROR_CANCEL":"The request was cancelled.  Please try again.","READERS_LABEL":"Readers: ","DEMOTE_ERROR_TIMEOUT":"The selected person was not made a reader because the server could not be contacted.  Please try again."},"EVT_VIEW_ONE":{"DAY":"${user} shared with ${list} on ${EEEE} at ${time}","YEAR":"${user} shared with ${list} on ${date_long}","MONTH":"${user} shared with ${list} on ${MMM} ${dd}","TODAY":"${user} shared with ${list} today at ${time}","YESTERDAY":"${user} shared with ${list} yesterday at ${time}"},"SHARED_WITH_TWO":{"DAY":"Shared with ${user} and ${count} on ${EEEE} at ${time}","YEAR":"Shared with ${user} and ${count} on ${date_long}","MONTH":"Shared with ${user} and ${count} on ${MMM} ${dd}","TODAY":"Shared with ${user} and ${count} today at ${time}","YESTERDAY":"Shared with ${user} and ${count} yesterday at ${time}"},"SHARED_WITH":{"DAY":"Shared with ${user} on ${EEEE} at ${time}","YEAR":"Shared with ${user} on ${date_long}","MONTH":"Shared with ${user} on ${MMM} ${dd}","TODAY":"Shared with ${user} today at ${time}","YESTERDAY":"Shared with ${user} yesterday at ${time}"}},"VIEWS":{"MEDIA_TOOLTIP":"Each file is shown with a large icon and a pop-up","MEDIA":"Tiles","PAGE_DETAILS_TOOLTIP":"Pages arranged in a table","SUMMARY_TOOLTIP":"A list with info about each file","DETAILS":"Details","MEMBERS_DETAILS_TOOLTIP":"Members arranged in a table","MAP_TOOLTIP":"Files arranged according to their relevance","MAP":"Map","WIKI_DETAILS_TOOLTIP":"Wikis arranged in a table","MEMBERS_SUMMARY_TOOLTIP":"A list with info about each member","PAGE_SUMMARY_TOOLTIP":"A list with info about each page","DETAILS_TOOLTIP":"Files arranged in a table","SUMMARY":"Summary","WIKI_SUMMARY_TOOLTIP":"A list with info about each wiki"},"LOADING":"Loading...","FEEDS":{"IE6SUBSCRIBE":"Warning: This link is meant for feed readers and may display incorrectly in your browser, click OK to continue, Cancel to return to page."},"EDIT_ATTACHMENT":{"ERROR_NAME_EXISTS":"The attachment cannot be renamed because another attachment has the same name.","ERROR_MAX_CONTENT_SIZE":"The attachment could not be replaced because it is larger than the maximum allowed attachment size of ${0}","EDITERROR":"The attachment's metadata was not edited due to an error","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Edit Attachment","ERROR_QUOTA_VIOLATION":"The attachment could not be replaced because the wiki is almost full.  To replace with this file, ${0} of files, attachments, or versions would have to be removed. ","LIMIT_HELP":"You can replace the contents of this attachment by selecting a different file.  You must choose a file that is smaller than ${limit} - attachments above this size are not allowed.","DESCRIPTION_LABEL":"Description: ","REPLACE_CONFIRM":"The attachment you have selected has a different extension than the existing attachment.  Click 'OK' to proceed with changing the file type.  To select a different file, click 'Cancel'","ERROR_TIMEOUT":"The attachment was not edited because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CONCURRENT_MODIFICATION":"This attachment was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Clicking 'OK' will overwrite the changes.   ","WARN_SPECIFY_NAME":"File name is a required field. ","ERROR_CANCEL":"The attachment was not edited because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The attachment could not be edited because you are not a contributor.","ERROR_NOT_LOGGED_IN":"You must be logged in to edit this attachment.  Click 'OK' to be prompted to log in.","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","OK":"OK","REPLACEERROR":"The attachment's contents were not replaced due to an error.","NAME_LABEL":"File name: ","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","WARN_EXTENSION":"The file you are replacing must have the same extension.","REPLACE_LABEL":"Replace contents:"},"MYWIKIS":{"USERS_WIKIS":"${0}'s Wikis","NODESCRIPTION":"No description"},"HELP":"Help","EDIT_MEMBER":{"NOSUCHMEMBER":"The member you are trying to edit does not exist. ","UNAUTHORIZED":"You don't have enough privileges to edit the role for this member.","EDITROLE":"Change the role for user ${0}","TITLE":"Edit Member","ACTION_TOOLTIP":"Change the role for this member of the Wiki","ACTION":"Edit","CANTEDITROLE":"You can't change the role for this member."},"ELLIPSIS":"...","BACK_TO_PAGE":"Back to Page","WARNING":"Warning","COMMENTS":{"TRIM_LONG_COMMENT_CONFIRM":"Shortening will remove the text beyond the comment limit.  Click 'OK' to shorten or 'Cancel' to edit the comment yourself.","COMMENT_DELETED":{"DAY":"Comment deleted by ${user} on ${EEEE} at ${time}","YEAR":"Comment deleted by ${user} on ${date_long}","MONTH":"Comment deleted by ${user} on ${MMM} ${dd}","TODAY":"Comment deleted by ${user} today at ${time}","YESTERDAY":"Comment deleted by ${user} yesterday at ${time}"},"ERROR_EDIT":"Your comment could not be updated.  Please try again later.","COMMENT_CREATED":{"DAY":"${user} commented on ${timestamp}","YEAR":"${user} commented on ${timestamp}","MONTH":"${user} commented on ${timestamp}","TODAY":"${user} commented ${timestamp}","YESTERDAY":"${user} commented ${timestamp}"},"ERROR_NO_CONTENT_EDIT":"Please enter your comment and click 'Save.'  If you no longer wish to edit your comment click 'Cancel.'","COUNT":"${0}-${1} of ${2}","COMMENT_COUNT_MANY":"${0} comments","ERROR_DELETE_NOT_LOGGED_IN":"You must be logged in to delete this comment.  Click 'Delete' to be prompted to log in.","TRIM_LONG_COMMENT":"Shorten comment?","DELETECONFIRM":"Are you sure you wish to delete this comment?","ERROR_EDIT_NOT_LOGGED_IN":"You must be logged in to edit this comment.  Click 'Save' to be prompted to log in.","ITEMS_PER_PAGE":" items per page.","COMMENT_LABEL":"Comment:","SAVE":"Save","ERROR_CREATE_ACCESS_DENIED":"Your comment could not be saved because the file has been deleted or is no longer visible to you.","COMMENT_EDITED":{"DAY":"Edited on ${EEEE}","YEAR":"Edited on ${date_long}","MONTH":"Edited on ${MMM} ${dd}","TODAY":"Edited today at ${time}","YESTERDAY":"Edited yesterday at ${time}"},"EDIT":"Edit","PREVIOUS":"Previous","CANCEL":"Cancel","ERROR_CREATE_CANCEL":"Your comment could not be saved because the request was cancelled.  Click 'Save' to try again.","COMMENT_COUNT_ONE":"${0} comment","DELETEREASON":"Reason for deleting this comment:","ERROR_DELETE":"Your comment could not be deleted.  Please try again later.","SUBSCRIBE_TO_COMMENTS_TOOLTIP":"Follow changes to these comments through your feed reader","ERROR_EDIT_CANCEL":"Your comment could not be updated because the request was cancelled.  Click 'Save' to try again.","LINK":"Link","VIEW_COMMENTS_FILE":"View comments on this file","LOADING":"Loading comments...","NEXT":"Next","PAGE":"Page","ERROR_DELETE_TIMEOUT":"Your comment could not be deleted because the server could not be contacted.  Click 'Delete' to try again.","ERROR_DELETE_ACCESS_DENIED":"Your comment could not be deleted because the file has been deleted or is no longer visible to you.","ERROR_EDIT_NOT_FOUND":"Your comment could not be updated because the file has been deleted or is no longer visible to you.","COMMENT_CREATED_TIME":{"DAY":"${EEEE} at ${time}","YEAR":"${date_long}","MONTH":"${MMM} ${dd}","TODAY":"today at ${time}","YESTERDAY":"yesterday at ${time}"},"ERROR_CREATE_NOT_FOUND":"Your comment could not be saved because the file has been deleted or is no longer visible to you.","ERROR_NO_CONTENT":"Please enter your comment and click 'Save.'  If you no longer wish to leave a comment click 'Cancel.'","ERROR_CREATE_NOT_LOGGED_IN":"You must be logged in to create this comment.  Click 'Save' to be prompted to log in.","ERROR_CREATE_TIMEOUT":"Your comment could not be saved because the server could not be contacted.  Click 'Save' to try again.","ERROR_EDIT_ACCESS_DENIED":"Your comment could not be updated because the file has been deleted or is no longer visible to you.","SUBSCRIBE_TO_COMMENTS":"Subscribe to these comments","DELETE":"Delete","ERROR_DELETE_CANCEL":"Your comment could not be deleted because the request was cancelled.  Click 'Delete' to try again.","ERROR_DELETE_NOT_FOUND":"Your comment could not be deleted because the file has been deleted or is no longer visible to you.","NOHYPHENCOUNT":"${0} of ${1}","JUMP_TO_LAST":"Most recent","WARN_LONG_COMMENT":"The comment is too long.","ERROR_CREATE":"Your comment could not be saved.  Please try again later.","VIEW_COMMENTS_PAGE":"View comments on this page","EMPTY":"There are no comments.","ADD_COMMENT":"Add a comment","ERROR_EDIT_TIMEOUT":"Your comment could not be updated because the server could not be contacted.  Click 'Save' to try again."},"FILTERS":{"MY_TAGS":{"TITLE":"My Tags"},"EVENT":{"TITLE":"Events","COMMENTS":"Comments","PEOPLE_JOINED":"People joined","SHARED_WITH":"Shared with","RECOMMENDATIONS":"Recommendations","MEDIA_UPDATES":"File updates"},"SHARE":{"NOT_PUBLIC_TOOLTIP":"Files that aren't public but are shared with one or more people","SELECTIVE_LONG":"Files that aren't public but are shared with one or more people","NOT_PUBLIC_LONG":"Files that aren't public but are shared with one or more people","PUBLIC_LONG":"Files that are visible to everyone","PRIVATE_TOOLTIP":"Files that only I can see","PRIVATE":"with no one (private)","NOT_PUBLIC":"with one or more people","TITLE":"Shared","PRIVATE_LONG":"Private to me","PUBLIC":"with everyone (public)","PUBLIC_TOOLTIP":"Files that are visible to everyone","SELECTIVE":"with one or more people","SELECTIVE_TOOLTIP":"Files that aren't public but are shared with one or more people"},"TYPE":{"PAGES_LONG":"Pages only","TITLE":"Type","PAGES_TOOLTIP":"All pages created in this wiki","FILES":"uploaded files","FILES_LONG":"Uploaded files only","FILES_TOOLTIP":"Any file that was uploaded from a computer","PAGES":"pages"},"ALL_TAGS":{"TITLE":"Everyone's Tags"},"MEMBER_TYPE":{"GROUP_TITLE":"Group","GROUP_LONG":"Groups only","USER_TOOLTIP":"Users who are members of the wiki","VIRTUAL_TITLE":"Special Group","VIRTUAL_TOOLTIP":"Special groups which are members of the wiki","GROUP":"groups","USER_TITLE":"User","VIRTUAL":"special groups","TITLE":"Member Type","USER_LONG":"Users only","USER":"users","GROUP_TOOLTIP":"Groups which are members of the wiki ","VIRTUAL_LONG":"Special groups only"},"SHARED_BY":{"TITLE":"Shared By","OPTION_EMPTY_TOOLTIP":"Only show files that were shared by a specific person","OPTION":"by ${0}","FILTER":"Shared by ${0}","OPTION_EMPTY":"by a specific person:"},"DATE":{"TODAY_LONG":"Only updated since midnight today ","TODAY_TOOLTIP":"Since midnight today","LASTYEAR_TOOLTIP":"Last 365 days","LASTWEEK":"last week","LASTWEEK_TOOLTIP":"Last 7 days","LASTMONTH_TOOLTIP":"Last 30 days","TITLE":"Date","LASTWEEK_LONG":"Only updated in the last seven days ","LASTMONTH_LONG":"Only updated in the last thirty days ","TODAY":"today","LASTMONTH":"last 30 days","LASTYEAR_LONG":"Only updated in the last year ","LASTYEAR":"last year"},"PERMISSION":{"EDIT_TOOLTIP_INBOUND":"Files you can contribute to","EDIT":"contribute","EDIT_TOOLTIP_OUTBOUND":"Files other people can contribute to","VIEW":"read","VIEW_LONG_OUTBOUND":"Files other people can read but not contribute to","VIEW_TOOLTIP_INBOUND":"Files you can read but not contribute to","VIEW_LONG_INBOUND":"Files you can read but not contribute to","EDIT_LONG_OUTBOUND":"Files other people can contribute to","VIEW_TOOLTIP_OUTBOUND":"Files other people can read but not contribute to","EDIT_LONG_INBOUND":"Files you can contribute to","TITLE":"Permission"},"SHARED_WITH":{"TITLE":"Shared With","OPTION_EMPTY_TOOLTIP":"Only show files that were shared with a specific person","OPTION":"with ${0}","FILTER":"Shared with ${0}","OPTION_EMPTY":"with a specific person:"},"USER_TAGS":{"TITLE":"This Person's Tags"}},"DOWNLOAD_INFO":{"PAGE":{"EMPTY":"Anonymous users only","ERROR":"Unable to load page view information","LOADING":"Loading..."},"FILE":{"EMPTY":"Anonymous users only","ERROR":"Unable to load download information","LOADING":"Loading..."}},"SIZE":{"B":"${0} B","MB":"${0} MB","GB":"${0} GB","KB":"${0} KB"},"FOOTER":{"HELP":{"FORUMS":"Support forums","HEADING":"Help","HELP":"Help"},"TOOLS":{"ADMINPAGE":"Admin","HEADING":"Tools","BROWSERPLUGINS":"Browser plugins","METRICS":"System metrics"},"ABOUT":{"CONNECTIONSONLINE":"IBM Lotus Connections on ibm.com","SUBMITFEEDBACK":"Submit feedback","ABOUT":"About","HEADING":"About"},"FILE_BUG":"File a Bug Report","DOWNLOAD_CONNECTORS":"Download Connectors","CONNECTIONS":{"HEADING":"IBM Lotus Connections","HOME":"Home","DEMO":"Demo"}},"SHARE_INFO":{"FILE":{"DOWNLOADED_CURRENT":"${0} has downloaded the most recent version of this file.","DOWNLOADED_NEVER":"${0} has not yet downloaded this file.","DOWNLOADED_OLDER":"${0} has downloaded an older version of this file."},"LOADING":"Loading...","SHOW_INVOLVED":"Which shares apply to me?","ERROR":"Unable to load share information","PAGE":{"DOWNLOADED_CURRENT":"${0} has viewed the most recent version of this page.","DOWNLOADED_NEVER":"${0} has not yet viewed this page.","DOWNLOADED_OLDER":"${0} has viewed an older version of this page."}},"ATTACHMENTS":{"ADDATTACHMENT":"Add an attachment","EDIT":"Edit","SHOW":"Show","LOADING":"Loading attachments...","ATTACHMENT":"Attachment","DELETE":"Delete","PREVIOUS":"Previous","PAGE":"Page","ERROR":"An error occurred","NEXT":"Next","NO_ATTACHMENTS":"No attachments exist","COUNT":"${0}-${1} of ${2}","DATE":{"RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"DELETEERROR":"The attachment was not deleted due to an error.","DELETE_ERROR_CANCEL":"The attachment was not deleted because the request was cancelled.  Click delete to try again.","DELETE_ERROR_TIMEOUT":"The attachment was not deleted because the server could not be contacted.  Click delete to try again."},"UPLOAD_ATTACHMENT":{"WARN_LONG_DESCRIPTION":"The description is too long.","CONFIRM_REPLACE":"Another attachment to this page with the same name already exists.  Do you wish to replace the contents of the existing attachment?","NOTE_LABEL":"Note: ","ERROR_MAX_CONTENT_SIZE":"The attachment could not be uploaded because it is larger than the maximum allowed attachment size of ${0}","CONTENTS_LABEL":"File: ","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Upload Attachment","ERROR_QUOTA_VIOLATION":"The attachment could not be uploaded because the wiki is almost full.  To upload this attachment, ${0} of files, attachments, or versions would have to be removed.","WARN_LONG_FILENAME":"The file name is too long. ","LIMIT_HELP":"Files must be smaller than ${limit}.","DESCRIPTION_LABEL":"Description: ","TAGS_LABEL":"Tags: ","WARN_NO_FILENAME":"File name is a required field.","ERROR_TIMEOUT":"The attachment could not be uploaded because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CANCEL":"The attachment could not uploaded because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The attachment could not be uploaded because you are not a contributor.","ERROR_NOT_LOGGED_IN":"You must be logged in to upload this attachment.  Click 'OK' to be prompted to log in.","TRIM_LONG_FILENAME":"Shorten file name?","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","TRIM_LONG_DESCRIPTION":"Shorten description?","ERROR":"The attachment could not be uploaded.  Please try again later","OK":"OK","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","NAME_LABEL":"File name: ","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","WARN_INVALID_CHARS_IN_NAME":"File names may not contain the following characters: \\ / : * ? \" < > | [ ]","SELECT_FILE":"Please select a file to upload"},"SESSION_TIMEOUT":"Your Connections session has expired.  Click 'OK' to log in again.","FILE":{"EXPAND_ERROR":{"CANCEL":"The details of this file could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this file could not be loaded because file has been deleted or is no longer visible.","TIMEOUT":"The details of this file could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this file from being displayed.  Please try again later."}},"TAGGER":{"CANCEL_TOOLTIP":"Cancel tag editing","REMOVEERROR_NOT_FOUND":"The tag could not be removed because the document has been deleted or is no longer visible.","LOADING":"Loading tags...","ADD_REMOVE_TAGS":"Add or remove tags","REMOVEERROR_ACCESS_DENIED":"The tag could not be removed because you do not have permission to contribute to this document.","CREATEERROR_TIMEOUT":"The tag could not be created because the server could not be contacted.  Click 'OK' to try again.","REMOVECONFIRM":"Are you sure you want to remove the tag ${0}?","WARN_LONG_TAG":"The tag '${0}' is too long.","ADD_REMOVE_TAGS_TOOLTIP":"Add or remove tags on this item","LOADERROR_TIMEOUT":"The tags could not be loaded: request timed out.","CREATEERROR":"The tag could not be created.  Please try again later.","CREATEERROR_NOT_FOUND":"The tag could not be created because the document has been deleted or is no longer visible.","NO_RESULTS":"No results for '${0}'","REMOVE":"Remove tag","LOADERROR_CANCEL":"The tags could not be loaded: request cancelled.","INVALID_CHAR_WARN_LONG":"One or more tags you have entered contain invalid characters: ${0}","REMOVEERROR_TIMEOUT":"The tag could not be removed because the server could not be contacted.  Click 'OK' to try again.","ERROR_LOADING":"An error has occured loading the tags.","NONE":"None","TRIM_TAGS":"Shorten tags?","CREATEERROR_CANCEL":"The tag could not be created because the request was cancelled.  Click 'OK' to try again.","SEPARATOR":",","LOADERROR_NOTFOUND":"The tags could not be loaded: file not found.","OK":"OK","INVALID_CHAR_WARN":"!","REMOVEERROR":"The tag could not be removed.","ADD_TAGS":"Add tags","CANCEL":"Cancel","CREATEERROR_ACCESS_DENIED":"The tag could not be created because you do not have permission to contribute to this document.","TRIM_TAG":"Shorten tag?","REMOVEERROR_CANCEL":"The tag could not be removed because the request was cancelled.  Click 'OK' to try again.","WARN_LONG_TAGS":"The specified tags are too long.","NOTAGS":"No Tags"},"WIKI_UPDATED":{"SHOW":"Show Changes"},"COMMUNITIES":{"COMMUNITY_WIKI_TITLE":"This wiki is associated with a Group.","COMMUNITY_WIKI":"Group Wiki"},"ERROR_IN_APP_TITLE":"Oops, that didn't work","SEARCH":{"SEARCH_ALT":"Search","HEADING_THIS":"Search Results within This Wiki: ${0}","SEARCH":"Search","REL_DATES":"Related Dates","TAGS":"Tags","DATES":"Dates","FILES":"Search Files","HEADING":"Search Results within Wikis","ADD_TO_FAVORITES":"Add to Favorite People","USER_RESULTS":"People search results for name and e-mail: ${0}","COMMUNITIES":"Search Groups","PEOPLE":"People","ACTIVITIES":"Search Activities","REL_TAGS":"Related Tags","DOGEAR":"Search Bookmarks","ALL_LABEL":"Search All","PEOPLE_DEFAULT":"Name or e-mail","REL_PEOPLE":"Related People","ALL":"All Areas","BLOGS":"Search Blogs","WIKIS":"Search Wikis","HEADING_MY":"Search Results within My Wikis","PROFILES":"Search Profiles"},"ERROR_OCCURRED":"An error occurred.  Contact your Lotus Connections administrator.","OK":"OK","SORTS":{"MOSTRECENT":"Most Recent","DN_TOOLTIP_REVERSE":"Sort by distinguished name in reverse alphabetical order","MOSTCOMMENTED_TOOLTIP":"Sort from most commented to least commented","MOSTDOWNLOADED":"Most Downloaded","HIGHESTRECOMMENDED":"Most Recommended","TITLE_TOOLTIP_REVERSE":"Sort by name in reverse alphabetical order","MOSTDOWNLOADED_TOOLTIP_REVERSE":"Sort from least downloaded to most downloaded","EMAIL_TOOLTIP":"Sort by email in alphabetical order","MOSTCOMMENTED":"Most Commented","HIGHESTRECOMMENDED_TOOLTIP":"Sort from most recommended to least recommended","TITLE":"Name","SHARED_ON_TOOLTIP_REVERSE":"Sort from least recently shared to most recently shared","EMAIL_TOOLTIP_REVERSE":"Sort by email in reverse alphabetical order","MOSTVISITED_TOOLTIP":"Sort from most visited to least visited","TITLE_TOOLTIP":"Sort by name in alphabetical order","SIZE_TOOLTIP":"Sort by size from largest to smallest","MOSTRECENT_SHARE":"Most Recently Shared","TYPE_TOOLTIP":"Sort by type in alphabetical order","MOSTDOWNLOADED_TOOLTIP":"Sort from most downloaded to least downloaded","MOSTCOMMENTED_TOOLTIP_REVERSE":"Sort from least commented to most commented","SHARED_ON_TOOLTIP":"Sort from most recently shared to least recently shared","MOSTRECENT_TOOLTIP":"Sort from most recently updated to least recently updated","HIGHESTRECOMMENDED_TOOLTIP_REVERSE":"Sort from least recommended to most recommended","SIZE_TOOLTIP_REVERSE":"Sort by size from smallest to largest","MOSTVISITED_TOOLTIP_REVERSE":"Sort from least visited to most visited","TYPE_TOOLTIP_REVERSE":"Sort by type in reverse alphabetical order","MOSTVISITED":"Most Visited","DN_TOOLTIP":"Sort by distinguished name in alphabetical order","ADDED_TOOLTIP_REVERSE":"Sort from least recently added to most recently added","MOSTRECENT_TOOLTIP_REVERSE":"Sort from least recently updated to most recently updated","ADDED_TOOLTIP":"Sort from most recently added to least recently added"},"WATCHLIST":{"TIP1":"The watchlist displays the names of people you add to your list. Click the name to view that person's files.","REMOVECONFIRM":"Are you sure you want to remove this person from your watchlist?","TIP2":"To add someone to your watchlist, go to the wiki of the person whose name you want to add, and then click the link Add to Watchlist.","MYWATCHLIST":"My Watchlist","LOADING":"Loading...","CLOSE":"Close Watchlist","ADDUSER":"Add ${0} to Watchlist...","OPEN":"Open Watchlist","REMOVE":"Remove from Watchlist","HELP":"Watchlist Help","EMPTY":"There are no people being watched."},"STOP_SHARING_FILE":{"CONFIRM":"Are you sure you wish to remove all shares on this file?\n\n${0}","TITLE":"Stop Sharing","TIMEOUT_ERROR":"The file could not be shared because the server could not be contacted.  Click 'Stop Sharing' to try again.","CONFIRM_PUBLIC":"Are you sure you wish to remove all shares on this file?\nNote: Because this file is public, everyone will still be able to see the file.\n\n${0}","NOT_FOUND_ERROR":"The file has been deleted or is no longer visible to you.","CANCEL_ERROR":"The file could not be shared because the request was cancelled.  Click 'Stop Sharing' to try again.","ERROR":"The shares on this file could not be removed.  Please try again later.","TOOLTIP":"Remove all shares on this file"},"UPLOAD":{"DESCRIPTION":"Description","FILE":"File","NAME":"Name"},"SUBSCRIBE_TO_PAGE_TOOLTIP":"Follow changes to this page through your feed reader","DATE":{"MONTHS_ABBR":["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"],"WIKI_CREATED":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","MONTH":"${MMM} ${dd}","TODAY":"today at ${time}","YESTERDAY":"yesterday at ${time}"},"PM":"PM","YESTERDAY":"yesterday","CREATED":{"DAY":"created ${EEee} at ${time}","YEAR":"created ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"created ${MMM} ${dd}","TODAY":"created today at ${time}","YESTERDAY":"created yesterday at ${time}"},"FULL":"${EEEE}, ${date_long} ${time_long}","AUTOSAVED_SHORT":{"DAY":"Autosaved ${EEee} at ${time}","YEAR":"Autosaved ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Autosaved ${MMM} ${dd}","TODAY":"Autosaved at ${time}","YESTERDAY":"Autosaved yesterday at ${time}"},"ADDED":{"DAY":"Added ${EEee} at ${time}","YEAR":"Added ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Added ${MMM} ${dd}","TODAY":"Added today at ${time}","YESTERDAY":"Added yesterday at ${time}"},"TODAY_U":"Today","TODAY":"today","YESTERDAY_U":"Yesterday","RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"WIKIPAGE":{"SECTION":{"VERSION":"Version","CHILDREN":{"TITLE":"Child Pages","LINK":"Create new child page","NONE":"No children exist"},"COMPARE":"Wiki text comparison","INFOSIZE":"${0} (${1} including page, attachments, and all versions)","HIERARCHY":{"MOVE":"Move Page","TITLE":"Hierarchy"},"REFRESH":"Refresh","RESTORE":"Restore this version"},"ACTIONS":{"TEXT":"Page Actions","TOOLTIP":{"EDITOR":"Create a child page or peer page, delete the page, print the page, or move the page.","READER":"Print the page."}},"ERROR":{"ACCESS_DENIED_ANON":{"TITLE":"You do not have access to this page","MESSAGES":"You do not have permission to view this page.  You may have access if you log in. "},"GENERAL":{"MESSAGES":"Something went wrong - click the back button and try again. "},"ACCESS_DENIED":{"TITLE":"You do not have access to this page","MESSAGES":"You do not have permission to view this page.   "},"WIKI":{"TITLE":"We can't find that Wiki","MESSAGES":"The Wiki can't be found - click the back button and try again.  If this doesn't work the wiki may have been deleted."},"DEFAULT":{"TITLE":"That page cannot be displayed.   ","MESSAGES":"That page cannot be displayed.   "}},"MODE":{"ATTACHMENTS":"Page Attachments","COMMENTS":"Comments","VERSIONS":"Versions","COMPARE":"Version Comparison","INFO":"Page Info"}},"PAGING":{"PREVIOUS":"Previous","COUNT":"${0}-${1} of ${2}","NEXT":"Next"},"APP_LOAD_BLURB":"Please wait while the application loads...","CONNSEARCH":{"SEARCH_ALT":"Search","SCOPE_CONNECTIONS_ACTIVITIES":{"LABEL":"Activities","HOVER":"Search Activities"},"SEARCH":"Search","HINT":"Search","FILES":"Files belonging to...","SCOPE_CONNECTIONS_ALL":{"LABEL":"All My developerWorks","HOVER":"Search all of My developerWorks"},"SCOPE_CONNECTIONS_DOGEAR":{"LABEL":"Bookmarks","HOVER":"Search Bookmarks"},"FAVORITES":"Favorites for...","USER_RESULTS":"People search results for name and e-mail: ${0}","COMMUNITIES":"Groups","PEOPLE":"People","SCOPE_ALLWIKIS":{"LABEL":"Public Wikis","HOVER":"Search Public Wikis"},"SCOPE_CONNECTIONS_BLOGS":{"LABEL":"Blogs","HOVER":"Search Blogs"},"HOVER":"Refine search options","SCOPE_THISWIKI":{"LABEL":"This Wiki","HOVER":"Search This Wiki"},"SCOPE_CONNECTIONS_ADVANCED":{"LABEL":"Advanced search","HOVER":"Go to the advanced search page"},"PEOPLE_DEFAULT":"Name or e-mail","INTERESTED":"People interested in...","SCOPE_CONNECTIONS_COMMUNITIES":{"LABEL":"Groups","HOVER":"Search Groups"},"SCOPE_CONNECTIONS_FILES":{"LABEL":"Files","HOVER":"Search Files"},"SCOPE_MYWIKIS":{"LABEL":"My Wikis","HOVER":"Search My Wikis"},"SCOPE_CONNECTIONS_PROFILES":{"LABEL":"Profiles","HOVER":"Search Profiles"}},"TITLEBAR":{"SEARCH":"Search","GO":"Go","ALLUSERS":"Find People","HOME":"Wikis","SHARES":"My Shares","MYCHANNEL":"My Place","ALLUSERS_TITLE":"Search for other people","MYCHANNEL_TITLE":"All of your files","OFFLINE":"Offline","SHARES_TITLE":"All of the shares that you are involved in","HOME_TITLE":"See what's happening in wikis"},"TOGGLE_SECTION":"Expand and collapse this section","ERROR_IN_APP_MESSAGE":"Something went wrong - click the back button and try again.  If this doesn't work report the problem to the support forum. If someone sent you this link, check to see if you've been granted permission.","JAVASCRIPT_DISABLED_TITLE":"Turn on JavaScript","EMOTICONS":{"BLOCK":"Block","COOL":"Cool","ANGEL":"Angel","THUMBS_DOWN":"Thumbs down","CRYING":"Crying","RED_FLAG":"Red flag","CROSS":"Cross","HAPPY":"Happy","BIG_SMILE":"Big smile","SURPRISED":"Surprised","HYSTERICAL":"Hysterical","LIGHT_BULB":"Light bulb","GREEN_FLAG":"Green flag","SAD":"Sad","CONFUSED":"Confused","SHY":"Shy","WARNING":"Warning","WINK":"Wink","TONGUE":"Tongue","LAUGH":"Laugh","GOOFY":"Goofy","STAR":"Star","EYEBROW":"Eyebrow","INFO":"Info","QUESTION":"Question","TICK":"Tick","THUMBS_UP":"Thumbs up","ANGRY":"Angry"},"EDIT_WIKI":{"DESC_LABEL":"Description:","ERROR_LOAD":"Couldn't load Wiki settings.","CREATOR":"Wiki Creator:","CANCEL":"Cancel","DELETE":"Delete Wiki","SAVE":"Save","BUSY":"Loading...","ERROR_SAVE":"Couldn't save Wiki settings.","TITLE":"Settings","ERROR_DESCRIPTION_TOO_LONG":"The Wiki description is too long. ","TAGS_LABEL":"Tags:","ERROR_SHORTEN_DESCRIPTION":"Shorten Wiki description?","OK":"OK","WIKITITLE":"Wiki Title:"},"CHANGE_PROPAGATE_FILE":{"ERROR_TIMEOUT":"The file was not updated because the server could not be contacted.  Click the checkbox to try again.","ERROR":"The file was not updated due to an error.","ERROR_CANCEL":"The file was not updated because the request was cancelled.  Click the checkbox to try again."},"WIKI_MEMBERSHIP":{"COUNT_OTHERS_PUBLIC_1":"${0} people","SEARCH_TOOLTIP":"Search the directory","SHARE_PERMISSION":"Make these people contributors to this page","COUNT_OTHERS_SINGLE_PUBLIC":"This page is public and is shared with ${0}.","SHARE_WITH":"Share with:","USER":"User","READER":"Reader","COUNT_NONE_PUBLIC":"This Wiki is public and you are not required to add members.","SELECT_USER":"Members:","COUNT_OTHERS_PUBLIC":"This page is public and is shared with ${0}.","PROPAGATE_SHARED":"All members can add other members","AUTHENTICATED":"Authenticated Users","WARN_LONG_MESSAGE":"The message is too long.","ANONYMOUS":"Anonymous Users","COUNT_OTHERS_SINGLE_1":"1 person","CANCEL":"Cancel","OWNER":"Owner","PROPAGATE":"Allow this page to be shared by other people","ERROR":"The page could not be shared.  Please try again later.","EDITOR":"Editor","REMOVE_USER_TOOLTIP":"Remove member","NOT_LOGGED_IN_ERROR":"You must be logged in to share this page.  Click 'OK' to be prompted to log in.","SELECT_USER_ERROR":"Please select a person to share with.","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you and cannot be shared.","PROPAGATE_OWNER":"Only you can add members","GROUP":"Group","SELF_REFERENCE_ERROR":"You cannot add yourself as a member.","DIALOG_TITLE":"Add members to this Wiki","TRIM_LONG_MESSAGE":"Shorten message?","PROPAGATE_PUBLIC":"Everyone can add members","CANCEL_ERROR":"The page was not shared because the request was cancelled.  Click 'OK' to try again.","MANAGER":"Manager","COUNT_NONE":"This Wiki has no members other than yourself.","TRIM_LONG_DESCRIPTION_MESSAGE":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","OK":"OK","MAX_SHARES_ERROR":"The maximum number of shares has been exceeded.","SHARE_TOOLTIP":"Allow others to read or contribute to this page","COMMUNITY_INFO":"You manage community wiki membership and roles in the community that owns the wiki. You edit community membership and roles by opening its business card and accessing its Members page.","TIMEOUT_ERROR":"The page was not shared because the server could not be contacted.  Click 'OK' to try again.","ADD_FROM_FAVORITES":"Add a person from your favorite wikis","WARN_LONG_DESCRIPTION":"The description is too long.","BUSY":"Applying...","COUNT_OTHERS_1":"${0} people","ACCESS_DENIED_ERROR":"You no longer have permission to share this page.","OWNER_REFERENCE_ERROR":"You cannot add the owner of the Wiki as a member.","COUNT_OTHERS_SINGLE":"This page is shared with ${0}.","TRIM_LONG_DESCRIPTION":"Shorten description?","COUNT_OTHERS_SINGLE_PUBLIC_1":"1 person","EXPAND_SECTION":"Add people as members of the Wiki...","COUNT_OTHERS":"${0} is a member of this Wiki.","MESSAGE_LABEL":"Message:"},"CONTENT":{"COLUMN_SIZE":"Size","COLUMN_SHARED_WITH":"Shared With","LOADING":"Loading... ","ELLIPSIS":"...","OF_PAGES":" of ${0}.","PRIVATE":"Private","SHARE_MESSAGE":{"LIST_SEP":", "},"DISCARD_DRAFT_TOOLTIP":"Discard these unsaved changes","DELETEPAGE_ERROR_TIMEOUT":"The page was not deleted because the server could not be contacted.  Click delete to try again.","DELETEPAGE_ERROR_NOT_FOUND":"This page has already been deleted or is no longer visible to you.","COLUMN_ADDED":"Added","SHARED":{"COUNT_ONE":"1 person","COUNT_MANY":"${0} people","MANY_1":"${0} people","ONE_1":"1 person","MANY":"Shared with ${0}","BASE":"Shared with you","ONE":"Shared with ${0}"},"DELETE_ERROR_TIMEOUT":"The file was not deleted because the server could not be contacted.  Click delete to try again.","EDIT_PAGE_DRAFT_CONFIRM":"You made changes to this file that were not saved. Do you wish to recover and edit with those changes? If you wish to edit the current version instead, you must select cancel and discard the existing unsaved changes.","DOWNLOAD_TOOLTIP_ONE":"${0} download","COMPARE_ERROR":"Could not compare this page.  Please try again.","MORE":"more","SHARE_TOOLTIP":"Allow others to read or contribute to this file","COLUMN_LAST_MODIFIED":"Updated","DELETEPAGE_ERROR_CANCEL":"The page was not deleted because the request was cancelled.  Click delete to try again.","REPLACE":"Replace","DELETESHAREERROR":"The share could not be removed","COLUMN_EMAIL":"Email","ONE_DOWNLOAD":"1","DISCARDDRAFT_ERROR_NOT_FOUND":"These unsaved changes have already been discarded.","TAGS_LABEL":"Tags:","DELETE_ERROR_CANCEL":"The file was not deleted because the request was cancelled.  Click delete to try again.","TAG_TOOLTIP":"Filter by tag '${0}'","USERERROR_TITLE":"We can't find that wiki","EDIT_PAGE_ERROR":"The page could not be edited due to an error","OPEN_WIKI":"Open Wiki","DELETESHARECONFIRM":"Are you sure you wish to stop sharing with ${0}?","DOWNLOADS":"${0}","COUNT":"${0}-${1} of ${2}","COLUMN_SHARED_BY":"Shared By","SHOW":"Show ","DISCARD":"Discard","HIDE_EXTRA":"Hide extra information","COLUMN_SHARED_ON":"Shared On","CREATE_PAGE_EXISTS_ERROR":"A page or file with the name you have specified already exists. Please choose a different name.","PUBLIC":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"Public and shared with ${0}","BASE":"Public","ONE":"Public and shared with ${0}"},"DELETE_TOOLTIP":"Delete this file","USERERROR_MESSAGES":"The wiki can't be found - click the back button and try again.  If this doesn't work the wiki may have been archived or disabled.","ERROR_REQUEST_TIMEOUT":"The server could not be contacted.","SHARE":"Share","HITS":"Page hits","DISCARDDRAFT_ERROR":"These unsaved changes were not discarded due to an error.","DELETESHAREERROR_TIMEOUT":"The share was not deleted because the server could not be contacted.  Click 'X' to try again.","ERROR_REQUEST_UNKNOWN":"An unknown error has occurred.","PREVIOUS":"Previous","DELETE":"Delete","DISCARDDRAFT_ERROR_TIMEOUT":"These unsaved changes were not discarded because the server could not be contacted.  Click discard to try again.","EDIT_DRAFT_TOOLTIP":"Work with these unsaved changes","COLUMN_RATING":"Recommend","DELETESHARE":"Remove this share","VIEW_SELECTION":"Display:","SHOWING":"Showing ","JUMP_TO_PAGE":"Jump to page  ","EDIT_PAGE_EXISTS_ERROR":"A page or file with the name you have specified already exists. Please choose a different name.","DISCARDDRAFT_ERROR_CANCEL":"These unsaved changes were not discarded because the request was cancelled.  Click discard to try again.","DELETEPAGE_CONFIRM":"Are you sure you wish to delete this page?\n\n${0}","DELETESHAREERROR_NOT_FOUND":"The share was not deleted because the file has been deleted or is no longer visible to you.","OPEN_PAGE":"Open Page","OTHER_PEOPLE_FILE":"Other people who have shared this file","EMPTY":{"MY_MEDIA":{"FILTERED":{"FILES":"There are no files in this wiki that match your filters.","MEDIA":"There are no files or pages in this wiki that match your filters.","PAGES":"There are no pages in this wiki that match your filters."},"NORMAL":{"FILES":"There are no files in this wiki.","MEDIA":"There are no files or pages in this wiki.","PAGES":"There are no pages in this wiki."}},"SHARED_WITH_ME":{"FILTERED":{"FILES":"There are no files shared with you that match your filters.","MEDIA":"There are no files or pages shared with you that match your filters.","PAGES":"There are no pages shared with you that match your filters."},"NORMAL":{"FILES":"There are no files shared with you.","MEDIA":"There are no files or pages shared with you.","PAGES":"There are no pages shared with you."}},"WATCHLIST":{"FILTERED":{"MEDIA":"There are no people being watched that match your filters."},"NORMAL":{"MEDIA":"There are no people being watched."}},"SHARED_BY_ME":{"FILTERED":{"FILES":"There are no files shared by you that match your filters.","MEDIA":"There are no files or pages shared by you that match your filters.","PAGES":"There are no pages shared by you that match your filters."},"NORMAL":{"FILES":"There are no files shared by you.","MEDIA":"There are no files or pages shared by you.","PAGES":"There are no pages shared by you."}},"DEFAULT":"There are no files or pages in this wiki."},"REVERT_CONFIRM":"You are about to replace the current version of this page with version ${0}, which was created ${1} by ${2}. Do you want to proceed?","DOWNLOAD_TOOLTIP_MANY":"${0} downloads","EDIT":"Edit","USERERROR":"The wiki you have requested cannot be displayed.","EDIT_PAGE_ERROR_TIMEOUT":"The page was not edited because the server could not be contacted.  Click 'OK' to retry your request.","RECOMMEND":"Recommend","ERROR_REQUEST_CANCELLED":"The request was cancelled.","DISCARDDRAFT_CONFIRM":"Are you sure you wish to discard these unsaved changes?","COLUMN_DOWNLOAD":"Downloads","ERROR":"An unknown error has occurred.","VIEW":"View","TAGGED_WITH":"Tagged with '${0}' ","COMPARE":"Compare","NOHYPHENCOUNT":"${0} of ${1}","DELETEERROR":"The file was not deleted due to an error.","EDIT_PAGE_ERROR_CANCEL":"The page was not edited because the request was cancelled.  Click 'OK' to retry your request.","VIEW_EXTRA":"View more information","COLUMN_LAST_MODIFIED_BY":"Updated By","EDIT_TOOLTIP":"Change the name, description, or contents of this file","COLUMN_NAME":"Name","HIDE":"hide","FILTERED_BY":"Filtered by: ","ITEMS_PER_PAGE":" items per page.","EDIT_PAGE_TOOLTIP":"Change the name, description, or contents of this page","PAGE":"Page","DELETECONFIRM":"Are you sure you wish to delete this file?\n\n${0}","NEXT":"Next","SHARE_PAGE_TOOLTIP":"Allow others to read or contribute to this page","DELETE_PAGE_TOOLTIP":"Delete this page","DELETESHAREERROR_CANCEL":"The share was not deleted because the request was cancelled.  Click 'X' to try again.","DELETE_ERROR_NOT_FOUND":"This file has already been deleted or is no longer visible to you.","COLUMN_TYPE":"Type","USER_HAS_NO_PAGES":"There are no pages in this wiki","DELETEPAGE_ERROR":"The page was not deleted due to an error.","CREATE_PAGE_ERROR":"The page could not be created due to an error","DELETESHARE_TOOLTIP":"Stop sharing with this person","REVERT":"Restore","SORT_BY":"Sort by: ","DOWNLOAD":"Download","USER_HAS_NO_FILES":"There are no files in this wiki","COLUMN_DN":"Distinguished Name","REMOVE_FILTER_TOOLTIP":"Remove this filter"},"CANCEL":"Cancel","WIKI_NAVLIST":{"ACTIVE":"Most Active","SITEMAP":"Site Map","TITLE":"All Pages","SEARCHBOX":"Find a page","OWNED":"Owned By Me","EDITED":"Pages Edited by Me","ALPHABETICAL":"Pages Index","NEW":"New Wikis","UPDATED":"Recently Updated"},"TAGLIST":{"EMPTY":"No tags found","NO_TAGS":"No tags found","ALL_TITLE":"View all tags.","NEXT":"Next","POPUPTITLE":"All Tags","LIST_TITLE":"View a list of the most popular tags.","OPEN":"Open","CLOUD":"cloud","LOADING":"Loading...","PREVIOUS":"Previous","SHOW_MORE":"Show less popular tags","CLOUD_TITLE":"View a tag cloud of the most popular tags.","ERROR_REQUEST_TIMEOUT":"Tags could not be loaded because the server could not be contacted.","ERROR":"Error loading tags","ALL":"all","VIEW_AS":"View as","LIST":"list","ERROR_REQUEST_CANCELLED":"Tags could not be loaded because the request was cancelled."},"ROLE_OPTIONS":{"ROLE":"Role:"},"CREATE_PAGE":{"ACTION":"New Page","ACTION_TOOLTIP":"Create a new page"},"APP":{"ERRORS":{"CANTCREATEPAGE":{"ACT":"Back to Page","TITLE":"You can't create a new page","MESSAGES":"You have insufficient privileges to create new pages in this Wiki.  You may have to request editor privileges to the administrator(s) of this Wiki. "},"CANTEDITPAGE":{"ACT":"Back to Page","TITLE":"You can't edit this page","MESSAGES":"You have insufficient privileges to edit pages in this Wiki.  You may have to request editor privileges to the administrator(s) of this Wiki. "},"CANTMANAGEMEMBERS":{"ACT":"Back to Wiki","TITLE":"You can't manage members","MESSAGES":"You have insufficient privileges to manage members in this Wiki.  You may have to request manager privileges to the administrator(s) of this Wiki. "},"LOGIN":{"ACT":"Log in now","TITLE":"You must be logged in","MESSAGES":"Certain portions of Wikis can only be accessed when you are logged in.  You may browse anonymously, but this page will not be visible until you authenticate."},"SERVER_ERROR":"An unexpected error has occurred. Please contact your system administrator."},"WINDOW":{"TITLE":"Wikis","STATUSBAR":"Wikis - Ready"}},"MENUBAR":{"HELP_TITLE":"Help","HELP":"Help"},"INSERT_WIDGET":{"GREEN_STOCK_WIDGET":"Green Stock Widget","NOTASCRIPT":"Entered text doesn't appear to be a script","WIDGET_PROPERTIES_WIDTH":"Width","WIDGET_PROPERTIES_INVALID_WIDTH":"Please enter a numeric width","BLUE_STOCK_WIDGET":"Blue Stock Widget","WIDGET_PROPERTIES_DIALOG_TITLE":"iWidget Properties","WIDGET_PROPERTIES_RT_CLK_MENU":"iWidget Properties","WIDGET_TOOLBAR_BUTTON_TITLE":"Insert iWidget","BUSY":"Adding...","WIDGET_PROPERTIES_HEIGHT":"Height","TITLE":"Insert iWidget or IFrame","CAPTION":"Please provide copy your script tag into the text field below.","WIDGET_PROPERTIES_INVALID_HEIGHT":"Please enter a numeric height"},"WINDOWTITLE":{"FINDPEOPLE":"Find People","MYWIKIS":"My Wikis - Wikis","WIKI_ACCESS":"Wiki Access ","WIKIPAGE":"${0} - ${1}","MYPAGES":"Pages Edited by ${0} in ${1}","FILEERROR":"Error - Wiki for ${0}","ABOUT":"About Wikis","WIKIPAGEERROR":"Error - Cannot display page","PAGESHOME":"${0} - Wiki for ${1}","DOCUMENTHOME":"${0} - Wiki for ${1}","WELCOME":"Welcome - Wikis","MEMBERS":"Members of ${0} - Wikis ","PAGEERROR":"Error - Wiki for ${0}","TOOLS":"Tools","STATISTICS":"Statistics","OFFLINE":"Offline","USERHOMEERROR":"Error - Wiki","USERCHANNEL":"${0} - Wiki for ${1}","OFFLINEERROR":"Error - Offline","WIKI_CREATE":"Create a New Wiki","FAQ":"Frequently Asked Questions (FAQ)","LOGIN":"Log in","USERSHARES":"My Shares","PUBLICWIKIS":"Public Wikis - Wikis","PAGEINDEX":"Page Index of ${0} ","WHATSNEW":"Wikis"},"SIDEBAR":{"HIDE":"Hide Sidebar »","ALERT":"The sidebar will now be collapsed by default when you use Wikis.\n\nTo see the sidebar again, move your mouse to the far right edge of the page.  You will see a gray bar appear with an arrow.  Clicking on this bar will restore the sidebar.","HIDE_TOOLTIP":"Click to hide the sidebar","SHOW_TOOLTIP":"Resize the sidebar"},"TIPS":{"P2":"Check back frequently - new help and new features are constantly being added.","OLDER":"Older","HIDE_TIPS":"Hide Tips","H":"Welcome to Wikis","ERROR":"Unable to load help","NEWER":"Newer","P1":"Wikis make it easy to keep all your important files online."},"LOGINHELP":{"P2":"Here's what you can do while logged in:","NOW":"Log in now!","TITLE":"Log in to Participate!","ACT1":"Upload files and create pages","ACT2":"Share and collaborate on files with your colleagues","ACT3":"Discuss files by leaving comments","ACT4":"Recommend content to others","ACT5":"Follow what your favorite people are doing","P1":"You're currently logged out of Wikis.  You can still view public files and pages, but you won't be able to interact with other people."},"DELETE_WIKI":{"TEXT":"Deleting this wiki will permanently delete all data associated with this wiki. This action cannot be undone, so make sure you want to delete this wiki.","CANCEL":"Cancel","DELETE":"Delete Wiki","SAVE":"Delete this wiki ","BUSY":"Loading...","TITLE":"Are you sure you want to delete this wiki?","ACTION_TOOLTIP":"Delete this wiki.","OK":"Delete this wiki","ERROR_DELETE":"Couldn't delete Wiki.","ACTION":"Delete wiki"},"WIKI_ACCESS":{"TITLE":"Manage Access","EDITORS_SETTINGS":{"EDITORS_AND_OWNERS":"Wiki editors and managers only","TITLE":"Who can edit this wiki?","ALL_LOGGED_IN":"All logged in users"},"READERS_SETTINGS":{"ALL_USERS":"All users","MEMBERS_ONLY":"Wiki members only","TITLE":"Who can read this wiki?"},"VISIBILITY_SETTINGS":{"TITLE":"Who can find this wiki?","EVERYONE_PUBLIC":"Everyone (public)","MEMBERS_AND_OWNERS":"Only Wiki Members and Owners (restricted)"},"ERROR":"The settings could not be changed.  Please try again later.","SAVE":"Save"},"REMOVE_MEMBER":{"NOSUCHMEMBER":"The member you are trying to remove does not exist. ","UNAUTHORIZED":"You don't have enough privileges to remove this member.","CONFIRM":"Are you sure you want to remove member ${0}?","TITLE":"Remove Member","ACTION_TOOLTIP":"Remove this member from the Wiki","ACTION":"Remove"},"WIKI_HOME":{"HAS_CREATED":"${0} created ${1} ${time}","CREATED":"Created ${time}","NODESCRIPTION":"No description","SIDEBAR":{"RECOMMENDED":"recommended","MOSTRECOMMENDED":"Most Recommended","CLICKTOCOLLAPSESECTION":"click to collapse section","NO_ITEMS":"No items found","POPULARTAGS":"Popular Tags","MOSTCOMMENTED":"Most Comments","MOSTVISITS":"Most Visits","SEARCHBOX":"Find tags"},"HAS_UPDATED":"${0} updated ${1} ${time}"},"NOTIFY_COMMENT":{"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","NOTIFY":"Comments","NOTIFY_TOOLTIP":"Send me e-mails when people comment on this page","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."}},"NOTIFY_CONTENT":{"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","NOTIFY":"Page changes","NOTIFY_TOOLTIP":"Send me e-mails when the contents of this page change","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."}},"WIKI":{"REFERENCE":{"HORIZONTAL":"---- horizontal line","BOLD":"**bold**","TABLES":"Tables:","CENTERED_PARAGRAPH":"%%(text-align: center)centered paragraph%%","FULL_GUIDE":"Full guide","HEADINGS":"Headings:","LINK":{"CURRENT_PLACE_FILE":"[[/file/same_place_file_link]]","IMAGE":"{{imageURL|alt_text}}","ANOTHER_PLACE_PAGE":"[[/personalplace/userid/page_link]]","ANOTHER_PLACE_FILE":"[[/personalplace/userid/file/file_link]]","CURRENT_PLACE_PAGE":"[[/same_place_page_link]]","ATTACHMENT":"[[^attachment_link]]","PAGE":"[[wiki_page_link]]","URL":"[[URL|link_text]]"},"TEXTFORMATTING":"Text formatting:","STRIKE":"--strikethrough--","LISTS":"Lists:","INDENT_ONCE":"> indent once","H1":"= Head 1 =","H2":"== Head 2 ==","H3":"=== Head 3 ===","TABLE":{"HEADER":"|=table head|=head 2|","CELL":"|table cell|cell 2|"},"MARKUP_REFERENCE":"Wiki markup guide","BULLETED":{"FIRST":"* bulleted item","SUB":"** indented bulleted item"},"ITALICS":"//italics//","NUMBERED":{"FIRST":"# numbered item","SUB":"## indented numbered item"},"UNDERLINE":"__underline__","LINKING":"Linking:","INDENT_TWICE":">> indent twice"}},"WELCOMECONTENT":{"CLOSE":"Close the \"Welcome to Wikis\" section","ICON_ALT":"Wikis logo","LEARN_MORE":"Learn More","TITLE":"Welcome to Wikis","WATCH_DEMO":"Watch Demo","BLURB":"Use Wikis to create a central, collaborative place to manage knowledge and content with your team."},"MOVEPAGE":{"REORDER_TAB":"Reorder Peer Pages","SUBMIT_BUTTON_LABEL":"Move","CANNOTCHOOSEASCHILD":"You cannot choose a descendant of the current page as a parent","DOWN":"Move Down ","CANNOTCHOOSEASPARENT":"You cannot choose the current page as a parent","MAKETOPLEVEL":"Make this a top level page","CURRENTPAGELABEL":"${0} (current page)","LIST_TEXT1":"Choose a parent page from the list of pages in this wiki or ","LIST_TEXT2":"choose a parent page from the list of pages in this wiki","TITLE":"Move This Page","MANUAL_TEXT1":"enter the page name manually","MANUAL_TEXT2":"Enter a parent page name manually or ","NONEXISTING_PARENT":"The page you typed does not exist. Type an existing page, or click \"Browse...\" to select an existing page.","REORDER_LABEL":"Reorder children of ${0}:","CHOOSE_BUTTON":"Browse...","INPUT_LABEL":"Type or browse for a parent page: ","UP":"Move Up","CANCEL_BUTTON_LABEL":"Cancel","TOPLEVEL":"top level","PARENT_TAB":"Find Parent Page","CHOOSE_BUTTON_TOOLTIP":"Browse pages","REORDER_LABEL2":"Reorder top level"},"PIVOTS":{"MEDIA_DESC":"All files from ${userName} visible to you.  ","ACTIVITY_DESC":"Changes made by ${userName}","WHATS_NEW_GLOBAL_DESC":"New events from everyone","PROFILE_TOOLTIP":"View this person's profile","MEDIA_LONG":"${0}'s Place ","ACTIVITY_LONG":"${0}'s Changes ","MEDIA":"Files","MY_WATCHLIST_TOOLTIP":"View people on your watchlist","MY_MEDIA_DESC":"All of your files.","SHARED_WITH_ME_DESC":"All of the shares that other people have created for you.  To see information about each file, click 'more'.","WHATS_NEW_GLOBAL_LONG":"What's new for everyone ","ACTIVITY_TOOLTIP":"See what this person has done or what has changed in this wiki","MY_MEDIA_LONG":"${0}'s Place ","SHARED_WITH_ME_LONG":"Shared With Me ","ACTIVITY":"History","MY_MEDIA_TOOLTIP":"View files and pages in your wiki","SHARED_WITH_ME":"Shared With Me","WHATS_NEW_GLOBAL":"What's new for everyone","SHARED_BY_ME_DESC":"All of the shares that you have created for other people.  To see information about each file, click 'more'.","WATCHLIST_DESC":"Displaying the ${userName}'s watchlist.","MEDIA_TOOLTIP":"View this person's wiki","SHARED_BY_ME_LONG":"Shared By Me ","WATCHLIST":"Watchlist","SHARED_BY_ME":"Shared By Me","WATCHLIST_LONG":"${0}'s Watchlist ","MY_WATCHLIST_DESC":"Displaying your watchlist.","SHARED_WITH_ME_TOOLTIP":"View shares that other people have created for you","WHATS_NEW_PERSONAL_DESC":"New events in your watchlist","PROFILE":"Profile","WHATS_NEW_PERSONAL_LONG":"What's new for me ","MY_MEDIA":"My Files","SHARED_BY_ME_TOOLTIP":"View shares that you have created for other people ","WHATS_NEW_PERSONAL":"What's new for me","WATCHLIST_TOOLTIP":"See who this person is watching"},"MM_TAG":{"TYPE":"Type a tag","ADD":"Add another tag","FIND":"Find a tag","SELECTED":"Selected Tags","WARNING":"More than 3 tag filters can not be applied. Remove at least one filter before filtering by another tag. "},"SHARE_PAGE":{"COUNT_OTHERS_PUBLIC_1":"${0} people","SEARCH_TOOLTIP":"Search the directory","SHARE_PERMISSION":"Make these people contributors to this page","COUNT_OTHERS_SINGLE_PUBLIC":"This page is public and is shared with ${0}.","SHARE_WITH":"Share with:","COUNT_NONE_PUBLIC":"This page is public and is not shared with anyone.","SELECT_USER":"Share With:","COUNT_OTHERS_PUBLIC":"This page is public and is shared with ${0}.","PROPAGATE_SHARED":"All readers can share this page","WARN_LONG_MESSAGE":"The message is too long.","COUNT_OTHERS_SINGLE_1":"1 person","CANCEL":"Cancel","PROPAGATE":"Allow this page to be shared by other people","ERROR":"The page could not be shared.  Please try again later.","REMOVE_USER_TOOLTIP":"Remove user","NOT_LOGGED_IN_ERROR":"You must be logged in to share this page.  Click 'OK' to be prompted to log in.","SELECT_USER_ERROR":"Please select a person to share with.","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you and cannot be shared.","PROPAGATE_OWNER":"Only you can share this page","SELF_REFERENCE_ERROR":"You cannot share this page with yourself.","DIALOG_TITLE":"Share a Page","TRIM_LONG_MESSAGE":"Shorten message?","PROPAGATE_PUBLIC":"Everyone can share this page","CANCEL_ERROR":"The page was not shared because the request was cancelled.  Click 'OK' to try again.","COUNT_NONE":"This page is not shared with anyone.","TRIM_LONG_DESCRIPTION_MESSAGE":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","OK":"OK","MAX_SHARES_ERROR":"The maximum number of shares has been exceeded.","SHARE_TOOLTIP":"Allow others to read or contribute to this page","TIMEOUT_ERROR":"The page was not shared because the server could not be contacted.  Click 'OK' to try again.","ADD_FROM_FAVORITES":"Share with a person from your favorite wikis","WARN_LONG_DESCRIPTION":"The description is too long.","BUSY":"Sharing...","COUNT_OTHERS_1":"${0} people","ACCESS_DENIED_ERROR":"You no longer have permission to share this page.","OWNER_REFERENCE_ERROR":"You cannot share with the owner of the page.","COUNT_OTHERS_SINGLE":"This page is shared with ${0}.","TRIM_LONG_DESCRIPTION":"Shorten description?","COUNT_OTHERS_SINGLE_PUBLIC_1":"1 person","EXPAND_SECTION":"Share with specific people...","COUNT_OTHERS":"This page is shared with ${0}.","MESSAGE_LABEL":"Message:"},"RECOMMEND":{"ONE_HAS_RECOMMENDED":"${0} has recommended this file.","RECOMMEND":"Recommend this file.","UNRECOMMEND":"Remove your recommendation.","LOADING":"Loading...","ONE":"1 person","FIRST_TO_RECOMMEND":"Be the first to recommend this file.","RECOMMEND_COUNT_MANY":"${0} recommendations","ERROR_TIMEOUT":"Your recommendation could not be saved because the server could not be contacted.  Click the button to try again.","PAGE":{"ONE_HAS_RECOMMENDED":"${0} has recommended this page.","RECOMMEND":"Recommend this page.","UNRECOMMEND":"Remove your recommendation.","LOADING":"Loading...","ONE":"1 person","FIRST_TO_RECOMMEND":"Be the first to recommend this page.","ERROR_TIMEOUT":"Your recommendation could not be saved because the server could not be contacted.  Click the button to try again.","ERROR_CANCEL":"Your recommendation could not be saved because the request was cancelled.  Click the button to try again.","NOT_RECOMMENDED":"This page has not been recommended.","YOU_AND_X_HAVE_RECOMMENDED":"${0}, including you, have recommended this page.","UNRECOMMEND_TOOLTIP":"Remove your recommendation from this page\t","RECOMMEND_TOOLTIP":"Recommend this page to your colleagues","X_HAVE_RECOMMENDED":"${0} have recommended this page.","OK":"OK","FIRST_TO_RECOMMEND_TOOLTIP":"Recommend this page to your colleagues","CANCEL":"Cancel","ACCESS_DENIED":"Your recommendation could not be saved because the page has been deleted or is no longer visible.","NOT_FOUND":"Your recommendation could not be saved because the page has been deleted or is no longer visible.","ERROR_RETRIEVE":"Unable to retrieve recommendations at this time.","ERROR_SAVE":"Your recommendation could not be saved.  Please try again later.","YOU_HAVE_RECOMMENDED":"You have recommended this page.","MANY":"${0} people"},"ERROR_CANCEL":"Your recommendation could not be saved because the request was cancelled.  Click the button to try again.","NOT_RECOMMENDED":"This file has not been recommended.","YOU_AND_X_HAVE_RECOMMENDED":"${0}, including you, have recommended this file.","NOT_RECOMMENDED_ICON":"Not recommended icon","UNRECOMMEND_TOOLTIP":"Remove your recommendation from this file","RECOMMEND_TOOLTIP":"Recommend this file to your colleagues","X_HAVE_RECOMMENDED":"${0} have recommended this file.","OK":"OK","FIRST_TO_RECOMMEND_TOOLTIP":"Recommend this file to your colleagues","RECOMMENDED_ICON":"Recommended icon","CANCEL":"Cancel","ACCESS_DENIED":"Your recommendation could not be saved because the file has been deleted or is no longer visible.","NOT_FOUND":"Your recommendation could not be saved because the file has been deleted or is no longer visible.","ERROR_RETRIEVE":"Unable to retrieve recommendations at this time.","ERROR_SAVE":"Your recommendation could not be saved.  Please try again later.","ADD_REMOVE":"Add or remove your recommendation","YOU_HAVE_RECOMMENDED":"You have recommended this file.","MANY":"${0} people","RECOMMEND_COUNT_ONE":"1 recommendation"},"ADD_FAVORITE":{"ACTION":"Add To Favorites"},"WIKI_DETAILS":{"ATTACHMENTS":"Attachments","ABOUT":"About","PAGEINFO":"Page Info","HISTORY":"History of Changes"},"HTML":{"REFERENCE":{"MARKUP_REFERENCE":"HTML guide","ITALICS":"<em>italics</em>","H1":"<h1>Large heading</h1>","H2":"<h2>Medium heading</h2>","H3":"<h3>Small heading</h3>","INDENT_ONCE":"<div style=\"margin-left: 40px\">indent once</div> ","LINK":{"URL":"<a href=\"http://www.example.com\">Example link</a>"},"TABLE":{"CLOSE":"</table>","OPEN":"<table>","TR":{"OPEN":"<tr>","CLOSE":"</tr>"},"HEADER1":"<th>header 1</th>","CELL1":"<td>cell 1</td>","HEADER2":"<th>header 2</th>","CELL2":"<td>cell 2</td>","TBODY":{"OPEN":"<tbody>","CLOSE":"</tbody>"}},"STRIKE":"<strike>strikethrough</strike>","BOLD":"<strong>bold</strong>","LIST":{"CLOSE":"</li>","ALPHA":{"SUB1":"<li>b.a</li>","FIRST":"<li>a</li>","SUB2":"<li>b.b</li>","THIRD":"<li>c</li>","SECOND":"<li>b"},"UNORDERED":{"OPEN":"<ul>","TITLE":"Unordered list:","CLOSE":"</ul>"},"ORDERED":{"OPEN":"<ol>","TITLE":"Ordered list:","CLOSE":"</ol>"},"NUMBER":{"SUB1":"<li>2.1</li>","FIRST":"<li>1</li>","SUB2":"<li>2.2</li>","THIRD":"<li>3</li>","SECOND":"<li>2"}},"UNDERLINE":"<u>underline</u>","INDENT_TWICE":"<div style=\"margin-left: 80px\">indent twice</div>","CENTERED_PARAGRAPH":"<div style=\"text-align: center\">centered paragraph</div>"}},"CREATE_SIBLING_PAGE":{"ACTION":"Create Peer","ACTION_TOOLTIP":"Create a new peer page."},"APP_NAME_TITLE_BAR":"Wikis","PAGECREATE":{"ERROR_CANCEL":"The page was not created because the request was cancelled.  Click 'Create' to retry your request.","BREADCRUMBS":{"LAST":"New Page"},"WILLBECHILDOF":"This page will be created as a child of: $(0} ","ERROR_NOT_LOGGED_IN":"You must be logged in to create this page.  Click 'Create' to be prompted to log in.","ERROR_ACCESS_DENIED":"The page could not be created because you are not a contributor.","ERROR_TIMEOUT":"The page was not created because the server could not be contacted.  Click 'Create' to retry your request.","ERROR_QUOTA_VIOLATION":"The page could not be created because the wiki is almost full.  To create this page, ${0} of files, attachments, or versions would have to be removed. ","ERROR_MAX_CONTENT_SIZE":"The page could not be created because it is larger than the maximum allowed page size of ${0}"},"NOTIFY":{"FILE":{"NOTIFY":"Notify me when this file is modified.","UNSUBSCRIBE":"You will no longer receive notifications about this file.","SUBSCRIBE":"You will now receive notifications about modifications and comments on this file."},"DELETE":{"TIMEOUT":"Notification could not be disabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not disabled because the request was cancelled.","ERROR":"Notification could not be disabled. Please try again later."},"ENABLE_SUCCESS":"E-mail notification enabled.","SUCCESS_IMG":"Success","NO_EMAIL":"You must have an e-mail address defined in order to receive notifications","DISABLE_SUCCESS":"E-mail notification disabled.","CREATE":{"TIMEOUT":"Notification could not be enabled because the server could not be contacted. Please try again later.","CANCEL":"Notification was not enabled because the request was cancelled.","ERROR":"Notification could not be enabled. Please try again later."},"PAGE":{"NOTIFY":"Notify me when this page is modified.","UNSUBSCRIBE":"You will no longer receive notifications about this page.","SUBSCRIBE":"You will now receive notifications about modifications and comments on this page."}},"UPLOAD_FILE":{"WARN_LONG_FILENAME":"The file name is too long. ","TAGS_LABEL":"Tags:","SELECT_USER":"Please select one or more people to share with","WARN_LONG_MESSAGE":"The message is too long.","WARN_LONG_TAG":"The tag '${0}' is too long.","ACTION_TOOLTIP":"","CANCEL":"Cancel","TRIM_LONG_FILENAME":"Shorten file name?","TRIM_TAG":"Shorten tag?","SELECT_FILE":"Please select a file to upload","ERROR":"The file could not be uploaded.  Please try again later","TRIM_LONG_MESSAGE_CONFIRM":"Shortening will remove the text beyond the message limit.  Click 'OK' to shorten or 'Cancel' to edit the message yourself.","ERROR_ACCESS_DENIED":"The file could not be replaced because you are not a contributor to this wiki.","ACTION":"Upload a File","WARN_NO_FILENAME":"File name is a required field.","NOTE_LABEL":"Note: ","TRANSFER":"Uploading ${0} @ ${1}/s ","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","ERROR_TIMEOUT":"The file could not be uploaded because the server could not be contacted.  Click 'OK' to try again.","DIALOG_TITLE":"Upload File","TRIM_LONG_MESSAGE":"Shorten message?","ERROR_MAX_CONTENT_SIZE":"The file could not be uploaded because it is larger than the maximum allowed file size of ${0}","OK":"OK","ERROR_QUOTA_VIOLATION":"The file could not be uploaded because the wiki is almost full.  To upload this file, ${0} of files, attachments, or versions would have to be removed.","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","WARN_LONG_TAGS":"The specified tags are too long.","WARN_INVALID_CHARS_IN_NAME":"File names may not contain the following characters: \\ / : * ? \" < > | [ ]","WARN_LONG_DESCRIPTION":"The description is too long. ","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","CONTENTS_LABEL":"File: ","BUSY":"Uploading...","DESCRIPTION_LABEL":"Description: ","ERROR_NOT_LOGGED_IN":"You must be logged in to upload this file.  Click 'OK' to be prompted to log in.","CONFIRM_REPLACE":"Another file with the same name already exists in this file stream.  Do you wish to replace the contents of the existing file?\nNote: Only the contents of the file will be changed, all other information will remain the same.","PUBLIC_LABEL":"Make this file public (visible to everyone)","TRIM_LONG_DESCRIPTION":"Shorten description?","VISIBILITY_LABEL":"Visibility: ","ERROR_CANCEL":"The file could not be uploaded because the request was cancelled.  Click 'OK' to try again.","TRIM_TAGS":"Shorten tags?","NAME_LABEL":"File name: "},"NOTIFY_FILE":{"SUBSCRIBE":{"CONTENT":"You will now recieve notifications when this file is changed.","ALL":"You will now recieve notifications when this file is changed or commented on.","COMMENT":"You will now recieve notifications when this file is commented on."},"ERROR":"Your notification settings were not changed due to an error.  Please try again.","LABEL":"Notify me of: ","UNSUBSCRIBE":{"CONTENT":"You will no longer recieve notifications when this file is changed.","ALL":"You will no longer recieve notifications when this file is changed or commented on.","COMMENT":"You will no longer recieve notifications when this file is commented on."}},"ERROR":{"GENERAL":"An error occured retrieving the information.","NOURL":"No URL specified"},"UNSAVED_CHANGES":{"ALERT":"You have unsaved changes to the following pages:","EXPIRES":{"DAY":"Will be deleted ${EEee} at ${time}","YEAR":"Will be deleted ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Will be deleted ${MMM} ${dd}","TODAY":"Will be deleted today at ${time}","YESTERDAY":"Scheduled for deletion"},"AUTOSAVED":{"DAY":"${name} page in the ${wikiname} wiki autosaved ${EEee} at ${time}","YEAR":"${name} page in the ${wikiname} wiki autosaved ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${name} page in the ${wikiname} wiki autosaved ${MMM} ${dd}","TODAY":"${name} page in the ${wikiname} wiki autosaved today at ${time}","YESTERDAY":"${name} page in the ${wikiname} wiki autosaved yesterday at ${time}"},"AUTOSAVED_EXPIRES":{"DAY":"${name} page in the ${wikiname} wiki autosaved ${EEee} at ${time}. ${expires}","YEAR":"${name} page in the ${wikiname} wiki autosaved ${date_long}. ${expires}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${name} page in the ${wikiname} wiki autosaved ${MMM} ${dd}. ${expires}","TODAY":"${name} page in the ${wikiname} wiki autosaved today at ${time}. ${expires}","YESTERDAY":"${name} page in the ${wikiname} wiki autosaved yesterday at ${time}. ${expires}"},"PAGE_AUTOSAVED":{"DAY":"This page has unsaved changes that were autosaved ${EEee} at ${time}","YEAR":"This page has unsaved changes that were autosaved ${date_long}","FULL":"This page has unsaved changes that were autosaved ${EEEE}, ${date_long} ${time_long}","MONTH":"This page has unsaved changes that were autosaved ${MMM} ${dd}","TODAY":"This page has unsaved changes that were autosaved today at ${time}","YESTERDAY":"This page has unsaved changes that were autosaved yesterday at ${time} "}},"VERSIONS":{"ERROR_REQUEST_UNKNOWN":"An unknown error has occurred.","NEXT":"Next","VIEW_MOST_RECENT":"View most recent","COMPARE_RECENT":"Compare to most recent","TO":"to:","COUNT":"${0}-${1} of ${2}","DELETE":"Delete","DELETEERROR":"The version was not deleted due to an error.","LOADING":"Loading versions...","PREVIOUS":"Previous","DELETE_ALL_CONFIRM":"Are you sure you want to delete all versions prior to ${0}?","REVERT_CONFIRM":"You are about to replace the current version of this page with version ${0}, which was created ${1} by ${2}. Do you want to proceed?","NEW_CHANGED":"New/Changed","COMPARING":"Comparing wiki text of:","REVERT":{"ERROR_CANCEL":"The version was not restored because the request was cancelled.  Click 'Restore' again to retry your request.","ERROR_NAME_EXISTS":"The version could not be restored because another page or file has the same name.","ERROR_NOT_FOUND":"The version could not be restored because it has been deleted or is no longer visible to you.","ERROR_ACCESS_DENIED":"The version could not be restored because you are not a contributor.   ","ERROR_TIMEOUT":"The version was not restored because the server could not be contacted.  Click 'Restore' again to retry your request.","GENERIC_ERROR":"The version could not be restored because of an unknown error.  Click 'Restore' again to retry your request.","ERROR_QUOTA_VIOLATION":"The version could not be restored because it would cause the wiki to exceed its size quota.","ERROR_MAX_CONTENT_SIZE":"The version could not be restored because it is larger than the maximum allowed page size of ${0}"},"BY":"by ","PAGE":"Page","DELETED":"Deleted","REVERT_VERSION":"Restore version ${0}","MOST_RECENT":"(most recent)","SHOW_COMPARISON":"Show comparison","COMPARE_VERSION":"Compare version","ERROR_REQUEST_TIMEOUT":"The server could not be contacted.","CONTENT":{"DOWNLOAD":"Download (${0})","VIEW":"View","REVERT":"Restore"},"REVERT_DESCRIPTION":"Restored from version ${0}","ERROR":"Unable to load version information.","NO_VERSIONS":"No versions","SHOW":"Show","DATE":{"RELATIVE_TIME":{"DAY":"${EEee} at ${time}","YEAR":"${MMM} ${dd},${YYYY}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"${MMM} ${dd}","TODAY":"Today at ${time}","YESTERDAY":"Yesterday at ${time}"},"UPDATED":{"DAY":"Updated ${EEee} at ${time}","YEAR":"Updated ${date_long}","FULL":"${EEEE}, ${date_long} ${time_long}","MONTH":"Updated ${MMM} ${dd}","TODAY":"Updated today at ${time}","YESTERDAY":"Updated yesterday at ${time}"},"AM":"AM"},"INFO":"Version ${0} created ${1} by","DELETE_ALL":"Delete all versions prior to version","ERROR_REQUEST_CANCELLED":"The request was cancelled.","KEY":"Key:","VERSION_NUMBER":"Version ${0} "},"APP_LOAD":"Welcome to Wikis","LOGIN":{"PASSWORD_LABEL":"Password:","LEGAL":"Licensed Materials - Property of IBM Corp. © IBM Corporation 2007, 2009. IBM, the IBM logo, ibm.com and Lotus are trademarks of IBM Corporation in the United States, other countries, or both. U.S. Government Users Restricted Rights: Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp. Please see the About page for further information.","ICON_TITLE":"Wikis icon","DESCRIPTION_TITLE":"What can you do with Wikis?","PRODUCT":"Wikis","USER_LABEL":"User name:","DESCRIPTION":"Create a central, collaborative place to manage knowledge and content with your team. With Wikis, everyone on your team can quickly contribute and share information.","TITLE":"Log in to Wikis","ERROR":"Your user name and/or password does not match any existing accounts.  Please check and try again.","PRODUCT_BLURB":"The easy way to create content together.","BUTTON":"Log In"},"WIKI_EDITOR":{"STYLE":{"LTR_LANG":"LTR Language","RTL_LANG":"RTL Language"}},"PRINT_PAGE":{"ACTION":"Print Page","ACTION_TOOLTIP":"Print this page"},"HEADER":{"UPDATES_TITLE":"Click to view the list of updated Wikis","LOGOUT":"Log out","LOGOUT_TITLE":"Click to log out of Wikis","MYWIKIS":"My Wikis","MEMBERS":"Members of ${0}","PAGEINDEX":"Pages Index","TAGGEDWIKIS":"Search Results","WIKICREATE":"Start a Wiki","WIKICREATE_TITLE":"Click to start a Wiki","PUBLICWIKIS":"Public Wikis","PUBLICWIKIS_TITLE":"Click to view the list of public Wikis","UPDATES":"Latest Updates","LOGIN":"Log in","LOGO":"Lotus Connections","LOGIN_TITLE":"Click to log in to Wikis","MYWIKIS_TITLE":"Click to view the list of Wikis you are a member of","MYPAGES":"Pages Edited by ${0}"},"PAGEEDIT":{"CREATE_PAGE":"Create a Page","CONVERT_TO_WIKIMARKUP_ERROR":"Error converting to wiki text","EDIT_TITLE":"Click to edit title","TAGS":"Tags:","HTML_SOURCE":"HTML Source","RICH_TEXT":"Rich Text","ERROR_CONCURRENT_MODIFICATION":"This page was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Saving the page will overwrite those edits.   ","DRAFT":"Draft","SAVE_LABEL":"Save","CANCEL_LABEL":"Cancel","WARN_LONG_TAG":"The tag '${0}' is too long.","PROPAGATE_LABEL":"Allow this page to be shared by other people?","ACTION_TOOLTIP":"Click to edit this page","TRIM_TAG":"Shorten tag?","MINOR_CHANGE_TITLE":"Notification:","CREATE_LABEL":"Create","ERROR_ACCESS_DENIED":"The page could not be edited because you are not a contributor.","ACTION":"Edit","NOTE_LABEL":"Note: ","SHARE_PROPAGATE":"Sharing:","ERROR_NOT_FOUND":"The page could not be edited because it has been deleted or is no longer visible to you.","MINOR_CHANGE":"Minor change (no notifications will be sent)?","ERROR_EMPTY_NAME":"Please enter a name.","MAKE_PUBLIC":"Make this page public (visible to everyone)?","ERROR_TIMEOUT":"The page was not edited because the server could not be contacted.  Click 'Save' to retry your request.","NAVIGATE_AWAY_CHOICE":"Are you sure you want to abandon your changes?  Press OK to continue or cancel to return to editing.","ERROR_MAX_CONTENT_SIZE":"The page could not be edited because it is larger than the maximum allowed page size of ${0}","SAVE_AND_CLOSE_LABEL":"Save and Close","QUICKLINK_TOO_LONG":"The selected link name is too long and needs to be shortened.","CHANGE_SUMMARY":"Summary of changes:","ERROR_QUOTA_VIOLATION":"The page could not be edited because it would cause the wiki to exceed its size quota.","WIKI_MARKUP":"Wiki Text","INVALID_XHTML":"Please ensure the page source is valid XHTML.  Switching to rich text mode from source mode will convert HTML to XHTML.","ERROR_SHORTEN_PAGE_DESCRIPTION":"Shorten page description?","CONVERT_TO_RICHTEXT_ERROR":"Error converting wiki text to rich text","ERROR_DESCRIPTION_TOO_LONG":"The page description is too long. ","ERROR_SHORTEN_PAGE_NAME":"Shorten page name?","WARN_LONG_TAGS":"The specified tags are too long.","WARN_INVALID_CHARS_IN_NAME":"Page name may not contain the following characters: \\ / : * ? \" < > | [ ]","ERROR_NAME_TOO_LONG":"The page name is too long. ","FIX_INVALID_CHARS_IN_NAME":"Replace invalid characters with '_'?","SUBMIT_LABEL":"Save","ERROR_NAME_EXISTS":"The page cannot be renamed because another page or file has the same name.","SAVE_AND_CLOSE":"Save and Close","BREADCRUMBS":{"LAST":"Editing"},"ERROR_NOT_LOGGED_IN":"You must be logged in to edit this page.  Click 'Save' to be prompted to log in.","VISIBILITY_LABEL":"Visibility:","ERROR_CANCEL":"The page was not edited because the request was cancelled.  Click 'Save' to retry your request.","PREVIEW":"Preview","TRIM_TAGS":"Shorten tags?"},"USERSEARCH":{"SEARCH_USERS_BUTTON":"Search","TITLE_BLURB":"Need to find someone's Wiki?  Enter the person's name or e-mail address in the search field, below.  As you type, we'll show you a list of possible matches. If you can't find the person you are searching for in the list, just click the Search button to see a list of all the possible matches in the directory.","LOADING":"Loading...","ERROR_LINK":"Search for People","TITLE":"Search for People","USER_EMAIL":"E-mail","NO_MATCHES":"No matches","USER_NAME":"Name","NO_RESULTS":"No results for '${0}'","SEARCH_DIRECTORY":"Search the directory..."},"INSERTLINK":{"VALIDATE_ATTACHMENT_MISSING":"Please select an attachment","CURRENT_SELECTION":"Current Selection: ","SUBMIT_BUTTON_LABEL":"OK","NO_ITEMS":"There are no items in this wiki","OPTION_ATTACHMENT":"Attachment","PAGE_NAME_LABEL":"Page name: ","IMAGE_TOOLTIP":"Insert or edit an image","IMAGE_FILE_LABEL":"Image file:","CHOOSE_PAGE_LABEL":"Choose a page:","URL_LABEL":"URL:","EDIT_LINK":"Edit Link","TYPE_LABEL":"Type:","TITLE":"Insert/Edit Link","FILE_LABEL":"File:","TITLE_LABEL":"Link display text:","FROM_LIST_LABEL":"Select from the page list","LINK_TO_UPLOAD_IMAGE":"Upload a new image attachment and link to it","ANOTHER_PERSONS_PLACE":"Another person's wiki","CANCEL_BUTTON_LABEL":"Cancel","VALIDATE_UPLOAD_IMAGE_TYPE":"Please select an image file","EDIT_IMAGE":"Edit Image","TYPE_FILES":"Files","PLACE_WHERE_IMAGE":"Place where the image file is located:","REMOVE_LINK":"Remove Link","SEARCH_FOR_USER":"Search for a person:","NO_ATTACHMENTS":"This page has no existing attachments","LINK_TO_UPLOAD":"Upload a new attachment and link to it","NO_IMAGE_FILES":"There are no image files in this wiki","QUICK_LINK_ALTERNATIVE_MESSAGE":"The selection contains some invalid characters. Please provide an alternative link name.","SAME_AS_PAGE":"Same place as this page","VALIDATE_IMAGE_LINK_MISSING":"Please select a file","IMAGE_TITLE_LABEL":"Alternate text:","QUICK_LINK_DIALOG_TITLE":"Wiki Link","LINK_TO_EXISTING":"Link to an existing attachment of this page","ENTER_MANUALLY_LABEL":"Enter the page name manually","VALIDATE_LINK_MISSING":"Please select a page or file","OPTION_IMAGE_FILE":"Image file","CURRENT_LINK_NAME_NOT_VALID":"The new link name is not valid","ATTACHMENT_TYPE":"Attachment type:","INVALID_CHARS_MESSAGE":"Page name contains invalid characters","VALIDATE_URL_MISSING":"Please enter a URL","NEW_LINK_NAME":"New link name: ","LINK_TO_EXISTING_IMAGE":"Link to an existing image attachment of this page","OPTION_EXTERNAL_URL":"External URL","DESCRIPTION_LABEL":"Description:","TOOLTIP":"Insert or edit a link","INVALID_CHARS_MESSAGE_PART1":"Characters not permitted in a link name include:","OPTION_PAGE_OR_FILE":"Page or file","PLACE_WHERE":"Place where the page or file is located:","NO_IMAGE_ATTACHMENTS":"This page has no existing image attachments","INVALID_CHARS_LIST":"\\ / : * ? \" < > | [ ]","TYPE_ALL":"All","WIKI_TAB":"Wiki Page","NAME_LABEL":"File name:","IMAGE_TITLE":"Insert/Edit Image","QUICK_LINK_BUTTON_LABEL":"Quick Link","TYPE_PAGES":"Pages"},"SUBSCRIBE_TO_PAGE":"Subscribe to this page","DELETE_PAGE":{"UNAUTHORIZED":"You don't have enough privileges to delete this page.","CONFIRM":"Are you sure you wish to delete page ${0}?","ACTION_TOOLTIP":"Delete this page from the wiki.","ACTION":"Delete Page","NOSUCHPAGE":"The page you are trying to delete does not exist."},"BACK_TO_WIKI":"< Back to ${0}","OFFLINEHOME":{"NOTAVAILABLE":"Offline mode is not available unless Google Gears is installed and you have granted it access to the current domain.","USERS":"Users you have access to offline:"},"BACK_TO_APP":"Back to Wikis","PAGE":{"EXPAND_ERROR":{"CANCEL":"The details of this page could not be loaded because the server could not be contacted.","NOT_FOUND":"The details of this page could not be loaded because the page has been deleted or is no longer visible.","TIMEOUT":"The details of this page could not be loaded because the request was cancelled by the server.","GENERIC":"An error prevented the details of this page from being displayed.  Please try again later."}},"JAVASCRIPT_DISABLED":["JavaScript has been disabled in your web browser.  Wikis requires JavaScript in order to function.  Once you have turned it on, please refresh the page.","Refresh the page to continue."],"SITEMAP":{"SITEMAP":"Site Map"},"AUTOSAVE":{"FAILED":"Autosave failed"},"ADD_MEMBERS":{"READERS":"Readers:","CONTRIBUTORS":"Contributors:","NO_MEMBERS_ERROR":"Please select one or more people or groups to add.","BUSY":"Adding...","TITLE":"Add Members","ACTION_TOOLTIP":"Add people or groups as members of this Wiki","CAPTION":"Who do you want to add to this wiki?","EDITORS":"Editors:","ACTION":"Add Members","MANAGERS":"Managers:"},"TOGGLE_SECTION_NAMED":"Expand and collapse ${0} section","WIKI_NAV_TOOLS":{"TITLE":"Site Tools","MEMBERS":"Members and Roles","WIKI_ACCESS":"Wiki Access","ORGANIZE_PAGES":"Organize Pages","SETTINGS":"Settings"},"WIKI_BREADCRUMBS":{"CONFIRMNEWPAGE":"Confirm new page","YOUAREHERE":"You are in:"},"WIKI_TAGS":{"NOTAGS":"Not Tagged Yet","PAGES_COUNT_MANY":"${0} pages","PAGES_COUNT_ONE":"1 page","WHATTAGS":"Tagged with:","PAGES_WITH_TAGS":"${0} with tags ${1}","WITHTAGS":"Wikis with tags:","TAGS_ICON":"Tags icon"},"EDIT_FILE":{"ERROR_NAME_EXISTS":"The file cannot be renamed because another file has the same name.","ERROR_MAX_CONTENT_SIZE":"The file could not be replaced because it is larger than the maximum allowed file size of ${0}","EDITERROR":"The file's metadata was not edited due to an error","TRANSFER":"Uploading ${0} @ ${1}/s","DIALOG_TITLE":"Edit File","ERROR_QUOTA_VIOLATION":"The file could not be replaced because the wiki is almost full.  To replace with this file, ${0} of files, attachments, or versions would have to be removed.","VISIBILITY_LABEL":"Visibility: ","DESCRIPTION_LABEL":"Description: ","REPLACE_CONFIRM":"The file you have selected has a different extension than the current file.  Click 'OK' to proceed with changing the file type.  To select a different file, click 'Cancel'","ERROR_TIMEOUT":"The file was not edited because the server could not be contacted.  Click 'OK' to retry your request.","ERROR_CONCURRENT_MODIFICATION":"This file was edited by ${user} on ${EEEE}, ${date_long} ${time_long}. Clicking 'OK' will overwrite the changes.   ","WARN_SPECIFY_NAME":"File name is a required field.","ERROR_CANCEL":"The file was not edited because the request was cancelled.  Click 'OK' to retry your request.","ERROR_ACCESS_DENIED":"The file could not be edited because you are not a contributor.","SHARE_PROPAGATE":"Sharing:","ERROR_NOT_LOGGED_IN":"You must be logged in to edit this file.  Click 'OK' to be prompted to log in.","PROPAGATE_LABEL":"Allow this file to be shared by other people","FILE_DOES_NOT_EXIST":"This file does not exist.  Please select a file using the browse button.","OK":"OK","REPLACEERROR":"The file's contents were not replaced due to an error.","NAME_LABEL":"Filename: ","BUSY":"Saving...","CANCEL":"Cancel","ERROR_FILENAME_INVALID_CHARACTERS":"The file name may not contain the characters: % & \\ \"","PUBLIC_LABEL":"Make this file public (visible to everyone)","REPLACE_LABEL":"Replace contents: ","ERROR_NOT_FOUND":"The file could not be edited because it has been deleted or is no longer visible to you."},"STOP_SHARING_PAGE":{"CONFIRM":"Are you sure you wish to remove all shares on this page?\n\n${0}","TITLE":"Stop Sharing","TIMEOUT_ERROR":"The page could not be shared because the server could not be contacted.  Click 'Stop Sharing' to try again.","CONFIRM_PUBLIC":"Are you sure you wish to remove all shares on this page?\nNote: Because this page is public, everyone will still be able to see the page.\n\n${0}","NOT_FOUND_ERROR":"The page has been deleted or is no longer visible to you.","CANCEL_ERROR":"The page could not be shared because the request was cancelled.  Click 'Stop Sharing' to try again.","ERROR":"The shares on this pages could not be removed.  Please try again later.","TOOLTIP":"Remove all shares on this page"},"WIKI_SERVICE_TITLE_BAR":"Wikis","DOCUMENTCONTENT":{"NODESCRIPPAGE":"No description for this page","VERSIONS":"Versions","SHARE_PROPAGATE_OWNER":"Allow other people to share this file?  When checked, everyone who can see the file will be able to share it.","DOWNLOAD_TOOLTIP":"Download ${0} (${1})","SHARE_PROPAGATE_PUBLIC":"Everyone can share this file.","SIZE":"Size: ","ADDED":"Added: ","SHAREDWITH":"Sharing","TAGS":"Tags: ","ABOUTPAGE":"About this page","TIMESTAMP":"${EEEE}, ${date_long} ${time_long} by ${user}","DOWNLOAD_WARN":"!","UPDATED":"Updated: ","ATTACHMENTS":"Attachments","DOWNLOAD_WARN_LONG":"This file may not download properly because it has a long file name.  To ensure a successful download, use your browser's Save As feature.","DOWNLOAD_LABEL":"Download as: ","NODESCRIPFILE":"No description for this file","PAGE":{"TIMES_DOWNLOADED":"Page views: ","DOWNLOADED_BY":"Page viewed by: ","NO_DOWNLOADS":"None","DOWNLOADS":"${0} (${1} anonymously)"},"SHARED":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to you and is shared with ${0}.","ONE":"This file is visible to you and is shared with ${0}."},"WITH":{"MANY_1":"${0} others","ONE_1":"1 person","MANY":"This file is visible to the owner and is shared with ${0}.","ONE":"This file is visible to the owner and is shared with ${0}."},"BASE":"This file is visible to the owner and is shared with you."},"DESCRIPTION":"Description:","ABOUTFILE":"About this file","ERRORS":{"ACCESS_DENIED_ANON":{"TITLE":"This file is not public","MESSAGES":"You do not have permission to view this file.  If this is your file or it has been shared with you, you must log in to Wikis first. "},"ACCESS_DENIED":{"TITLE":"This file is not public or shared with you.","MESSAGES":"You do not have permission to view this file.  The file is not public and is not shared with you."},"NOT_FOUND_ANON":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed.  You may need to log in to view this file or the owner may have deleted it."},"LOGIN":"Log in now","NOT_FOUND":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed.  Check that you have permission to view this file and that the owner has not deleted it."},"AUTH_REQUIRED_ANON":{"TITLE":"Log in to Wikis","MESSAGES":"To change your notification settings on this file you must be logged in to Wikis. "},"DEFAULT":{"TITLE":"The file could not be displayed","MESSAGES":"The file you have requested cannot be displayed - click the back button and try again. If this doesn't work report the problem to the support forum."},"OWNER_NOT_FOUND":{"TITLE":"The file could not be found","MESSAGES":"The file you have requested has been deleted."}},"COMMENTS":"Comments (${0})","PUBLIC":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to everyone and is shared with ${0}.","ONE":"This file is visible to everyone and is shared with ${0}."},"WITH":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This file is visible to everyone and is shared with ${0}.","ONE":"This file is visible to everyone and is shared with ${0}."},"BASE":"This file is visible to everyone."},"REQUIRED_NAME":"*Name: ","NAME":"Name:","DOWNLOAD":"Download (${0})","SHARE_PROPAGATE_OFF":"Only the owner can share this file.","FILE":{"TIMES_DOWNLOADED":"Downloads: ","DOWNLOADED_BY":"Downloaded by: ","NO_DOWNLOADS":"None","DOWNLOADS":"${0} (${1} anonymously)"},"CREATE_NEW_PAGE":"Create New Page","PRIVATE":"This file is visible only to you.","BROWSE_OTHER":"Browse other files from ${0}","SHARE_PROPAGATE_ON":"All readers can share this file."},"MORE_ACTIONS":{"TEXT":"More Actions","TOOLTIP":"Delete the wiki."},"CLOSE":"Close","WIKI_CREATE":{"ROLE":"Role","ERROR_SHORTEN_DESCRIPTION":"Shorten Wiki description?","ADD_DESCRIPTION_LINK":"Add a description","ADD_DESCRIPTION_TAGS_LINK":"Add a description and tags","TAGS_LABEL":"Tags:","ADD_GROUPS":"Add groups:","MEMBERSHIP":{"PRIVATE_LABEL":"Private","OPEN_DESC":"Public access with Self Join Membership","OPEN_LABEL":"Open","MODERATED_LABEL":"Moderated","MODERATED_DESC":"Public access with Request Membership","PRIVATE_DESC":"Hidden, Invitation only"},"ERROR_TITLE_TOO_LONG":"The Wiki title is too long. ","WARN_LONG_TAG":"The tag '${0}' is too long.","TITLE":"Create a New Wiki","TRIM_TAG":"Shorten tag?","ERROR_PROVIDE_TITLE":"Please provide a title for the Wiki","TITLE_LABEL":"Title:","ADD_TO_LIST":"Add to list","NAME":"Name","ERROR_TITLE_EXISTS":"A Wiki with this title already exists, please choose another","DIALOG_TITLE":"Start a Wiki","MEMBERS_LABEL":"Members:","NAVIGATE_AWAY_CHOICE":"Are you sure you want to discard your input?  Press OK to continue or cancel to return to creating a Wiki.","CREATE_BTN_LABEL":"Create Wiki","ERROR_SHORTEN_TITLE":"Shorten Wiki title?","ERROR_EMPTY_TITLE":"The Wiki title is empty. ","MEMBERSHIP_LABEL":"Membership:","ERROR_DESCRIPTION_TOO_LONG":"The Wiki description is too long. ","WARN_LONG_TAGS":"The specified tags are too long.","NAME_THIS_WIKI":"Name this wiki:","ADD_TAGS":"Add tags:","ADD_DESCRIPTION":"Add a description:","BUSY":"Creating...","FIX_INVALID_CHARS_IN_TITLE":"Replace invalid characters with '_'?","PERMISSIONSETTINGS_BTN_LABEL":"Permission Settings","ERROR_SERVER_ERROR":"An unexpected error has occurred. Please contact your system administrator.","WARN_INVALID_CHARS_IN_TITLE":"Wiki title may not contain the following characters: \\ / : * ? \" < > | [ ] ","DESC_LABEL":"Description:","ADD_MEMBERS":"Add members:","ADD_GROUPS_LINK":"Add groups","TRIM_TAGS":"Shorten tags?","ADD_DESCRIPTION_TAGS_DOITLATER":"${0} (You can do this later)"},"PAGECONTENT":{"SHARE_PROPAGATE_OWNER":"Allow other people to share this page?  When checked, everyone who can see the page will be able to share it.","SHARE_PROPAGATE_PUBLIC":"Everyone can share this page.","DOWNLOAD_WARN":"!","DOWNLOAD_PAGE_AS_PDF_TOOLTIP":"Download ${0} (${1}) as a pdf","DOWNLOAD_WARN_LONG":"This page may not download properly because it has a long name.  To ensure a successful download, use your browser's Save As feature.","NO_CONTENT":"No Content","DOWNLOAD_RTF":"RTF","SHARED":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to you and is shared with ${0}.","ONE":"This page is visible to you and is shared with ${0}."},"WITH":{"MANY_1":"${0} others","ONE_1":"1 person","MANY":"This page is visible to the owner and is shared with ${0}.","ONE":"This page is visible to the owner and is shared with ${0}."},"BASE":"This page is visible to the owner and is shared with you."},"ERRORS":{"ACCESS_DENIED_ANON":{"TITLE":"This page is not public","MESSAGES":"You do not have permission to view this page.  If this is your page or it has been shared with you, you must log in to Wikis first. "},"ACCESS_DENIED":{"TITLE":"This page is not public or shared with you.","MESSAGES":"You do not have permission to view this page.  The page is not public and is not shared with you."},"NOT_FOUND_ANON":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed.  You may need to log in to view this page or the owner may have deleted it."},"LOGIN":"Log in now","NOT_FOUND":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed.  Check that you have permission to view this page, and that the owner has not deleted it."},"AUTH_REQUIRED_ANON":{"TITLE":"Log in to Wikis","MESSAGES":"To change your notification settings on this page you must be logged in to Wikis. "},"DEFAULT":{"TITLE":"The page could not be displayed","MESSAGES":"The page you have requested cannot be displayed - click the back button and try again. If this doesn't work report the problem to the support forum."},"OWNER_NOT_FOUND":{"TITLE":"The page could not be found","MESSAGES":"The page you have requested has been deleted."}},"DOWNLOAD_HTML":"HTML","PUBLIC":{"BY":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to everyone and is shared with ${0}.","ONE":"This page is visible to everyone and is shared with ${0}."},"WITH":{"MANY_1":"${0} people","ONE_1":"1 person","MANY":"This page is visible to everyone and is shared with ${0}.","ONE":"This page is visible to everyone and is shared with ${0}."},"BASE":"This page is visible to everyone."},"SHARE_PROPAGATE_OFF":"Only the owner can share this page.","DOWNLOAD_PAGE_AS_HTML_TOOLTIP":"Download ${0} (${1}) as html","PRIVATE":"This page is visible only to you.","DOWNLOAD_PAGE_AS_RTF_TOOLTIP":"Download ${0} (${1}) as rich text","SHARE_PROPAGATE_ON":"All readers can share this page.","DOWNLOAD_PDF":"PDF","NODESCRIP":"No description for this page"},"VERSIONCOMPARISON":{"ERRORS":{"DEFAULT":{"TITLE":"Unable to show version comparison","MESSAGES":"Version ${0} cannot be used for a comparison because there is a problem converting it to wiki text.  Return to the page and try comparing other versions."},"TWO":{"TITLE":"Unable to show version comparison","MESSAGES":"Versions ${0} and ${1} cannot be used for a comparison because there is a problem converting them to wiki text.  Return to the page and try comparing other versions."}}}};dojo.provide("lconn.core.nls.strings");lconn.core.nls.strings._built=true;dojo.provide("lconn.core.nls.strings.en");lconn.core.nls.strings.en={"rs_replace":"Replace","rs_by":"By","rs_activitiesUnavailable":"The Activities service is unavailable.","rs_typeToFilter":"Type to filter this list","rs_reply":"reply","rs_copyTemplateMembers":"Use members from template","rs_ok":"OK","rs_pickCommunity":"Pick from Group List","rs_deleteEntry":"Delete","rs_views":"Views","rs_tuneOut":"Mark as Tuned Out","rs_noTemplate":"None","rs_pinError":"There was a problem attempting to pin the topic.","rs_message":"Message","rs_normalPri":"Normal Priority (Default)","rs_lastPost":"Last Post","rs_startFromTemplate":"Start Activity from this Template","rs_completedActivityLink":"Show completed Activities","rs_noActivities":"There are no activities started for this community.","rs_deleteTopic":"Delete Topic","rs_actTagsDelim":", ","rs_topicColon":"Topic: ","rs_notifyOthers":"Notify other people","rs_template":"Template","rs_customLangaugeLinkLabel":"Custom Language","rs_pagepos":"${0} - ${1} of ${2}","rs_restore":"Restore","rs_favoriteTemplate":"Mark as Favorite Template","rs_startedBy":"Started by","rs_messageColon":"Message: ","rs_tryAgain":"Try Again","rs_viewAll":"View All","rs_fileUploadSizeError":"Unable to upload file.  The file size exceeds the limit of ${0}.","rs_yesterday":"Yesterday","rs_peopleLabel":"People","rs_normalTemplate":"Mark as normal template","rs_deleteTopicConfirm":"Are you sure you want to delete this topic?","rs_navNextLabel":"Next","rs_templateOptions":"Template options","rs_title":"Title","rs_activityWidgetBriefDescription":"Track community goals.  Create to-dos and share resources.","rs_repliesParam":"{0} replies","rs_deleteReason":"You may enter a reason for the deletion (optional):","rs_markComplete":"Mark Complete","rs_actTags":"Tags: ","rs_noTopicsLoggedIn":"Ask a question, brainstorm, or simply share your ideas.","rs_markIncomplete":"Restore","rs_linkLess":"... [less]","rs_activity":"Activity","rs_edit":"Edit","rs_labelColon":"Label: ","rs_notifyColon":"Notify: ","rs_tomorrow":"Tomorrow","rs_activityWidgetDescription":"Group activities can be used to collaborate and track progress on community projects or initiatives.","rs_personColon":"Person: ","rs_linkMore":"... [more]","rs_startActivity":"Start an Activity","rs_saveError":"Unable to save the message. ","rs_re":"Re: ${0}","rs_activityFormGoal":"Activity Goal","rs_loggedOut":"You have been automatically logged out of the server due to inactivity. Copy the text you have entered to your clipboard so you won't lose it, then log in to start over.","rs_actUpdatedBy":"updated by ${0} ${1}","rs_fileUploadTypeError":"Unable to upload file.  This file type is not supported.","rs_topic":"Topic","rs_startFirstActivity":"Create Your First Activity","rs_postToJoin":"By posting to this forum, you become a member of this community. If you do not want to join this community, click cancel.","rs_quote":"Quote","rs_prioritize":"Prioritize","rs_copyOf":"Copy of ${0}","rs_navPrevLabel":"Previous","rs_notificationFail":"The notification message was not sent. Try again later and contact your system administrator if the problem persists.","rs_logIn":"Log in","rs_hide":"Hide","rs_unsubscribeTopicConfirm":"You will no longer receive notifications for this topic.","rs_unsubscribeForumConfirm":"You will no longer receive notifications for this discussion forum.","rs_notificationConfirm":"The notification message was sent successfully. ","rs_replies":"replies","rs_tunedOutPri":"Tuned Out","rs_copyActivityMembers":"Use members from activity","rs_deleteReply":"Delete Reply","rs_startTopic":"Start a topic","rs_subscribeTopicConfirm":"You are now subscribed to this topic and will receive notifications when there are updates.","rs_subscribeForumConfirm":"You are now subscribed to this forum and will receive notifications when there are new topics.","rs_activityWidgetTitle":"Activities","rs_deleteAttachmentConfirm":"Are you sure you want to delete this file?","rs_aboutThisTemplate":"About This Template","rs_postedByParam":"Last post by {0}","rs_fileUploadError":"Unable to upload file.  Please try again, or contact your system administrator if the problem persists.","rs_notifyTopicPrompt":"Notify me when anyone replies to this topic","rs_timeoutMsg":"It took too long to complete your request.","rs_newTopic":"New Topic","rs_posts":"Posts","rs_tagsLabel":"Tags","rs_replyParam":"{0} reply","rs_personLink":"Person Link","rs_errorPersists":"If the problem persists, contact your system administrator.","rs_unknownError":"An unknown server error has occurred.","rs_browser_setting":"Browser Setting","rs_feedError":"Failed to load feed.","rs_sendEmail":"Send me e-mail when anyone responds to this topic","rs_loading":"Loading...","rs_notifyTopicPromptEmail":"Notify me by e-mail when anyone replies to this topic","rs_titleCantBeEmpty":"Please enter a title before posting.","rs_typeName":"Type in a Name","rs_activityFeedLink":"Feed for these activities","rs_medPri":"Medium Priority","rs_messageTooLong":"Unable to post to discussion forum. The message exceeds the size limit of ${0}. Reduce the length of this posting and try again. ","rs_createPersonLink":"Create Person Link","rs_deleteTopicConfirmation":"This topic has been deleted.","rs_deleteAttachment":"Delete","rs_highPri":"High Priority","rs_cancel":"Cancel","rs_startFirstTopic":"Start the first topic.","rs_actDue":"Due ${0}","rs_fileUploadReplaceError":"To replace your file, first delete the existing one and upload a new one.","rs_filterListPrompt":"Type to filter this list","rs_more":"More","rs_searchDirectory":"Search Directory","rs_postedBy":"Last post by","rs_attachFile":"Attach a File","rs_noTopics":"There are no topics yet for this community.","rs_today":"Today","rs_titleTooLong":"Titles must be under ${0} characters"};dojo.provide("lconn.core.nls.strings");lconn.core.nls.strings._built=true;dojo.provide("lconn.core.nls.strings.en");lconn.core.nls.strings.en={"rs_replace":"Replace","rs_by":"By","rs_activitiesUnavailable":"The Activities service is unavailable.","rs_typeToFilter":"Type to filter this list","rs_reply":"reply","rs_copyTemplateMembers":"Use members from template","rs_ok":"OK","rs_pickCommunity":"Pick from Group List","rs_deleteEntry":"Delete","rs_views":"Views","rs_tuneOut":"Mark as Tuned Out","rs_noTemplate":"None","rs_pinError":"There was a problem attempting to pin the topic.","rs_message":"Message","rs_normalPri":"Normal Priority (Default)","rs_lastPost":"Last Post","rs_startFromTemplate":"Start Activity from this Template","rs_completedActivityLink":"Show completed Activities","rs_noActivities":"There are no activities started for this community.","rs_deleteTopic":"Delete Topic","rs_actTagsDelim":", ","rs_topicColon":"Topic: ","rs_notifyOthers":"Notify other people","rs_template":"Template","rs_customLangaugeLinkLabel":"Custom Language","rs_pagepos":"${0} - ${1} of ${2}","rs_restore":"Restore","rs_favoriteTemplate":"Mark as Favorite Template","rs_startedBy":"Started by","rs_messageColon":"Message: ","rs_tryAgain":"Try Again","rs_viewAll":"View All","rs_fileUploadSizeError":"Unable to upload file.  The file size exceeds the limit of ${0}.","rs_yesterday":"Yesterday","rs_peopleLabel":"People","rs_normalTemplate":"Mark as normal template","rs_deleteTopicConfirm":"Are you sure you want to delete this topic?","rs_navNextLabel":"Next","rs_templateOptions":"Template options","rs_title":"Title","rs_activityWidgetBriefDescription":"Track community goals.  Create to-dos and share resources.","rs_repliesParam":"{0} replies","rs_deleteReason":"You may enter a reason for the deletion (optional):","rs_markComplete":"Mark Complete","rs_actTags":"Tags: ","rs_noTopicsLoggedIn":"Ask a question, brainstorm, or simply share your ideas.","rs_markIncomplete":"Restore","rs_linkLess":"... [less]","rs_activity":"Activity","rs_edit":"Edit","rs_labelColon":"Label: ","rs_notifyColon":"Notify: ","rs_tomorrow":"Tomorrow","rs_activityWidgetDescription":"Group activities can be used to collaborate and track progress on community projects or initiatives.","rs_personColon":"Person: ","rs_linkMore":"... [more]","rs_startActivity":"Start an Activity","rs_saveError":"Unable to save the message. ","rs_re":"Re: ${0}","rs_activityFormGoal":"Activity Goal","rs_loggedOut":"You have been automatically logged out of the server due to inactivity. Copy the text you have entered to your clipboard so you won't lose it, then log in to start over.","rs_actUpdatedBy":"updated by ${0} ${1}","rs_fileUploadTypeError":"Unable to upload file.  This file type is not supported.","rs_topic":"Topic","rs_startFirstActivity":"Create Your First Activity","rs_postToJoin":"By posting to this forum, you become a member of this community. If you do not want to join this community, click cancel.","rs_quote":"Quote","rs_prioritize":"Prioritize","rs_copyOf":"Copy of ${0}","rs_navPrevLabel":"Previous","rs_notificationFail":"The notification message was not sent. Try again later and contact your system administrator if the problem persists.","rs_logIn":"Log in","rs_hide":"Hide","rs_unsubscribeTopicConfirm":"You will no longer receive notifications for this topic.","rs_unsubscribeForumConfirm":"You will no longer receive notifications for this discussion forum.","rs_notificationConfirm":"The notification message was sent successfully. ","rs_replies":"replies","rs_tunedOutPri":"Tuned Out","rs_copyActivityMembers":"Use members from activity","rs_deleteReply":"Delete Reply","rs_startTopic":"Start a topic","rs_subscribeTopicConfirm":"You are now subscribed to this topic and will receive notifications when there are updates.","rs_subscribeForumConfirm":"You are now subscribed to this forum and will receive notifications when there are new topics.","rs_activityWidgetTitle":"Activities","rs_deleteAttachmentConfirm":"Are you sure you want to delete this file?","rs_aboutThisTemplate":"About This Template","rs_postedByParam":"Last post by {0}","rs_fileUploadError":"Unable to upload file.  Please try again, or contact your system administrator if the problem persists.","rs_notifyTopicPrompt":"Notify me when anyone replies to this topic","rs_timeoutMsg":"It took too long to complete your request.","rs_newTopic":"New Topic","rs_posts":"Posts","rs_tagsLabel":"Tags","rs_replyParam":"{0} reply","rs_personLink":"Person Link","rs_errorPersists":"If the problem persists, contact your system administrator.","rs_unknownError":"An unknown server error has occurred.","rs_browser_setting":"Browser Setting","rs_feedError":"Failed to load feed.","rs_sendEmail":"Send me e-mail when anyone responds to this topic","rs_loading":"Loading...","rs_notifyTopicPromptEmail":"Notify me by e-mail when anyone replies to this topic","rs_titleCantBeEmpty":"Please enter a title before posting.","rs_typeName":"Type in a Name","rs_activityFeedLink":"Feed for these activities","rs_medPri":"Medium Priority","rs_messageTooLong":"Unable to post to discussion forum. The message exceeds the size limit of ${0}. Reduce the length of this posting and try again. ","rs_createPersonLink":"Create Person Link","rs_deleteTopicConfirmation":"This topic has been deleted.","rs_deleteAttachment":"Delete","rs_highPri":"High Priority","rs_cancel":"Cancel","rs_startFirstTopic":"Start the first topic.","rs_actDue":"Due ${0}","rs_fileUploadReplaceError":"To replace your file, first delete the existing one and upload a new one.","rs_filterListPrompt":"Type to filter this list","rs_more":"More","rs_searchDirectory":"Search Directory","rs_postedBy":"Last post by","rs_attachFile":"Attach a File","rs_noTopics":"There are no topics yet for this community.","rs_today":"Today","rs_titleTooLong":"Titles must be under ${0} characters"};dojo.provide("dojo.cldr.nls.gregorian");dojo.cldr.nls.gregorian._built=true;dojo.provide("dojo.cldr.nls.gregorian.en");dojo.cldr.nls.gregorian.en={"field-dayperiod":"AM/PM","field-minute":"Minute","eraNames":["Before Christ","Anno Domini"],"field-weekday":"Day of the Week","days-standAlone-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"months-standAlone-narrow":["J","F","M","A","M","J","J","A","S","O","N","D"],"field-era":"Era","field-hour":"Hour","timeFormat-full":"h:mm:ss a v","months-standAlone-abbr":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"days-standAlone-narrow":["S","M","T","W","T","F","S"],"eraAbbr":["BC","AD"],"dateFormat-long":"MMMM d, yyyy","timeFormat-medium":"h:mm:ss a","field-zone":"Zone","dateFormat-medium":"MMM d, yyyy","quarters-standAlone-wide":["1st quarter","2nd quarter","3rd quarter","4th quarter"],"dateTimeFormat":"{1} {0}","field-year":"Year","quarters-standAlone-narrow":["1","2","3","4"],"months-standAlone-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"field-week":"Week","timeFormat-long":"h:mm:ss a z","months-format-abbr":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"timeFormat-short":"h:mm a","field-month":"Month","quarters-format-abbr":["Q1","Q2","Q3","Q4"],"days-format-abbr":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"pm":"PM","days-format-narrow":["S","M","T","W","T","F","S"],"field-second":"Second","field-day":"Day","months-format-narrow":["J","F","M","A","M","J","J","A","S","O","N","D"],"am":"AM","days-standAlone-abbr":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"dateFormat-short":"M/d/yy","dateFormat-full":"EEEE, MMMM d, yyyy","months-format-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"dateTimeAvailableFormats":["HH:mm","HH:mm:ss","L","E, M/d","LLL","E, MMM d","E, MMMM d","MMMM d","MMM d","M/d","d","h:mm a","mm:ss","yyyy","M/yyyy","EEE, M/d/yyyy","MMM yyyy","EEE, MMM d, yyyy","MMMM yyyy","Q yyyy","QQQ yyyy"],"quarters-format-wide":["1st quarter","2nd quarter","3rd quarter","4th quarter"],"days-format-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"eraNarrow":["B","A"],"dateTimeFormats-appendItem-Second":"{0} ({2}: {1})","dateTimeFormats-appendItem-Year":"{0} {1}","quarters-standAlone-abbr":["Q1","Q2","Q3","Q4"],"dateTimeFormats-appendItem-Week":"{0} ({2}: {1})","dateTimeFormats-appendItem-Timezone":"{0} {1}","dateTimeFormats-appendItem-Month":"{0} ({2}: {1})","dateTimeFormats-appendItem-Minute":"{0} ({2}: {1})","dateTimeFormats-appendItem-Day":"{0} ({2}: {1})","quarters-format-narrow":["1","2","3","4"],"dateTimeFormats-appendItem-Quarter":"{0} ({2}: {1})","dateTimeFormats-appendItem-Day-Of-Week":"{0} {1}","dateTimeFormats-appendItem-Hour":"{0} ({2}: {1})","dateTimeFormats-appendItem-Era":"{0} {1}"};dojo.provide("lconn.search.nls.searchData");lconn.search.nls.searchData._built=true;dojo.provide("lconn.search.nls.searchData.en");lconn.search.nls.searchData.en={"AUG":"August","NO_TAG":"No tags for this query.","BLOGS":"Blogs:","MAY":"May","COMMENT_ON":"Comment on:","TAGS":"Tags ({0}):","DEC":"December","JUL":"July","RESULTS":"Results {0} to {1} of {2}","JUN":"June","SORT_DUE_DATE":"Due Date","COMMUNITY_BLOG":"Group Blog","SORT_RECOMMENDATION":"Recommendations","COMMUNITY_FILE":"Group File","ACTIVITIES":"Activities:","PROFILES":"Profiles:","SERVER_ERROR":"The search was not performed due to a server error","SORT_LAST_UPDATED":"Last Updated","PREVIOUS":"Previous","SORT_FIRSTNAME":"First Name","NO_PEOPLE":"No people for this query","FEB":"February","SORT_VISITS_LABEL":"Click to sort by number of visits","SORT_POPULARITY":"Popularity","SORT_LAST_NAME_LABEL":"Click to sort by last name","SORT_SIZE":"Size","COMMUNITIES":"Groups:","EXPAND_COLLAPSE":"Click to expand / collapse","FILES":"Files:","SORT_COMMENTS_LABEL":"Click to sort by number of comments","COMMUNITY_FEED":"Group Feed","SORT_COMMENTS":"Comments","SORT_FIRST_NAME_LABEL":"Click to sort by first name","SORT_BY":"Sort by:","DOGEAR":"Bookmarks:","APR":"April","COMMUNITY_BOOKMARK":"Group Bookmark","SORT_RECOMMENDATIONS_LABEL":"Click to sort by number of recommendations","COMMUNITY_ACTIVITY":"Group Activity","SORT_TYPE":"Type","NEXT":"Next","PAGE":"Page {0} of {1}","JAN":"January","SORT_RELEVANCE_LABEL":"Click to sort by relevence","RATING":"Rating","SORT_DATE":"Date","NOV":"November","SORT_UPDATED_LABEL":"Click to sort by last updated","SORT_TITLE":"Title","SORT_DUE_LABEL":"Click to sort by due date","SORT_POPULARITY_LABEL":"Click to sort by popularity","NO_DATE":"No dates for this query.","MEMBERS":"Members ({0})","PRIVATE":"Private","SORT_DOWNLOADS":"Downloads","SORT_RELEVANCE":"Relevance","SORT_DATE_LABEL":"Click to sort by date","COMMENTS":"Comments ({0})","SORT_VISITS":"Visits","COMMUNITY_WIKI":"Group Wiki","OCT":"October","NO_CONTACT":"The search was not performed because the server could not be contacted","NORESULTSMESSAGE":"No results were found for that search","PEOPLE":"{0} People","SORT_LASTNAME":"Last Name","MODERATED":"Moderated","SHOW":"Show:","SEP":"September","WIKI":"Wikis:","MAR":"March"};dojo.provide("lconn.search.nls.searchResults");lconn.search.nls.searchResults._built=true;dojo.provide("lconn.search.nls.searchResults.en");lconn.search.nls.searchResults.en={"LOADING":"Loading..."};
/*
	Copyright (c) 2004-2008, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/
/* JavaScript in the lconn, com, semtag, and quickr packages are (C) Copyright IBM Corp.  2008,2009  All Rights Reserved. */

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(!dojo._hasResource["com.ibm.mm.livetext.serviceImpl"]){
dojo._hasResource["com.ibm.mm.livetext.serviceImpl"]=true;
dojo.provide("com.ibm.mm.livetext.serviceImpl");
dojo.declare("com.ibm.mm.livetext.serviceImpl",null,{_tagTypes:null,tagChanged:"/com/ibm/mashups/livetext/livetextchanged",tagStatusChange:"/com/ibm/mashups/livetext/livetextchanged",tagContentChanged:"/com/ibm/mashups/livetext/livetextcontentchanged",entryAdded:"/com/ibm/mashups/livetext/configentryadded",entryRemoved:"/com/ibm/mashups/livetext/configentryremoved",init:function(){
this._loadTags();
dojo.subscribe(this.tagChanged,this,"onTagChanged");
dojo.subscribe(this.tagContentChanged,this,"onTagContentChanged");
dojo.subscribe(this.entryAdded,this,"onAddConfigEntry");
dojo.subscribe(this.entryRemoved,this,"onRemoveConfigEntry");
dojo.publish(this.tagContentChanged,[document,true]);
},_getNodes:function(_1,_2){
if(_2.processEnclosedTags){
return dojo.query(_2.match,_1);
}else{
var a=dojo.query(_2.match+" "+_2.match,_1);
var b=dojo.query(_2.match,_1);
var _5,_6;
while(a.length>0){
_5=a[0];
_6=0;
while(_6<b.length){
if(_5==b[_6]){
a.splice(0,1);
b.splice(_6,1);
break;
}else{
_6++;
}
}
}
return b;
}
},onTagChanged:function(_7,_8,_9,_a){
var _b=null,_c=null,_d=null;
for(var _e=0;_e<this._tagTypes.length;_e++){
_b=this._tagTypes[_e];
this._processTypeTag(_7,_b,_8,_9,_a,true);
}
},onTagContentChanged:function(_f,_10,_11,_12){
var tag=null,_14=null,_15=null;
for(var _16=0;_16<this._tagTypes.length;_16++){
tag=this._tagTypes[_16];
this._processTypeTag(_f,tag,_10,_11,_12,false);
}
},_processTypeTag:function(_17,tag,_19,_1a,_1b,_1c){
var _1d=[];
if(_1c&&this._checkRoot(_17,tag)){
_1d[0]=_17;
}
_1d=_1d.concat(this._getNodes(_17,tag));
var _1e=[];
_1e=_1e.concat(_1d);
if(_1e.length>0){
if(tag.loaded==null){
this._loadTagHandler(tag);
}
var _1f=[];
if(dojo.isFunction(_1a)){
try{
_1a(_17,_1e);
}
catch(error){
console.debug(error);
}
}
for(var _20=0;_20<_1d.length;_20++){
try{
tag.tagHandler.processTag(_1d[_20]);
}
catch(error){
_1f[_1f.length]=error;
if(_19){
break;
}
}
}
if(dojo.isFunction(_1b)){
try{
_1b(_17,_1e,_1f);
}
catch(error){
console.debug(error);
}
}
}
},_checkRoot:function(_21,tag){
var _23=false;
if(_21!=null&&_21.nodeType){
var _24=_21.cloneNode(false);
var _25=document.createElement("div");
_25.appendChild(_24);
var _26=this._getNodes(_25,tag);
if(_26!=null&&_26.length>0){
_23=true;
}
delete _24;
delete _25;
delete _26;
}
return _23;
},_loadTags:function(){
if(this._tagTypes==null){
var _27=this;
if(typeof livetextCfg!="undefined"){
this._tagTypes=livetextCfg;
}else{
dojo.xhrGet({url:dojo.moduleUrl("com.ibm.mm.livetext","tagservice.entries.cfg"),handleAs:"text",sync:true,load:function(_28){
_27._tagTypes=dojo.fromJson(_28);
},error:function(_29){
console.dir(_29);
}});
}
}
},onAddConfigEntry:function(_2a){
},onRemoveConfigEntry:function(_2b){
},parseDom:function(_2c,_2d){
dojo.publish(this.tagChanged,[_2d]);
},_loadTagHandler:function(tag){
dojo.registerModulePath(tag.module,tag.path);
dojo.eval("dojo.r"+"equire('"+tag.baseClass+"')");
var _2f="{create:function(){return new "+tag.baseClass+"()}}";
var _30=dojo.fromJson(_2f);
tag.tagHandler=_30.create();
tag.loaded=true;
}});
}
if(!dojo._hasResource["lconn.core.url"]){
dojo._hasResource["lconn.core.url"]=true;
dojo.provide("lconn.core.url");
dojo.provide("lconn.core.url.UrlStruct");
dojo.provide("lconn.core.url.ProxyUrlHelper");
lconn.core.url._const={regex:/(^[a-zA-Z]+)\:\/\/([a-zA-Z\d][\a-z\A-Z\d\-\.]*)(:\d{1,5})?([\/\?\#].*)?/,protocolPorts:{"http":80,"https":443}};
dojo.declare("lconn.core.url.UrlStruct",null,{isInvalidUrl:false,url:"",protocol:"",host:"",port:"",hasPort:false,urlRemainder:"",constructor:function(url){
if(url!=null&&url.match(lconn.core.url._const.regex)){
var t=lconn.core.url._const.regex.exec(url);
this.url=t[0];
this.protocol=t[1];
this.host=t[2];
this.port=this._parsePort(t[3]);
this.urlRemainder=t[4];
}else{
this.isInvalidUrl=true;
}
},_parsePort:function(_33){
if(_33==null||_33==""){
return "";
}
this.hasPort=true;
return _33.substr(_33.indexOf(":")+1);
},normalizedPort:function(){
var pp=lconn.core.url._const.protocolPorts;
if(this.hasPort){
return this.port;
}else{
if(typeof (pp[this.protocol])=="undefined"){
return "";
}else{
return pp[this.protocol];
}
}
}});
dojo.declare("lconn.core.url.ProxyUrlHelper",null,{proxyURL:"",_proxyStruct:null,constructor:function(_35){
if(_35.length>1&&_35.lastIndexOf("/")==_35.length-1){
_35=_35.substr(0,_35.length-1);
}
this.proxyURL=_35;
this._proxyStruct=new lconn.core.url.UrlStruct(this.proxyURL);
},getProxifiedURL:function(url){
var _37=new lconn.core.url.UrlStruct(url);
var _38=this._proxyStruct;
if(this._matchUrlBase(_37)){
return _37.protocol+"://"+_37.host+(_38.hasPort?":"+_38.port:"")+_37.urlRemainder;
}
return this.proxyURL+"/"+_37.protocol+"/"+_37.host+(_37.hasPort?"%3A"+_37.port:"")+_37.urlRemainder;
},_matchUrlBase:function(_39){
var ps=this._proxyStruct;
return (ps.protocol==_39.protocol&&ps.host==_39.host&&this._matchPort(_39));
},_matchPort:function(_3b){
var np=this._proxyStruct.normalizedPort();
return np==_3b.normalizedPort();
}});
}
if(!dojo._hasResource["lconn.core.bizCard.bizCardUtils"]){
dojo._hasResource["lconn.core.bizCard.bizCardUtils"]=true;
dojo.provide("lconn.core.bizCard.bizCardUtils");
lconn.core.bizCard.bizCardUtils={enabledUids:new Array,disabledUids:new Array(),isDebug:false,scriptResourceName:"semanticTagService.js",version:"2.5.0",scripts:new Array(),css:new Array(),initiated:false,_haveProxy:false,_proxyHelper:null,appChksum:null
,checkUid:function(_uid) {
	if (!this.isUidDisabled(_uid) && !this.isUidEnabled(_uid)) {
		new Ajax.Request('/developerworks/mydeveloperworks/profiles/actions/checkpd.jsp?uid='+_uid+'&ts='+new Date().getTime(), {
			asynchronous:false,
		  onSuccess: function(response) {
				if (response.responseText.indexOf("disabled")>=0) {
					lconn.core.bizCard.bizCardUtils.addDisabledUid(_uid);
					return false;
				}
				else {
					lconn.core.bizCard.bizCardUtils.addEnabledUid(_uid);
					return true;
				}
		  }
		});
	}
	if (this.isUidEnabled(_uid)) return true;
	return false;
}	
,addDisabledUid:function(_uid){
	if (!this.isUidDisabled(_uid))
		this.disabledUids.push(_uid);	
}
,addEnabledUid:function(_uid){
	if (!this.isUidEnabled(_uid))
		this.enabledUids.push(_uid);		
}
,isUidDisabled:function(_uid) {
	var _exists=false;
	for (var i=0;i<this.disabledUids.length;i++)
		if (this.disabledUids[i]==_uid) 
				_exists = true;	
	return _exists;	
}
,isUidEnabled:function(_uid) {
	var _exists=false;
	for (var i=0;i<this.enabledUids.length;i++)
		if (this.enabledUids[i]==_uid) 
				_exists = true;	
	return _exists;	
}
,init:function(_3d){
if(this.initiated==false){
this.baseUrl=lconn.core.bizCard.bizCardUtils.initBaseUrl();
this._initProxyHelper();
this._initAppCksum();
if(window.semtagrs==null){
lconn.core.bizCard.bizCardUtils.loadScript(this.baseUrl+"/resourceStrings.do?t=1");
}
if(window.SemTagSvcConfig!=null&&SemTagSvcConfig.debug==true){
lconn.core.bizCard.bizCardUtils.isDebug=true;
}
if(window.SemTagPersonConfig_noCss==null){
if(window.SemTagSvcConfig!=null){
if(SemTagSvcConfig.loadCssFiles==true){
lconn.core.bizCard.bizCardUtils.loadCssIfNeeded();
}
}else{
lconn.core.bizCard.bizCardUtils.loadCssIfNeeded();
}
}
this.initiated=true;
}
},initBaseUrl:function(){
var _3e="";
if(window.SemTagSvc_baseUrl!=null){
_3e=SemTagSvc_baseUrl;
}else{
if(window.SemTagSvcConfig!=null&&SemTagSvcConfig.baseUrl!=null){
_3e=SemTagSvcConfig.baseUrl;
}else{
_3e=this.getURL(this.scriptResourceName,"script",SemTagSvc.baseUrl,"src").baseUrl;
}
}
return _3e;
},_initProxyHelper:function(){
if(window.SemTagSvcConfig!=null&&typeof (window.SemTagSvcConfig.proxyURL)!="undefined"&&window.SemTagSvcConfig.proxyURL.length>0){
this._haveProxy=true;
this._proxyHelper=new lconn.core.url.ProxyUrlHelper(window.SemTagSvcConfig.proxyURL);
}
},_initAppCksum:function(){
this.appChksum=this._getConfigValue("appChksum","UNDEFINED");
},_getConfigValue:function(_3f,_40){
if(window.SemTagSvcConfig!=null&&typeof (window.SemTagSvcConfig[_3f])!="undefined"){
return window.SemTagSvcConfig[_3f];
}
return _40;
},appendAppChkSum:function(url){
if(url==null||url.indexOf("acs=")>=0){
return url;
}
var c=null;
if(url.indexOf("?")<0){
c="?";
}else{
c="&";
}
return url+c+"acs="+this.appChksum;
},getService:function(_43){
for(i=0;i<livetextCfg.length;i++){
var _44=livetextCfg[i];
if(_44.id==_43){
return _44;
}
}
return null;
},processUntilAvailable:function(_45,_46,_47){
var _48="";
_48=window.setInterval(function(){
if(eval(_46)){
if(_47!=null){
_45(_47);
}else{
_45();
}
window.clearInterval(_48);
}
},300);
},getBaseURL:function(_49){
var _4a=lconn.core.bizCard.bizCardUtils.getService(_49);
if(_4a!=null&&_4a.baseURL!=null){
return _4a.baseURL;
}else{
return this.baseUrl;
}
},buildBaseURL:function(_4b){
var _4c=_4b.indexOf("//")+2;
var _4d=_4b.substring(0,_4c);
var _4e=_4b.substring(_4c,_4b.length);
_4c=_4e.indexOf("/")+1;
var _4f=_4e.substring(0,_4c);
_4e=_4e.substring(_4c,_4e.length);
_4c=_4e.indexOf("/");
var _50=_4e.substring(0,_4c);
_4e=_4e.substring(_4c,_4e.length);
var _51=_4d+_4f+_50;
return _51;
},getURL:function(_52,_53,_54,_55){
var _56={};
var _57=location.protocol+"//"+location.host;
var s=document.getElementsByTagName(_53);
var _59="";
var _5a=null;
for(var i=0;i<s.length;i++){
var src=s[i].getAttribute(_55);
if(src&&src.indexOf(_52)!=-1){
_5a=src;
_59=src.substring(0,src.indexOf(_54));
if(_54==null){
_59=this.buildBaseURL(src);
_56.baseUrl=_59;
}
_56.resourceFound=true;
break;
}
}
if(_56.baseUrl=="undefined"){
_56.baseUrl=(_59==_57)?_54:_59+_54;
}
return _56;
},getUrlParam:function(_5d){
var _5e=unescape(window.location);
if(_5e.indexOf(_5d)==-1){
return null;
}else{
var _5f=_5e.substring(_5e.indexOf(_5d+"=")+_5d.length+1);
var _60=_5f.indexOf("&");
if(_60!=-1){
_5f=_5f.substring(0,_60);
}
return _5f;
}
},getProxifiedURL:function(url,_62,_63){
for(var key in _62){
var _65=new RegExp("@@@"+key+"@@@");
var val=_62[key];
url=url.replace(_65,val);
}
url=this.appendAppChkSum(url);
if(this._haveProxy){
return this._proxyHelper.getProxifiedURL(url);
}
return url+"&callback="+_63;
},_timeout:10000,getBizCardData:function(url,_68,_69,_6a,_6b,_6c,_6d){
var url=this.getProxifiedURL(url,_68,_69);
if(this._haveProxy){
var _6e=function(_6f){
var _70=dojo.fromJson(_6f.replace(/^\s*while\(1\);/,""));
_6b(true,_70,_6c);
};
var _71=function(_72){
_6b(false,data,_6c);
};
dojo.xhrGet({url:url,timeout:this._timeout,load:_6e,error:_71});
}else{
_6a.request(url,this._timeout,_6b,_6c,_6d);
}
},out:function(){
this.buffer="";
this.write=function(str){
this.buffer+=str;
};
},hasRule:function(_74){
var _75=document.styleSheets;
if(_75&&_75.length){
for(var i=0;i<_75.length;i++){
var _77=_75[i];
var _78=_77.cssRules||_77.rules;
if(_78&&_78.length){
for(var j=0;j<_78.length;j++){
var _7a=_78[j];
if(_7a&&_7a.selectorText==_74){
return true;
}
}
}
}
}
return false;
},loadCssIfNeeded:function(){
if(!this.hasRule(".lotusVCard")){
if(window.SemTagSvcConfig!=null&&SemTagSvcConfig.isBidiRTL){
this.loadCss(this.baseUrl+"/nav/common/styles/base/standaloneVcardRTL.css");
}else{
this.loadCss(this.baseUrl+"/nav/common/styles/base/standaloneVcard.css");
}
this.loadCss(this.baseUrl+"/nav/common/styles/base/semanticTagStyles.css");
this.standaloneCSSloaded=true;
}
},getSinglePropertyValue:function(_7b){
if(!_7b){
return false;
}
var _7c=_7b.innerHTML.replace(/<[a-zA-Z\/][^>]*>/gi,"");
return _7c;
},sortByOrder:function(a,b){
if(a.order>b.order){
return 1;
}else{
if(a.order<b.order){
return -1;
}else{
return 0;
}
}
},getElementsByClassName:function(_7f,_80,_81,_82){
if(!_80){
_80=document.body;
}
if(!_81){
limit=0;
}
if(!_82){
_82=["*"];
}
var _83=new RegExp("(^|\\s)"+_7f+"(\\s|$)");
if(_80&&_80.className&&_80.className.match(_83)){
return new Array(_80);
}
var _84=new Array();
for(var t=0;t<_82.length;t++){
var _86=_80.getElementsByTagName(_82[t]);
for(var i=0;i<_86.length;i++){
var _88=_86[i];
if(_88.className.match(_83)){
_84.push(_88);
}
if(0<_81&&_81==_84.length){
break;
}
}
}
return _84;
},getParentByClassName:function(_89,_8a){
if(!_8a){
return null;
}
var _8b=new RegExp("(^|\\s)"+_89+"(\\s|$)");
if(_8a.className&&_8a.className.match(_8b)){
return _8a;
}
while(_8a.parentNode){
_8a=_8a.parentNode;
if(_8a.className&&_8a.className.match(_8b)){
return _8a;
}
}
},addHover:function(_8c,_8d,_8e,_8f){
while(typeof SemTagMenu==undefined){
alert("waiting...");
}
var _90=_8c.getAttribute(this.refcntAttr);
if(_90){
_8c.setAttribute(this.refcntAttr,parseInt(Number(_90)+1));
if(SemTagMenu.staticHover){
var img=SemTagMenu.findHoverFromLiveElement(_8c);
if(img){
dojo.connect(img,"onclick",_8e);
img.setAttribute("href","javascript:a11y()");
}else{
alert("couldn't find the hover for this element!");
}
}else{
dojo.connect(_8c,"onmouseover",_8d);
dojo.connect(_8c,"onfocus",_8d);
}
}else{
_8c.setAttribute(this.refcntAttr,"1");
if(SemTagMenu.staticHover){
var img=this.createHoverImage();
dojo.connect(img,"onclick",_8e);
img.setAttribute("href","javascript:a11y()");
var _92=_8c.nextSibling;
if(_92){
_92.parentNode.insertBefore(img,_92);
}else{
_8c.parentNode.appendChild(img);
}
_8c.setAttribute(this.hoverIdPrefix+"idx",parseInt(this.hoverIdx));
_8c.id=this.liveElemPrefix+this.hoverIdx;
}else{
var _93=dojo.isFF?_8c.getAttribute("class"):_8c.className;
if(_93&&0<_93.length){
_93+=" hasHover";
}else{
_93="hasHover";
}
if(dojo.isFF){
_8c.setAttribute("class",_93);
}else{
_8c.className=_93;
}
dojo.connect(_8c,"onmouseover",_8d);
dojo.connect(_8c,"onfocus",_8d);
}
if(_8f!=null){
dojo.connect(_8c,"onkeydown",_8f);
}
}
},createHoverImage:function(){
var img=document.createElement("img");
this.hoverIdx++;
img.id=this.hoverIdPrefix+this.hoverIdx;
img.className=SemTagMenu.iconName;
img.setAttribute("src",this.baseUrl+"/images/menu_selected_hover.gif");
img.setAttribute("border","0");
var _95=document.createElement("a");
dojo.connect(_95,"onfocus",SemTagMenu.activateHover);
dojo.connect(_95,"onmouseover",SemTagMenu.activateHover);
dojo.connect(_95,"onmouseout",SemTagMenu.deactivateHover);
_95.appendChild(img);
return _95;
},showHover:function(_96,_97){
try{
SemTagMenu.showHover(_96,_97);
}
catch(e){
console.log("Error in lconn.core.bizCard.bizCardUtils.showHover");
console.log(e);
}
},setMenuData:function(_98,_99,_9a,_9b,_9c){
SemTagMenu.setMenuData(_98,_99,_9a,_9b,_9c);
},getMenuItemJson:function(_9d,_9e,_9f,_a0){
var o=_9f?_9f:0;
var i=_a0?_a0:"";
return {"label":_9d,"href":_9e,"order":o,"icon":i};
},getMenuHeaderJson:function(_a3,_a4){
return {"markup":_a3,"order":_a4};
},getMenuFooterJson:function(_a5,_a6){
return {"markup":_a5,"order":_a6};
},getElementFromEvent:function(_a7){
return _a7.target?_a7.target:_a7.srcElement;
},getLiveElementFromEvent:function(_a8){
return SemTagMenu.findLiveElementFromEventSource(this.getElementFromEvent(_a8));
},getEventAbsoluteX:function(e){
var x=0;
if(e.pageX){
x=e.pageX;
}else{
if(e.clientX){
x=e.clientX+document.body.scrollLeft;
}
}
return x;
},getEventAbsoluteY:function(e){
var y=0;
if(e.pageY){
y=e.pageY;
}else{
if(e.clientY){
y=e.clientY+document.body.scrollTop;
}
}
return y;
},findPosition:function(obj){
var _ae=0,_af=0,_b0=0;
var _b1=1400*1;
if(obj.offsetParent){
if(obj.currentStyle){
_b0+=obj.offsetHeight-parseInt(this.getStyle(obj,"paddingBottom"));
}else{
if(window.getComputedStyle){
_b0+=obj.offsetHeight-parseInt(this.getStyle(obj,"padding-bottom"));
}
}
while(obj!=null){
if(obj.offsetLeft>=_b1&&SemTagSvcConfig.isBidiRTL){
_af+=obj.offsetLeft-250;
}else{
_af+=obj.offsetLeft;
}
_b0+=obj.offsetTop;
obj=obj.offsetParent;
_ae++;
}
return [_af,_b0];
}else{
return [obj.x,obj.y];
}
},getStyle:function(_b2,_b3){
var _b4;
if(window.getComputedStyle){
_b4=document.defaultView.getComputedStyle(_b2,null).getPropertyValue(_b3);
}else{
if(_b2.currentStyle){
_b4=_b2.currentStyle[_b3];
}
}
return _b4;
},createGroupJson:function(ctx,_b6){
return {"context":ctx,"extenders":_b6};
},createActionJson:function(id,ctx,_b9,_ba,url,_bc){
var o=parseInt(_bc);
return {"id":id,"context":ctx,"label":_b9,"description":_ba,"url":url,"order":o};
},parseOrder:function(_be){
if(_be==null||_be.length==0){
return 0;
}
if(_be.charAt(0)=="-"){
return parseInt(_be.substr(1))*-1;
}else{
return parseInt(_be);
}
},_langParamValue:"",getLangParam:function(){
if(this._langParamValue==""){
if(window.djConfig!=null&&djConfig.locale!=null){
this._langParamValue=djConfig.locale;
return this._langParamValue;
}
var _bf="lcLang";
if(typeof (profilesData)!="undefined"&&typeof (profilesData.config)!="undefined"&&typeof (profilesData.config.langCookieName)!="undefined"){
_bf=profilesData.config.langCookieName;
}
var _c0=dojo.cookie(_bf);
if(_c0==null||_c0==""){
_c0=this.getUrlParam("lang");
}
if(_c0==null||_c0==""){
if(typeof (navigator.language)!="undefined"){
_c0=navigator.language;
}else{
if(typeof (navigator.browserLanguage)!="undefined"){
_c0=navigator.browserLanguage;
}
}
}
var _c1=/(\w\w){1}([\-_]\w\w){0,2}/i;
if(_c0!=null&&!_c0.match(_c1)){
_c0=null;
}
if(_c0==null||_c0==""){
_c0="en";
}
_c0=_c0.replace(/\-/g,"_");
_c0=_c0.toLowerCase();
this._langParamValue=_c0;
}
return this._langParamValue;
},getTextValue:function(_c2){
if(!_c2){
return "";
}
return _c2.innerHTML.replace(/<[a-zA-Z\/][^>]*>/gi,"");
},getTypedValue:function(_c3,_c4){
if(!_c4){
_c4="def";
}
var _c5=new Array();
var _c6=this.getElementsByClassName("type",_c3);
var _c7=this.getElementsByClassName("value",_c3);
var _c8="";
if(_c7.length<1){
_c8=this.getTextValue(_c3);
}
for(i=0;i<_c7.length;i++){
_c8+=this.getTextValue(_c7[i]);
}
if(_c6.length<1){
_c5[_c4]=_c8;
}else{
for(j=0;j<_c6.length;j++){
var _c9=_c6[j];
var _ca=_c9.tagName.match(/^abbr$/i)?_c9.getAttribute("title"):this.getTextValue(_c9);
_c5[_ca.toLowerCase()]=_c8;
}
}
return _c5;
},findNameElementInHcard:function(_cb){
if(_cb.className!="vcard"){
_cb=this.getParentByClassName("vcard",_cb);
}
var _cc=this.getElementsByClassName("fn",_cb)[0];
if(!_cc){
_cc=this.getElementsByClassName("n",_cb)[0];
}
return _cc;
},findElementByNameInHcard:function(_cd,_ce){
if(_cd.className!="vcard"){
_cd=this.getParentByClassName("vcard",_cd);
}
return this.getElementsByClassName(_ce,_cd)[0];
},loadScript:function(_cf){
var _d0=this.getLangParam();
if(_cf.indexOf("lang=")!=-1&&_d0!=null){
_cf=_cf.substring(0,_cf.indexOf("lang"))+"lang="+_d0;
}
if(_cf.indexOf("resourcebundle")!=-1&&_d0!=null){
_cf=_cf+"&lang="+_d0;
}
if(_cf.indexOf("resourceStrings")!=-1&&_d0!=null){
_cf=_cf+"&lang="+_d0;
}
_cf=this.appendAppChkSum(_cf);
if(!this.scripts[_cf]){
this.scripts[_cf]=true;
var _d1=document.createElement("script");
_d1.src=_cf;
document.body.insertBefore(_d1,document.body.firstChild);
}
},loadCss:function(css){
css=this.appendAppChkSum(css);
if(!this.css[css]){
var _d3=document.getElementsByTagName("head");
if(_d3[0]){
this.css[css]=true;
var _d4=document.createElement("link");
_d4.rel="stylesheet";
_d4.href=css;
_d4.type="text/css";
_d4.media="screen";
_d3[0].appendChild(_d4);
}
}
},toggleInlineCard:function(_d5){
var _d6=document.getElementById(_d5+"_Pivot");
var _d7=document.getElementById(_d5+"_Details");
if(_d6!=null&&_d7!=null){
if(_d6.className.indexOf("lotusPivotNavOpen")!=-1){
_d6.className="lotusPivotNav";
_d7.style.display="none";
}else{
_d6.className="lotusPivotNav lotusPivotNavOpen";
_d7.style.display="block";
}
}
}};
var SemTagMenu={isDebug:false,staticHover:false,id:"semtagmenu",hideDelay:3000,showDelay:500,timeouts:new Array(),iconName:"menu_drop_icon",showing:false,currentElem:null,refCount:-1,tabOrderByDomNodeOrder:0,tabOrderByTabIndex:0,elemOrigTabIdx:null,elemTempTabIdx:1000,elemNext:null,svcHandlers:new Array(),items:new Array(),headers:new Array(),footers:new Array(),hoverIdRE:null,iconNameRE:new RegExp("(^|\\s)menu_drop_icon(\\s|$)"),initited:false,init:function(){
if(this.initited==false){
SemTagMenu.hoverIdRE=new RegExp(lconn.core.bizCard.bizCardUtils.hoverIdPrefix);
dojo.connect(document,"onclick",SemTagMenu.click);
dojo.connect(document,"onkeydown",SemTagMenu.catchEscape);
this.initited=true;
}
},activateFocus:function(_d8){
lconn.core.bizCard.bizCardUtils.activateHover(_d8);
},activateHover:function(_d9){
var _da=lconn.core.bizCard.bizCardUtils.getElementFromEvent(_d9);
if(_da){
_da.src=lconn.core.bizCard.bizCardUtils.baseUrl+"/images/menu_selected_hover.gif";
}
SemTagMenu.setCurrentElement(SemTagMenu.findLiveElementFromEventSource(_da));
},deactivateHover:function(_db){
var _dc=lconn.core.bizCard.bizCardUtils.getElementFromEvent(_db);
if(_dc){
_dc.src=lconn.core.bizCard.bizCardUtils.baseUrl+"/images/menu_selected_hover.gif";
}
SemTagMenu.setCurrentElement(null);
},showHover:function(_dd,_de){
try{
if(SemTagMenu.staticHover){
return;
}
var _df=lconn.core.bizCard.bizCardUtils.getElementFromEvent(_dd);
SemTagMenu.elemOrigTabIdx=_df.getAttribute("tabIndex");
if(SemTagMenu.tabOrderByTabIndex&&!SemTagMenu.elemOrigTabIdx){
SemTagMenu.elemNext=_df.nextSibling;
_df.setAttribute("tabIndex",parseInt(Number(SemTagMenu.elemTempTabIdx)));
}
var tag=SemTagMenu.getMenuTag(_df);
var _e1=0;
if(_df&&_df!=SemTagMenu.currentElem){
SemTagMenu.clearAllSvcHandlers(tag);
_e1=_df.getAttribute(lconn.core.bizCard.bizCardUtils.refcntAttr);
if(_e1){
SemTagMenu.setCurrentElement(_df);
}else{
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagMenu.showHover called for a DOM element with no refcnt attribute!");
}
SemTagMenu.setCurrentElement(null);
return;
}
}
SemTagMenu.addSvcHandler(tag,_de);
SemTagMenu.setRefCount(_e1);
if(SemTagMenu.showing&&tag.style.display!="none"){
return;
}
SemTagMenu.showing=false;
var out=new lconn.core.bizCard.bizCardUtils.out();
SemTagMenu.writeHover(out,"ltr",_df);
tag.innerHTML=out.buffer;
var pos=SemTagMenu.currentElemPosition;
SemTagMenu.show(SemTagMenu.id,_dd,pos[0]+SemTagMenu.hoverOffset[0],pos[1]+SemTagMenu.hoverOffset[1],SemTagMenu.hoverDimension[0],SemTagMenu.hoverDimension[1]);
}
catch(e){
console.log("Error in SemTagMenu.showHover");
console.log(e);
}
},addSvcHandler:function(tag,_e5){
SemTagMenu.svcHandlers.push(dojo.connect(tag,"onclick",_e5));
},clearAllSvcHandlers:function(tag){
while(0<SemTagMenu.svcHandlers.length){
var _e7=SemTagMenu.svcHandlers.pop();
if(_e7){
dojo.disconnect(_e7);
}
}
},setCurrentElement:function(_e8){
if(_e8!=null){
SemTagMenu.currentElem=_e8;
SemTagMenu.currentElemPosition=lconn.core.bizCard.bizCardUtils.findPosition(_e8);
SemTagMenu.setRefCount(_e8?Number(_e8.getAttribute(lconn.core.bizCard.bizCardUtils.refcntAttr)):0);
while(0<SemTagMenu.headers.length){
SemTagMenu.headers.pop();
}
while(0<SemTagMenu.items.length){
SemTagMenu.items.pop();
}
while(0<SemTagMenu.footers.length){
SemTagMenu.footers.pop();
}
}
},setRefCount:function(cnt){
SemTagMenu.refCount=cnt;
},setMenuData:function(_ea,_eb,_ec,_ed,_ee){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Menu.setMenuData: items.length="+_eb.length);
}
if(!SemTagMenu.staticHover&&SemTagMenu.refCount<0){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("setMenuData called when refCount="+SemTagMenu.refCount);
}
return;
}
var _ef=SemTagMenu.findLiveElementFromEventSource(lconn.core.bizCard.bizCardUtils.getElementFromEvent(_ea));
if(!_ef){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("setMenuData called on a null live element");
}
return;
}
if(SemTagMenu.staticHover&&(_ef!=SemTagMenu.currentElem||SemTagMenu.showing)){
SemTagMenu.setCurrentElement(_ef);
}
for(var i=0;i<_eb.length;i++){
SemTagMenu.items.push(_eb[i]);
}
if(_ec){
SemTagMenu.currentMenuCss=_ec;
}
if(_ed){
SemTagMenu.headers.push(_ed);
}
if(_ee){
SemTagMenu.footers.push(_ee);
}
SemTagMenu.stopEvent(_ea);
SemTagMenu.showMenu();
},getCurrentElement:function(){
return SemTagMenu.currentElem;
},showMenu:function(){
SemTagMenu.items.sort(lconn.core.bizCard.bizCardUtils.sortByOrder);
if(1<SemTagMenu.headers.length){
SemTagMenu.headers.sort(lconn.core.bizCard.bizCardUtils.sortByOrder);
}
if(1<SemTagMenu.footers.length){
SemTagMenu.footers.sort(lconn.core.bizCard.bizCardUtils.sortByOrder);
}
var out=new lconn.core.bizCard.bizCardUtils.out();
SemTagMenu.startMenu(out,"ltr");
if(0<SemTagMenu.headers.length){
SemTagMenu.writeHeader(out,SemTagMenu.headers[0],"ltr");
}
SemTagMenu.startActionSection(out,"ltr",SemTagMenu.currentMenuCss);
for(var i=0;i<SemTagMenu.items.length;i++){
SemTagMenu.writeMenuItem(out,SemTagMenu.items[i],"ltr");
}
SemTagMenu.endActionSection(out,"ltr");
if(0<SemTagMenu.footers.length){
SemTagMenu.writeFooter(out,SemTagMenu.footers[0],"ltr");
}
SemTagMenu.endMenu(out,"ltr");
var tag=SemTagMenu.getMenuTag();
SemTagMenu.clearAllSvcHandlers(tag);
SemTagMenu.offScreen(tag);
tag.innerHTML=out.buffer;
SemTagMenu.showing=true;
SemTagMenu.defaultCursor();
if(SemTagMenu.staticHover&&dojo.isFF){
var _f4=tag.getElementsByTagName("a");
if(0<_f4.length){
_f4[0].focus();
}
}
var _f5={"target":SemTagMenu.currentElem};
var pos=SemTagMenu.currentElemPosition;
SemTagMenu.show(SemTagMenu.id,_f5,pos[0]+SemTagMenu.menuOffset[0],pos[1]+SemTagMenu.menuOffset[1],tag.offsetWidth,tag.offsetHeight);
},getMenuTag:function(_f7){
var tag=document.getElementById(SemTagMenu.id);
if(!tag){
tag=document.createElement((SemTagMenu.tabOrderByDomNodeOrder?"div":"span"));
tag.setAttribute("id",SemTagMenu.id);
tag.style.position=(SemTagMenu.tabOrderByDomNodeOrder?"fixed":"absolute");
tag.style.display="none";
if(SemTagMenu.tabOrderByTabIndex&&typeof (_f7)!="undefined"&&_f7!=null){
var _f9=_f7.getAttribute("tabIndex");
if(SemTagMenu.tabOrderByTabIndex&&_f9){
tag.setAttribute("tabIndex",parseInt(Number(_f9)+1));
}
}
dojo.connect(tag,"onmouseout",SemTagMenu.mouseout);
dojo.connect(tag,"onmouseover",SemTagMenu.mouseover);
dojo.connect(tag,"onfocus",SemTagMenu.focus);
if(SemTagMenu.tabOrderByTabIndex){
dojo.connect(tag,"keydown",SemTagMenu.keydown);
}
if(SemTagMenu.tabOrderByDomNodeOrder){
if(_f7){
_f7.parentNode.appendChild(tag);
}else{
document.body.insertBefore(tag,document.body.firstChild);
}
}else{
document.body.insertBefore(tag,document.body.firstChild);
}
}else{
if(SemTagMenu.tabOrderByTabIndex&&typeof (_f7)!="undefined"&&_f7!=null){
var _f9=_f7.getAttribute("tabIndex");
if(_f9){
tag.setAttribute("tabIndex",parseInt(Number(_f9)+1));
}
}else{
if(SemTagMenu.tabOrderByDomNodeOrder){
if(_f7){
_f7.parentNode.appendChild(tag);
}
}
}
}
return tag;
},show:function(_fa,e,_fc,_fd,_fe,_ff){
SemTagMenu.clearTimeouts();
var _100=document.getElementById(_fa);
if(_fe==null){
_fe=0;
}
if(_ff==null){
_ff=0;
}
var top,left;
if(_fc!=null&&_fd!=null){
var top=_fd;
var left=_fc;
}else{
var top=lconn.core.bizCard.bizCardUtils.getEventAbsoluteY(e);
var left=lconn.core.bizCard.bizCardUtils.getEventAbsoluteX(e);
}
var vSrc=(e.target)?e.target:e.srcElement;
var _104,_105,d=document;
if(typeof window.innerWidth!="undefined"){
_104=window.innerWidth;
_105=window.innerHeight;
}else{
if(d.documentElement&&typeof d.documentElement.clientWidth!="undefined"&&d.documentElement.clientWidth!=0){
_104=d.documentElement.clientWidth;
_105=d.documentElement.clientHeight;
}else{
if(d.body&&typeof d.body.clientWidth!="undefined"){
_104=d.body.clientWidth;
_105=d.body.clientHeight;
}
}
}
var _107=(document.body.scrollLeft>document.documentElement.scrollLeft)?document.body.scrollLeft:document.documentElement.scrollLeft;
if((left+_fe)>(_104+_107)){
var _108=(left+_fe)-_104-_107;
left-=_108;
}
var _109=(document.body.scrollTop>document.documentElement.scrollTop)?document.body.scrollTop:document.documentElement.scrollTop;
if((top+_ff)>(_105+_109)){
var _108=(top+_ff)-_105-_109;
top-=_108;
}
_100.style.top=top+"px";
_100.style.left=left+"px";
_100.style.display="block";
var _10a=document.getElementById("tempIframe");
if(_10a==null){
_10a=document.createElement("iframe");
_10a.setAttribute("id","tempIframe");
_10a.setAttribute("frameBorder","no");
_10a.setAttribute("scrolling","no");
_10a.setAttribute("src",lconn.core.bizCard.bizCardUtils.baseUrl+"/nav/blankIE.html");
_10a.style.position="absolute";
_10a.style.left=left+"px";
_10a.style.top=top+"px";
_10a.width=(_100.offsetWidth).toString()+"px";
_10a.height=(_100.offsetHeight).toString()+"px";
_10a.style.display="block";
_10a.style.zIndex="899";
document.body.appendChild(_10a);
}
var _10b=document.getElementById("A11Yblank");
if(_10b){
_10b.focus();
}else{
if(typeof (SemTagMenu.startHideTimer)!="undefined"){
SemTagMenu.startHideTimer(_fa);
}
}
},hide:function(_10c,e){
var tag=SemTagMenu.getMenuTag();
if(!tag){
return false;
}
tag.style.display="none";
SemTagMenu.showing=false;
SemTagMenu.setCurrentElement(null);
SemTagMenu.clearAllSvcHandlers(tag);
SemTagMenu.defaultCursor();
var elem=SemTagMenu.getCurrentElement();
if(SemTagMenu.tabOrderByTabIndex&&elem&&elem.getAttribute("tabIndex")){
tag.setAttribute("tabIndex",null);
elem.setAttribute("tabIndex",SemTagMenu.elemOrigTabIdx);
}
var _110=document.getElementById("tempIframe");
if(_110!=null){
_110.style.display="none";
}
return true;
},offScreen:function(_111){
_111.style.top="-1000px";
_111.style.left="-1000px";
_111.style.display="block";
},findLiveElementFromEventSource:function(_112){
if(SemTagMenu.staticHover){
var id=_112.id;
if(!id.match(SemTagMenu.hoverIdRE)){
var _114=_112.getElementsByTagName("img");
for(var i=0;i<_114.length;i++){
if(_114[i].id&&_114[i].id.match(SemTagMenu.hoverIdRE)){
id=_114[i].id;
break;
}
}
}
var idx=id.substr(lconn.core.bizCard.bizCardUtils.hoverIdPrefix.length);
return document.getElementById(lconn.core.bizCard.bizCardUtils.liveElemPrefix+idx);
}else{
var _117=SemTagMenu.getCurrentElement();
return _117?_117:_112;
}
},findHoverFromLiveElement:function(_118){
var idx=_118.getAttribute(lconn.core.bizCard.bizCardUtils.hoverIdPrefix+"idx");
return document.getElementById(lconn.core.bizCard.bizCardUtils.hoverIdPrefix+idx);
},inMenu:function(_11a,_11b,_11c,_11d){
if(!_11a){
return false;
}
if(!SemTagMenu.showing){
return false;
}
if(!_11c){
_11c=0;
}
if(!_11d){
_11d=0;
}
var _11e=lconn.core.bizCard.bizCardUtils.getEventAbsoluteX(_11b);
var _11f=lconn.core.bizCard.bizCardUtils.getEventAbsoluteY(_11b);
var _120=_11a.style.left.replace(/px$/,"");
var _121=_11a.style.top.replace(/px$/,"");
var sumX=parseInt(_120)+parseInt(_11a.clientWidth);
var sumY=parseInt(_121)+parseInt(_11a.clientHeight);
if((_11e-1<=(_120-_11c))||(_11f-1<=(_121-_11d))||(_11e>=(sumX+_11c))||(_11f>=(sumY+_11d))){
return false;
}else{
return true;
}
},mouseout:function(_124){
var _125=SemTagMenu.id;
menuElem=document.getElementById(_125);
if(SemTagMenu.inMenu(menuElem,_124)){
}else{
if(typeof (SemTagMenu.startHideTimer)!="undefined"){
SemTagMenu.startHideTimer(_125);
}
}
},mouseover:function(_126){
SemTagMenu.clearTimeouts();
},focus:function(_127){
SemTagMenu.mouseover(_127);
},unfocus:function(_128){
SemTagMenu.mouseout(_128);
},click:function(_129){
if(!_129){
return;
}
var _12a=lconn.core.bizCard.bizCardUtils.getElementFromEvent(_129);
if(_12a.className!="javlinHover"){
menuElem=document.getElementById(SemTagMenu.id);
if(!SemTagMenu.inMenu(menuElem,_129)){
SemTagMenu.hide(SemTagMenu.id);
}
}
},keydown:function(_12b){
SemTagMenu.catchEscape(_12b);
SemTagMenu.catchTab(_12b);
},catchEscape:function(_12c){
if(_12c.keyCode==27){
SemTagMenu.hide(SemTagMenu.id);
}
},catchTab:function(_12d){
if(_12d.keyCode==9){
if(SemTagMenu.elemNext&&typeof (SemTagMenu.elemNext.focus)!="undefined"){
SemTagMenu.elemNext.focus();
}
SemTagMenu.hide(SemTagMenu.id);
}
},simulateClick:function(_12e){
if(_12e.ctrlKey&&_12e.keyCode==13){
if(_12e.preventDefault){
_12e.preventDefault();
}
var evt=null;
if(document.createEvent){
evt=document.createEvent("MouseEvents");
}
if(evt&&evt.initMouseEvent){
evt.initMouseEvent("click",true,true,document.defaultView,1,0,0,0,0,false,false,false,false,0,null);
}
var _130=document.getElementById(SemTagMenu.id);
if(_130.dispatchEvent){
_130.dispatchEvent(evt);
}else{
if(_130.fireEvent){
_130.fireEvent("onclick");
}
}
}
},stopEvent:function(_131){
if(!_131){
return;
}
if(dojo.isFF){
if(_131.preventDefault==null){
_131=_131.original;
}
_131.preventDefault();
_131.stopPropagation();
}else{
try{
if(_131.returnValue==null){
_131=_131.original;
}
_131.returnValue=false;
_131.cancelBubble=true;
}
catch(e){
}
}
},startHideTimer:function(_132){
if(0<SemTagMenu.hideDelay){
SemTagMenu.timeouts.push(window.setTimeout("SemTagMenu.endHideTimer(\""+_132+"\")",SemTagMenu.hideDelay));
}
},endHideTimer:function(_133){
menuElem=document.getElementById(_133);
SemTagMenu.hide(_133);
},clearTimeouts:function(){
for(i=0;i<SemTagMenu.timeouts.length;i++){
window.clearTimeout(SemTagMenu.timeouts[i]);
}
},defaultCursor:function(){
document.body.style.cursor="default";
},waitCursor:function(){
document.body.style.cursor="wait";
},clickCursor:function(){
document.body.style.cursor="pointer";
}};
SemTagMenu.defaultLoaded=true;
SemTagMenu.hoverDimension=[14,14];
SemTagMenu.hoverOffset=[15,3];
SemTagMenu.menuOffset=[15,0];
SemTagMenu.writeHover=function(out,bidi,elem){
if(window.semtagrs!=null){
var _136="z-index: 900; opacity: 1;";
if(window.SemTagSvcConfig!=null&&SemTagSvcConfig.isBidiRTL){
_136+="padding:2px 25px 2px 3px; background-position:96% center;";
}
var _uid = lconn.profiles.bizCard.bizCard.getElementUserId(elem);
if (!lconn.core.bizCard.bizCardUtils.checkUid(_uid)) // false for disabled profile , true for active profile
	out.write("<div class='javlinHover' "+" onmouseover='javascript:SemTagMenu.defaultCursor();'"+" onmouseout='javascript:SemTagMenu.defaultCursor();'"+" style='"+_136+"' "+" title='"+semtagrs["label.semtag.hover.disabled"]+"' "+">"+semtagrs["label.semtag.hover.disabled"]+"</div>");			
else		
	out.write("<div class='javlinHover' "+" onmouseover='javascript:SemTagMenu.clickCursor();'"+" onmouseout='javascript:SemTagMenu.defaultCursor();'"+" style='"+_136+"' "+" title='"+semtagrs["label.semtag.hover"]+"' "+">"+semtagrs["label.semtag.hover"]+"</div>");				
}else{
console.log("SemTagMenu.writeHover: semtagrs is null. Need for strings");
}
};
SemTagMenu.startMenu=function(out,bidi){
out.write("<div class='popupPersonCard' style='z-index: 900;'>");
};
SemTagMenu.writeHeader=function(out,_13a,bidi){
out.write(_13a.markup);
};
SemTagMenu.startActionSection=function(out,bidi,_13e){
out.write("<a href='javascript:a11y()'><a>");
if(!_13e){
_13e="personMenuActions";
}
out.write("<div class='"+_13e+"'>");
out.write("<ul>");
};
SemTagMenu.writeMenuItem=function(out,item,bidi){
out.write("<li><a href='"+item.href+"'>"+item.label+"</a></li>");
};
SemTagMenu.endActionSection=function(out,bidi){
out.write("</ul>");
out.write("</div>");
};
SemTagMenu.writeFooter=function(out,_145,bidi){
out.write(_145.markup);
};
SemTagMenu.endMenu=function(out,bidi){
out.write("</div>");
};
var SemTagUtil={crossDomainRequest:function(){
var _149=new Array();
var _14a=new Array();
var _14b=new Array();
var self=this;
createTimeoutFunction=function(_14d){
return function(){
self.cancelRequest(_14d);
};
};
this.getScriptId=function(id){
return "_JVLN_"+id;
};
this.getScriptObject=function(id){
return document.getElementById(this.getScriptId(id));
};
this.cloneObject=function(obj){
var _151=new Object();
for(i in obj){
_151[i]=obj[i];
}
return _151;
};
this.request=function(url,_153,_154,_155,_156){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: started");
}
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: connectionId "+_156);
}
_156=_156.toLowerCase();
var _157=this.getScriptId(_156);
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: objId "+_157);
}
if(_154!=null){
_149[_156]=_154;
}
if(_155!=null){
if(!dojo.isFF){
_14a[_156]=this.cloneObject(_155);
}else{
_14a[_156]=_155;
}
}
var _158=document.createElement("script");
_158.id=_157;
_158.type="text/javascript";
_158.defer=true;
try{
_158.src=url;
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: url: "+url);
}
}
catch(e){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: error:",e);
}
return false;
}
try{
var body=document.getElementsByTagName("body");
if(body[0]){
body[0].appendChild(_158);
}else{
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: error getting body element to insert script:"+_158.id);
}
return false;
}
}
catch(e){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: error:",e);
}
return false;
}
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.request: added script: "+_158.id);
}
if(_153){
var self=this;
_14b[_156]=window.setTimeout(createTimeoutFunction(_156),_153);
}
};
this.cancelRequest=function(id){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.cancelRequest:  Request ["+id+"] took too long.  Cancelling request for id: "+_14b[id]);
}
var _15c=_149[id];
_149[id]=null;
var _15d=_14a[id];
_14a[id]=null;
if(_15c!=null){
try{
if(_15c){
_15c(false,null,_15d);
}
this.removeScript(id);
}
catch(e){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.cancelRequest: Exception Caught: "+e);
}
}
}else{
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.cancelRequest: no callback for : "+id);
}
}
};
this.removeScript=function(id){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.removeScript: removing script element for: "+id);
}
if(id){
var _15f=this.getScriptObject(id);
if(_15f!=null){
var body=document.getElementsByTagName("body");
body[0].removeChild(_15f);
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.removeScript: removed script for id: "+id);
}
}else{
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.removeScript: script is null for id: "+id);
}
}
}else{
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.removeScript: id is null");
}
}
};
this.dispatch=function(id,data){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.dispatch: id: "+id);
}
if(id!=null){
id=id.toLowerCase();
}
try{
if(id!=null&&typeof (_14b[id])!="undefined"&&_14b[id]!=null){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("request dispatched. removing timeout for id ["+id+"]  timeout id: "+_14b[id]);
}
window.clearTimeout(_14b[id]);
}
var _163=_149[id];
var _164=_14a[id];
_14a[id]=null;
if(_163!=null){
_149[id]=null;
_163(true,data,_164);
window.setTimeout(function(){
self.removeScript(id);
},1000);
}else{
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("SemTagUtil.dispatch: callback is null for id: "+id);
}
}
}
catch(e){
console.log("SemTagUtil.dispatch: Exception Caught: ");
console.log(e);
}
};
}};
}
if(!dojo._hasResource["lconn.communities.bizCard.bizCard"]){
dojo._hasResource["lconn.communities.bizCard.bizCard"]=true;
dojo.provide("lconn.communities.bizCard.bizCard");
lconn.communities.bizCard.bizCard={servletUrl:null,requestor:null,initited:false,init:function(){
this.servletUrl=lconn.core.bizCard.bizCardUtils.getBaseURL("hgroup")+"/service/json/communityview?communityUuid=@@@UUID@@@";
if(this.initited==false){
this.requestor=new SemTagUtil.crossDomainRequest();
this.initited=true;
}
},getIdMethod:function(_165){
return _165.uuid?_165.uuid:null;
},convMethod:function(_166){
return _166;
},customTrim:function(_167){
return _167.replace(/^\s+/,"").replace(/\s+$/,"");
},processTag:function(_168){
try{
if(!this.initited){
lconn.core.bizCard.bizCardUtils.init();
SemTagMenu.init();
this.init();
}
this.processHcard(_168);
}
catch(e){
console.log(e);
}
},processHcard:function(_169){
var _16a=this.getNameElement(_169);
if(!_16a){
return;
}
if(this.isInline(_169)){
var _16b={"target":_16a};
this.getTagFromServer(_16b);
}else{
lconn.core.bizCard.bizCardUtils.addHover(_16a,lconn.communities.bizCard.bizCard.showHover,lconn.communities.bizCard.bizCard.showMenu);
}
},isInline:function(_16c){
return this.getHcardAttributeValue("X-community-display-inline",_16c);
},loadHcardCommunity:function(_16d){
var _16e=new Object();
var _16f=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcomm",_16d);
var _170=_16f.getElementsByTagName("*");
for(i=0;i<_170.length;i++){
var _171=_170[i];
if(_171.className){
var _172=_171.className.split(" ");
for(j=0;j<_172.length;j++){
var c=_172[j];
var attr=this.getHcardAttributeValue(c,_16f);
if(attr){
_16e[c]=attr;
}
}
}
}
return _16e;
},getHcardAttributeValue:function(_175,_176){
switch(_175){
case ("name"):
return this.getHcardTypedAttribute(_176,_175,"name");
case ("uuid"):
return this.getHcardTypedAttribute(_176,_175,"uuid");
case ("selectedWidgetId"):
return this.getHcardTypedAttribute(_176,_175,"selectedWidgetId");
}
var _177=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcomm",_176);
var _178=lconn.core.bizCard.bizCardUtils.getElementsByClassName(_175,_177,1);
if(_178.length>0&&_178[0].tagName.match(/^abbr$/i)){
return _178[0].getAttribute("title");
}
switch(_175){
case ("uuid"):
var uuid=lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_178[0]);
if(uuid){
return uuid;
}else{
return this.getHcardAttributeValue("name",_176);
}
break;
case ("name"):
var name=lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_178[0]);
if(name){
return name;
}
break;
case ("selectedWidgetId"):
var _17b=lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_178[0]);
if(_17b){
return _17b;
}
break;
case ("X-community-display-inline"):
if(_178.length>0){
return true;
}else{
return false;
}
default:
return lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_178[0]);
break;
}
},getHcardTypedAttribute:function(_17c,_17d,_17e){
var _17f=new Object();
var _180=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcomm",_17c);
var _181=lconn.core.bizCard.bizCardUtils.getElementsByClassName(_17d,_180);
for(i=0;i<_181.length;i++){
var _182=_181[i];
_17f=lconn.core.bizCard.bizCardUtils.getTypedValue(_182,_17e);
}
return _17f;
},showHover:function(_183){
try{
lconn.core.bizCard.bizCardUtils.showHover(_183,lconn.communities.bizCard.bizCard.showMenu);
}
catch(e){
console.log("Error in lconn.communities.bizCard.bizCard.showHover");
console.log(e);
}
},showMenu:function(_184){
var _982=lconn.core.bizCard.bizCardUtils.getLiveElementFromEvent(_184);	
var _988=lconn.profiles.bizCard.bizCard.getElementUserId(_982);
if (lconn.core.bizCard.bizCardUtils.checkUid(_988)) { //profile is active			
SemTagMenu.waitCursor();
lconn.communities.bizCard.bizCard.getTagFromServer(_184);
}
},getTagFromServer:function(_185){
var _186=null;
var _187=null;
if(_185!=null&&_185.target!=null&&_185.target.className=="name"){
_186=_185.target;
_187=_185;
SemTagMenu.currentElem=_186;
}else{
_186=SemTagMenu.currentElem;
_187={target:_186,original:_185};
if(_186==null&&_185!=null){
_187=_185;
_186=_185.target;
}
}
var _188=this.customTrim(this.getElementUuid(_186));
var _189={"UUID":_188};
var _18a="lconn.communities.bizCard.bizCard.dispatch";
var _18b=_188;
if(lconn.core.bizCard.bizCardUtils.isDebug){
window.status="Community.getTagFromServer sending request for: "+_188+")";
}
lconn.core.bizCard.bizCardUtils.getBizCardData(this.servletUrl+"&preventCache="+new Date().getTime(),_189,_18a,this.requestor,this.requestReturn,_187,_18b);
},requestReturn:function(_18c,_18d,_18e){
if(lconn.core.bizCard.bizCardUtils.isDebug){
window.status="Community.requestReturn: success="+_18c;
}
var _18f=_18c?lconn.communities.bizCard.bizCard.convMethod(_18d):{};
var _190=lconn.core.bizCard.bizCardUtils.getLiveElementFromEvent(_18e);
lconn.communities.bizCard.bizCard.fillCommunityJsonMoreFromDom(_18f,_190);
lconn.communities.bizCard.bizCard.update(_18f,_190,_18e);
},fillCommunityJsonMoreFromDom:function(_191,_192){
if(lconn.core.bizCard.bizCardUtils.isDebug){
window.status="Community.fillCommunityJsonMoreFromDom";
}
if(!_191.name){
var _193=lconn.core.bizCard.bizCardUtils.findNameElementInHcard(_192);
if(_193){
_191.name=lconn.core.bizCard.bizCardUtils.getTextValue(_193);
}
}
if(!_191.uuid){
var uuid=this.getElementUuid(_192);
_191.uuid=uuid;
}
},update:function(_195,_196,_197){
if(lconn.core.bizCard.bizCardUtils.isDebug){
window.status="Community.update";
}
this.currentCommunity=_195;
var _198=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcomm",_196);
if(this.isInline(_198)){
var out=new lconn.core.bizCard.bizCardUtils.out();
var _19a=this.getHcardAttributeValue("selectedWidgetId",_198).selectedWidgetId;
lconn.communities.bizCard.bizCardUI.getInlineMarkup(_195,"ltr",out,_19a);
var prev=lconn.core.bizCard.bizCardUtils.getElementsByClassName("personinlinemenu",_198,1);
if(prev.length>0){
prev[0].innerHTML=out.buffer;
}else{
var span=document.createElement("span");
span.className="personinlinemenu";
span.innerHTML=out.buffer;
_198.appendChild(span);
}
}else{
var _19d=new Array();
var _19e="personMenuActions";
var _19f=new lconn.core.bizCard.bizCardUtils.out();
var _1a0=new lconn.core.bizCard.bizCardUtils.out();
lconn.communities.bizCard.bizCardUI.getMenuData(_195,"ltr",_19d,_19e,_19f,_1a0);
lconn.core.bizCard.bizCardUtils.setMenuData(_197,_19d,_19e,lconn.core.bizCard.bizCardUtils.getMenuHeaderJson(_19f.buffer,-100));
}
},dispatch:function(data){
var _1a2=this.getIdMethod(data);
this.requestor.dispatch(_1a2,data);
},getElementUuid:function(elem){
var uuid;
var _1a5=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcomm",elem);
if(_1a5!=null){
uuid=this.getHcardAttributeValue("uuid",_1a5);
uuid=uuid.uuid;
}
return uuid;
},getNameElement:function(elem){
if(elem.className!="vcomm"){
elem=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcomm",elem);
}
var _1a7=lconn.core.bizCard.bizCardUtils.getElementsByClassName("name",elem,1)[0];
return _1a7;
}};
}
if(!dojo._hasResource["lconn.communities.bizCard.bizCardUI"]){
dojo._hasResource["lconn.communities.bizCard.bizCardUI"]=true;
var showLinks=(dojo.cookie("community.inline.card.links")==1);
dojo.provide("lconn.communities.bizCard.bizCardUI");
lconn.communities.bizCard.bizCardUI={getMenuData:function(_1a8,bidi,_1aa,_1ab,_1ac,_1ad){
var _1ae=dojo.i18n.getLocalization("lc_default")["label.overview"];
if(_1ae==null){
_1ae=dojo.i18n.getLocalization("lc_default")["label.navigation.overview.heading"];
}
var _1af="";
if(lconn.core.bizCard.bizCardUtils.standaloneCSSloaded){
_1af=" lotusui";
}
_1ac.write("<div id='container' "+_1af+" style='width: 32em; height:12em;border: 1px solid #e0e0e0; -moz-border-radius:7px;background-color:#F5F8FF;padding:10px 0px 8px 10px;'>");
_1ac.write("  <div id='navigationLinks' style='clear:left; border-bottom:1px solid #e0e0e0;padding: 0px 0pt 5px 0px;margin:0;'>");
_1ac.write("      <a href='"+_1a8.homeUrl+"' title=\""+_1ae+"\" class='action'>"+_1ae+"</a>");
this.writeLinksforPopupCard(_1ac,_1a8);
_1ac.write("  </div><br/>");
if(_1a8.imageUrl!=null&&_1a8.imageUrl!=""){
_1ac.write("  <img src='"+_1a8.imageUrl+"' alt=\""+_1a8.name+"\" title=\""+_1a8.name+"\" height='95' width='95' style='float:left;margin: 0px 10px 10px 10px; padding:2px !important; border:1px solid #c2c2c2;background-color:#fff;'/>");
}
_1ac.write("  <div  style='height:9em;overflow:hidden;'>");
_1ac.write("  <h2 style='font-size:1.1em;margin:0;margin-right:20px;padding:0;'>"+_1a8.name+"<span id='membersCount' style='font-size:.9em;color:#999;font-weight:normal;'> ("+_1a8.membercount+" "+dojo.i18n.getLocalization("lc_default")["label.members.lowercase"]+")</span></h2>");
if(_1a8.tags!=null&&_1a8.tags!=""){
_1ac.write("  <div style='font-size:.9em;color:#999;padding:0;margin:0;'>"+dojo.i18n.getLocalization("lc_default")["label.tags"]+" "+_1a8.tags+"</div>");
}
if(_1a8.description!=null&&_1a8.description!=""){
_1ac.write("  <p id='communityDescription' style='font-size:.9em;padding:3px 5px 0 0;margin:0;'>");
_1ac.write("      "+_1a8.description);
_1ac.write("  </p>                        ");
}
_1ac.write("  </div>                      ");
_1ac.write("</div><!-- end container -->");
},getInlineMarkup:function(comm,bidi,_1b2,_1b3){
var _1b4=_1b2;
var _1b5=(dojo.cookie("community.inline.card.links")!=0);
var _1b6="lotusTwistyOpen";
if(_1b5){
_1b6="lotusTwistyOpen";
}else{
_1b6="lotusTwistyClosed";
}
var _1b7="";
if(lconn.core.bizCard.bizCardUtils.standaloneCSSloaded){
_1b7="lotusui";
}
_1b4.write("<div class=\"lotusMenu "+_1b7+"\">");
_1b4.write("<div class=\"lotusBottomCorner  lotusInlineMenu\">");
_1b4.write("<div class=\"lotusInner\">");
_1b4.write("<div class=\" lotusCenter lotusInlinePhoto\"><a href=\""+comm.homeUrl+"\"><img src=\""+comm.imageUrl+"\" width=\"155\" height=\"155\" alt=\""+comm.name+"\" /></a></div>");
_1b4.write("<div class=\"lotusLeft\"><a id=\""+comm.uuid+"_twisty\" class=\"lotusSprite lotusArrow "+_1b6+"\" href=\"javascript:lconn.communities.bizCard.bizCardUI.toggleSection('"+comm.uuid+"');\"></a></div>");
_1b4.write("<h2><a href=\""+comm.homeUrl+"\">"+comm.name+"</a></h2>");
_1b4.write("<div class=\"lotusMenuSeparator\"></div>");
this.writeLinks(_1b4,comm,_1b3,_1b5);
_1b4.write("</div>");
_1b4.write("</div>");
_1b4.write("</div>");
},writeLinksforPopupCard:function(_1b8,_1b9){
for(var i=0;_1b9.links!=null&&i<_1b9.links.length;i++){
_1b8.write("&nbsp;&nbsp;|&nbsp;<a href='"+_1b9.links[i].url+"' title='"+_1b9.links[i].label+"' class='action'>"+_1b9.links[i].label+"</a>");
}
},toggleSection:function(_1bb){
var _1bc=dojo.byId(_1bb+"_twisty");
var _1bd=dojo.byId(_1bb+"_comm_appLinks");
if(_1bd.style.display=="none"){
dojo.fx.wipeIn({node:_1bd,duration:300}).play();
dojo.removeClass(_1bc,"lotusTwistyClosed");
dojo.addClass(_1bc,"lotusTwistyOpen");
dojo.cookie("community.inline.card.links",1);
}else{
dojo.fx.wipeOut({node:_1bd,duration:300}).play();
dojo.removeClass(_1bc,"lotusTwistyOpen");
dojo.addClass(_1bc,"lotusTwistyClosed");
dojo.cookie("community.inline.card.links",0);
}
},writeLinks:function(_1be,_1bf,_1c0,_1c1){
var _1c2=dojo.i18n.getLocalization("lc_default")["label.overview"];
if(_1c2==null){
_1c2=dojo.i18n.getLocalization("lc_default")["label.navigation.overview.heading"];
}
if(_1c1){
_1be.write("<ul id=\""+_1bf.uuid+"_comm_appLinks\">");
}else{
_1be.write("<ul id=\""+_1bf.uuid+"_comm_appLinks\" style=\"display: none\">");
}
_1be.write("<li>"+"<a href='"+_1bf.homeUrl+"' title=\""+_1c2+"\" class='action'>"+_1c2+"</a>"+"</li>");
for(var i=0;_1bf.links!=null&&i<_1bf.links.length;i++){
_1be.write("<li id=\""+_1bf.links[i].id+"navItem\"");
if(_1c0==_1bf.links[i].id){
_1be.write(" class=\"lotusSelected\" ");
}
_1be.write("><a href=\""+_1bf.links[i].url+"\" title=\""+_1bf.links[i].label+"\" class=\"action\">"+_1bf.links[i].label+"</a></li>");
}
_1be.write("</ul>");
return;
}};
}
if(!dojo._hasResource["lconn.core.i18nOverrider"]){
dojo._hasResource["lconn.core.i18nOverrider"]=true;
dojo.provide("lconn.core.i18nOverrider");
if(lconn.core.i18nOverrider.originalFunction==null){
lconn.core.i18nOverrider.originalFunction=dojo.i18n.getLocalization;
}
dojo.i18n.getLocalization=function(_1c4,_1c5,_1c6){
if(_1c4=="lc_default"&&window["lc_default"]){
return window["lc_default"];
}else{
return lconn.core.i18nOverrider.originalFunction(_1c4,_1c5,_1c6);
}
};
}
if(!dojo._hasResource["lconn.core.utilities"]){
dojo._hasResource["lconn.core.utilities"]=true;
dojo.provide("lconn.core.utilities");
lconn.core.utilities.getURLParam=function(_1c7){
var _1c8=decodeURIComponent(window.location);
if(_1c8.indexOf(_1c7)==-1){
return null;
}else{
var _1c9=_1c8.substring(_1c8.indexOf(_1c7+"=")+_1c7.length+1);
var _1ca=_1c9.indexOf("&");
if(_1ca!=-1){
_1c9=_1c9.substring(0,_1ca);
}
return _1c9;
}
};
lconn.core.utilities.replacePlaceHolders=function(_1cb,_1cc){
var _1cd=new Object();
for(var i=0;_1cc!=null&&i<_1cc.length;i++){
_1cd["{"+i+"}"]=_1cc[i];
}
return lconn.core.i18nOverrider.replaceParams(_1cb,_1cd);
};
lconn.core.utilities.processUntilElementIsFound=function(_1cf,_1d0,_1d1,_1d2){
var _1d3="";
var _1d4=0;
_1d3=window.setInterval(function(){
var _1d5=null;
if(_1d1!=null){
_1d5=_1d1.getElementById(_1cf);
}else{
_1d5=dojo.byId(_1cf);
}
_1d4++;
if(_1d5!=null){
window.clearInterval(_1d3);
_1d0(_1d5,_1d2);
}else{
if(_1d4==20){
window.clearInterval(_1d3);
}
}
},500);
};
lconn.core.utilities.processUntilAvailable=function(_1d6,test,_1d8){
var _1d9="";
var _1da=0;
_1d9=window.setInterval(function(){
_1da++;
if(eval(test)){
window.clearInterval(_1d9);
if(_1d8!=null){
_1d6(_1d8);
}else{
_1d6();
}
}else{
if(_1da==20){
window.clearInterval(_1d9);
}
}
},500);
};
lconn.core.utilities.gotoURL=function(url,_1dc){
if(_1dc==null){
if(url.indexOf("?")!=-1){
url+="&ver="+profilesData.config.buildNumber+"&lastMod="+profilesData.config.profileLastMod;
}else{
url+="?ver="+profilesData.config.buildNumber+"&lastMod="+profilesData.config.profileLastMod;
}
}
if(dojo.isIE){
var _1dd=url;
setTimeout("window.location.href = SideBar_RedirectUrl",0);
}else{
window.location.assign(url);
}
};
lconn.core.utilities.toggleVisibility=function(_1de,_1df){
var _1e0=null;
if((typeof _1de)=="string"){
_1e0=dojo.byId(_1de);
}else{
_1e0=_1de;
}
if(_1e0){
if(_1e0.style.visibility=="hidden"){
lconn.core.utilities.show(_1e0,_1df);
}else{
lconn.core.utilities.hide(_1e0,_1df);
}
}
return false;
};
lconn.core.utilities.hide=function(_1e1,_1e2,nofx,_1e4){
var _1e5=null;
if((typeof _1e1)=="string"){
_1e5=dojo.byId(_1e1);
}else{
_1e5=_1e1;
}
if(_1e5!=null){
var _1e6=function(){
_1e5.style.visibility="hidden";
if(!_1e2){
_1e5.style.display="none";
}
if(_1e4!=null){
_1e4();
}
};
if(nofx==null||nofx==false){
var _1e7=dojo.fx.wipeOut({node:_1e5,duration:300,onEnd:_1e6});
_1e7.play();
}else{
_1e6();
}
}
return false;
};
lconn.core.utilities.show=function(_1e8,_1e9,_1ea,nofx,_1ec){
var _1ed=0;
var _1ee=null;
if((typeof _1e8)=="string"){
_1ee=dojo.byId(_1e8);
}else{
_1ee=_1e8;
}
if(_1ea&&_1ee==null){
var _1ef="";
_1ef=window.setInterval(function(){
_1ed++;
if((typeof _1e8)=="string"){
_1ee=dojo.byId(_1e8);
}else{
_1ee=_1e8;
}
if(_1ee!=null){
window.clearInterval(_1ef);
lconn.core.utilities.show(_1ee,_1e9,false,nofx,_1ec);
}else{
if(_1ed==20){
window.clearInterval(_1ef);
}
}
},300);
}else{
if(_1ee!=null){
var _1f0=function(){
_1ee.style.visibility="visible";
if(!_1e9){
_1ee.style.display="block";
}
if(_1ec!=null){
_1ec();
}
};
if(nofx==null||nofx==false){
var _1f1=dojo.fx.wipeIn({node:_1ee,duration:300});
_1f1.play();
}else{
_1f0();
}
}
}
return false;
};
}
if(!dojo._hasResource["lconn.profiles.bizCard.bizCard"]){
dojo._hasResource["lconn.profiles.bizCard.bizCard"]=true;
dojo.provide("lconn.profiles.bizCard.bizCard");
var SemTagPerson={services:[]};
lconn.profiles.bizCard.bizCard={applicationContext:null,servletUrlByUserId:null,servletUrlByEmail:null,requestor:null,services:[],initited:false,init:function(){
if(this.initited==false){
this.applicationContext=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard");
this.servletUrlByUserId2=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard")+"/json/profile.do?userid=@@@USERID@@@&lang=@@@LANG@@@";
this.servletUrlByEmail2=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard")+"/json/profile.do?email=@@@EMAIL@@@&lang=@@@LANG@@@";
this.servletUrlByUserId=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard")+"/json/profile.do?userid=@@@USERID@@@&callback=lconn.profiles.bizCard.bizCard.dispatchByUserId&lang=@@@LANG@@@";
this.servletUrlByEmail=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard")+"/json/profile.do?email=@@@EMAIL@@@&callback=lconn.profiles.bizCard.bizCard.dispatchByEmail&lang=@@@LANG@@@";
this.requestor=new SemTagUtil.crossDomainRequest();
if(window.generalrs==null){
lconn.core.bizCard.bizCardUtils.loadScript(lconn.core.bizCard.bizCardUtils.getBaseURL("hcard")+"/resources/js-resources.js");
}
this.initited=true;
}
},getIdMethod:function(_1f2){
return (_1f2.email&&_1f2.email.internet)?_1f2.email.internet:null;
},convMethod:function(_1f3){
return _1f3;
},dispatchByEmail:function(data){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("lconn.profiles.bizCard.bizCard.dispatchByEmail: data: "+data);
}
var _1f5=(data.email&&data.email.internet)?data.email.internet:null;
this.dispatch(_1f5,data);
},dispatchByUserId:function(data){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("lconn.profiles.bizCard.bizCard.dispatchByUserId: data: "+data);
}
var _1f7=data.X_lconn_userid?data.X_lconn_userid:null;
this.dispatch(_1f7,data);
},dispatchByConfig:function(data){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("lconn.profiles.bizCard.bizCard.dispatchByConfig: data: "+data);
}
this.dispatch("configDataId",data);
},dispatch:function(id,data){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("lconn.profiles.bizCard.bizCard.dispatch: id:"+id+"  data: "+data);
}
this.requestor.dispatch(id,data);
},processTag:function(_1fb){
try{
if(!this.initited){
lconn.core.bizCard.bizCardUtils.init();
SemTagMenu.init();
this.init();
}
this.processHcard(_1fb);
}
catch(e){
console.log(e);
}
},processHcard:function(_1fc){
var _1fd=this.getNameElement(_1fc);
if(!_1fd){
return;
}
if(this.isInline(_1fc)){
var _1fe={"target":_1fd};
this.getTagFromServer(_1fe);
}else{
lconn.core.bizCard.bizCardUtils.addHover(_1fd,this.showHover,this.showMenu,this.keystrokeHandler);
}
},isInline:function(_1ff){
return this.getHcardAttributeValue("X-person-display-inline",_1ff);
},loadHcardPerson:function(_200){
var _201=new Object();
var _202=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",_200);
var _203=_202.getElementsByTagName("*");
for(i=0;i<_203.length;i++){
var _204=_203[i];
if(_204.className){
var _205=_204.className.split(" ");
for(j=0;j<_205.length;j++){
var c=_205[j];
var attr=this.getHcardAttributeValue(c,_202);
if(attr){
_201[c]=attr;
}
}
}
}
return _201;
},getHcardAttributeValue:function(_208,_209){
switch(_208){
case ("email"):
return this.getHcardTypedAttribute(_209,_208,"internet");
case ("tel"):
return this.getHcardTypedAttribute(_209,_208,"voice");
case ("adr"):
return this.getHcardTypedAttribute(_209,_208,"intl");
}
var _20a=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",_209);
var _20b=lconn.core.bizCard.bizCardUtils.getElementsByClassName(_208,_20a,1);
if(_20b.length>0&&_20b[0].tagName.match(/^abbr$/i)){
return _20b[0].getAttribute("title");
}
switch(_208){
case ("fn"):
var fn=lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_20b[0]);
if(fn){
return fn;
}else{
return this.getHcardAttributeValue("n",_209);
}
break;
case ("n"):
if(_20b.length>0){
var _20d=_20b[0];
var _20e="";
var _20f=["honorific-prefix","given-name","additional-name","family-name","honorific-suffix"];
for(i=0;i<5;i++){
var n=lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(lconn.core.bizCard.bizCardUtils.getElementsByClassName(_20f[i],_20d,1)[0]);
if(n){
_20e+=n+" ";
}
}
return _20e;
}
return "";
break;
case ("photo"):
var _211=_20b[0];
if(_211){
return _211.getAttribute("src");
}else{
return;
}
break;
case ("X-sametime-status"):
var _212=_20b[0];
if(!_212){
return "";
}
var _213=_212.getAttribute("value");
if(_213){
return _213;
}else{
return lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_212);
}
break;
case ("X-person-display-inline"):
if(_20b.length>0){
return true;
}else{
return false;
}
case ("street-address"):
case ("post-office-box"):
case ("extended-address"):
case ("locality"):
case ("region"):
case ("postal-code"):
case ("country-name"):
case ("title"):
case ("role"):
case ("org"):
default:
return lconn.core.bizCard.bizCardUtils.getSinglePropertyValue(_20b[0]);
break;
}
},getHcardTypedAttribute:function(_214,_215,_216){
var _217=new Object();
var _218=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",_214);
var _219=lconn.core.bizCard.bizCardUtils.getElementsByClassName(_215,_218);
for(i=0;i<_219.length;i++){
var _21a=_219[i];
if(_215=="email"&&_21a.nodeName.toLowerCase()=="a"&&_21a.href.match(/^mailto:/)){
var _21b=_21a.href.indexOf("?");
if(_21b>-1){
_217[_216]=_21a.href.slice(7,_21b);
}else{
_217[_216]=_21a.href.slice(7);
}
continue;
}
_217=lconn.core.bizCard.bizCardUtils.getTypedValue(_21a,_216);
}
return _217;
},showHover:function(_21c){
try{
lconn.core.bizCard.bizCardUtils.showHover(_21c,lconn.profiles.bizCard.bizCard.showMenu);
}
catch(e){
console.log("Error in lconn.profiles.bizCard.bizCard.showHover");
console.log(e);
}
},showMenu:function(_21d){
var _982=lconn.core.bizCard.bizCardUtils.getLiveElementFromEvent(_21d);	
var _988=lconn.profiles.bizCard.bizCard.getElementUserId(_982);
if (lconn.core.bizCard.bizCardUtils.checkUid(_988)) { //profile is active		
SemTagMenu.waitCursor();
lconn.profiles.bizCard.bizCard.getTagFromServer(_21d);
}
},keystrokeHandler:function(_21e){
if(_21e.ctrlKey&&(_21e.keyCode==13)){
if(_21e.preventDefault){
_21e.preventDefault();
}
lconn.profiles.bizCard.bizCard.showMenu(_21e);
}
},getSearchType:function(_21f){
indexOf.lconn.core.bizCard.bizCardUtils.getBaseURL("hcard");
},getTagFromServer:function(_220){
var _221=lconn.core.bizCard.bizCardUtils.getLiveElementFromEvent(_220);
var _222=lconn.core.bizCard.bizCardUtils.getLangParam();
var _223={"LANG":lconn.core.bizCard.bizCardUtils.getLangParam()};
var url=null;
var _225=null;
var _226=null;
var _227=this.getElementUserId(_221);
if(_227){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Person.getTagFromServer sending request for user id: "+_227);
}
_223["USERID"]=_227;
_225=_227;
url=this.servletUrlByUserId2;
_226="lconn.profiles.bizCard.bizCard.dispatchByUserId";
}else{
var _228=this.getElementEmail(_221);
if(_228){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Person.getTagFromServer sending request for email: "+_228);
}
_223["EMAIL"]=_228;
_225=_228;
url=this.servletUrlByEmail2;
_226="lconn.profiles.bizCard.bizCard.dispatchByEmail";
}
}
if(_225!=null){
lconn.core.bizCard.bizCardUtils.getBizCardData(url,_223,_226,this.requestor,this.requestReturn,_220,_225);
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Person.getTagFromServer sent");
}
}else{
this.noInformationProvided(_221,_220);
}
},noInformationProvided:function(_229,_22a){
lconn.profiles.bizCard.bizCard.update(null,_229,_22a);
},requestReturn:function(_22b,_22c,_22d){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Person.requestReturn: success="+_22b);
}
var _22e=lconn.core.bizCard.bizCardUtils.getLiveElementFromEvent(_22d);
var _22c=_22b?lconn.profiles.bizCard.bizCard.convMethod.call(null,_22c):{};
lconn.profiles.bizCard.bizCard.fillPersonJsonMoreFromDom(_22c,_22e);
lconn.profiles.bizCard.bizCard.update(_22c,_22e,_22d);
},fillPersonJsonMoreFromDom:function(_22f,_230){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Person.fillPersonJsonMoreFromDom");
}
if(!_22f.photo){
_22f.photo=lconn.core.bizCard.bizCardUtils.baseUrl+"/images/profileNoPhoto.gif";
}
if(!_22f.fn){
var _231=lconn.core.bizCard.bizCardUtils.findNameElementInHcard(_230);
if(_231){
_22f.fn=lconn.core.bizCard.bizCardUtils.getTextValue(_231);
}
}
if(!_22f.email||!_22f.email.internet){
var _232=this.getElementEmail(_230);
_22f.email={"internet":_232};
}
if(!_22f.tel||!_22f.tel.voice){
var _233=lconn.core.bizCard.bizCardUtils.findElementByNameInHcard(_230,"tel");
if(_233){
var tels=lconn.core.bizCard.bizCardUtils.getTypedValue(_233,"voice");
_22f.tel={"voice":tels["voice"]};
}
}
var _235=lconn.core.bizCard.bizCardUtils.findElementByNameInHcard(_230,"adr");
var _236={};
if(_235){
_236=SemTagAddr.getAddressJson(_235);
_22f.adr=_236;
}
},update:function(_237,_238,_239){
if(lconn.core.bizCard.bizCardUtils.isDebug){
console.log("Person.update");
}
this.currentPerson=_237;
var _23a=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",_238);
if(this.isInline(_23a)){
var out=new lconn.core.bizCard.bizCardUtils.out();
lconn.profiles.bizCard.bizCardUI.getInlineMarkup(_237,"ltr",out);
var span=document.createElement("span");
span.innerHTML=out.buffer;
_23a.appendChild(span);
var _23d=(dojo.cookie("card.inline.expanded")?false:true);
}else{
var _23e=new Array();
var _23f="personMenuActions";
var _240=new lconn.core.bizCard.bizCardUtils.out();
var _241=new lconn.core.bizCard.bizCardUtils.out();
lconn.profiles.bizCard.bizCardUI.getMenuData(_237,"ltr",_23e,_23f,_240,_241);
lconn.core.bizCard.bizCardUtils.setMenuData(_239,_23e,_23f,lconn.core.bizCard.bizCardUtils.getMenuHeaderJson(_240.buffer,-100));
}
if(_237!=null){
if(_237.X_bizCardSTAwareness){
this.invokeSametimeAwareness(_237);
}
}
},invokeSametimeAwareness:function(_242){
if(this.attemptedToLoadSametime==null&&window.Status==null){
var _243="http://localhost:59449/stwebapi/";
lconn.core.bizCard.bizCardUtils.loadScript(_243+"getStatusNonDojo.js");
lconn.core.bizCard.bizCardUtils.loadCss(lconn.core.bizCard.bizCardUtils.getBaseURL("hcard")+"/css/sametime/main.css");
this.attemptedToLoadSametime=true;
}
lconn.core.utilities.processUntilAvailable(this.invokeSametimeAwarenessForPerson,"window.Status != null",_242);
},invokeSametimeAwarenessForPerson:function(_244){
var _245="http://localhost:59449/stwebapi/";
var url=_245+"getstatus/";
url+=_244.email.internet+"?jsonp=lconn.profiles.bizCard.bizCard.sametimeCallBack&time="+new Date().getTime();
lconn.core.bizCard.bizCardUtils.loadScript(url);
},sametimeCallBack:function(_247){
if(_247.error!=null){
}else{
var _248=document.getElementById(_247.username+"vcardNameElem");
if(_248!=null&&typeof (Status)!="undefined"){
_248.className+=" awareness "+Status.getStyleForStatus(_247.status);
_248.setAttribute("userId",_247.username);
_248.onclick=function(){
var _249=this.getAttribute("userId");
sametime_invoke("chat",_249);
};
}
if(document.getElementById(_247.username+"ChatAction")!=null){
document.getElementById(_247.username+"ChatAction").style.display="inline";
}
if(document.getElementById(_247.username+"ChatActionMore")!=null){
document.getElementById(_247.username+"ChatActionMore").style.display="inline";
document.getElementById(_247.username+"CallActionMore").style.display="inline";
}
if(document.getElementById(_247.username+"vcardCommentElem")!=null){
if(_247.statusMessage!=null&&_247.statusMessage!=""){
document.getElementById(_247.username+"vcardCommentElem").style.display="block";
document.getElementById(_247.username+"vcardStStatusElem").innerHTML=_247.statusMessage;
}
}
}
},sametimeStart:function(_24a,_24b){
sametime_invoke(_24a,_24b);
},getElementEmail:function(elem){
var _24d;
var _24e=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",elem);
if(_24e){
_24d=this.getHcardAttributeValue("email",_24e);
_24d=_24d.internet;
}else{
if(elem.nodeName.toLowerCase()=="a"&&elem.href.match(/^mailto:/)){
_24d=elem.href.replace(/^mailto:/,"");
}
}
return _24d;
},getElementUserId:function(elem){
var _250="";
var _251=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",elem);
if(_251){
_250=this.getHcardAttributeValue("x-lconn-userid",_251);
}
return _250;
},getNameElement:function(elem){
if(elem.className!="vcard"){
elem=lconn.core.bizCard.bizCardUtils.getParentByClassName("vcard",elem);
}
var _253=lconn.core.bizCard.bizCardUtils.getElementsByClassName("fn",elem,1)[0];
if(!_253){
_253=lconn.core.bizCard.bizCardUtils.getElementsByClassName("n",elem,1)[0];
}
return _253;
},requestReturnMiniBizCard:function(_254,_255,_256,_257){
var _255=_254?lconn.profiles.bizCard.bizCard.convMethod.call(null,_255):{};
var _258=new lconn.core.bizCard.bizCardUtils.out();
lconn.profiles.bizCard.bizCardUI.getMenuData(_255,null,null,null,_258,null,true,(_257?true:false));
if(_256.target!=null){
_256.target.innerHTML=_258.buffer;
}else{
if(_256.callbackfn!=null){
_256.callbackfn(_258.buffer);
}
}
},renderMiniBizCard:function(_259,_25a,_25b){
this.init();
var _25c={"target":_25b,"callbackfn":_25a};
var src=this.servletUrlByUserId.replace(/@@@USERID@@@/,_259);
this.requestor.request(src,10000,this.requestReturnMiniBizCard,_25c,_259);
}};
}
if(!dojo._hasResource["lconn.profiles.bizCard.bizCardUI"]){
dojo._hasResource["lconn.profiles.bizCard.bizCardUI"]=true;
dojo.provide("lconn.profiles.bizCard.bizCardUI");
lconn.profiles.bizCard.bizCardUI={isDebug:false,isSlim:false,isExpandable:true,isEmailEnabled:true,getMenuData:function(_25e,bidi,_260,_261,_262,_263,_264,_265){
var _266=dojo.cookie("card.popup.slim");
if(typeof (_264)!="undefined"&&_264!=null){
this.isSlim=_264;
}else{
if(_266!=null){
this.isSlim=(_266==1);
}
}
if(typeof (_265)!="undefined"){
this.isExpandable=_265;
}
if(_25e!=null){
this.isEmailEnabled=(_25e.email!=null&&_25e.email.internet!=null);
}else{
this.isEmailEnabled=false;
}
if(this.isDebug){
SemTagSvc.debug("slim? "+this.isSlim);
SemTagSvc.debug("expandable? "+this.isExpandable);
SemTagSvc.debug("email? "+this.isEmailEnabled);
}
var _267=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard");
_262.write("<div class=\"lotusui\">");
_262.write("<div id=\"cardDiv\" class=\"lotusVCard\" style=\"margin: 10px; position: static; opacity: 1;\">");
_262.write("<a id=\"A11Yblank\" href=\"javascript:void(0);\" ><img src=\""+_267+"/nav/common/styles/images/blank.gif\" alt=\"\" /></a>");
_262.write("<table id=\"cardTable\" class=\"lotusContainer\" cellspacing=\"0\">");
_262.write("<tbody>");
_262.write("<tr id=\"cardHeader\" "+((this.isSlim)?"style=\"display:none\"":"")+">"+"<td>"+"<table cellspacing=\"0\" width=\"100%\">");
if(_25e!=null){
this.writeHeaderUIContent(_262,_25e,false);
}
_262.write("</td></tr>"+"</table>");
_262.write("<tr id=\"cardBody\">");
_262.write("<td class=\"lotusDetails\" colspan=\"6\">");
this.writeBodyUIContent(_25e,bidi,_260,_261,_262,_263,_267);
_262.write("</td>");
_262.write("</tr>");
if(_25e!=null){
this.writeFooterUIContent(_25e,bidi,_260,_261,_262,_263,_267);
}
_262.write("</tbody></table></div></div>");
},writeHeaderUIContent:function(_268,_269,_26a){
this.writeLinks(_268,_269,_26a);
},writeBodyUIContent:function(_26b,bidi,_26d,_26e,_26f,_270,_271){
this.getSubUIContent(_26b,bidi,_26d,_26e,_26f,_270,_271);
},writeFooterUIContent:function(_272,bidi,_274,_275,_276,_277,_278){
_276.write("<tr id=\"cardFooter\""+((this.isSlim)?"style=\"display:none\"":"")+">");
_276.write("<td colspan=\"6\">");
if(_272.X_inDirectory){
_276.write("<div class=\"lotusPersonActions\">");
_276.write("<ul class=\"lotusInlinelist\">");
var _279=(typeof (SemTagSvcConfig)!="undefined"&&SemTagSvcConfig.isBidiRTL);
if(_272.X_bizCardActions.length>0){
_276.write("<li class=\"lotusFirst\">"+this.getActionLink(_272,0,true)+"</li>");
if(_279){
_276.write("<li class=\"lotusFirst\"></li>");
}
}
if(this.isEmailEnabled&&_272.X_bizCardSTAwareness){
_276.write("<li id=\""+_272.email.internet+"ChatAction\" "+(_279?"class=\"lotusFirst\"":"")+" style=\"display:none;\">"+"<a href=\"javascript:void(0);\" onclick=\"lconn.profiles.bizCard.bizCard.sametimeStart('chat', '"+_272.email.internet+"');\">"+"<img src=\""+_278+"/nav/common/styles/images/iconChat.gif\" alt=\"\" /> "+generalrs.personCardChat+"</a>"+"</li>");
if(typeof (SemTagSvcConfig)!="undefined"&&SemTagSvcConfig.isBidiRTL){
_276.write("<li class=\"lotusFirst\"></li>");
}
}
if(_272.X_bizCardActions.length>1){
_276.write("<li "+(!this.isEmailEnabled||_279?"class=\"lotusFirst\"":"")+">"+"<a href=\"javascript:void(0);\" onclick=\"lconn.profiles.bizCard.bizCardUI.displayMore('"+_272.key+"MoreActionMenu',this.parentNode.parentNode);event.cancelBubble=true\">"+generalrs.personCardMoreActions+"<img src=\""+_278+"/nav/common/styles/images/btnDropDown.gif\" alt=\""+generalrs.personCardMoreActionsAltText+"\" title=\""+generalrs.personCardMoreActionsAltText+"\">"+"</a>"+"</li>");
}
_276.write("</ul>"+"</div>");
if(_272.X_bizCardActions.length>1||(this.isEmailEnabled&&_272.X_bizCardSTAwareness)){
this.writeMoreActionsMenu(_276,_272,_278,false);
}
}
_276.write("</td></tr>");
},getActionLink:function(_27a,_27b,_27c){
var _27d=_27a.X_bizCardActions[_27b];
var icon="";
if(_27c&&typeof (_27d.icon)!="undefined"){
icon="<img src=\""+_27d.icon.href+"\" alt=\""+_27d.icon.alt+"\" /> ";
}
return "<a class=\"email\" href=\""+_27d.urlPattern+"\">"+icon+_27d.label+"</a>";
},getSubUIContent:function(_27f,bidi,_281,_282,_283,_284,_285){
if(this.isExpandable){
this.writeExpandoUIContent(_283,_285);
}
if(_27f!=null){
if(_27f.X_bizCardShowPhoto){
_283.write("<div class=\"lotusPhoto photo\"><img src=\""+_27f.photo+"\" alt=\""+_27f.fn+"\" title=\""+_27f.fn+"\" height=\"59\" width=\"59\"></div>");
}
_283.write("<div class=\"lotusPersonInfo\">");
if(_27f.X_inDirectory!="true"){
var _286=generalrs["label.personcard.noprofilemsg"];
_283.write("<h3 id='noProfileMsg'>"+_286+"</h3>");
}else{
_283.write(_27f.X_bizCardMainHtml);
}
_283.write("</div><!--end lotusInfo-->");
var _287=((this.isEmailEnabled)?_27f.email.internet:"");
_283.write("<div id=\""+_287+"vcardCommentElem\" class=\"lotusComment\" style=\"display: none;\">");
_283.write("<div class=\"lotusCommentHeader\">&nbsp;</div><!--end comment header-->");
_283.write("<div class=\"lotusCommentBody\">\t");
if(_287!=""&&_27f.X_bizCardSTStatusMsg){
_283.write("<p>Sametime: <span id=\""+_287+"vcardStStatusElem\"></span></p>");
}
_283.write("</div><!--end commentBody-->");
_283.write("</div><!--end comment-->");
}else{
var _286=dojo.i18n.getLocalization("lc_default")["label.personcard.noprofilemsg"];
_283.write("<h3 id='noProfileMsg'>"+_286+"</h3>");
}
},writeExpandoUIContent:function(_288,_289){
_288.write("<div class=\"lotusRight\">");
_288.write("<a onclick=\"lconn.profiles.bizCard.bizCardUI.toggleSlimCard(this,'"+_289+"');"+"event.cancelBubble=true;\""+"href=\"javascript:void(0);\">");
_288.write(" <img id=\"slimTwisty\" src=\""+_289+"/nav/common/styles/images/"+(this.isSlim?"iconShow.gif":"iconHide.gif")+"\" alt=\"\" title=\"\"/>");
_288.write("</a>");
_288.write("</div>");
},getInlineMarkup:function(_28a,bidi,_28c){
var _28d=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard");
var _28e=_28c;
if(_28a!=null){
var _28f="";
if(this.isEmailEnabled){
_28f=_28a.email.internet;
}
_28e.write("<div class=\"lotusui\">");
_28e.write("<div id=\""+_28a.key+"\" class=\"vcard lotusVCard lotusInlineVCard\" style=\"position:static;margin:10px\">");
_28e.write("  <div class=\"lotusContainer\">");
_28e.write("    <div id=\""+_28a.key+"_Pivot\" class=\"lotusPivotNav\">");
_28e.write("      <div class=\"lotusPivotNavToggle\">");
_28e.write("        <a href=\"javascript:void(0);\" title=\"\" onclick=\"lconn.core.bizCard.bizCardUtils.toggleInlineCard('"+_28a.key+"')\">"+"&nbsp;"+"</a>");
_28e.write("      </div>");
if(_28a.X_bizCardShowPhoto){
_28e.write("      <div class=\"lotusPhoto photo\">");
_28e.write("        <img id=\"photo\" src=\""+_28a.photo+"\" alt=\""+_28a.fn+"\" title=\""+_28a.fn+"\" height=\"35\" width=\"35\" />");
_28e.write("      </div>");
}
_28e.write("      <div class=\"lotusPersonInfo\">");
_28e.write("        <h2 class=\"fn\" id=\""+_28f+"vcardNameElem\" class=\"fn\">"+_28a.fn+"</h2>");
_28e.write("      </div>");
_28e.write("    </div>");
_28e.write("    <div id=\""+_28a.key+"_Details\" class=\"lotusInlineVCardDetails\">");
if(_28a.X_bizCardActions.length>0){
_28e.write("<div class=\"lotusEmail\">");
_28e.write(this.getActionLink(_28a,0,true));
_28e.write("</div>");
}
this.writeLinks(_28e,_28a,true);
if(_28a.X_bizCardActions.length>1){
_28e.write("<div class=\"lotusPersonActions\">");
_28e.write("  <ul class=\"lotusInlinelist\">");
_28e.write("    <li class=\"lotusFirst\">");
_28e.write("      <a href=\"javascript:;\"");
_28e.write("        onclick=\"lconn.profiles.bizCard.bizCardUI.displayMore('"+_28a.key+"InlineMoreActionMenu',this.parentNode.parentNode);event.cancelBubble=true\">");
_28e.write(generalrs.personCardMoreActions);
_28e.write("        <img src=\""+_28d+"/nav/common/styles/images/btnDropDown.gif\" alt=\""+generalrs.personCardMoreActionsAltText+"\"");
_28e.write("          title=\""+generalrs.personCardMoreActionsAltText+"\" />");
_28e.write("      </a>");
_28e.write("    </li>");
_28e.write("  </ul>");
_28e.write("</div>");
this.writeMoreActionsMenu(_28e,_28a,_28d,true);
}
_28e.write("    </div>");
_28e.write("  </div>");
_28e.write("</div>");
_28e.write("</div>");
}else{
_28e.write("<div class=\"lotusui\">");
_28e.write("<div class=\"vcard lotusVCard lotusInlineVCard\" style=\"position:static;margin:10px\">");
_28e.write("  <div class=\"lotusContainer\">");
_28e.write("    </div>");
_28e.write("    </div>");
_28e.write("    </div>");
}
},writeLinks:function(_290,_291,_292){
try{
var _293=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard");
if(!_291.X_bizCardServiceLinks){
_291.X_bizCardServiceLinks=[];
}
if(!_291.X_concatSemPersonSvc&&SemTagPerson.services&&SemTagPerson.services.length>0){
_291.X_bizCardServiceLinks=_291.X_bizCardServiceLinks.concat(SemTagPerson.services);
_291.X_concatSemPersonSvc=true;
}
if(_291.X_bizCardServiceLinks&&_291.X_bizCardServiceLinks.length>0){
_290.write((_292)?"<ul id=\"appLinks1\" class=\"lotusAppLinks\">":"<tr id=\"appLinks1\" class=\"lotusAppLinks\">");
var _294=false;
var _295=false;
for(var k=0;k<_291.X_bizCardServiceLinks.length;k++){
var _297=false;
var _298=_291.X_bizCardServiceLinks[k];
if(_298==null||_298.name==null||_298.name==""){
continue;
}
var _299="";
var _29a=false;
if(typeof (_298.href)!="undefined"&&_298.href!=null){
_299=_298.href;
}else{
if(typeof (_298.url_pattern)!="undefined"&&_298.url_pattern!=null&&_298.url_pattern!=""){
_299=_298.url_pattern;
if(_299.indexOf("{email}")!=-1&&(_291.email!=null&&_291.email.internet!=null)){
_299=_299.replace(/{email}/g,_291.email.internet);
}
if(_299.indexOf("{uid}")!=-1&&(_291.uid!=null)){
_299=_299.replace(/{uid}/g,_291.uid);
}
if(_299.indexOf("{key}")!=-1&&(_291.key!=null)){
_299=_299.replace(/{key}/g,_291.key);
}
if(_299.indexOf("{fn}")!=-1&&(_291.fn!=null)){
_299=_299.replace(/{fn}/g,_291.fn);
}
if(_299.indexOf("{displayName}")!=-1&&(_291.fn!=null)){
_299=_299.replace(/{displayName}/g,_291.fn);
}
if(_299.indexOf("{workPhoneNumber}")!=-1&&(_291.adr!=null&&_291.adr.work!=null)){
_299=_299.replace(/{workPhoneNumber}/g,_291.adr.work);
}
if(_299.indexOf("{userid}")!=-1&&(_291.X_lconn_userid!=null)){
_299=_299.replace(/{userid}/g,_291.X_lconn_userid);
}
if(typeof (_298.location)!="undefined"&&_298.location!=null){
_299=_298.location+_299;
}
}else{
continue;
}
}
if((_292==false)&&k==4&&_291.X_bizCardServiceLinks.length>=6&&!_294){
_290.write("<td>"+"<a onclick=\"lconn.profiles.bizCard.bizCardUI.toggleMoreApps('appLinks2',this); event.cancelBubble=true;\""+" href=\"javascript:void(0);\" "+" class=\"lotusMore lotusMoreExpanded\">&nbsp;"+"<span class=\"lotusAltText\">+</span>"+"</a>"+"</td>");
_290.write("</tr>");
_290.write("<tr id=\"appLinks2\" class=\"lotusAppLinks\">");
_294=true;
_295=true;
}
_290.write((_292)?"<li ":"<td ");
if(k==0||_295==true){
_290.write("class=\"lotusFirst\"");
}
_295=false;
var _29b="";
if(typeof (_298.js_eval)!="undefined"&&_298.js_eval!=null&&_298.js_eval.indexOf("generalrs.")==0){
var key=_298.js_eval.substr("generalrs.".length);
if(typeof (generalrs[key])=="undefined"){
key=key.replace(/\_/g,".");
}
_29b=generalrs[key];
}
if(_298.name=="blogs"&&_291.X_blogUrl!=null&&_291.X_blogUrl!=""){
_290.write("><a class=\"url\" href=\""+_291.X_blogUrl+"\">"+_29b+"</a>");
}else{
_290.write("><a class=\"url\" href=\""+_299+"\">"+_29b+"</a>");
}
_290.write((_292)?"</li>":"</td>");
}
if(_294){
_290.write("<td colspan=\""+(11-_291.X_bizCardServiceLinks.length)+"\">&nbsp;</td>");
}
_290.write((_292)?"</ul>":"</tr>");
}
}
catch(exception2){
alert(exception2.message);
}
},writeMoreActionsMenu:function(_29d,_29e,_29f,_2a0){
try{
_29d.write("<ul class=\"lotusActionMenu\" id=\""+_29e.key);
if(_2a0){
_29d.write("Inline");
}
_29d.write("MoreActionMenu\">");
if(_29e.X_bizCardActions.length>0&&!_2a0){
_29d.write("<li class=\""+_29e.X_bizCardActions[0].liClass+"\">"+this.getActionLink(_29e,0,false)+"</li>");
}
if(this.isEmailEnabled&&_29e.X_bizCardSTAwareness&&_29e.email.internet!=""){
_29d.write("<li id=\""+_29e.email.internet+"ChatActionMore\" style=\"display:none;\"><a href=\"javascript:void(0);\" onclick=\"lconn.profiles.bizCard.bizCard.sametimeStart('chat', '"+_29e.email.internet+"');\"> "+generalrs.personCardChat+" </a></li>");
_29d.write("<li id=\""+_29e.email.internet+"CallActionMore\" style=\"display:none;\"><a href=\"javascript:void(0);\" onclick=\"lconn.profiles.bizCard.bizCard.sametimeStart('call', '"+_29e.email.internet+"');\"> "+generalrs.personCardCall+" </a></li>");
}
if(_29e.X_bizCardActions.length>1){
for(var i=1;i<_29e.X_bizCardActions.length;i++){
_29d.write("<li class=\""+_29e.X_bizCardActions[i].liClass+"\">"+this.getActionLink(_29e,i,false)+"</li>");
}
}
_29d.write("</ul>");
}
catch(exception2){
alert(exception2.message);
}
},displayMore:function(_2a2,_2a3){
_2a3.style.display="none";
document.getElementById(_2a2).style.display="block";
},convertQuickrEmail:function(_2a4){
_2a4=_2a4.replace(/@/g,"_at_");
_2a4=_2a4.replace(/\./g,"_");
return _2a4;
},toggleMoreApps:function(pDiv,_2a6){
var _2a7=document.getElementById(pDiv);
if(_2a6.className.indexOf("lotusMoreExpanded")!=-1){
_2a6.className="lotusMore";
_2a7.style.display="none";
}else{
_2a6.className+=" lotusMoreExpanded";
_2a7.style.display="";
}
},toggleSlimCard:function(_2a8,_2a9){
var _2aa=document.getElementById("slimTwisty");
if(_2aa.src.indexOf("iconHide.gif")!=-1){
this.slimCard(_2a9);
dojo.cookie("card.popup.slim",1);
}else{
this.expandCard(_2a9);
dojo.cookie("card.popup.slim",0);
}
},slimCard:function(_2ab){
var _2ac=document.getElementById("slimTwisty");
var _2ad=document.getElementById("cardHeader");
var _2ae=document.getElementById("cardFooter");
if(_2ac){
_2ac.src=_2ab+"/nav/common/styles/images/iconShow.gif";
}
_2ad.style.display="none";
_2ae.style.display="none";
},expandCard:function(_2af){
var _2b0=document.getElementById("slimTwisty");
var _2b1=document.getElementById("cardHeader");
var _2b2=document.getElementById("cardFooter");
if(_2b0){
_2b0.src=_2af+"/nav/common/styles/images/iconHide.gif";
}
_2b1.style.display="";
_2b2.style.display="";
},resizeObj:function(obj,_2b4,_2b5){
if(typeof (obj.style.height)=="undefined"||obj.style.height<=0){
obj.style.height=obj.height;
}
if(typeof (obj.style.width)=="undefined"||obj.style.width<=0){
obj.style.width=obj.width;
}
obj.style.height=(_2b4)?obj.style.height=_2b5+"%":obj.style.height;
obj.style.width=(_2b4)?obj.style.width=_2b5+"%":obj.style.width;
},openVCardDialog:function(key,_2b7){
this._createVCardDialog(key,_2b7);
},_createVCardDialog:function(key,_2b9){
window.open(this._getVCardDownloadUrl(key,_2b9),"vcarddl","status=0,toolbar=0,scrollbars=0,resizable=0,height=350,width=550");
},_getVCardDownloadUrl:function(key,_2bb){
var base=lconn.core.bizCard.bizCardUtils.getBaseURL("hcard");
var lang=lconn.core.bizCard.bizCardUtils.getLangParam();
return base+"/html/exportVCardDialog.do?key="+key+"&lastMod="+_2bb+"&lang="+lang;
}};
}
if(!dojo._hasResource["dojo.number"]){
dojo._hasResource["dojo.number"]=true;
dojo.provide("dojo.number");
dojo.number.format=function(_2be,_2bf){
_2bf=dojo.mixin({},_2bf||{});
var _2c0=dojo.i18n.normalizeLocale(_2bf.locale);
var _2c1=dojo.i18n.getLocalization("dojo.cldr","number",_2c0);
_2bf.customs=_2c1;
var _2c2=_2bf.pattern||_2c1[(_2bf.type||"decimal")+"Format"];
if(isNaN(_2be)){
return null;
}
return dojo.number._applyPattern(_2be,_2c2,_2bf);
};
dojo.number._numberPatternRE=/[#0,]*[#0](?:\.0*#*)?/;
dojo.number._applyPattern=function(_2c3,_2c4,_2c5){
_2c5=_2c5||{};
var _2c6=_2c5.customs.group;
var _2c7=_2c5.customs.decimal;
var _2c8=_2c4.split(";");
var _2c9=_2c8[0];
_2c4=_2c8[(_2c3<0)?1:0]||("-"+_2c9);
if(_2c4.indexOf("%")!=-1){
_2c3*=100;
}else{
if(_2c4.indexOf("‰")!=-1){
_2c3*=1000;
}else{
if(_2c4.indexOf("¤")!=-1){
_2c6=_2c5.customs.currencyGroup||_2c6;
_2c7=_2c5.customs.currencyDecimal||_2c7;
_2c4=_2c4.replace(/\u00a4{1,3}/,function(_2ca){
var prop=["symbol","currency","displayName"][_2ca.length-1];
return _2c5[prop]||_2c5.currency||"";
});
}else{
if(_2c4.indexOf("E")!=-1){
throw new Error("exponential notation not supported");
}
}
}
}
var _2cc=dojo.number._numberPatternRE;
var _2cd=_2c9.match(_2cc);
if(!_2cd){
throw new Error("unable to find a number expression in pattern: "+_2c4);
}
if(_2c5.fractional===false){
_2c5.places=0;
}
return _2c4.replace(_2cc,dojo.number._formatAbsolute(_2c3,_2cd[0],{decimal:_2c7,group:_2c6,places:_2c5.places,round:_2c5.round}));
};
dojo.number.round=function(_2ce,_2cf,_2d0){
var _2d1=String(_2ce).split(".");
var _2d2=(_2d1[1]&&_2d1[1].length)||0;
if(_2d2>_2cf){
var _2d3=Math.pow(10,_2cf);
if(_2d0>0){
_2d3*=10/_2d0;
_2cf++;
}
_2ce=Math.round(_2ce*_2d3)/_2d3;
_2d1=String(_2ce).split(".");
_2d2=(_2d1[1]&&_2d1[1].length)||0;
if(_2d2>_2cf){
_2d1[1]=_2d1[1].substr(0,_2cf);
_2ce=Number(_2d1.join("."));
}
}
return _2ce;
};
dojo.number._formatAbsolute=function(_2d4,_2d5,_2d6){
_2d6=_2d6||{};
if(_2d6.places===true){
_2d6.places=0;
}
if(_2d6.places===Infinity){
_2d6.places=6;
}
var _2d7=_2d5.split(".");
var _2d8=(_2d6.places>=0)?_2d6.places:(_2d7[1]&&_2d7[1].length)||0;
if(!(_2d6.round<0)){
_2d4=dojo.number.round(_2d4,_2d8,_2d6.round);
}
var _2d9=String(Math.abs(_2d4)).split(".");
var _2da=_2d9[1]||"";
if(_2d6.places){
var _2db=dojo.isString(_2d6.places)&&_2d6.places.indexOf(",");
if(_2db){
_2d6.places=_2d6.places.substring(_2db+1);
}
_2d9[1]=dojo.string.pad(_2da.substr(0,_2d6.places),_2d6.places,"0",true);
}else{
if(_2d7[1]&&_2d6.places!==0){
var pad=_2d7[1].lastIndexOf("0")+1;
if(pad>_2da.length){
_2d9[1]=dojo.string.pad(_2da,pad,"0",true);
}
var _2dd=_2d7[1].length;
if(_2dd<_2da.length){
_2d9[1]=_2da.substr(0,_2dd);
}
}else{
if(_2d9[1]){
_2d9.pop();
}
}
}
var _2de=_2d7[0].replace(",","");
pad=_2de.indexOf("0");
if(pad!=-1){
pad=_2de.length-pad;
if(pad>_2d9[0].length){
_2d9[0]=dojo.string.pad(_2d9[0],pad);
}
if(_2de.indexOf("#")==-1){
_2d9[0]=_2d9[0].substr(_2d9[0].length-pad);
}
}
var _2df=_2d7[0].lastIndexOf(",");
var _2e0,_2e1;
if(_2df!=-1){
_2e0=_2d7[0].length-_2df-1;
var _2e2=_2d7[0].substr(0,_2df);
_2df=_2e2.lastIndexOf(",");
if(_2df!=-1){
_2e1=_2e2.length-_2df-1;
}
}
var _2e3=[];
for(var _2e4=_2d9[0];_2e4;){
var off=_2e4.length-_2e0;
_2e3.push((off>0)?_2e4.substr(off):_2e4);
_2e4=(off>0)?_2e4.slice(0,off):"";
if(_2e1){
_2e0=_2e1;
delete _2e1;
}
}
_2d9[0]=_2e3.reverse().join(_2d6.group||",");
return _2d9.join(_2d6.decimal||".");
};
dojo.number.regexp=function(_2e6){
return dojo.number._parseInfo(_2e6).regexp;
};
dojo.number._parseInfo=function(_2e7){
_2e7=_2e7||{};
var _2e8=dojo.i18n.normalizeLocale(_2e7.locale);
var _2e9=dojo.i18n.getLocalization("dojo.cldr","number",_2e8);
var _2ea=_2e7.pattern||_2e9[(_2e7.type||"decimal")+"Format"];
var _2eb=_2e9.group;
var _2ec=_2e9.decimal;
var _2ed=1;
if(_2ea.indexOf("%")!=-1){
_2ed/=100;
}else{
if(_2ea.indexOf("‰")!=-1){
_2ed/=1000;
}else{
var _2ee=_2ea.indexOf("¤")!=-1;
if(_2ee){
_2eb=_2e9.currencyGroup||_2eb;
_2ec=_2e9.currencyDecimal||_2ec;
}
}
}
var _2ef=_2ea.split(";");
if(_2ef.length==1){
_2ef.push("-"+_2ef[0]);
}
var re=dojo.regexp.buildGroupRE(_2ef,function(_2f1){
_2f1="(?:"+dojo.regexp.escapeString(_2f1,".")+")";
return _2f1.replace(dojo.number._numberPatternRE,function(_2f2){
var _2f3={signed:false,separator:_2e7.strict?_2eb:[_2eb,""],fractional:_2e7.fractional,decimal:_2ec,exponent:false};
var _2f4=_2f2.split(".");
var _2f5=_2e7.places;
if(_2f4.length==1||_2f5===0){
_2f3.fractional=false;
}else{
if(_2f5===undefined){
_2f5=_2e7.pattern?_2f4[1].lastIndexOf("0")+1:Infinity;
}
if(_2f5&&_2e7.fractional==undefined){
_2f3.fractional=true;
}
if(!_2e7.places&&(_2f5<_2f4[1].length)){
_2f5+=","+_2f4[1].length;
}
_2f3.places=_2f5;
}
var _2f6=_2f4[0].split(",");
if(_2f6.length>1){
_2f3.groupSize=_2f6.pop().length;
if(_2f6.length>1){
_2f3.groupSize2=_2f6.pop().length;
}
}
return "("+dojo.number._realNumberRegexp(_2f3)+")";
});
},true);
if(_2ee){
re=re.replace(/([\s\xa0]*)(\u00a4{1,3})([\s\xa0]*)/g,function(_2f7,_2f8,_2f9,_2fa){
var prop=["symbol","currency","displayName"][_2f9.length-1];
var _2fc=dojo.regexp.escapeString(_2e7[prop]||_2e7.currency||"");
_2f8=_2f8?"[\\s\\xa0]":"";
_2fa=_2fa?"[\\s\\xa0]":"";
if(!_2e7.strict){
if(_2f8){
_2f8+="*";
}
if(_2fa){
_2fa+="*";
}
return "(?:"+_2f8+_2fc+_2fa+")?";
}
return _2f8+_2fc+_2fa;
});
}
return {regexp:re.replace(/[\xa0 ]/g,"[\\s\\xa0]"),group:_2eb,decimal:_2ec,factor:_2ed};
};
dojo.number.parse=function(_2fd,_2fe){
var info=dojo.number._parseInfo(_2fe);
var _300=(new RegExp("^"+info.regexp+"$")).exec(_2fd);
if(!_300){
return NaN;
}
var _301=_300[1];
if(!_300[1]){
if(!_300[2]){
return NaN;
}
_301=_300[2];
info.factor*=-1;
}
_301=_301.replace(new RegExp("["+info.group+"\\s\\xa0"+"]","g"),"").replace(info.decimal,".");
return Number(_301)*info.factor;
};
dojo.number._realNumberRegexp=function(_302){
_302=_302||{};
if(!("places" in _302)){
_302.places=Infinity;
}
if(typeof _302.decimal!="string"){
_302.decimal=".";
}
if(!("fractional" in _302)||/^0/.test(_302.places)){
_302.fractional=[true,false];
}
if(!("exponent" in _302)){
_302.exponent=[true,false];
}
if(!("eSigned" in _302)){
_302.eSigned=[true,false];
}
var _303=dojo.number._integerRegexp(_302);
var _304=dojo.regexp.buildGroupRE(_302.fractional,function(q){
var re="";
if(q&&(_302.places!==0)){
re="\\"+_302.decimal;
if(_302.places==Infinity){
re="(?:"+re+"\\d+)?";
}else{
re+="\\d{"+_302.places+"}";
}
}
return re;
},true);
var _307=dojo.regexp.buildGroupRE(_302.exponent,function(q){
if(q){
return "([eE]"+dojo.number._integerRegexp({signed:_302.eSigned})+")";
}
return "";
});
var _309=_303+_304;
if(_304){
_309="(?:(?:"+_309+")|(?:"+_304+"))";
}
return _309+_307;
};
dojo.number._integerRegexp=function(_30a){
_30a=_30a||{};
if(!("signed" in _30a)){
_30a.signed=[true,false];
}
if(!("separator" in _30a)){
_30a.separator="";
}else{
if(!("groupSize" in _30a)){
_30a.groupSize=3;
}
}
var _30b=dojo.regexp.buildGroupRE(_30a.signed,function(q){
return q?"[-+]":"";
},true);
var _30d=dojo.regexp.buildGroupRE(_30a.separator,function(sep){
if(!sep){
return "(?:0|[1-9]\\d*)";
}
sep=dojo.regexp.escapeString(sep);
if(sep==" "){
sep="\\s";
}else{
if(sep==" "){
sep="\\s\\xa0";
}
}
var grp=_30a.groupSize,grp2=_30a.groupSize2;
if(grp2){
var _311="(?:0|[1-9]\\d{0,"+(grp2-1)+"}(?:["+sep+"]\\d{"+grp2+"})*["+sep+"]\\d{"+grp+"})";
return ((grp-grp2)>0)?"(?:"+_311+"|(?:0|[1-9]\\d{0,"+(grp-1)+"}))":_311;
}
return "(?:0|[1-9]\\d{0,"+(grp-1)+"}(?:["+sep+"]\\d{"+grp+"})*)";
},true);
return _30b+_30d;
};
}
if(!dojo._hasResource["dojox.timing._base"]){
dojo._hasResource["dojox.timing._base"]=true;
dojo.provide("dojox.timing._base");
dojo.experimental("dojox.timing");
dojox.timing.Timer=function(_312){
this.timer=null;
this.isRunning=false;
this.interval=_312;
this.onStart=null;
this.onStop=null;
};
dojo.extend(dojox.timing.Timer,{onTick:function(){
},setInterval:function(_313){
if(this.isRunning){
window.clearInterval(this.timer);
}
this.interval=_313;
if(this.isRunning){
this.timer=window.setInterval(dojo.hitch(this,"onTick"),this.interval);
}
},start:function(){
if(typeof this.onStart=="function"){
this.onStart();
}
this.isRunning=true;
this.timer=window.setInterval(dojo.hitch(this,"onTick"),this.interval);
},stop:function(){
if(typeof this.onStop=="function"){
this.onStop();
}
this.isRunning=false;
window.clearInterval(this.timer);
}});
}
if(!dojo._hasResource["dojox.timing"]){
dojo._hasResource["dojox.timing"]=true;
dojo.provide("dojox.timing");
}
if(!dojo._hasResource["quickr.util.dom"]){
dojo._hasResource["quickr.util.dom"]=true;
dojo.provide("quickr.util.dom");
quickr.util.dom.XML_DECLARATION="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
quickr.util.dom.XML_DECLARATION_WITH_ENTITIES="<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html [<!ENTITY amp \"&#38;#38;\"><!ENTITY lt \"&#60;#60;\"><!ENTITY gt \"&#62;#62;\"><!ENTITY nbsp \"&#32;\"><!ENTITY apos \"&#39;\"><!ENTITY quot \"&#34;\">]>";
quickr.util.dom.NAMESPACES={XML:{LONG:"http://www.w3.org/XML/1998/namespace",SHORT:"xml"},ATOM:{LONG:"http://www.w3.org/2005/Atom",SHORT:"atom"},DOCUMENTS_ATOM:{LONG:"urn:ibm.com/td",SHORT:"td"},DOCUMENTS_ATOM_BATCH:{LONG:"urn:ibm.com/td/batch",SHORT:"batch"},OPENSEARCH:{LONG:"http://a9.com/-/spec/opensearch/1.1/",SHORT:"opensearch"},THREAD_ATOM:{LONG:"http://purl.org/syndication/thread/1.0",SHORT:"thr"},CA:{LONG:"http://www.ibm.com/xmlns/prod/composite-applications/v1.0",SHORT:"ca"},SNX:{LONG:"http://www.ibm.com/xmlns/prod/sn",SHORT:"snx"}};
quickr.util.dom.NAMESPACE_PREFIX={};
for(var key in quickr.util.dom.NAMESPACES){
var value=quickr.util.dom.NAMESPACES[key];
quickr.util.dom[key+"_NAMESPACE"]=value;
quickr.util.dom.NAMESPACE_PREFIX[value.SHORT]=value.LONG;
}
quickr.util.dom.prependXmlProlog=function(xml){
if(/^\s*<\?xml\s/.test(xml)){
xml=xml.substring(xml.indexOf("?>")+2);
}
return quickr.util.dom.XML_DECLARATION+xml;
};
quickr.util.dom.serializeXMLDocument=function(doc,_316){
var s;
if(doc.xml){
s=doc.xml;
}else{
s=new XMLSerializer().serializeToString(doc);
}
if(!_316){
if(/^\s*<\?xml\s/.test(s)){
s=s.substring(s.indexOf("?>")+2);
}
}else{
s=quickr.util.dom.prependXmlProlog(s);
}
return s;
};
quickr.util.dom.newXMLDocument=function(_318,_319,_31a){
if(!_318){
_318="";
}
var _31b="";
if(_319){
if(_319.LONG){
_31b=_319.LONG;
}else{
_31b=_319;
}
}
if(document.implementation&&document.implementation.createDocument){
return document.implementation.createDocument(_31b,_318,null);
}else{
var doc=new ActiveXObject("MSXML2.DOMDocument");
if(_318){
var _31d="";
var _31e=_318;
var p=_318.indexOf(":");
if(p!=-1){
_31d=_318.substring(0,p);
_31e=_318.substring(p+1);
}
if(!_31d&&_319&&_319.SHORT){
_31d=_319.SHORT;
}else{
_31d=null;
}
var text="<"+(_31d?(_31d+":"):"")+_31e+(_31b?(" xmlns"+(_31d?(":"+_31d):"")+"=\""+_31b+"\""):"");
if(_31a){
for(var i=0;i<_31a.length;i++){
text+=" xmlns:"+_31a[i].SHORT+"=\""+_31a[i].LONG+"\"";
}
}
text+="/>";
doc.loadXML(text);
}
return doc;
}
};
quickr.util.dom.getElementByLanguage=function(_322,_323){
var c;
var i;
var _326=[_323];
while((i=_323.lastIndexOf("-"))!=-1){
_326.push(_323=_323.substring(0,i));
}
if(dojo.indexOf(_326,"en-us")==-1){
_326.push("en-us");
}
if(dojo.indexOf(_326,"en")==-1){
_326.push("en");
}
if(dojo.indexOf(_326,"")==-1){
_326.push("");
}
for(var i=0;i<_326.length;i++){
for(var j=0;c=_322[j];j++){
var lang=(dojo.isIE)?c.getAttribute(quickr.util.dom.XML_NAMESPACE.SHORT+":lang"):c.getAttributeNS(quickr.util.dom.XML_NAMESPACE.LONG,"lang");
lang=lang?lang:"";
if(lang==_326[i]){
return c;
}
}
}
return null;
};
quickr.util.dom.xmlText=function(node){
return (node)?(dojo.isIE?(node.text?node.text:node.innerText):node.textContent):node;
};
quickr.util.dom.isNamedNS=function(el,_32b,_32c){
if(dojo.isIE){
if(_32c){
return el.baseName==_32b&&_32c.LONG==el.namespaceURI;
}
return el.nodeName==_32b;
}
if(_32c){
return el.localName==_32b&&_32c.LONG==el.namespaceURI;
}
return el.nodeName==_32b;
};
quickr.util.dom.getAttributeNS=function(el,_32e,_32f){
return (dojo.isIE)?el.getAttribute(_32f.SHORT+":"+_32e):el.getAttributeNS(_32f.LONG,_32e);
};
quickr.util.dom.getElementsByTagNameNS=function(el,_331,_332){
return (dojo.isIE)?el.getElementsByTagName(_332.SHORT+":"+_331):el.getElementsByTagNameNS(_332.LONG,_331);
};
quickr.util.dom.createElementNS=function(d,_334,_335){
var _336=(dojo.isIE)?d.createElement(_335.SHORT+":"+_334):d.createElementNS(_335.LONG,_334);
return _336;
};
quickr.util.dom.setAttributeNS=function(el,_338,_339,_33a){
if(dojo.isIE){
el.setAttribute(_33a.SHORT+":"+_338,_339);
}else{
el.setAttributeNS(_33a.LONG,_33a.SHORT+":"+_338,_339);
}
};
quickr.util.dom.insertBefore=function(el,node,_33d){
if(_33d){
el.insertBefore(node,_33d);
}else{
el.appendChild(node);
}
return node;
};
quickr.util.dom.getChildElement=function(el,_33f){
var arr=el.childNodes;
for(var i=0,c;c=arr[i];i++){
if(c.nodeName==_33f||c.localName==_33f){
return c;
}
}
};
quickr.util.dom.getChildElementNS=function(el,_344,_345){
var arr=(dojo.isIE)?el.getElementsByTagName(_345.SHORT+":"+_344):el.getElementsByTagNameNS(_345.LONG,_344);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==el){
return c;
}
}
};
quickr.util.dom.getChildElementTextContent=function(el,_34a){
if(!el){
return null;
}
var arr=el.getElementsByTagName(_34a);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==el){
if(c.textContent){
return c.textContent;
}
if(c.innerText){
return c.innerText;
}
var a=[];
for(var j=0;c2=c.childNodes[j];j++){
if(c2.nodeType==3){
a.push(c2.nodeValue);
}
}
return a.join("");
}
}
return null;
};
quickr.util.dom.getChildElementTextContentNS=function(el,_351,_352){
if(!el){
return null;
}
var c;
var arr=el.childNodes;
if(dojo.isIE){
var _355=_352==null?_351:_352.SHORT+":"+_351;
for(var i=0;c=arr[i];i++){
if(c.tagName==_355){
if(c.innerText){
return c.innerText;
}
var a=[];
for(var j=0;c2=c.childNodes[j];j++){
if(c2.nodeType==3){
a.push(c2.nodeValue);
}
}
return a.join("");
}
}
}else{
var arr=el.getElementsByTagNameNS(_352.LONG,_351);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==el){
if(c.textContent){
return c.textContent;
}
var a=[];
for(var j=0;c2=c.childNodes[j];j++){
if(c2.nodeType==3){
a.push(c2.nodeValue);
}
}
return a.join("");
}
}
}
return null;
};
quickr.util.dom.getChildElementAttribute=function(_359,_35a,attr){
if(!_359){
return null;
}
if(attr=="class"&&dojo.isIE){
attr="className";
}
var arr=_359.getElementsByTagName(_35a);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==_359){
return c.getAttribute(attr);
}
}
return null;
};
quickr.util.dom.getChildElementAttributeNS=function(_35f,_360,_361,attr,_363){
if(!_35f){
return null;
}
var c;
if(dojo.isIE){
if(attr=="class"){
attr="className";
}
var _365=_361==null?_360:_361.SHORT+":"+_360;
for(var i=0;c=_35f.childNodes[i];i++){
if(_365==c.tagName){
return c.getAttribute(_363.SHORT+":"+attr);
}
}
}else{
if(_361){
var arr=_35f.getElementsByTagNameNS(_361.LONG,_360);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==_35f){
return c.getAttributeNS(_363.LONG,attr);
}
}
}else{
var arr=_35f.getElementsByTagName(_360);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==_35f){
return c.getAttributeNS(_363.LONG,attr);
}
}
}
}
return null;
};
quickr.util.dom.getChildElementAttributeMatching=function(_368,_369,_36a,_36b,_36c){
if(!_368){
return null;
}
if(_36a=="class"&&dojo.isIE){
_36a="className";
}
if(_36c=="class"&&document.all){
_36c="className";
}
var arr=_368.getElementsByTagName(_369);
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_36a)==_36b){
return child.getAttribute(_36c);
}
}
return null;
};
quickr.util.dom.getChildElementAttributeMatchingNS=function(_36f,_370,_371,_372,_373,_374,_375,_376){
if(!_36f){
return null;
}
if(_372=="class"&&dojo.isIE){
_372="className";
}
if(_375=="class"&&document.all){
_375="className";
}
if(dojo.isIE){
var _377=_371?_371.SHORT+":"+_370:_370;
var _378=_373?_373.SHORT+":"+_372:_372;
var _379=_376?_376.SHORT+":"+_375:_375;
var arr=_36f.getElementsByTagName(_377);
for(var i=0;c=arr[i];i++){
if(c.getAttribute(_378)==_374){
return c.getAttribute(_379);
}
}
}else{
if(_371){
var arr=_36f.getElementsByTagNameNS(_371.LONG,_370);
if(_373){
for(var i=0,c;c=arr[i];i++){
if(c.getAttributeNS(_373.LONG,_372)==_374){
return c.getAttributeNS(_376.LONG,_375);
}
}
}else{
for(var i=0,c;c=arr[i];i++){
if(c.getAttribute(_372)==_374){
return c.getAttributeNS(_376.LONG,_375);
}
}
}
}else{
var arr=_36f.getElementsByTagName(_370);
if(_373){
for(var i=0;child=arr[i];i++){
if(child.getAttributeNS(_373.LONG,_372)==_374){
return child.getAttributeNS(_376.LONG,_375);
}
}
}else{
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_372)==_374){
return child.getAttributeNS(_376.LONG,_375);
}
}
}
}
}
return null;
};
quickr.util.dom.getChildElementMatchingAttribute=function(_37d,_37e,_37f,_380){
if(!_37d){
return null;
}
if(_37f=="class"&&dojo.isIE){
_37f="className";
}
var arr=_37d.getElementsByTagName(_37e);
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_37f)==_380){
return child;
}
}
return null;
};
quickr.util.dom.getChildElementMatchingAttributeTextContent=function(_383,_384,_385,_386){
if(!_383){
return null;
}
if(_385=="class"&&dojo.isIE){
_385="className";
}
var arr=_383.getElementsByTagName(_384);
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_385)==_386){
return quickr.util.dom.xmlText(child);
}
}
return null;
};
quickr.util.dom.getChildElementMatchingAttributeTextContentNS=function(_389,_38a,_38b,_38c,_38d,_38e){
if(!_389){
return null;
}
var arr=_389.childNodes;
var _390;
if(dojo.isIE){
if(_38c=="class"){
_38c="className";
}
var _391=_38b==null?_38a:_38b.SHORT+":"+_38a;
var _392=_38d==null?_38c:_38d.SHORT+":"+_38c;
var arr=_389.getElementsByTagName(_391);
for(var i=0;_390=arr[i];i++){
if(_390.getAttribute(_392)==_38e){
return quickr.util.dom.xmlText(_390);
}
}
}else{
if(_38b){
var arr=_389.getElementsByTagNameNS(_38b.LONG,_38a);
if(_38d){
for(var i=0;_390=arr[i];i++){
if(_390.getAttributeNS(_38d.LONG,_38c)==_38e){
return quickr.util.dom.xmlText(_390);
}
}
}else{
for(var i=0;_390=arr[i];i++){
if(_390.getAttribute(_38c)==_38e){
return quickr.util.dom.xmlText(_390);
}
}
}
}else{
var arr=_389.getElementsByTagName(_38a);
if(_38d){
for(var i=0;_390=arr[i];i++){
if(_390.getAttributeNS(_38d.LONG,_38c)==_38e){
return quickr.util.dom.xmlText(_390);
}
}
}else{
for(var i=0;_390=arr[i];i++){
if(_390.getAttribute(_38c)==_38e){
return quickr.util.dom.xmlText(_390);
}
}
}
}
}
return null;
};
quickr.util.dom.domNodesToXml=function(_394){
var doc;
var _396;
if(_394&&_394.length>0){
if(_394.length>1){
doc=quickr.util.dom.newXMLDocument("div");
_396=doc.documentElement;
}
for(var i=0;i<_394.length;i++){
var _398=_394.item(i);
doc=quickr.util.dom.domToXml(_398,_396,doc);
}
}else{
doc=quickr.util.dom.newXMLDocument("div");
}
var _399=quickr.util.dom.XML_DECLARATION_WITH_ENTITIES+quickr.util.dom.serializeXMLDocument(doc);
return _399;
};
quickr.util.dom.domToXml=function(node,_39b,doc){
if(node.nodeType==3){
if(!_39b){
doc=quickr.util.dom.newXMLDocument("div");
_39b=doc.documentElement;
}
_39b.appendChild(doc.createTextNode(node.nodeValue));
return doc;
}
var _39d;
var _39e=node.nodeName.toLowerCase();
if(!doc){
doc=quickr.util.dom.newXMLDocument(_39e);
_39d=doc.documentElement;
}else{
_39d=doc.createElement(_39e);
_39b.appendChild(_39d);
}
var _39f=node.attributes;
if(_39f&&_39f.length>0){
var isA=_39e=="a";
var _3a1=_39e=="img";
for(var i=0;i<_39f.length;i++){
var attr=_39f.item(i);
if(attr.specified){
if((_3a1&&attr.name=="src")||(isA&&attr.name=="href")){
var _3a4=node.getAttribute("_fcksavedurl");
_39d.setAttribute(attr.name,_3a4);
}else{
_39d.setAttribute(attr.name,attr.value);
}
}
}
}
var _3a5=node.childNodes;
if(_3a5&&_3a5.length>0){
for(var i=0;i<_3a5.length;i++){
var _3a6=_3a5.item(i);
quickr.util.dom.domToXml(_3a6,_39d,doc);
}
}
return doc;
};
}
if(!dojo._hasResource["quickr.share.util"]){
dojo._hasResource["quickr.share.util"]=true;
dojo.provide("quickr.share.util");
quickr.share.util.XML_DECLARATION="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
quickr.share.util.XML_DECLARATION_WITH_ENTITIES="<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html [<!ENTITY amp \"&#38;#38;\"><!ENTITY lt \"&#60;#60;\"><!ENTITY gt \"&#62;#62;\"><!ENTITY nbsp \"&#32;\"><!ENTITY apos \"&#39;\"><!ENTITY quot \"&#34;\">]>";
quickr.share.util.NAMESPACES={XML:{LONG:"http://www.w3.org/XML/1998/namespace",SHORT:"xml"},ATOM:{LONG:"http://www.w3.org/2005/Atom",SHORT:"atom"},DOCUMENTS_ATOM:{LONG:"urn:ibm.com/td",SHORT:"td"},OPENSEARCH:{LONG:"http://a9.com/-/spec/opensearch/1.1/",SHORT:"opensearch"},THREAD_ATOM:{LONG:"http://purl.org/syndication/thread/1.0",SHORT:"thr"},SNX:{LONG:"http://www.ibm.com/xmlns/prod/sn",SHORT:"snx"}};
quickr.share.util.NAMESPACE_PREFIX={};
for(var key in quickr.share.util.NAMESPACES){
var value=quickr.share.util.NAMESPACES[key];
quickr.share.util[key+"_NAMESPACE"]=value;
quickr.share.util.NAMESPACE_PREFIX[value.SHORT]=value.LONG;
}
quickr.share.util.TRIMMED_FILENAME_LENGTH=24;
quickr.share.util.toXmlNamespace=function(_3a7){
return quickr.share.util.NAMESPACE_PREFIX[_3a7];
};
if(dojo.io.iframe){
dojo.io.iframe.cancel=function(){
dii=dojo.io.iframe;
if(dii._frame){
try{
var doc=dii.doc(dii._frame);
if(doc){
var uri=(dojo.config["dojoBlankHtmlUrl"]||dojo.moduleUrl("dojo","resources/blank.html"));
doc.location.replace(uri);
}
}
catch(e){
console.debug("dojo.io.iframe.cancel: ",e);
var _3aa=dii._frame;
if(_3aa.parentNode){
_3aa.parentNode.removeChild(_3aa);
}
delete dii._frame;
delete window[dii._iframeName];
}
}
};
}
quickr.share.util.map={_everyOrSome:function(_3ab,map,_3ad,_3ae){
for(var key in map){
var o=map[key];
var _3b1=!!_3ad.call(_3ae,o,key,map);
if(_3ab^_3b1){
return _3b1;
}
}
return _3ab;
},every:function(map,_3b3,_3b4){
return this._everyOrSome(true,map,_3b3,_3b4);
},some:function(map,_3b6,_3b7){
return this._everyOrSome(false,map,_3b6,_3b7);
}};
quickr.share.util._uniqueId=0;
quickr.share.util.getUniqueIdentifier=function(){
return "quickrUnique"+(++quickr.share.util._uniqueId);
};
quickr.share.util.indexById=function(arr,attr,_3ba){
if(arr){
for(var i=0;i<arr.length;i++){
if(arr[i]&&arr[i][attr]==_3ba){
return arr[i];
}
}
}
},dojo.declare("quickr.share.util.Repeat",[dojox.timing.Timer],{constructor:function(opts){
dojo.mixin(this,opts);
},i:1,max:1,onTick:function(){
console.log("tick "+this.i++);
this.tick();
if(this.i>this.max){
this.stop();
}
},tick:function(){
}});
quickr.share.util.sort=function(arr){
if(!dojo.isArray(arr)){
return arr;
}
if(arguments.length==1){
return arr.sort();
}else{
var keys=arguments;
return arr.sort(function(a,b){
for(var i=1;i<keys.length;i++){
var key=keys[i];
var _3c3=1;
if(dojo.isArray(key)){
_3c3=key[1];
key=key[0];
}
if(a[key]>b[key]){
return 1*_3c3;
}else{
if(a[key]<b[key]){
return -1*_3c3;
}
}
}
return 0;
});
}
};
quickr.share.util.requiresAuth=function(_3c4,_3c5){
return false;
};
quickr.share.util.destroy=function(){
if(arguments.length>1){
for(var i=0;i<arguments.length;i++){
quickr.share.util.destroy(arguments[i]);
}
}else{
if(arguments.length==1){
var arg=arguments[0];
if(arg&&typeof arg=="object"&&arg.length>0){
for(var i=0;i<arg.length;i++){
quickr.share.util.destroy(arg[i]);
}
}else{
var w=arg;
if(typeof w=="string"){
w=dijit.byId(w);
}
if(w){
if(w.destroyRecursive){
w.destroyRecursive();
}else{
if(w.destroy){
w.destroy();
}
}
}
}
}
}
};
quickr.share.util.destroyWidgets=function(el){
var list=dojo.query("[widgetId]",el).map(dijit.byNode);
dojo.forEach(list,function(w){
w.destroy();
});
};
quickr.share.util.removeChildren=function(el){
quickr.share.util.destroyWidgets(el);
while(el.firstChild){
el.removeChild(el.firstChild);
}
};
dojo.declare("quickr.share.util.Preferences",null,{name:"qpfs",expiration:40*1000*60*60*24,path:"/",constructor:function(opts){
dojo.mixin(this,opts);
},get:function(key){
this._init();
return this.prefs[key];
},put:function(key,_3d0){
this._init();
if(typeof _3d0=="undefined"||_3d0==null){
delete this.prefs[key];
}else{
this.prefs[key]=_3d0;
}
this._store();
},_init:function(){
if(!this._initialized){
var _3d1=dojo.cookie(this.name);
try{
this.prefs=dojo.fromJson(_3d1);
}
catch(e){
}
this.prefs=this.prefs||{};
this._initialized=true;
}
},_store:function(){
dojo.cookie(this.name,dojo.toJson(this.prefs),{expires:30,path:this.path});
},reset:function(){
this.prefs={};
dojo.cookie(this.name,"",{expires:30,path:this.path});
}});
quickr.share.util.serializeXMLDocument=function(doc){
if(doc.xml){
return doc.xml;
}
return new XMLSerializer().serializeToString(doc);
};
quickr.share.util.newXMLDocument=function(_3d3,_3d4,_3d5){
if(!_3d3){
_3d3="";
}
var _3d6="";
if(_3d4){
if(_3d4.LONG){
_3d6=_3d4.LONG;
}else{
_3d6=_3d4;
}
}
if(document.implementation&&document.implementation.createDocument){
return document.implementation.createDocument(_3d6,_3d3,null);
}else{
var doc=new ActiveXObject("MSXML2.DOMDocument");
if(_3d3){
var _3d8="";
var _3d9=_3d3;
var p=_3d3.indexOf(":");
if(p!=-1){
_3d8=_3d3.substring(0,p);
_3d9=_3d3.substring(p+1);
}
if(!_3d8&&_3d4&&_3d4.SHORT){
_3d8=_3d4.SHORT;
}else{
_3d8=null;
}
var text="<"+(_3d8?(_3d8+":"):"")+_3d9+(_3d6?(" xmlns"+(_3d8?(":"+_3d8):"")+"=\""+_3d6+"\""):"");
if(_3d5){
for(var i=0;i<_3d5.length;i++){
text+=" xmlns:"+_3d5[i].SHORT+"=\""+_3d5[i].LONG+"\"";
}
}
text+="/>";
doc.loadXML(text);
}
return doc;
}
};
quickr.share.util.xhtmlToHtml=function(d,_3de,html,_3e0){
if(!_3de){
return;
}
if(!_3e0){
for(var i=0,a;a=_3de.attributes[i];i++){
if(a.nodeName=="class"){
html.className=a.nodeValue;
}else{
if(a.nodeName.toLowerCase()=="colspan"){
html.colSpan=a.nodeValue;
}else{
if(a.nodeName.toLowerCase()=="style"){
html.style.cssText=a.nodeValue;
}else{
html.setAttribute(a.nodeName,a.nodeValue);
}
}
}
}
}
for(var i=0,x;x=_3de.childNodes[i];i++){
switch(x.nodeType){
case 1:
var e=d.createElement(x.nodeName);
html.appendChild(e);
quickr.share.util.xhtmlToHtml(d,x,e);
break;
case 3:
html.appendChild(d.createTextNode(x.nodeValue));
break;
}
}
};
quickr.share.util.createTable=function(d,_3e6){
var _3e7=d.createElement("table");
_3e7.cellPadding=_3e7.cellSpacing=0;
var _3e8=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
if(_3e6){
td.appendChild(_3e6);
}
tr.appendChild(td);
_3e8.appendChild(tr);
_3e7.appendChild(_3e8);
return _3e7;
};
quickr.share.util.getFrameDocument=function(_3eb){
var _3ec;
if(_3eb){
try{
if(dojo.isIE||dojo.isSafari>2){
_3ec=_3eb.contentWindow.document;
}else{
if(dojo.isSafari){
_3ec=_3eb.document;
}else{
_3ec=_3eb.contentWindow.document;
}
}
}
catch(e){
}
}
return _3ec;
};
quickr.share.util.getElementByLanguage=function(_3ed,_3ee){
var c;
var i;
var _3f1=[_3ee];
while((i=_3ee.lastIndexOf("-"))!=-1){
_3f1.push(_3ee=_3ee.substring(0,i));
}
if(dojo.indexOf(_3f1,"en-us")==-1){
_3f1.push("en-us");
}
if(dojo.indexOf(_3f1,"en")==-1){
_3f1.push("en");
}
if(dojo.indexOf(_3f1,"")==-1){
_3f1.push("");
}
for(var i=0;i<_3f1.length;i++){
for(var j=0;c=_3ed[j];j++){
var lang=(dojo.isIE)?c.getAttribute(quickr.share.util.XML_NAMESPACE.SHORT+":lang"):c.getAttributeNS(quickr.share.util.XML_NAMESPACE.LONG,"lang");
lang=lang?lang:"";
if(lang==_3f1[i]){
return c;
}
}
}
return null;
};
quickr.share.util.xmlText=function(node){
return (node)?(dojo.isIE?(node.text?node.text:node.innerText):node.textContent):node;
};
quickr.share.util.htmlText=function(el){
if(!el){
return null;
}
var a=[];
for(var j=0;c=el.childNodes[j];j++){
if(c.nodeType==3){
a.push(c.nodeValue);
}
}
return a.length>0?a.join(""):null;
};
quickr.share.util.getElementsByTagNameNS=function(el,_3f9,_3fa){
return (dojo.isIE)?el.getElementsByTagName(_3fa.SHORT+":"+_3f9):el.getElementsByTagNameNS(_3fa.LONG,_3f9);
};
quickr.share.util.createElementNS=function(d,_3fc,_3fd){
var _3fe=(dojo.isIE)?d.createElement(_3fd.SHORT+":"+_3fc):d.createElementNS(_3fd.LONG,_3fc);
return _3fe;
};
quickr.share.util.setAttributeNS=function(el,_400,_401,_402){
if(dojo.isIE){
el.setAttribute(_402.SHORT+":"+_400,_401);
}else{
el.setAttributeNS(_402.LONG,_400,_401);
}
};
quickr.share.util.insertBefore=function(el,node,_405){
if(_405){
el.insertBefore(node,_405);
}else{
el.appendChild(node);
}
};
quickr.share.util.insertAfter=function(el,node,_408){
if(_408&&_408.nextSibling){
el.insertBefore(node,_408.nextSibling);
}else{
el.appendChild(node);
}
};
quickr.share.util.getChildElementNS=function(el,_40a,_40b){
var arr=(dojo.isIE)?el.getElementsByTagName(_40b.SHORT+":"+_40a):el.getElementsByTagNameNS(_40b.LONG,_40a);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==el){
return c;
}
}
};
quickr.share.util.getChildElementTextContent=function(el,_410){
if(!el){
return null;
}
var arr=el.getElementsByTagName(_410);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==el){
if(c.textContent){
return c.textContent;
}
if(c.innerText){
return c.innerText;
}
var a=[];
for(var j=0;c2=c.childNodes[j];j++){
if(c2.nodeType==3){
a.push(c2.nodeValue);
}
}
return a.join("");
}
}
return null;
};
quickr.share.util.getChildElementTextContentNS=function(el,_417,_418){
if(!el){
return null;
}
var c;
var arr=el.childNodes;
if(dojo.isIE){
var _41b=_418==null?_417:_418.SHORT+":"+_417;
for(var i=0;c=arr[i];i++){
if(c.tagName==_41b){
if(c.innerText){
return c.innerText;
}
var a=[];
for(var j=0;c2=c.childNodes[j];j++){
if(c2.nodeType==3){
a.push(c2.nodeValue);
}
}
return a.join("");
}
}
}else{
var arr=el.getElementsByTagNameNS(_418.LONG,_417);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==el){
if(c.textContent){
return c.textContent;
}
var a=[];
for(var j=0;c2=c.childNodes[j];j++){
if(c2.nodeType==3){
a.push(c2.nodeValue);
}
}
return a.join("");
}
}
}
return null;
};
quickr.share.util.getChildElementAttribute=function(_41f,_420,attr){
if(attr=="class"&&dojo.isIE){
attr="className";
}
var arr=_41f.getElementsByTagName(_420);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==_41f){
return c.getAttribute(attr);
}
}
return null;
};
quickr.share.util.getChildElementAttributeNS=function(_425,_426,_427,attr,_429){
var c;
if(dojo.isIE){
if(attr=="class"){
attr="className";
}
var _42b=_427==null?_426:_427.SHORT+":"+_426;
for(var i=0;c=_425.childNodes[i];i++){
if(_42b==c.tagName){
return c.getAttribute(_429.SHORT+":"+attr);
}
}
}else{
if(_427){
var arr=_425.getElementsByTagNameNS(_427.LONG,_426);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==_425){
return c.getAttributeNS(_429.LONG,attr);
}
}
}else{
var arr=_425.getElementsByTagName(_426);
for(var i=0,c;c=arr[i];i++){
if(c.parentNode==_425){
return c.getAttributeNS(_429.LONG,attr);
}
}
}
}
return null;
};
quickr.share.util.getChildElementAttributeMatching=function(_42e,_42f,_430,_431,_432){
if(_430=="class"&&dojo.isIE){
_430="className";
}
if(_432=="class"&&document.all){
_432="className";
}
var arr=_42e.getElementsByTagName(_42f);
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_430)==_431){
return child.getAttribute(_432);
}
}
return null;
};
quickr.share.util.getChildElementAttributeMatchingNS=function(_435,_436,_437,_438,_439,_43a,_43b,_43c){
if(_438=="class"&&dojo.isIE){
_438="className";
}
if(_43b=="class"&&document.all){
_43b="className";
}
if(dojo.isIE){
var _43d=_437?_437.SHORT+":"+_436:_436;
var _43e=_439?_439.SHORT+":"+_438:_438;
var _43f=_43c?_43c.SHORT+":"+_43b:_43b;
var arr=_435.getElementsByTagName(_43d);
for(var i=0;c=arr[i];i++){
if(c.getAttribute(_43e)==_43a){
return c.getAttribute(_43f);
}
}
}else{
if(_437){
var arr=_435.getElementsByTagNameNS(_437.LONG,_436);
if(_439){
for(var i=0,c;c=arr[i];i++){
if(c.getAttributeNS(_439.LONG,_438)==_43a){
return c.getAttributeNS(_43c.LONG,_43b);
}
}
}else{
for(var i=0,c;c=arr[i];i++){
if(c.getAttribute(_438)==_43a){
return c.getAttributeNS(_43c.LONG,_43b);
}
}
}
}else{
var arr=_435.getElementsByTagName(_436);
if(_439){
for(var i=0;child=arr[i];i++){
if(child.getAttributeNS(_439.LONG,_438)==_43a){
return child.getAttributeNS(_43c.LONG,_43b);
}
}
}else{
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_438)==_43a){
return child.getAttributeNS(_43c.LONG,_43b);
}
}
}
}
}
return null;
};
quickr.share.util.getChildElementMatchingAttribute=function(_443,_444,_445,_446){
if(_445=="class"&&dojo.isIE){
_445="className";
}
var arr=_443.getElementsByTagName(_444);
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_445)==_446){
return child;
}
}
return null;
};
quickr.share.util.getChildElementMatchingAttributeTextContent=function(_449,_44a,_44b,_44c){
if(_44b=="class"&&dojo.isIE){
_44b="className";
}
var arr=_449.getElementsByTagName(_44a);
for(var i=0;child=arr[i];i++){
if(child.getAttribute(_44b)==_44c){
return quickr.share.util.xmlText(child);
}
}
return null;
};
quickr.share.util.getChildElementMatchingAttributeTextContentNS=function(_44f,_450,_451,_452,_453,_454){
var arr=_44f.childNodes;
var _456;
if(dojo.isIE){
if(_452=="class"){
_452="className";
}
var _457=_451==null?_450:_451.SHORT+":"+_450;
var _458=_453==null?_452:_453.SHORT+":"+_452;
var arr=_44f.getElementsByTagName(_457);
for(var i=0;_456=arr[i];i++){
if(_456.getAttribute(_458)==_454){
return quickr.share.util.xmlText(_456);
}
}
}else{
if(_451){
var arr=_44f.getElementsByTagNameNS(_451.LONG,_450);
if(_453){
for(var i=0;_456=arr[i];i++){
if(_456.getAttributeNS(_453.LONG,_452)==_454){
return quickr.share.util.xmlText(_456);
}
}
}else{
for(var i=0;_456=arr[i];i++){
if(_456.getAttribute(_452)==_454){
return quickr.share.util.xmlText(_456);
}
}
}
}else{
var arr=_44f.getElementsByTagName(_450);
if(_453){
for(var i=0;_456=arr[i];i++){
if(_456.getAttributeNS(_453.LONG,_452)==_454){
return quickr.share.util.xmlText(_456);
}
}
}else{
for(var i=0;_456=arr[i];i++){
if(_456.getAttribute(_452)==_454){
return quickr.share.util.xmlText(_456);
}
}
}
}
}
return null;
};
quickr.share.util.getExtension=function(s){
if(!s){
return "";
}
var i=s.lastIndexOf(".");
if(i!=-1){
return s.substring(i+1).toLowerCase();
}
return "";
};
quickr.share.util.trimExtension=function(s){
if(!s){
return "";
}
var i=s.lastIndexOf(".");
if(i!=-1){
return s.substring(0,i);
}
return s;
};
quickr.share.util.getFilename=function(s){
if(!s){
return "";
}
var i=s.lastIndexOf("\\");
var j=s.lastIndexOf("/");
if(i==j){
return s;
}
i=Math.max(i,j);
return s.substring(i+1);
};
quickr.share.util.trimToLength=function(s,_462,_463){
if(!s){
return "";
}
s=quickr.share.util.trimEnd(s);
var _464="...";
if(_463>0){
var _465=s.split(/\s/);
for(var i=0;i<_465.length;i++){
if(_465[i].length>_463){
var l=s.indexOf(_465[i])+_463;
if(l>_462){
break;
}
return quickr.share.util.trimEnd(s.substring(0,l-_464.length))+_464;
}
}
}
if(s.length>_462){
s=quickr.share.util.trimEnd(s.substring(0,_462-_464.length))+_464;
}
return s;
};
quickr.share.util.trim=function(s){
if(!s){
return "";
}
var e=/^\s*(.*?)\s*$/.exec(s+"");
return e?e[1]:s;
};
quickr.share.util.trimEnd=function(s){
if(!s){
return "";
}
s+="";
s=/^(.*?)\s*$/.exec(s)[1];
return s;
};
quickr.share.util.parseInt=function(s,def){
def=def||0;
if(!s){
return def;
}
var a=parseInt(s);
return isNaN(a)?def:a;
};
quickr.share.util.parseFloat=function(s,def){
def=def||0;
if(!s){
return def;
}
var a=parseFloat(s);
return isNaN(a)?def:a;
};
quickr.share.util.formatSize=function(size){
if(typeof size=="undefined"||size==null||typeof size=="string"){
return size;
}
var nls=dojo.i18n.getLocalization("quickr.share.wiki","wiki");
if(size>10*1024*1024){
return dojo.string.substitute(nls.SIZE.MB,[dojo.number.format(Math.floor(size*10/(1024*1024))/10)]);
}else{
if(size>1*1024*1024){
return dojo.string.substitute(nls.SIZE.MB,[dojo.number.format(Math.floor(size*100/(1024*1024))/100)]);
}else{
if(size>1*1024){
return dojo.string.substitute(nls.SIZE.KB,[dojo.number.format(Math.floor(size/1024))]);
}
}
}
return dojo.string.substitute(nls.SIZE.B,[dojo.number.format(size)]);
};
quickr.share.util.first=function(o){
return (o&&dojo.isArray(o))?o[0]:o;
};
quickr.share.util.parseUri=function(uri){
if(!uri){
return null;
}
uri=new dojo._Url(uri);
var _475=quickr.share.util.getRequestParameters(uri);
uri.queryParameters=_475;
return uri;
};
quickr.share.util.writeUri=function(obj){
if(!obj){
return null;
}
var uri="";
if(obj.scheme){
uri+=obj.scheme+":";
}
if(obj.authority){
uri+="//"+obj.authority;
}
uri+=obj.path;
if(obj.queryParameters){
uri+=quickr.share.util.writeParameters(obj.queryParameters);
}else{
if(obj.query){
uri+=((obj.query.charAt(0)!="?")?"?":"")+obj.query;
}
}
if(obj.fragment){
uri+="#"+obj.fragment;
}
return uri;
};
quickr.share.util.makeAtomUrlIESafe=function(url){
if(dojo.isIE&&url){
url=quickr.share.util.parseUri(url);
url.queryParameters.format="xml";
url=quickr.share.util.writeUri(url);
}
return url;
};
quickr.share.util.rewriteUri=function(url,p){
if(url&&p){
url=quickr.share.util.parseUri(url);
dojo.mixin(url.queryParameters,p);
url=quickr.share.util.writeUri(url);
}
return url;
};
quickr.share.util.splitQuery=function(_47b){
var _47c={};
if(!_47b){
return _47c;
}
if(_47b.charAt(0)=="?"){
_47b=_47b.substring(1);
}
var args=_47b.split("&");
for(var i=0;i<args.length;i++){
if(args[i].length>0){
var _47f=args[i].indexOf("=");
if(_47f==-1){
var key=decodeURIComponent(args[i]);
var _481=_47c[key];
if(dojo.isArray(_481)){
_481.push("");
}else{
if(_481){
_47c[key]=[_481,""];
}else{
_47c[key]="";
}
}
}else{
if(_47f>0){
var key=decodeURIComponent(args[i].substring(0,_47f));
var _482=decodeURIComponent(args[i].substring(_47f+1));
var _481=_47c[key];
if(dojo.isArray(_481)){
_481.push(_482);
}else{
if(_481){
_47c[key]=[_481,_482];
}else{
_47c[key]=_482;
}
}
}
}
}
}
return _47c;
};
quickr.share.util.getRequestParameters=function(uri){
var _484={};
if(!uri){
return _484;
}
if(typeof uri=="string"){
uri=new dojo._Url(uri);
}
return quickr.share.util.splitQuery(uri.query);
};
quickr.share.util.writeParameters=function(map){
var out=[];
for(var key in map){
var _488=map[key];
if(typeof _488!="undefined"&&_488!=null){
key=encodeURIComponent(key);
if(dojo.isArray(_488)){
for(var i=0;i<_488.length;i++){
if(_488[i]){
out.push(out.length==0?"?":"&");
out.push(key);
out.push("=");
out.push(encodeURIComponent(_488[i]));
}
}
}else{
out.push(out.length==0?"?":"&");
out.push(key);
out.push("=");
out.push(encodeURIComponent(_488));
}
}
}
return out.join("");
};
quickr.share.util.isAnchorForm=function(uri,_48b){
var url=new dojo._Url(uri);
var path=url.path;
if(path){
for(var i=0;i<_48b.length;i++){
var base=quickr.share.util.parseUri(_48b[i]).path;
if(path.indexOf(base)==0&&path.substr(0,base.length)==path){
return true;
}
}
}
return false;
};
quickr.share.util.toAnchorForm=function(uri,_491,_492){
var url=new dojo._Url(uri);
var path=url.path;
if(path){
var _495;
for(var i=0;i<_491.length;i++){
var base=quickr.share.util.parseUri(_491[i]).path;
if(path.indexOf(base)==0){
var p={};
_495=path.substring(base.length);
if(url.query){
var q=quickr.share.util.splitQuery(url.query);
if(_492){
for(var key in _492){
p[key]=q[key]||_492[key];
delete q[key];
}
_495+=quickr.share.util.writeParameters(q);
}else{
_495+="?"+url.query;
}
}else{
for(var key in _492){
p[key]=_492[key];
}
}
url.path=base;
url.fragment=(_495.length>0)?_495:"/";
url.query=quickr.share.util.writeParameters(p);
uri=quickr.share.util.writeUri(url);
break;
}
}
}
return uri;
};
quickr.share.util.fromAnchorForm=function(uri,_49c){
if(!uri){
return uri;
}
var url=new dojo._Url(uri);
var path=url.path;
if(url.fragment&&path){
var _49f;
for(var i=0;i<_49c.length;i++){
var base=quickr.share.util.parseUri(_49c[i]).path;
if(path==base){
_49f=url.fragment;
var p=quickr.share.util.splitQuery(url.query);
url.query=null;
url.fragment=null;
url.path=base+_49f;
uri=quickr.share.util.writeUri(url);
url=new dojo._Url(uri);
dojo.mixin(p,quickr.share.util.splitQuery(url.query));
url.query=quickr.share.util.writeParameters(p);
uri=quickr.share.util.writeUri(url);
break;
}
}
}
return uri;
};
quickr.share.util.lengthUtf8=function(s){
var _4a4=0;
var _4a5=encodeURIComponent(s);
var _4a6=_4a5.length;
for(var i=0;i<_4a6;i++){
_4a4++;
if(_4a5.charAt(i)=="%"){
i+=2;
}
}
return _4a4;
};
quickr.share.util.getCharIndexForUtf8Index=function(s,_4a9){
var _4aa=0;
var _4ab=s.length;
for(var i=0;i<_4ab;i++){
var c=s.charAt(i);
var _4ae=encodeURIComponent(c);
if(_4ae.length>2){
_4aa+=_4ae.length/3;
}else{
_4aa++;
}
if(_4aa>_4a9){
return i;
}
}
return -1;
};
dojo.declare("quickr.share.util.DateFormat",null,{MILLS_IN_DAY:86400000,constructor:function(date,_4b0){
this.dt=date||new Date();
if(_4b0){
for(var key in _4b0){
this[key]=_4b0[key];
}
}
this._transform=dojo.hitch(this,this.substitute);
},nls:function(){
if(!this._nls){
this._nls=dojo.i18n.getLocalization("quickr.share.wiki","wiki");
}
return this._nls;
},substitute:function(_4b2,key){
var _4b2=this[key];
if(typeof _4b2=="function"){
_4b2=_4b2.apply(this,[]);
}
if(typeof _4b2=="undefined"||_4b2==null){
_4b2="${"+key+"}";
}
return _4b2;
},toTimestamp:function(){
return this.format(this.nls().DATE.FULL);
},format:function(s){
return dojo.string.substitute(s,null,this._transform);
},formatByAge:function(_4b5){
_4b5=_4b5||this.nls().DATE.RELATIVE_TIME;
var _4b6=this.delta();
if(_4b6<7&&_4b6>=-1){
if(_4b6>=2){
return this.format(_4b5.DAY);
}else{
if(_4b6==1){
return this.format(_4b5.YESTERDAY);
}else{
if(_4b6==0){
return this.format(_4b5.TODAY);
}else{
if(_4b6==-1&&_4b5.TOMORROW){
return this.format(_4b5.TOMORROW);
}
}
}
}
}else{
if(new Date().getFullYear()==this.dt.getFullYear()){
return this.format(_4b5.MONTH);
}
}
return this.format(_4b5.YEAR);
},formatByAgeToHtml:function(_4b7,d){
var _4b9=this.formatByAge(_4b7);
var span=d.createElement("SPAN");
span.appendChild(d.createTextNode(_4b9?_4b9:this.dt.toString()));
span.title=(_4b7&&_4b7.FULL)?this.format(_4b7.FULL):this.format(this.nls().DATE.RELATIVE_TIME.FULL);
return span;
},delta:function(){
if(typeof this._delta!="undefined"){
return this._delta;
}
this._delta=quickr.share.util.DateFormat.delta(this.dt,new Date());
return this._delta;
},getDays:function(){
if(!this._days){
quickr.share.util.DateFormat.prototype._days=dojo.date.locale.getNames("days","wide");
}
return this._days;
},getDaysAbbr:function(){
if(!this._daysAbbr){
quickr.share.util.DateFormat.prototype._daysAbbr=dojo.date.locale.getNames("days","abbr");
}
return this._daysAbbr;
},getMonths:function(){
if(!this._months){
quickr.share.util.DateFormat.prototype._months=dojo.date.locale.getNames("months","abbr");
}
return this._months;
},getMonthsWide:function(){
if(!this._monthsWide){
quickr.share.util.DateFormat.prototype._monthsWide=dojo.date.locale.getNames("months","wide");
}
return this._monthsWide;
},getMonthsShort:function(){
if(!this._monthsShort){
quickr.share.util.DateFormat.prototype._monthsShort=this.nls().DATE.MONTHS_ABBR;
}
return this._monthsShort;
},Z:function(){
if(!this._Z){
var _4bb="-";
var _4bc=this.dt.getTimezoneOffset();
if(_4bc<0){
_4bc=Math.abs(_4bc);
_4bb="+";
}
var _4bd=Math.floor(_4bc/60);
_4bc%=60;
if(_4bd<10){
_4bd="0"+_4bd;
}
if(_4bc<10){
_4bc="0"+_4bc;
}
_4bb+=_4bd+""+_4bc;
this._Z=_4bb;
}
return this._Z;
},ZZZZ:function(){
if(!this._ZZ){
if(dojo.isIE){
var _4be=this.dt.toString().split(" ");
this._ZZ=(_4be.length>2)?_4be[_4be.length-2]:this.Z();
}else{
var r=/\(([^\)]+)\)/.exec(this.dt.toString());
this._ZZ=r?r[1]:this.Z();
}
}
return this._ZZ;
},YYYY:function(){
return this.dt.getFullYear();
},EEE:function(_4c0){
var day=this.dt.getDay();
if(_4c0>0){
day=(day+7-_4c0)%7;
}
return this.getDaysAbbr()[day];
},EEEE:function(_4c2){
var day=this.dt.getDay();
if(_4c2>0){
day=(day+7-_4c2)%7;
}
return this.getDays()[day];
},EEee:function(_4c4){
var _4c5=this.delta()+(_4c4?_4c4:0);
return (_4c5==0)?this.nls().DATE.TODAY_U:(_4c5==1)?this.nls().DATE.YESTERDAY_U:this.EEEE(_4c4);
},eeEE:function(_4c6){
var _4c7=this.delta()+(_4c6?_4c6:0);
return (_4c7==0)?this.nls().DATE.TODAY:(_4c7==1)?this.nls().DATE.YESTERDAY:this.EEEE(_4c6);
},MMMM:function(){
return this.getMonthsWide()[this.dt.getMonth()];
},MMM:function(){
return this.getMonths()[this.dt.getMonth()];
},MM:function(){
var i=this.dt.getMonth()+1;
return (i>9)?i:("0"+i);
},M0:function(){
var i=this.dt.getMonth()+1;
return (i>9)?i:("0"+i);
},Mmm:function(){
return this.dt.getMonthsShort()[this.dt.getMonth()];
},D0:function(){
var i=this.dt.getDate();
return (i>9)?i:("0"+i);
},dd:function(){
var i=this.dt.getDate();
return (i>9)?i:("0"+i);
},a:function(){
return this.dt.getHours()<12?this.nls().DATE.AM:this.nls().DATE.PM;
},HH:function(){
var i=this.dt.getHours();
return (i>9)?i:("0"+i);
},hh:function(){
var _4cd=this.dt.getHours();
if(_4cd>12){
_4cd-=12;
}else{
if(_4cd==0){
_4cd=12;
}
}
return (_4cd>9)?_4cd:("0"+_4cd);
},mm:function(){
var _4ce=this.dt.getMinutes();
return (_4ce<10)?"0"+_4ce:_4ce;
},ss:function(){
var _4cf=this.dt.getSeconds();
return (_4cf<10)?"0"+_4cf:_4cf;
},date:function(){
return dojo.date.locale.format(this.dt,{selector:"date",formatLength:"short",locale:djConfig.locale});
},date_long:function(){
return dojo.date.locale.format(this.dt,{selector:"date",formatLength:"long",locale:djConfig.locale});
},time:function(){
return dojo.date.locale.format(this.dt,{selector:"time",formatLength:"short",locale:djConfig.locale});
},time_long:function(){
return dojo.date.locale.format(this.dt,{selector:"time",formatLength:"long",locale:djConfig.locale});
}});
quickr.share.util.DateFormat.delta=function(from,to){
var _4d2=from.getTime();
var _4d3=new Date(to.getTime());
_4d3.setHours(0);
_4d3.setMinutes(0);
_4d3.setSeconds(0);
_4d3.setMilliseconds(0);
var diff=_4d3.getTime()-_4d2;
var _4d5=Math.ceil(diff/(quickr.share.util.DateFormat.prototype.MILLS_IN_DAY));
return _4d5;
},quickr.share.util.date={convertAtomDate:function(date){
return dojo.date.stamp.fromISOString(date);
}};
quickr.share.util.domNodesToXml=function(_4d7){
var doc;
var _4d9;
if(_4d7&&_4d7.length>0){
if(_4d7.length>1){
doc=quickr.share.util.newXMLDocument("div");
_4d9=doc.documentElement;
}
for(var i=0;i<_4d7.length;i++){
var _4db=_4d7.item(i);
doc=quickr.share.util.domToXml(_4db,_4d9,doc);
}
}else{
doc=quickr.share.util.newXMLDocument("div");
}
var _4dc=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+quickr.share.util.serializeXMLDocument(doc);
return _4dc;
};
quickr.share.util.domToXml=function(node,_4de,doc){
if(node.nodeType==3){
if(!_4de){
doc=quickr.share.util.newXMLDocument("div");
_4de=doc.documentElement;
}
_4de.appendChild(doc.createTextNode(node.nodeValue));
return doc;
}
var _4e0;
var _4e1=node.nodeName.toLowerCase();
if(!doc){
doc=quickr.share.util.newXMLDocument(_4e1);
_4e0=doc.documentElement;
}else{
_4e0=doc.createElement(_4e1);
_4de.appendChild(_4e0);
}
var _4e2=node.attributes;
if(_4e2&&_4e2.length>0){
var isA=_4e1=="a";
var _4e4=_4e1=="img";
for(var i=0;i<_4e2.length;i++){
var attr=_4e2.item(i);
if(attr.specified){
if((_4e4&&attr.name=="src")||(isA&&attr.name=="href")){
var _4e7=node.getAttribute("_fcksavedurl");
_4e0.setAttribute(attr.name,_4e7);
}else{
_4e0.setAttribute(attr.name,attr.value);
}
}
}
}
var _4e8=node.childNodes;
if(_4e8&&_4e8.length>0){
for(var i=0;i<_4e8.length;i++){
var _4e9=_4e8.item(i);
quickr.share.util.domToXml(_4e9,_4e0,doc);
}
}
return doc;
};
quickr.share.util.html={};
quickr.share.util.html.substitute=function(d,el,_4ec,map,_4ee,_4ef){
var re=/\$\{([^\s\:\}]+)(?:\:([^\s\:\}]+))?\}/g;
var last=0;
while(r=re.exec(_4ec)){
el.appendChild(d.createTextNode(_4ec.substring(last,r.index)));
last=r.index+r[0].length;
var key=r[1];
var _4f3=r[2];
var _4f4=dojo.getObject(key,false,map);
if(typeof _4f4=="function"){
_4f4=_4f4.apply(map,[key,_4f3]);
}
if(_4f3){
_4f4=dojo.getObject(_4f3,false,_4ef)(_4f4);
}
if(_4ee){
_4f4=_4ee(_4f4,key);
}
if(typeof _4f4!="undefined"&&_4f4!=null){
if(_4f4.nodeType>0){
el.appendChild(_4f4);
}else{
el.appendChild(d.createTextNode(_4f4.toString()));
}
}
}
el.appendChild(d.createTextNode(_4ec.substring(last)));
return el;
};
quickr.share.util.createWrappableText=function(d,el,text,_4f8){
text=text||"";
_4f8=_4f8||1;
if(text.length<=_4f8){
el.appendChild(d.createTextNode(text));
}else{
var dash=false;
var _4fa=dojo.isSafari;
var ff2=dojo.isFF&&Math.floor(dojo.isFF)==2;
for(var i=0;i<text.length;i+=1){
var c=text.substring(i,i+1);
var dash=c=="-";
if(i!=0&&!_4fe&&!dash){
if(ff2||_4fa){
el.appendChild(d.createElement("wbr"));
}else{
el.appendChild(d.createTextNode("­"));
}
}
var _4fe=dash;
el.appendChild(d.createTextNode(c));
}
}
};
quickr.share.util.EMBEDDED_URL_PATTERN=/(^|[\s])((http:\/\/|https:\/\/|ftp:\/\/|www\.)[^\s]+)/i;
quickr.share.util.URL_PUNCTUATION_BACKTRACK=/[\.,\!\-;\:\'\"]+$/;
quickr.share.util.createTextNode=function(d,el,text,_502){
text=quickr.share.util.trim(text);
if(text.length>0){
var _503=text.split("\n");
dojo.forEach(_503,function(text){
var _505,_506;
while(_505=quickr.share.util.EMBEDDED_URL_PATTERN.exec(text)){
var _507=text.substring(0,_505.index)+_505[1];
var _508=_505[2];
if(_506=quickr.share.util.URL_PUNCTUATION_BACKTRACK.exec(_508)){
_508=_508.substring(0,_506.index);
}
text=text.substring(_507.length+_508.length);
var href=(_505[3]=="www.")?"http://"+_508:_508;
if(_507.length>0){
el.appendChild(d.createTextNode(_507));
}
var a=d.createElement("a");
a.href=href;
a.appendChild(d.createTextNode(_508));
el.appendChild(a);
}
if(text.length>0){
el.appendChild(d.createTextNode(text));
}
el.appendChild(!_502?d.createElement("br"):d.createTextNode(" "));
});
}
};
quickr.share.util.getConcurrentModificationError=function(_50b,_50c){
var _50d;
if(_50c.xhr&&_50c.xhr.status==412&&_50c.xhr.responseXML&&_50c.xhr.responseXML.documentElement&&quickr.util.dom.isNamedNS(_50c.xhr.responseXML.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var file=new quickr.share.bean.File(_50c.xhr.responseXML.documentElement);
_50d={code:"ConcurrentModification",date:file.getUpdated(),user:file.getModifier()};
}
return _50d;
};
quickr.share.util.getAtomErrorCode=function(_50f,_510){
var _511=quickr.share.util.getAtomError(_50f,_510);
return (_511?_511.code:null);
};
quickr.share.util.getAtomError=function(_512,_513){
var _514=null;
if(_512 instanceof Error||!_512||(_513.handleAs=="xml"&&!_512.documentElement)||(dojo.indexOf(["json","json-comment-filtered"],_513.handleAs)!=-1&&typeof _512!="object")){
if(!_514&&_512&&dojo.indexOf(["cancel","timeout","unauthenticated"],_512.dojoType)!=-1){
_514={code:_512.dojoType};
}
if(!_514&&_513.xhr&&_513.xhr.responseXML&&_513.xhr.responseXML.documentElement){
var qsu=quickr.share.util;
var el=_513.xhr.responseXML.documentElement;
var text=qsu.getChildElementTextContentNS(el,"errorCode",qsu.DOCUMENTS_ATOM_NAMESPACE);
var code=qsu.trim(text);
if(code.length>0){
_514={code:code,el:el,message:qsu.getChildElementTextContentNS(el,"errorMessage",qsu.DOCUMENTS_ATOM_NAMESPACE)};
if(code=="QuotaViolation"){
_514.libraryQuota=qsu.parseInt(qsu.getChildElementTextContentNS(el,"libraryQuota",qsu.DOCUMENTS_ATOM_NAMESPACE));
_514.librarySize=qsu.parseInt(qsu.getChildElementTextContentNS(el,"librarySize",qsu.DOCUMENTS_ATOM_NAMESPACE));
_514.uploadSize=qsu.parseInt(qsu.getChildElementTextContentNS(el,"uploadSize",qsu.DOCUMENTS_ATOM_NAMESPACE));
}
}
}
if(!_514&&_513.xhr&&_513.xhr.status==404){
_514={code:"ItemNotFound"};
}
if(!_514){
_514={code:"unknown"};
}
}
return _514;
};
quickr.share.util.getJsonResponseFromHtml=function(d){
var r={};
try{
if(d&&d.body){
var meta=dojo.filter(d.getElementsByTagName("meta"),function(el){
return el.name=="status";
})[0];
r.status=meta?parseInt(meta.content):200||200;
try{
var _51d=dojo.fromJson(d.body.innerHTML);
if(typeof _51d=="object"){
r.contents=_51d;
}
}
catch(e){
console.log("util::getJsonResponseFromHtml DEBUG innerHTML not JSON");
}
}
}
catch(e){
console.log("util::getJsonResponseFromHtml DEBUG unable to access body");
}
return r;
};
quickr.share.util.getMultipartError=function(r){
if(r&&r.status==404){
return {code:"ItemNotFound"};
}
if(!r||typeof r.contents!="object"){
return {code:"unknown"};
}
if(r.status==412){
var _51f={};
var _520=null;
var c=r.contents;
for(var i=0;i<c.extensions.length;i++){
var ext=c.extensions[i];
if(ext.name=="td:modifier"){
for(var j=0;j<ext.children.length;j++){
var _525=ext.children[j];
if(_525.name=="td:uri"){
_51f.id=_525.children[0];
}else{
if(_525.name=="td:name"){
_51f.name=_525.children[0];
}
}
}
}else{
if(ext.name=="td:modified"){
_520=quickr.share.util.date.convertAtomDate(ext.children[0]);
}
}
}
return {code:"ConcurrentModification",user:_51f,date:_520};
}else{
if(typeof r.contents.errorCode=="string"){
var _526={code:r.contents.errorCode,message:r.contents.errorMessage};
for(var key in r.contents){
if(key!="errorCode"&&key!="errorMessage"){
_526[key]=r.contents[key];
}
}
return _526;
}else{
if(r.status<200||r.status>=300){
return {code:"unknown"};
}
}
}
return null;
};
quickr.share.util.detectLoginForMultipartAtomResponse=function(_528,_529){
var _52a=false;
if(_528&&!(_528 instanceof Error)){
var body;
try{
body=_528.body;
}
catch(e){
}
if(body&&body.childNodes){
var arr=body.childNodes;
console.log("util::detectLoginForMultipartAtomResponse DEBUG scan child nodes");
for(var i=0;i<arr.length;i++){
if(arr[i]&&arr[i].nodeType!=3){
_52a=true;
console.log("util::detectLoginForMultipartAtomResponse DEBUG is a login");
break;
}
}
}
}
return _52a;
};
quickr.share.util.generateiWidgetEnablerCodeIfRequired=function(_52e,doc){
if(_52e.indexOf("mm_iWidget")>-1){
var _530=doc.createElement("script");
_530.text="dojo.require";
_530.text=_530.text+"('dojo.i18n');";
_530.text=_530.text+"dojo.require";
_530.text=_530.text+"('com.ibm.enabler');";
return _530;
}
return null;
};
quickr.share.util.fixWidth=function(cell,_532){
if(dojo.isSafari||(dojo.isFF&&Math.floor(dojo.isFF)==3)){
cell.style.width=_532;
}
};
quickr.share.util.decodeSpecialHtmlChars=function(_533){
return _533.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&");
};
quickr.share.util.createOperationId=function(){
var s=dojo._toArray(arguments).join("_");
if(s.length>256){
s=s.substring(0,256);
}
return quickr.share.util.trim(s);
};
}
if(!dojo._hasResource["quickr.share.Routes"]){
dojo._hasResource["quickr.share.Routes"]=true;
dojo.provide("quickr.share.Routes");
dojo.declare("quickr.share.Routes",null,{constructor:function constructor(){
},getQueryString:function(map){
if(map){
if(this.globalParameters){
var p=dojo.clone(this.globalParameters);
for(var key in map){
p[key]=map[key];
}
return quickr.share.util.writeParameters(p);
}else{
return quickr.share.util.writeParameters(map);
}
}else{
if(this.globalParameters){
return quickr.share.util.writeParameters(this.globalParameters);
}
}
return "";
},getHomeUrl:function(){
return dojo.getObject("quickr.share.config.homeUri");
},getUserChannelUrl:function(_538,opt){
var base=quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/personalplace/"+encodeURIComponent(_538);
var p={};
if(opt){
if(opt.type){
p.type=opt.type;
}
if(dojo.indexOf(["watchlist","activity","files","home"],opt.pivot)!=-1){
base+="/"+opt.pivot;
}
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.sort&&opt.sort!="updated"){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(dojo.indexOf(["public","private","shared"],opt.sharing)!=-1){
p.sharing=opt.sharing;
}
if(opt.tag){
p.tag=opt.tag;
}
if(opt.date){
p.date=opt.date;
}
}
return base+this.getQueryString(p);
},getUserWatchlistUrl:function(_53c,opt){
var base=quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/personalplace/"+encodeURIComponent(_53c)+"/watchlist";
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
}
return base+this.getQueryString(p);
},getUserActivityUrl:function(_540,opt){
var base=quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/personalplace/"+encodeURIComponent(_540)+"/activity";
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
}
return base+this.getQueryString(p);
},getUserSharesUrl:function(opt){
var base=quickr.share.Routes.BASE_PATH+quickr.share.Routes.ROOT+"/shares";
var p={};
if(opt){
if(opt.type){
p.type=opt.type;
}
if(dojo.indexOf(["withme","byme"],opt.pivot)!=-1){
p.pivot=opt.pivot;
}
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.sort&&opt.sort!="sharedAt"){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(dojo.indexOf(["public","private","shared"],opt.sharing)!=-1){
p.sharing=opt.sharing;
}
if(dojo.indexOf(["view","edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt.tag){
p.tag=opt.tag;
}
if(opt.date){
p.date=opt.date;
}
if(opt.byuser&&opt.byuser.id){
p.byuser=opt.byuser.id;
if(opt.byuser.name){
p.byusername=opt.byuser.name;
}
}
}
return base+this.getQueryString(p);
},getCommunityChannelUrl:function(_547){
var base=quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/community/"+encodeURIComponent(_547);
return base+this.getQueryString();
},getPersonalUserChannelUrl:function(){
var base=quickr.share.Routes.BASE_PATH+quickr.share.Routes.ROOT+"/home";
return base+this.getQueryString();
},getPersonalUserSharesUrl:function(){
return this.getUserSharesUrl();
},getUserChannelSortUrl:function(_54a,_54b){
return this.getUserChannelUrl(_54a,{sort:_54b});
},getUserChannelPrivateUrl:function(_54c,opt){
var p=opt||{};
p.visibility="private";
return this.getUserChannelUrl(_54c,p);
},getUserChannelPublicUrl:function(_54f,opt){
var p=opt||{};
p.visibility="public";
return this.getUserChannelUrl(_54f,p);
},getUserChannelSharedUrl:function(_552,opt){
var p=opt||{};
p.visibility="shared";
return this.getUserChannelUrl(_552,p);
},getUserChannelSharedWithMeUrl:function(_555,opt){
var p=opt||{};
p.visibility="myshared";
return this.getUserChannelUrl(_555,p);
},getUserChannelTaggedMediaUrl:function(_558,tag,opt){
var p=opt||{};
p.tag=(tag)?[tag]:null;
return this.getUserChannelUrl(_558,p);
},_getPersonRoot:function(_55c){
return quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/personalplace/"+encodeURIComponent(_55c);
},getUserChannelDateFilterUrl:function(_55d,_55e,opt){
return this.getUserChannelUrl({date:_55e,sort:(opt&&opt.sort?opt.sort:null)});
},getUserCreatePagesUrl:function(_560,opt){
return this._getPersonRoot(_560)+"/pages/create"+this.getQueryString(opt);
},getFileSummaryUrl:function(_562,_563,opt){
return this._getPersonRoot(_562)+"/file/"+encodeURIComponent(_563)+this.getQueryString(opt);
},getPageSummaryUrl:function(_565,_566,_567,opt){
if(_567){
return this._getPersonRoot(_565)+"/page/"+encodeURIComponent(_566)+"/version/"+encodeURIComponent(_567)+this.getQueryString(opt);
}
return this._getPersonRoot(_565)+"/page/"+encodeURIComponent(_566)+this.getQueryString(opt);
},getDraftSummaryUrl:function(_569,_56a,opt){
return this._getPersonRoot(_569)+"/draft/"+encodeURIComponent(_56a)+this.getQueryString(opt);
},getEditPageSummaryUrl:function(_56c,_56d){
return this._getPersonRoot(_56c)+"/page/"+encodeURIComponent(_56d)+this.getQueryString({edit:"true"});
},getEditDraftSummaryUrl:function(_56e,_56f){
return this._getPersonRoot(_56e)+"/draft/"+encodeURIComponent(_56f)+this.getQueryString({edit:"true"});
},getWikiComparisonUrl:function(_570,_571,opt){
return this._getPersonRoot(_570)+"/page/"+encodeURIComponent(_571)+"/version/compare"+this.getQueryString(opt);
},getWelcomeUrl:function(){
return quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+this.getQueryString();
},getGlobalHomeUrl:function(opt){
var p={};
var _575=this.isAuthenticatedUser();
if(opt){
if(typeof opt.authenticated!="undefined"){
_575=opt.authenticated==true;
}
if(dojo.indexOf(["global"],opt.pivot)!=-1){
p.pivot=opt.pivot;
}
}
var _576=(quickr.share.Routes.ROOT)+"/whatsnew";
return quickr.share.Routes.BASE_PATH+_576+this.getQueryString(p);
},getUserSearchUrl:function(_577,opt){
var p={};
if(_577){
p.usersearch=_577;
}
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
}
return quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/people"+this.getQueryString(p);
},getStatisticsUrl:function(){
return quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/statistics"+this.getQueryString();
},getToolsUrl:function(){
return quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/tools"+this.getQueryString();
},getAboutUrl:function(){
return quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/about"+this.getQueryString();
},getFAQUrl:function(){
return dojo.getObject("quickr.share.config.faqUri")||quickr.share.Routes.BASE_PATH+(quickr.share.Routes.ROOT)+"/faq"+this.getQueryString();
},getUserChannelSearchResultsUrl:function(user,text){
return this.getUserChannelUrl(user)+"/search/"+encodeURIComponent(text)+this.getQueryString();
},getAuthenticationUrl:function(){
return dojo.getObject("quickr.share.config.services.authenticationUri");
},getLogoutUrl:function(){
return dojo.getObject("quickr.share.config.services.logoutUri");
},_getBaseFileListServiceUrl:function(_57c,_57d){
var s;
if(_57d){
s=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.basicAuth.filestreamUri"):dojo.getObject("quickr.share.config.services.basicAuth.anonymousFilestreamUri");
}else{
s=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_57c?dojo.getObject("quickr.share.config.services.personalFilestreamUri"):dojo.getObject("quickr.share.config.services.filestreamUri")):dojo.getObject("quickr.share.config.services.anonymousFilestreamUri");
}
s=s.replace("{userId}",encodeURIComponent(_57c));
return s;
},_getBaseShareListServiceUrl:function(_57f,_580){
var s;
if(_580){
s=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.basicAuth.personalSharesFeedUri"):dojo.getObject("quickr.share.config.services.basicAuth.sharesFeedUri");
}else{
s=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_57f?dojo.getObject("quickr.share.config.services.personalSharesFeedUri"):dojo.getObject("quickr.share.config.services.sharesFeedUri")):dojo.getObject("quickr.share.config.services.sharesFeedUri");
}
return s;
},getFileListServiceUrl:function(_582,opt){
var url=this._getBaseFileListServiceUrl(_582,(opt&&opt.basicAuth));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
if(opt.sharing=="withme"){
p.direction="inbound";
}else{
if(opt.sharing=="byme"){
p.direction="outbound";
}
}
if(dojo.indexOf(["public","shared","private"],opt.visibility)!=-1){
p.visibility=opt.visibility;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(dojo.indexOf(["view","edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt.startDate){
p.dF=opt.startDate;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.notification===true||opt.notification=="on"){
p.notification="on";
}else{
if(opt.notification===false||opt.notification=="off"){
p.notification="off";
}
}
if(opt.defaultContents){
p.includeDefaultDocument=true;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.createVersion){
p.createVersion=true;
}
if(opt.source){
p.source=opt.source;
}
if(opt.draft){
p.draft=opt.draft;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},_getBaseLibraryEntryServiceUrl:function(_586){
var s=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_586?dojo.getObject("quickr.share.config.services.personalLibraryEntryUri"):dojo.getObject("quickr.share.config.services.libraryEntryUri")):dojo.getObject("quickr.share.config.services.anonymousLibraryEntryUri");
s=s.replace("{userId}",encodeURIComponent(_586));
return s;
},getLibraryEntryServiceUrl:function(_588,opt){
var url=this._getBaseLibraryEntryServiceUrl(_588);
var p={};
if(dojo.isIE){
p.format="xml";
}
return url+quickr.share.util.writeParameters(p);
},getShareListServiceUrl:function(_58c,opt){
var url=this._getBaseShareListServiceUrl(_58c,(opt&&opt.basicAuth));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.tag){
p.tag=opt.tag;
}
if(opt.sharing=="withme"){
p.direction="inbound";
if(opt.byuser){
p.sharedBy=opt.byuser;
}
}else{
if(opt.sharing=="byme"){
p.direction="outbound";
if(opt.byuser){
p.sharedWith=opt.byuser;
}
}
}
if(dojo.indexOf(["public","shared","private"],opt.visibility)!=-1){
p.visibility=opt.visibility;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(dojo.indexOf(["View","Edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt.startDate){
p.dF=opt.startDate;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
p.sC=opt.sortCategory;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},_getFileFeedServiceUrl:function(_590,_591,_592){
var s;
if(_592){
s=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.basicAuth.fileFeedUri"):dojo.getObject("quickr.share.config.services.basicAuth.anonymousFileFeedUri");
}else{
s=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_590?dojo.getObject("quickr.share.config.services.personalFileFeedUri"):dojo.getObject("quickr.share.config.services.fileFeedUri")):dojo.getObject("quickr.share.config.services.anonymousFileFeedUri");
}
s=s.replace("{userId}",encodeURIComponent(_590));
s=s.replace("{fileId}",encodeURIComponent(_591));
return s;
},_getDraftFeedServiceUrl:function(_594,_595,_596){
var s;
if(_596){
s=dojo.getObject("quickr.share.config.services.basicAuth.draftFeedUri");
}else{
s=this.getAuthenticatedUser().id==_594?dojo.getObject("quickr.share.config.services.personalDraftFeedUri"):dojo.getObject("quickr.share.config.services.draftFeedUri");
}
s=s.replace("{userId}",encodeURIComponent(_594));
s=s.replace("{draftId}",encodeURIComponent(_595));
return s;
},getAttachmentListServiceUrl:function(_598,_599,opt){
var url=this._getFileFeedServiceUrl(_598,_599);
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getDraftAttachmentListServiceUrl:function(_59d,_59e,opt){
var url=this._getDraftFeedServiceUrl(_59d,_59e);
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getVersionListServiceUrl:function(_5a2,_5a3,opt){
var url=this._getFileFeedServiceUrl(_5a2,_5a3);
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.category){
p.category=opt.category;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.deleteFrom){
p.deleteFrom=opt.deleteFrom;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getCommentListServiceUrl:function(_5a7,_5a8,opt){
var url=this._getFileFeedServiceUrl(_5a7,_5a8,(opt&&opt.basicAuth));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.sortKey){
p.sK=opt.sortKey;
}
if(opt.sortOrder){
p.sO=opt.sortOrder;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},_getBaseWatchlistServiceUrl:function(_5ac){
var s=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5ac?dojo.getObject("quickr.share.config.services.personalFilestreamUri"):dojo.getObject("quickr.share.config.services.filestreamUri")):dojo.getObject("quickr.share.config.services.anonymousFilestreamUri");
s=s.replace("{userId}",encodeURIComponent(_5ac));
return s;
},getWatchlistServiceUrl:function(_5ae,opt){
var url=this._getBaseWatchlistServiceUrl(_5ae);
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getVersionInfoServiceUrl:function(_5b2,_5b3,_5b4,opt){
var url=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5b2?dojo.getObject("quickr.share.config.services.personalFileUri"):dojo.getObject("quickr.share.config.services.fileUri")):dojo.getObject("quickr.share.config.services.anonymousFileUri");
url=url.replace("{userId}",encodeURIComponent(_5b2)).replace("{fileId}",encodeURIComponent(_5b3));
var p={};
if(opt&&typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt&&opt.fetchAcl){
p.acls=true;
}
if(opt.inline){
p.inline=true;
}
p.versionUuid=encodeURIComponent(_5b4);
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWorkingDraftsServiceUrl:function(opt){
var url=dojo.getObject("quickr.share.config.services.privateDraftsFeed.auth");
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}else{
p.pageSize=dojo.getObject("quickr.share.config.autosave.numRetrievedUnsavedChanges");
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.includeDocumentAuthorInfo){
p.includeDocumentAuthorInfo=true;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getDraftInfoServiceUrl:function(_5bb,_5bc,opt){
var url=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5bb?dojo.getObject("quickr.share.config.services.draftEntry.personal"):dojo.getObject("quickr.share.config.services.draftEntry.auth")):dojo.getObject("quickr.share.config.services.draftEntry.anon");
url=url.replace("{userId}",encodeURIComponent(_5bb)).replace("{draftId}",encodeURIComponent(_5bc));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.includeNotification){
p.includeNotification=true;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.includeRecommendation){
p.includeRecommendation=true;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.submit){
p.submit=true;
}
if(opt.inline){
p.inline=true;
}
if(opt.shares){
p.metadata="full";
}
if(opt.includeDocumentModifiedInfo){
p.includeDocumentModifiedInfo=true;
}
if(opt.includeDocumentAuthorInfo){
p.includeDocumentAuthorInfo=true;
}
if(opt.source){
p.source=opt.source;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getFileInfoServiceUrl:function(_5c0,_5c1,opt){
var url=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5c0?dojo.getObject("quickr.share.config.services.personalFileUri"):dojo.getObject("quickr.share.config.services.fileUri")):dojo.getObject("quickr.share.config.services.anonymousFileUri");
url=url.replace("{userId}",encodeURIComponent(_5c0)).replace("{fileId}",encodeURIComponent(_5c1));
var p={};
if(opt){
if(opt.includeWorkingDraftInfo){
p.includeWorkingDraftInfo=true;
}
if(opt.fetchAcl){
p.acls=true;
}
if(opt.includeNotification){
p.includeNotification=true;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.includeRecommendation){
p.includeRecommendation=true;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.submit){
p.submit=true;
}
if(opt.inline){
p.inline=true;
}
if(opt.shares){
p.metadata="full";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getFileShareListServiceUrl:function(_5c5,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.sharesFeedUri"):dojo.getObject("quickr.share.config.services.anonymousSharesFeedUri");
var p={};
p.sharedWhat=_5c5;
if(opt){
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.user){
p.sharedWith=opt.user;
}
if(opt.demote){
p.sharePermission="View";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getFileDownloadInfoServiceUrl:function(_5c9,_5ca,opt){
var url=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5c9?dojo.getObject("quickr.share.config.services.personalFileDownloadInfoUri"):dojo.getObject("quickr.share.config.services.fileDownloadInfoUri")):dojo.getObject("quickr.share.config.services.anonymousFileDownloadInfoUri");
url=url.replace("{userId}",encodeURIComponent(_5c9)).replace("{fileId}",encodeURIComponent(_5ca));
var p={format:"json"};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
}
return url+quickr.share.util.writeParameters(p);
},getFileUsersSharedWithUrl:function(_5ce,_5cf,opt){
var url=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5ce?dojo.getObject("quickr.share.config.services.personalFileUsersSharedWithUri"):dojo.getObject("quickr.share.config.services.fileUsersSharedWithUri")):dojo.getObject("quickr.share.config.services.anonymousFileUsersSharedWithUri");
url=url.replace("{userId}",encodeURIComponent(_5ce)).replace("{fileId}",encodeURIComponent(_5cf));
var p={format:"json"};
if(opt){
if(opt.sharePermission){
p.sharePermission=opt.permission;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
}
return url+quickr.share.util.writeParameters(p);
},getPersonalFileShareListServiceUrl:function(_5d3,opt){
var url=dojo.getObject("quickr.share.config.services.personalFileShareFeedUri");
var p={};
p.sharedWhat=_5d3;
if(opt){
if(dojo.indexOf(["View","Edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt&&typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},_getFileShareGraphServiceUrl:function(_5d7,_5d8){
var s=this.isAuthenticatedUser()?(this.getAuthenticatedUser().id==_5d7?dojo.getObject("quickr.share.config.services.personalFileShareGraphUri"):dojo.getObject("quickr.share.config.services.fileShareGraphUri")):dojo.getObject("quickr.share.config.services.anonymousFileShareGraphUri");
s=s.replace("{userId}",encodeURIComponent(_5d7));
s=s.replace("{fileId}",encodeURIComponent(_5d8));
return s;
},getFileShareGraphServiceUrl:function(_5da,_5db,opt){
var url=this._getFileShareGraphServiceUrl(_5da,_5db);
var p={format:"json"};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.includeDownload){
p.includeDownload=opt.includeDownload;
}
}
return url+quickr.share.util.writeParameters(p);
},getNewEventsServiceUrl:function(opt){
var url;
if(opt&&opt.basicAuth){
url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.basicAuth.newEventsUri"):dojo.getObject("quickr.share.config.services.basicAuth.anonymousNewEventsUri");
}else{
url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.newEventsUri"):dojo.getObject("quickr.share.config.services.anonymousNewEventsUri");
}
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getUserProfileUrl:function(user,opt){
var url=dojo.getObject("quickr.share.config.services.userProfileUri");
if(url){
url=url.replace("{userId}",encodeURIComponent(user.id)).replace("{email}",encodeURIComponent(user.email));
}
return url;
},getUserInfoServiceUrl:function(_5e5){
if(_5e5){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.personUri"):dojo.getObject("quickr.share.config.services.anonymousPersonUri");
var p={userid:_5e5,format:"json"};
return url+this.getQueryString(p);
}
var url=dojo.getObject("quickr.share.config.services.personUri");
var p={self:true,format:"json"};
return url+this.getQueryString(p);
},getUserPhotoUrl:function(user){
var url=dojo.getObject("quickr.share.config.services.userPhotoUri");
if(!url){
return null;
}
if(url.indexOf("{email}")!=-1&&quickr.share.util.trim(user.email).length==0){
return null;
}
return url.replace("{userId}",encodeURIComponent(user.id)).replace("{uid}",encodeURIComponent(user.id)).replace("{email}",encodeURIComponent(user.email));
},getTypeAheadUserServiceUrl:function(_5ea){
return this.getUserSearchServiceUrl(_5ea,{useAnon:true});
},getUserSearchServiceUrl:function(_5eb,opt){
var url=(this.isAuthenticatedUser()&&(!opt||!opt.useAnon))?dojo.getObject("quickr.share.config.services.personUri"):dojo.getObject("quickr.share.config.services.anonymousPersonUri");
var p={searchString:_5eb,format:"json"};
if(opt){
if(opt.directory){
p.searchType="directory";
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.includeExtendedAttributes){
p.includeExtendedAttributes=true;
}
}
return url+this.getQueryString(p);
},getHelpTopicUrl:function(_5ef){
var p={topic:_5ef};
return quickr.share.Routes.BASE_PATH+"service/tip"+this.getQueryString(p);
},getFileTypeImageUrl:function(_5f1,size){
return quickr.share.Routes.BASE_PATH+"service/fileicon/"+encodeURIComponent(size||16)+"/"+encodeURIComponent(_5f1);
},getPageImageUrl:function(size){
if(!size){
size="16";
}
return quickr.share.Routes.BASE_PATH+"images/filetypes/page_"+encodeURIComponent(size)+".gif";
},getWikiComparisonServiceUrl:function(_5f4,toId,_5f6){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiComparisonUri"):dojo.getObject("quickr.share.config.services.anonymousWikiComparisonUri");
var p={diffParent:_5f4,input1:toId,input2:_5f6};
if(dojo.isIE){
p.format="xml";
}
return url+this.getQueryString(p);
},getWikiConversionServiceUrl:function(){
var url=dojo.getObject("quickr.share.config.services.wikiConversionUri");
var p={};
if(dojo.isIE){
p.format="xml";
}
return url+this.getQueryString(p);
},getTagTypeAheadServiceUrl:function(_5fb){
var url=dojo.getObject("quickr.share.config.services.tagServiceUri");
var p={filter:_5fb,format:"json",pageSize:15};
return url+quickr.share.util.writeParameters(p);
},getTagServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.tagServiceUri"):dojo.getObject("quickr.share.config.services.anonymousTagServiceUri");
var p={format:"json",scope:"document",sK:"cloud",sO:"dsc"};
if(opt){
if(opt.libraryId){
p.libraryId=opt.libraryId;
}
if(opt.userLibrary){
p.userLibrary=opt.userLibrary;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
}
return url+quickr.share.util.writeParameters(p);
},getRecommendServiceUrl:function(_601,_602){
var _603=this.getAuthenticatedUser();
if(!_603){
return null;
}
var s=_603.id==_601?dojo.getObject("quickr.share.config.services.personalRecommendationsUri"):dojo.getObject("quickr.share.config.services.recommendationsUri");
s=s.replace("{libraryId}",encodeURIComponent(_601));
s=s.replace("{fileId}",encodeURIComponent(_602));
s=s.replace("{userId}",encodeURIComponent(_603.id));
return s;
},getRecommendPeopleFeedUrl:function(_605,_606,opt){
var url=this.getAuthenticatedUser()?((this.getAuthenticatedUser().id==_605)?dojo.getObject("quickr.share.config.services.personalRecommendationsPeopleFeedUri"):dojo.getObject("quickr.share.config.services.recommendationsPeopleFeedUri")):dojo.getObject("quickr.share.config.services.anonymousRecommendationsPeopleFeedUri");
url=url.replace("{userId}",encodeURIComponent(_605));
url=url.replace("{fileId}",encodeURIComponent(_606));
var p={format:"json"};
if(opt){
if(opt.sharePermission){
p.sharePermission=opt.permission;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
}
return url+quickr.share.util.writeParameters(p);
},getAuthenticatedUser:function(){
return null;
},isAuthenticatedUser:function(_60a){
var u=this.getAuthenticatedUser();
if(!_60a){
return typeof u=="object"&&u!=null;
}
return u&&u.id==_60a;
}});
quickr.share.Routes.BASE_PATH=(dojo.getObject("quickr.share.config.baseUri")||"/");
quickr.share.Routes.ROOT="app";
quickr.share.Routes.getPathInfo=function(uri){
if(!uri){
return "/";
}
if(typeof uri=="string"){
uri=new dojo._Url(uri);
}
var path=uri.path;
if(!path||path.length==0){
return "/";
}
var base=path.indexOf(quickr.share.Routes.BASE_PATH);
if(base!=-1){
var end=base+quickr.share.Routes.BASE_PATH.length;
if(end<path.length){
if(path.substring(end,end+1)=="/"){
return path.substring(end);
}
}
}
return "/";
};
}
if(!dojo._hasResource["quickr.share.util.history"]){
dojo._hasResource["quickr.share.util.history"]=true;
dojo.provide("quickr.share.util.history");
quickr.share.util.history={init:function(){
if(this.inited){
return;
}
this.inited=true;
if(dojo.isIE){
var body=dojo.body();
var d=body.ownerDocument;
var _612=d.getElementById("history");
if(_612){
_612.onload=quickr.share.util.history.onload;
try{
_612.writingState=true;
var _613=_612.contentWindow.document;
_613.open();
_613.write("<html><body><div id=\"state\">");
var _614=window.location.href.split("#");
if(_614.length>1){
_613.write("#"+window.location.href.split("#")[1]);
}
_613.write("</div></body></html>");
_613.close();
}
catch(e){
console.log("unable to write the original state to the history iframe");
}
}else{
var _615=(djConfig["dojoBlankHtmlUrl"]||dojo.moduleUrl("dojo","resources/blank.html"));
d.write("<iframe onload=\"quickr.share.util.history.onload(this);\" style=\"border:0;width:1px;height:1px;position:absolute;visibility:hidden;bottom:0;right:0;\" name=\"history\" title=\"history\" id=\"history\" src=\""+_615+"\"></iframe>");
}
}
this.start();
dojo.connect(window,"onunload",this,"stop");
},onload:function(){
if(!this.inited){
console.log("history.js not initialized");
return;
}
var _616=document.getElementById("history");
if(_616.writingState){
_616.writingState=false;
return;
}
var _617=_616.contentWindow;
var _618=_617.document;
var _619=_618.getElementById("state");
if(_619){
this._trackHash=window.location.hash=_619.innerText;
this.onchange(window.location.href);
}
},add:function(url){
var _61b=!quickr.share.util.history.isUrlEqual(url,window.location.href);
window.location.href=url;
if(dojo.isIE){
var _61c=document.getElementById("history");
if(_61c){
_61c.writingState=true;
var _61d=_61c.contentWindow.document;
_61d.open();
_61d.write("<html><body><div id=\"state\">");
var _61e=window.location.href.split("#");
if(_61e.length>1){
_61d.write("#"+window.location.href.split("#")[1]);
}
_61d.write("</div></body></html>");
_61d.close();
}else{
console.log("history.js not initialized");
}
}
this.start();
if(!_61b){
this.onchange(url);
}
},isUrlEqual:function(a,b){
var a=quickr.share.util.parseUri(a);
var b=quickr.share.util.parseUri(b);
return ((a.scheme==null||b.scheme==null||a.scheme==b.scheme)&&(a.host==null||b.host==null||a.host==b.host)&&a.path==b.path&&a.query==b.query);
},start:function(){
if(!this.inited){
console.log("history.js not initialized");
return;
}
if(!this.urlTracker){
this._trackHash=window.location.hash;
this._trackCallback=dojo.hitch(this,this.checkUrl);
this._trackTimeout=setTimeout(this._trackCallback,75);
}
},stop:function(){
if(!this.inited){
console.log("history.js not initialized");
return;
}
if(this._trackTimeout){
clearTimeout(this._trackTimeout);
}
this._trackTimeout=null;
},checkUrl:function(){
if(!this.inited){
console.log("history.js not initialized");
return;
}
if(window.location.hash!=this._trackHash){
this._trackHash=window.location.hash;
this.onchange(window.location.href);
}
this._trackTimeout=setTimeout(this._trackCallback,75);
},onchange:function(url){
}};
}
if(!dojo._hasResource["quickr.share.util.OperationMonitor"]){
dojo._hasResource["quickr.share.util.OperationMonitor"]=true;
dojo.provide("quickr.share.util.OperationMonitor");
dojo.declare("quickr.share.util.OperationMonitor",null,{url:null,timeout:10,interval:30,maxFailures:1,attempts:2,maxAttempts:-1,validStatusCodes:[200],constructor:function(opt){
dojo.mixin(this,opt);
},start:function(){
this.cancel();
this.failed=this.attempts=0;
this._scheduled=setTimeout(dojo.hitch(this,this._connect),this.interval*1000);
},cancel:function(){
if(this._xhr){
this._xhr.cancel();
}
this._xhr=null;
if(this._scheduled){
clearTimeout(this._scheduled);
this._scheduled=null;
}
},onInterval:function(_623,_624){
},onFailure:function(_625){
},isCancel:function(_626,_627){
return (_626&&_626.dojoType=="cancel");
},isFailure:function(_628,_629){
if(_629.xhr&&dojo.indexOf(this.validStatusCodes,_629.xhr.status)!=-1){
return false;
}
return (!_628||_628 instanceof Error);
},_connect:function(){
this.cancel();
this.attempts++;
var opts={url:this.url,handleAs:"text",noStatus:true,timeout:this.timeout*1000,handle:dojo.hitch(this,this._complete)};
dojo.mixin(opts,this.ioArgs||{});
this._xhr=this.net.get(opts);
},_complete:function(_62b,_62c){
if(this.isCancel(_62b,_62c)){
return;
}else{
if(this.isFailure(_62b,_62c)){
this.failed++;
if(this.failed>=this.maxFailures){
this.onFailure(this.failed);
return;
}
}else{
this.failed=0;
if(this.onInterval){
this.onInterval(_62b,_62c);
}
}
}
if(this.maxAttempts>0&&this.attempts>=this.maxAttempts&&this.failed<1){
return;
}
this._scheduled=setTimeout(dojo.hitch(this,this._connect),this.interval*1000);
}});
}
if(!dojo._hasResource["quickr.share.util.FormLogin"]){
dojo._hasResource["quickr.share.util.FormLogin"]=true;
dojo.provide("quickr.share.util.FormLogin");
dojo.declare("quickr.share.util.FormLogin",null,{url:null,urlLogout:null,authenticationId:"X-Qkr-Authenticated",constructor:function(opt){
dojo.mixin(this,opt);
},login:function(){
this._loginInProgress=true;
delete this._internalTriggeredLogout;
delete this.loginArguments;
var _62e,_62f;
dojo.xhrGet({url:this.url,handleAs:"text",handle:function(r,io){
_62e=r;
_62f=io;
},sync:true});
if(_62f.xhr&&_62f.xhr.getResponseHeader("X-Qkr-Authenticated")){
console.log("FormLogin::login DEBUG user is already authenticated");
this._internalTriggeredLogout=true;
this.loginArguments=arguments;
this.display("_renderLogout");
}else{
console.log("FormLogin::login DEBUG user must authenticate");
this.loginArguments=arguments;
this.display(dojo.hitch(this,this._renderLogin,this.url),true);
}
},logout:function(){
delete this._internalTriggeredLogout;
if(!this.urlLogout){
throw "Need a logout url";
}
this.display("_renderLogout");
},cancel:function(){
this.hide();
this._loginInProgress=false;
var f=this.loginArguments;
delete this.loginArguments;
this.onError.apply(this,f);
},waitingForLogin:function(){
return this._loginInProgress;
},display:function(_633,_634){
this.remove();
this.waitingFor=_633;
var d=document;
var _636=(djConfig["dojoBlankHtmlUrl"]||dojo.moduleUrl("dojo","resources/blank.html"));
var _637=this.frameNode=(dojo.isIE)?d.createElement("<iframe name=\"login\" src=\""+_636+"\" onload=\"quickr.share.util.FormLogin.onload();\" frameborder=\"0\">"):d.createElement("IFRAME");
_637.title=_637.name=_637.id="login";
_637.className="qkrLoginFrame";
_637.style.visibility="hidden";
_637.tabIndex="0";
dojo.attr(_637,"wairole","dialog");
dojo.attr(_637,"role","wairole:dialog");
_637.src=_636;
quickr.share.util.FormLogin.onload=_637.onload=dojo.hitch(this,this._onload);
d.body.appendChild(_637);
if(_634){
this.show();
}
},updateFrame:function(html){
var _639=this.getFrameDocument();
_639.open();
_639.write(html);
_639.close();
},getFrameDocument:function(){
return quickr.share.util.getFrameDocument(this.frameNode);
},_fixScroll:function(){
window.scrollTo(0,0);
var e=document.documentElement;
var b=document.body;
e.style.overflow="hidden";
e.style.height="100%";
b.style.width=b.style.height="100%";
var _63c=this.frameNode;
dojo.forEach(document.body.childNodes,function(node){
if(node!=_63c&&node.nodeType==1){
dojo.addClass(node,"qkrLoginHidden");
}
});
},_unfixScroll:function(){
var e=document.documentElement;
var b=document.body;
e.style.overflow="";
e.style.height="";
b.style.width=b.style.height="";
dojo.forEach(document.body.childNodes,function(node){
if(node.nodeType==1){
dojo.removeClass(node,"qkrLoginHidden");
}
});
},show:function(){
var _641=this.frameNode;
_641.style.top="0px";
_641.style.left="0px";
_641.style.width=_641.style.height="";
this._fixScroll();
_641.style.visibility="visible";
},hide:function(){
var _642=this.frameNode;
_642.style.visibility="hidden";
_642.style.top="-9999px";
_642.style.width=_642.style.height="1px";
this._unfixScroll();
},remove:function(){
var _643=this.frameNode;
if(_643){
_643.parentNode.removeChild(_643);
this.frameNode=null;
}
this._unfixScroll();
this.loaded=false;
this.waitingFor=null;
},_onload:function(){
var _644=this.frameNode;
if(!_644){
console.log("FormLogin::_onload DEBUG can't find the iframe on the page");
return;
}
var _645=this.waitingFor;
delete this.waitingFor;
var _646=this.getFrameDocument();
try{
if(!_646||!_646.body){
throw "IFRAME contents don't exist";
}
}
catch(e){
console.log("FormLogin::_onload DEBUG unable to load login, assuming we are accessing a protected resource: "+e);
this.loaded=true;
this.waitingFor=_645;
return;
}
if(this.loaded&&_646&&_646.body&&dojo.some(_646.getElementsByTagName("meta"),function(el){
return el.name=="X-Blank-Html"&&el.content=="true";
})){
console.log("FormLogin::_onload DEBUG the page is empty, assuming the user went back to the original blank page");
this.cancel();
return;
}
this.loaded=true;
if(typeof _645=="function"){
_645.apply(this,[]);
}else{
if(typeof _645=="string"){
var f=_645;
if(typeof this[f]=="function"){
this[f]();
}
}
}
},_renderLogin:function(url){
this.waitingFor="_authenticated";
this.getFrameDocument().location.href=url;
},_authenticated:function(){
var _64a=quickr.share.util.getFrameDocument(this.frameNode);
if(_64a.getElementById(this.authenticationId)){
this.hide();
var args=this.loginArguments;
delete this.loginArguments;
this.onLogin.apply(this,args);
}else{
this.waitingFor="_authenticated";
}
},_renderLogout:function(){
this.hide();
this.waitingFor=(dojo.isIE)?"_logoutInvoke":"_logout";
this.updateFrame("<form id=\"logout\" method=\"POST\" action=\""+this.urlLogout+"\"><input type=\"submit=\" name=\"logout\" value=\"Log out\"></form>");
if(dojo.isIE){
return;
}
this._logoutInvoke();
},_logoutInvoke:function(){
this.waitingFor="_logout";
var form=this.getFrameDocument().getElementById("logout");
form.submit();
},_logout:function(){
this.hide();
if(!this._internalTriggeredLogout){
this.onLogout();
}else{
this.display(dojo.hitch(this,this._renderLogin,this.url));
}
},onLogin:function(){
this._loginInProgress=false;
},onLogout:function(){
this._loginInProgress=false;
},onError:function(){
this._loginInProgress=false;
}});
quickr.share.util.FormLogin.onload=null;
}
if(!dojo._hasResource["quickr.share.App"]){
dojo._hasResource["quickr.share.App"]=true;
dojo.provide("quickr.share.App");
dojo.declare("quickr.share.App",null,{activeTipSet:1,loadRecursion:0,isSemTagSvcInited:false,_cWork:0,constructor:function constructor(_64d,url){
this.document=this.d=_64d;
var _64f=this.routes=this.initRoutes();
_64f.getAuthenticatedUser=dojo.hitch(this,this.getAuthenticatedUser);
this.prefs=new quickr.share.util.Preferences({path:dojo.getObject("quickr.share.config.baseUriPath")||"/"});
var _650=_64d.getElementsByTagName("body")[0];
if(dojo.hasClass(_650,"dijit_a11y")){
dojo.addClass(_650,"lotusImagesOff");
}
var _651=quickr.share.util.getRequestParameters(url);
var lang=this.language=dojo.getObject("quickr.share.config.formattingLanguageParam")||dojo.getObject("djConfig.locale")||"en";
this.routes.globalParameters={lang:lang};
this.formLogin=new quickr.share.util.FormLogin({url:_64f.getAuthenticationUrl(),urlLogout:_64f.getLogoutUrl()});
dojo.connect(this.formLogin,"onLogin",this,"onLogin");
dojo.connect(this.formLogin,"onLogout",this,"onLogout");
dojo.connect(this.formLogin,"onError",this,"onLoginError");
dojo.connect(dojo,"xhrBegin",this,"working");
dojo.connect(dojo,"xhrEnd",this,"idle");
dojo.connect(quickr.share.util.history,"onchange",this,"load");
this.urlState=url;
},start:function(url){
this.onApplicationStart();
try{
this.authenticatedUser=this._loadAuthentication();
}
catch(e){
this.showAuthenticationError(e);
return;
}
this._initScene(url||this.urlState);
},onApplicationStart:function(){
},initRoutes:function(){
},getAuthenticatedUser:function(){
return this.authenticatedUser;
},_loadAuthentication:function(){
var _654,_655;
dojo.xhrGet({url:this.routes.getUserInfoServiceUrl(),handleAs:"json-comment-optional",secured:false,handle:function(r,io){
_654=r;
_655=io;
},sync:true});
var _658=quickr.share.util.getAtomError(_654,_655);
if(_658&&_658.code!="unknown"){
console.log("App::_loadAuthentication DEBUG user is not authenticated code="+_658.code);
throw _658;
}else{
if(!_654||!_654.items||_654.items.length==0){
console.log("App::_loadAuthentication DEBUG user is not authenticated");
return null;
}else{
var user=quickr.share.scenes.createUser(this,_654.items[0]);
console.log("App::_loadAuthentication DEBUG user is authenticated id="+user.id);
return user;
}
}
},getUrl:function(){
return this.urlState;
},_initScene:function(url,_65b){
if(url){
this.load(url);
}else{
this.load((this._getDefaultSceneFunction(_65b.id))(this));
}
},login:function(){
var e=quickr.util.misc.last(arguments);
if(quickr.util.html.isEvent(e)){
dojo.stopEvent(e);
}
if(this.scene&&this.scene.onlogin&&this.scene.onlogin()){
return;
}
this.formLogin.login.apply(this.formLogin,arguments);
},logout:function(){
var args=dojo._toArray(arguments).slice(2);
var e=quickr.util.misc.last(args);
if(quickr.util.html.isEvent(e)){
dojo.stopEvent(e);
}
if(this.scene&&this.scene.onlogout&&this.scene.onlogout()){
return;
}
var f=dojo.getObject("quickr.share.config.logout");
if(typeof f=="function"){
f.apply(this,args);
}else{
this.formLogin.logout.apply(this.formLogin,args);
}
},onLogin:function(){
var _660=this.authenticatedUser;
try{
this.authenticatedUser=this._loadAuthentication();
}
catch(e){
this.showAuthenticationError(e);
return;
}
var _661=this.authenticatedUser;
if(!_661){
console.log("App::onLogin DEBUG got notified of authentication, but somehow failed");
this.onUserReset();
}else{
if(_660){
if(_660.id!=_661.id){
console.log("App::onLogin DEBUG authenticated user has changed, return to welcome page");
this.onUserReset();
}else{
console.log("App::onLogin DEBUG authenticated user is same as old user, no action necessary");
this.onUserReauthenticated();
}
}else{
console.log("App::onLogin DEBUG authenticated user has changed, not authenticated before");
this.onUserLogin();
}
}
},onLogout:function(){
var _662=this.authenticatedUser;
try{
this.authenticatedUser=this._loadAuthentication();
}
catch(e){
this.showAuthenticationError(e);
return;
}
var _663=this.authenticatedUser;
if(_663){
console.log("App::onLogout DEBUG user logged out but is now reported as logged in");
return;
}
this.onUserReset();
},onLoginError:function(){
console.log("App::onLogin DEBUG authentication error");
if(typeof arguments[0]=="function"){
arguments[0]();
}
},onUserLogin:function(){
},onUserReauthenticated:function(){
},onUserReset:function(){
},waitingForLogin:function(){
return this.formLogin.waitingForLogin();
},navigate:function(url){
if(this.scene&&this.scene.onnavigate&&this.scene.onnavigate(url)){
return;
}
var _665=false;
quickr.share.util.history.stop();
if(_665){
this.load(url);
}else{
if(dojo.getObject("quickr.share.config.disableLinkNavigation")){
url=quickr.share.util.toAnchorForm(url,[quickr.share.Routes.BASE_PATH+quickr.share.Routes.ROOT],{"lang":this.language});
quickr.share.util.history.add(url);
}else{
window.location.href=url;
}
}
},load:function(_666){
try{
this.working();
if(typeof _666=="string"){
_666=quickr.share.util.fromAnchorForm(_666,[quickr.share.Routes.BASE_PATH+quickr.share.Routes.ROOT]);
this.urlState=_666;
var _667=this._decodeState(_666);
if(_667.requireAuthentication&&!this.authenticatedUser){
this.login(dojo.hitch(this,this.protectedLoad,_666));
this.idle();
return;
}
if(this.scene&&this.scene.refresh&&this.scene.refresh(_667)){
console.log("App::load DEBUG scene refreshed");
this.idle();
return;
}
var _668=this._getSceneFunction(_667.id)||this._getDefaultSceneFunction(_667.id);
_666=new _668(this,_667);
}
if(_666){
if(this.loadRecursion>10){
throw "Scene load loop (scenes redirecting to other scenes)";
}
var _669={};
for(var key in dijit.registry._hash){
_669[key]=dijit.registry._hash[key];
}
var _66b=this.scene;
if(_66b){
try{
_66b.end(_666);
}
catch(e){
console.error(e);
}
}
this.scene=_666;
var url=_666.begin(_66b);
if(url){
this.loadRecursion++;
this.navigate(url);
return;
}else{
this.loadRecursion=0;
}
this.onSceneChange();
for(var key in _669){
delete _669[key];
}
}
}
catch(e){
this.idle();
console.error(e);
quickr.share.scenes.applyApplicationError(this);
if(dojo.isIE){
throw e;
}
}
this.idle();
},protectedLoad:function(_66d){
if(!this.authenticatedUser){
this.showLoginRequiredError();
}else{
this.load(_66d);
}
},_decodeState:function(url){
var _66f={};
var _670=quickr.share.util.parseUri(url).queryParameters;
_66f.parameters=_670;
return _66f;
},onSceneChange:function(){
window.scrollTo(0,0);
},_getSceneFunction:function(id){
if(!id){
return null;
}
var dj=dojo;
dj.require(id);
var func=dojo.getObject(id);
return func;
},working:function(){
this.d.body.style.cursor="progress";
this._cWork++;
},idle:function(_674){
if(--this._cWork<1||_674){
this._cWork=0;
this.d.body.style.cursor="";
}
},activateHelp:function(){
},showAuthenticationError:function(){
quickr.share.scenes.applyApplicationError(this);
},showLoginRequiredError:function(){
quickr.share.scenes.applyApplicationError(this);
},reload:function(){
var _675=this.scene;
try{
_675.end();
_675.begin();
}
catch(e){
console.error(e);
quickr.share.scenes.applyApplicationError(this);
if(dojo.isIE){
throw e;
}
}
}});
quickr.share.App.onload=function onload(_676,app){
var dj=_676["dojo"];
quickr.share.util.history.init();
if(!app){
throw "Unable to find an application to load";
}
try{
dj.require(app);
var _679=dj.getObject(app);
var app=new _679(document,_676.location.href);
if(!_676["pe"]){
_676.pe=app;
}
app.start();
}
catch(e){
console.log("unable to load application");
throw e;
}
};
}
if(!dojo._hasResource["quickr.util.text"]){
dojo._hasResource["quickr.util.text"]=true;
dojo.provide("quickr.util.text");
quickr.util.text={possessive:function(s){
if(s&&s[s.length-1]!="s"){
s+="'s";
}else{
s+="'";
}
return s;
},getExtension:function(s){
if(!s){
return "";
}
var i=s.lastIndexOf(".");
if(i!=-1){
return s.substring(i+1).toLowerCase();
}
return "";
},trimExtension:function(s){
if(!s){
return "";
}
var i=s.lastIndexOf(".");
if(i!=-1){
return s.substring(0,i);
}
return s;
},getFilename:function(s){
if(!s){
return "";
}
var i=s.lastIndexOf("\\");
var j=s.lastIndexOf("/");
if(i==j){
return s;
}
i=Math.max(i,j);
return s.substring(i+1);
},trimToLength:function(s,_683,_684){
if(!s){
return "";
}
s=quickr.util.text.trimEnd(s);
var _685="...";
if(_684>0){
var _686=s.split(/\s/);
for(var i=0;i<_686.length;i++){
if(_686[i].length>_684){
var l=s.indexOf(_686[i])+_684;
if(l>_683){
break;
}
return quickr.util.text.trimEnd(s.substring(0,l-_685.length))+_685;
}
}
}
if(s.length>_683){
s=quickr.util.text.trimEnd(s.substring(0,_683-_685.length))+_685;
}
return s;
},trim:function(s){
if(!s){
return "";
}
var e=/^\s*(.*?)\s*$/.exec(s+"");
return e?e[1]:s;
},trimEnd:function(s){
if(!s){
return "";
}
s+="";
s=/^(.*?)\s*$/.exec(s)[1];
return s;
},parseInt:function(s,def){
def=def||0;
if(!s){
return def;
}
var a=parseInt(s);
return isNaN(a)?def:a;
},parseFloat:function(s,def){
def=def||0;
if(!s){
return def;
}
var a=parseFloat(s);
return isNaN(a)?def:a;
},formatSize:function(){
var nls,size;
if(arguments.length==2){
nls=arguments[0];
size=arguments[1];
}else{
size=arguments[0];
}
if(typeof size=="undefined"||size==null||typeof size=="string"){
return size;
}
var nls=nls||dojo.i18n.getLocalization("quickr.share.wiki","wiki").SIZE;
if(size>10*1024*1024){
return dojo.string.substitute(nls.MB,[dojo.number.format(Math.floor(size*10/(1024*1024))/10)]);
}else{
if(size>1*1024*1024){
return dojo.string.substitute(nls.MB,[dojo.number.format(Math.floor(size*100/(1024*1024))/100)]);
}else{
if(size>1*1024){
return dojo.string.substitute(nls.KB,[dojo.number.format(Math.floor(size/1024))]);
}
}
}
return dojo.string.substitute(nls.B,[dojo.number.format(size)]);
},lengthUtf8:function(s){
var _695=0;
var _696=encodeURIComponent(s);
var _697=_696.length;
for(var i=0;i<_697;i++){
_695++;
if(_696.charAt(i)=="%"){
i+=2;
}
}
return _695;
},getCharIndexForUtf8Index:function(s,_69a){
var _69b=0;
var _69c=s.length;
for(var i=0;i<_69c;i++){
var c=s.charAt(i);
var _69f=encodeURIComponent(c);
if(_69f.length>2){
_69b+=_69f.length/3;
}else{
_69b++;
}
if(_69b>_69a){
return i;
}
}
return -1;
}};
}
if(!dojo._hasResource["quickr.util.html"]){
dojo._hasResource["quickr.util.html"]=true;
dojo.provide("quickr.util.html");
quickr.util.html={getDirectionCode:function(){
return dojo._isBodyLtr()?"":"‏";
},destroyWidgets:function(el){
var list=dojo.query("[widgetId]",el).map(dijit.byNode);
dojo.forEach(list,function(w){
w.destroyRecursive();
});
},removeChildren:function(el){
quickr.util.html.destroyWidgets(el);
while(el.firstChild){
el.removeChild(el.firstChild);
}
},isEvent:function(e){
return (e&&(typeof e.target!="undefined"||typeof e.bubbles!="undefined"));
},createTable:function(d,_6a6){
var _6a7=d.createElement("table");
_6a7.cellPadding=_6a7.cellSpacing=0;
var _6a8=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
if(_6a6){
td.appendChild(_6a6);
}
tr.appendChild(td);
_6a8.appendChild(tr);
_6a7.appendChild(_6a8);
return _6a7;
},formatFilename:function(s){
if(dojo._isBodyLtr()){
return s;
}
return "‪"+s+"‬";
},encodeHtmlAttribute:function(s){
return quickr.util.html.encodeHtml(s).replace(/\"/g,"&quot;");
},encodeHtml:function(s){
if(!s){
return "";
}
var e=quickr.util.html._encoder;
if(!e){
e=quickr.util.html._encoder=dojo.doc.createElement("div");
}
e.innerHTML="";
e.appendChild(dojo.doc.createTextNode(s));
return e.innerHTML;
},getFrameDocument:function(_6af){
var _6b0;
if(_6af){
try{
if(dojo.isIE||dojo.isSafari>2){
_6b0=_6af.contentWindow.document;
}else{
if(dojo.isSafari){
_6b0=_6af.document;
}else{
_6b0=_6af.contentWindow.document;
}
}
}
catch(e){
}
}
return _6b0;
},UNICODE_SPACE:/[\s\u3000]/g,encodeSpaces:function(s){
if(!s){
return s;
}
return s.replace(quickr.util.html.UNICODE_SPACE," ");
},htmlText:function(el){
if(!el){
return null;
}
var a=[];
for(var j=0;c=el.childNodes[j];j++){
if(c.nodeType==3){
a.push(c.nodeValue);
}
}
return a.length>0?a.join(""):null;
},SUBSTITUTION:/\$\{([^\s\:\}]+)(?:\:([^\s\:\}]+))?\}/g,substitute:function(d,el,_6b7,map,_6b9,_6ba){
var re=quickr.util.html.SUBSTITUTION;
var last=0;
while(r=re.exec(_6b7)){
el.appendChild(d.createTextNode(_6b7.substring(last,r.index)));
last=r.index+r[0].length;
var key=r[1];
var _6be=r[2];
var _6bf=dojo.getObject(key,false,map);
if(typeof _6bf=="function"){
_6bf=_6bf.apply(_6ba||map,[key,_6be]);
}
if(_6be){
_6bf=dojo.getObject(_6be,false,_6ba)(_6bf);
}
if(_6b9){
_6bf=_6b9(_6bf,key);
}
if(typeof _6bf!="undefined"&&_6bf!=null){
if(_6bf.nodeType>0){
el.appendChild(_6bf);
}else{
el.appendChild(d.createTextNode(_6bf.toString()));
}
}
}
el.appendChild(d.createTextNode(_6b7.substring(last)));
return el;
},createWrappableText:function(d,el,text,_6c3){
text=text||"";
_6c3=_6c3||1;
if(text.length<=_6c3){
el.appendChild(d.createTextNode(text));
}else{
var dash=false;
var _6c5=dojo.isSafari;
var ff2=dojo.isFF&&Math.floor(dojo.isFF)==2;
for(var i=0;i<text.length;i+=1){
var c=text.substring(i,i+1);
var dash=c=="-";
if(i!=0&&!_6c9&&!dash){
if(ff2||_6c5){
el.appendChild(d.createElement("wbr"));
}else{
el.appendChild(d.createTextNode("­"));
}
}
var _6c9=dash;
el.appendChild(d.createTextNode(c));
}
}
},EMBEDDED_URL_PATTERN:/(^|[\s])(([a-zA-Z]+:\/\/|www\.|mailto:)[^\s]+)/i,URL_PUNCTUATION_BACKTRACK:/[\.,\!\-;\:\'\"]+$/,createTextNode:function(d,el,text,_6cd){
text=quickr.util.text.trim(text);
if(text.length>0){
var _6ce=text.split("\n");
dojo.forEach(_6ce,function(text){
var _6d0,_6d1;
while(_6d0=quickr.util.html.EMBEDDED_URL_PATTERN.exec(text)){
var _6d2=text.substring(0,_6d0.index)+_6d0[1];
var _6d3=_6d0[2];
if(_6d1=quickr.util.html.URL_PUNCTUATION_BACKTRACK.exec(_6d3)){
_6d3=_6d3.substring(0,_6d1.index);
}
text=text.substring(_6d2.length+_6d3.length);
var _6d4=(_6d0[3]&&_6d0[3].toLowerCase()=="www.");
var _6d5=(_6d0[3]&&_6d0[3].toLowerCase()=="mailto:");
var href=_6d4?"http://"+_6d3:_6d3;
if(_6d5){
_6d3=_6d3.substring(7);
}
if(_6d2.length>0){
el.appendChild(d.createTextNode(_6d2));
}
var a=d.createElement("a");
a.href=href;
a.appendChild(d.createTextNode(_6d3));
el.appendChild(a);
}
if(text.length>0){
el.appendChild(d.createTextNode(text));
}
el.appendChild(!_6cd?d.createElement("br"):d.createTextNode(" "));
});
}
},generateiWidgetEnablerCodeIfRequired:function(_6d8,doc){
if(_6d8.indexOf("mm_iWidget")>-1){
console.log("update generateiWidgetEnablerCodeIfRequired for MM1.1");
}
return null;
},evalScriptTag:function(tag){
if(tag.src){
var h=document.getElementsByTagName("head")[0];
var _6dc=document.createElement("SCRIPT");
_6dc.src=tag.src;
h.appendChild(_6dc);
}else{
if(tag.text&&tag.text.length>0){
if(window.execScript){
window.execScript(tag.text);
}else{
if(dojo.isSafari){
window.setTimeout(tag.text,0);
}else{
eval.call(window,tag.text);
}
}
}
}
},xhtmlToHtml:function(d,_6de,html,_6e0,ids){
if(!_6de){
return;
}
if(!_6e0){
for(var i=0,a;a=_6de.attributes[i];i++){
var n=a.nodeName.toLowerCase();
switch(n){
case "class":
html.className=a.nodeValue;
break;
case "colspan":
html.colSpan=a.nodeValue;
break;
case "style":
try{
html.style.cssText=a.nodeValue;
}
catch(e){
}
break;
default:
if(n=="onclick"&&dojo.isIE){
html.onclick=new Function(a.nodeValue);
}else{
html.setAttribute(a.nodeName,a.nodeValue);
}
}
}
if(html.id&&ids){
ids[html.id]=html;
}
}
var n=_6de.nodeName.toLowerCase();
for(var i=0,x;x=_6de.childNodes[i];i++){
switch(x.nodeType){
case 1:
var e=d.createElement(x.nodeName);
html.appendChild(e);
quickr.util.html.xhtmlToHtml(d,x,e,false,ids);
break;
case 3:
switch(n){
case "script":
if(dojo.isIE){
html.text=x.nodeValue;
}else{
html.appendChild(d.createTextNode(x.nodeValue));
}
break;
case "style":
if(dojo.isIE){
html.styleSheet.cssText=x.nodeValue;
}else{
html.appendChild(d.createTextNode(x.nodeValue));
}
break;
default:
html.appendChild(d.createTextNode(x.nodeValue));
break;
}
break;
}
}
},alert:function(msg){
alert(msg);
},confirm:function(msg,_6e9,_6ea){
var bool=confirm(msg);
if(bool&&_6e9){
_6e9();
}else{
if(!bool&&_6ea){
_6ea();
}
}
}};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.AbstractTemplate"]){
dojo._hasResource["quickr.share.wiki.scenes.AbstractTemplate"]=true;
dojo.provide("quickr.share.wiki.scenes.AbstractTemplate");
dojo.declare("quickr.share.wiki.scenes.AbstractTemplate",null,{constructor:function constructor(app,_6ed){
this.app=app;
},begin:function(_6ee){
var app=this.app;
var d=app.document;
var _6f1=app.authenticatedUser;
d.title=this.getWindowTitle();
quickr.share.wiki.scenes.applyHomeTemplate(d,_6f1,app,app.routes,{activeTab:this.activeTab});
var _6f2=app.getTemplate(this,{bypassCache:this.bypassCache});
if(!_6f2){
this.showError();
return;
}
var opt={app:app,scene:this};
var body=_6f2.getElementsByTagName("body")[0];
var _6f5=d.getElementById("lotusFrame");
if(_6f5){
quickr.util.html.destroyWidgets(_6f5);
_6f5.parentNode.removeChild(_6f5);
}
d.body.style.visibility="hidden";
quickr.util.html.xhtmlToHtml(d,body,d.body);
dojo.forEach(dojo.query("a._qkrLink",d.body),function(el){
var f=app.routes[el.getAttribute("rel")];
if(typeof f=="function"){
quickr.share.wiki.scenes.setOnClick(el,app,f.apply(app.routes,[]));
}
});
var _6f8=d.getElementById("lotusBanner");
if(_6f8&&!_6f8.getAttribute("custom")){
quickr.share.scenes.applyHeader(d,_6f8,app);
}
var _6f9=d.getElementById("lotusTitleBar");
if(_6f9&&!_6f9.getAttribute("custom")){
quickr.share.wiki.scenes.applyTitleBar(d,_6f9,app,{activeTab:this.activeTab});
}
var _6fa=d.getElementById("lotusFooter");
if(_6fa&&!_6fa.getAttribute("custom")){
quickr.share.scenes.applyFooter(d,_6fa,app);
}
var _6fb=d.getElementById("lotusBuild");
if(_6fb){
_6fb.appendChild(d.createTextNode(dojo.getObject("quickr.share.config.version")||""));
}
window["template"]=opt;
window["template"]=null;
d.body.style.visibility="visible";
},showError:function(){
var _6fc=this.app.authenticatedUser;
var d=this.app.document;
d.title=this.getWindowTitle();
quickr.share.wiki.scenes.applyGenericError(this.app,this.app.nls.ERROR_IN_APP_TITLE,this.app.nls.ERROR_IN_APP_MESSAGES,[]);
d.body.style.visibility="visible";
},end:function(_6fe){
},getWindowTitle:function(){
return;
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.About"]){
dojo._hasResource["quickr.share.wiki.scenes.About"]=true;
dojo.provide("quickr.share.wiki.scenes.About");
dojo.declare("quickr.share.wiki.scenes.About",[quickr.share.wiki.scenes.AbstractTemplate],{getWindowTitle:function(){
return this.app.nls.WINDOWTITLE.ABOUT;
}});
}
if(!dojo._hasResource["quickr.util.uri"]){
dojo._hasResource["quickr.util.uri"]=true;
dojo.provide("quickr.util.uri");
quickr.util.uri.parseUri=function(uri){
if(!uri){
return null;
}
uri=new dojo._Url(uri);
var _700=quickr.util.uri.getRequestParameters(uri);
uri.queryParameters=_700;
return uri;
};
quickr.util.uri.writeUri=function(obj){
if(!obj){
return null;
}
var uri="";
if(obj.scheme){
uri+=obj.scheme+":";
}
if(obj.authority){
uri+="//"+obj.authority;
}
uri+=obj.path;
if(obj.queryParameters){
uri+=quickr.util.uri.writeParameters(obj.queryParameters);
}else{
if(obj.query){
uri+=((obj.query.charAt(0)!="?")?"?":"")+obj.query;
}
}
if(obj.fragment){
uri+="#"+obj.fragment;
}
return uri;
};
quickr.util.uri.makeAtomUrlIESafe=function(url){
if(dojo.isIE&&url){
url=quickr.util.uri.parseUri(url);
url.queryParameters.format="xml";
url=quickr.util.uri.writeUri(url);
}
return url;
};
quickr.util.uri.rewriteUri=function(url,p){
if(url&&p){
url=quickr.util.uri.parseUri(url);
dojo.mixin(url.queryParameters,p);
url=quickr.util.uri.writeUri(url);
}
return url;
};
quickr.util.uri.splitQuery=function(_706){
var _707={};
if(!_706){
return _707;
}
if(_706.charAt(0)=="?"){
_706=_706.substring(1);
}
var args=_706.split("&");
for(var i=0;i<args.length;i++){
if(args[i].length>0){
var _70a=args[i].indexOf("=");
if(_70a==-1){
var key=decodeURIComponent(args[i]);
var _70c=_707[key];
if(dojo.isArray(_70c)){
_70c.push("");
}else{
if(_70c){
_707[key]=[_70c,""];
}else{
_707[key]="";
}
}
}else{
if(_70a>0){
var key=decodeURIComponent(args[i].substring(0,_70a));
var _70d=decodeURIComponent(args[i].substring(_70a+1));
var _70c=_707[key];
if(dojo.isArray(_70c)){
_70c.push(_70d);
}else{
if(_70c){
_707[key]=[_70c,_70d];
}else{
_707[key]=_70d;
}
}
}
}
}
}
return _707;
};
quickr.util.uri.getRequestParameters=function(uri){
var _70f={};
if(!uri){
return _70f;
}
if(typeof uri=="string"){
uri=new dojo._Url(uri);
}
return quickr.util.uri.splitQuery(uri.query);
};
quickr.util.uri.writeParameters=function(map){
var out=[];
for(var key in map){
var _713=map[key];
if(typeof _713!="undefined"&&_713!=null){
key=encodeURIComponent(key);
if(dojo.isArray(_713)){
for(var i=0;i<_713.length;i++){
if(_713[i]){
out.push(out.length==0?"?":"&");
out.push(key);
out.push("=");
out.push(encodeURIComponent(_713[i]));
}
}
}else{
out.push(out.length==0?"?":"&");
out.push(key);
out.push("=");
out.push(encodeURIComponent(_713));
}
}
}
return out.join("");
};
quickr.util.uri.toAnchorForm=function(uri,_716,_717){
var url=new dojo._Url(uri);
var path=url.path;
if(path){
var _71a;
for(var i=0;i<_716.length;i++){
var base=quickr.util.uri.parseUri(_716[i]).path;
if(path.indexOf(base)==0){
var p={};
_71a=path.substring(base.length);
if(url.query){
var q=quickr.util.uri.splitQuery(url.query);
if(_717){
for(var key in _717){
p[key]=q[key]||_717[key];
delete q[key];
}
_71a+=quickr.util.uri.writeParameters(q);
}else{
_71a+="?"+url.query;
}
}else{
for(var key in _717){
p[key]=_717[key];
}
}
url.path=base;
url.fragment=(_71a.length>0)?_71a:"/";
url.query=quickr.util.uri.writeParameters(p);
uri=quickr.util.uri.writeUri(url);
break;
}
}
}
return uri;
};
quickr.util.uri.fromAnchorForm=function(uri,_721){
if(!uri){
return uri;
}
var url=new dojo._Url(uri);
var path=url.path;
if(url.fragment&&path){
var _724;
for(var i=0;i<_721.length;i++){
var base=quickr.util.uri.parseUri(_721[i]).path;
if(path==base){
_724=url.fragment;
var p=quickr.util.uri.splitQuery(url.query);
url.query=null;
url.fragment=null;
url.path=base+_724;
uri=quickr.util.uri.writeUri(url);
url=new dojo._Url(uri);
dojo.mixin(p,quickr.util.uri.splitQuery(url.query));
url.query=quickr.util.uri.writeParameters(p);
uri=quickr.util.uri.writeUri(url);
break;
}
}
}
return uri;
};
}
if(!dojo._hasResource["lconn.core.TypeAhead"]){
dojo._hasResource["lconn.core.TypeAhead"]=true;
dojo.provide("lconn.core.TypeAhead");
dojo.declare("lconn.core.TypeAhead",[dijit.form.ComboBox],{formatItem:function(item){
return item;
},minChars:1,hasDownArrow:false,multipleValues:true,token:"",autoSearchKeys:[dojo.keys.DOWN_ARROW],autoSearchChars:[],autoSelectKeys:[],autoSelectChars:[],hideEmptyResults:false,autoComplete:false,postMixInProperties:function(){
this.inherited(arguments);
this.baseClass="lotusText";
},postCreate:function(){
var _729=this.focusNode.style.fontFamily||"";
this.inherited(arguments);
this.focusNode.style.fontFamily=_729;
},_onBlur:function(evt){
if(this.searchTimer){
clearTimeout(this.searchTimer);
}
this.inherited(arguments);
},_normalize:function(_72b,_72c){
var cpos=this._getCaretPos(this.focusNode);
var _72e=this.focusNode.value;
_72b.lastIndex=0;
var pre=_72e.substring(0,cpos)+_72c;
pre=pre.replace(_72b,this.token);
_72b.lastIndex=0;
var post=_72e.substring(cpos);
post=quickr.util.text.trim(post).replace(_72b,this.token);
_72e=pre+post;
if(_72e!=this.focusNode.value){
this.focusNode.value=_72e;
this._setCaretPos(this.focusNode,pre.length);
}
},_onKeyPress:function(evt){
var key=evt.charOrCode;
if(this.multipleValues&&this.autoReplace&&evt.keyChar){
this.autoReplace.lastIndex=0;
if(this.autoReplace.exec(evt.keyChar)){
dojo.stopEvent(evt);
this._normalize(this.autoReplace,this.token);
key=evt.keyChar=this.token;
}
}
if(evt.altKey||(evt.ctrlKey&&(key!="x"&&key!="v"))||evt.key==dojo.keys.SHIFT){
return;
}
var _733=false;
var opt={};
var pw=this._popupWidget;
var dk=dojo.keys;
if(this._isShowingNow){
pw.handleKey(key);
}
if(!this._isShowingNow&&(dojo.indexOf(this.autoSearchKeys,evt.keyCode)>=0||dojo.indexOf(this.autoSearchChars,evt.keyChar)>=0)){
dojo.stopEvent(evt);
this._prev_key_backspace=false;
this._prev_key_esc=false;
_733=true;
opt.searchImmediately=true;
opt.highlightFirstOption=true;
}else{
if(dojo.indexOf(this.autoSelectKeys,evt.keyCode)>=0||dojo.indexOf(this.autoSelectChars,evt.keyChar)>=0){
dojo.stopEvent(evt);
this._prev_key_backspace=false;
this._prev_key_esc=false;
_733=true;
opt.searchImmediately=true;
opt.highlightFirstOption=true;
opt.autoselectSingleResult=true;
}else{
switch(key){
case dk.PAGE_DOWN:
case dk.DOWN_ARROW:
if(!this._isShowingNow||this._prev_key_esc){
this._arrowPressed();
_733=true;
}else{
this._announceOption(pw.getHighlightedOption());
}
dojo.stopEvent(evt);
this._prev_key_backspace=false;
this._prev_key_esc=false;
break;
case dk.PAGE_UP:
case dk.UP_ARROW:
if(this._isShowingNow){
this._announceOption(pw.getHighlightedOption());
}
dojo.stopEvent(evt);
this._prev_key_backspace=false;
this._prev_key_esc=false;
break;
case dk.ENTER:
var _737;
if(this._isShowingNow&&(_737=pw.getHighlightedOption())){
if(_737.selectHandler){
if(_737.selectHandler(evt)){
return;
}
break;
}else{
if(_737==pw.nextButton){
this._nextSearch(1);
dojo.stopEvent(evt);
break;
}else{
if(_737==pw.previousButton){
this._nextSearch(-1);
dojo.stopEvent(evt);
break;
}
}
}
}else{
if(this._isShowingNow){
this._hideResultList();
}
break;
}
evt.preventDefault();
var _738=this.attr("displayedValue");
if(pw&&((pw.getHighlightedOption()&&pw.getHighlightedOption().selectHandler)||_738==pw._messages["previousMessage"]||_738==pw._messages["nextMessage"])){
break;
}
if(this._isShowingNow){
this._prev_key_backspace=false;
this._prev_key_esc=false;
if(pw.getHighlightedOption()){
pw.attr("value",{target:pw.getHighlightedOption()});
}
this._lastQuery=null;
this._hideResultList();
}
break;
case dk.TAB:
if(this._isShowingNow){
dojo.stopEvent(evt);
var _739=false;
var _73a=pw.getHighlightedOption();
if(_73a){
if(evt.shiftKey&&(!_73a.previousSibling||_73a.previousSibling.style.display=="none")){
_739=true;
}else{
if(!evt.shiftKey&&(!_73a.nextSibling||_73a.nextSibling.style.display=="none")){
_739=true;
}
}
}
if(_739){
if(this.originalValue){
var cpos=this._getCaretPos(this.focusNode);
this.focusNode.value=this.originalValue;
this._setCaretPos(this.focusNode,cpos);
}
pw._blurOptionNode();
}else{
pw.handleKey(evt.shiftKey?dk.UP_ARROW:dk.DOWN_ARROW);
this._announceOption(pw.getHighlightedOption());
}
}
break;
case dk.ESCAPE:
this._prev_key_backspace=false;
this._prev_key_esc=true;
if(this._isShowingNow){
dojo.stopEvent(evt);
this._hideResultList();
if(this.originalValue){
var cpos=this._getCaretPos(this.focusNode);
this.focusNode.value=this.originalValue;
this._setCaretPos(this.focusNode,cpos);
}
this.originalValue=null;
}
break;
case dk.DELETE:
case dk.BACKSPACE:
this._prev_key_esc=false;
this._prev_key_backspace=true;
_733=true;
break;
case dk.RIGHT_ARROW:
case dk.LEFT_ARROW:
this._prev_key_backspace=false;
this._prev_key_esc=false;
break;
default:
this._prev_key_backspace=false;
this._prev_key_esc=false;
_733=typeof key=="string";
}
}
}
if(this.searchTimer){
clearTimeout(this.searchTimer);
}
if(_733){
setTimeout(dojo.hitch(this,"_startSearchFromInput",opt),1);
}
},compositionend:function(evt){
this._onKeyPress(evt);
},_numTokensPreceding:function(str,pos){
var i=-1,_740=0;
while(i<pos){
i=str.indexOf(this.token,i+1);
if(i==-1){
i=str.length;
}else{
if(i<pos){
_740++;
}
}
}
return _740;
},_autoCompleteText:function(text){
var fn=this.focusNode;
var cpos=this._getCaretPos(fn);
dijit.selectInputText(fn,fn.value.length);
var _744;
if(this.multipleValues){
_744=fn.value.split(this.token);
}else{
_744=[fn.value];
}
var _745=0;
if(this.multipleValues){
_745=this._numTokensPreceding(fn.value,cpos);
}
if(this.multipleValues&&this.token!=" "&&_745>0){
text=" "+text;
}
var _746=this.ignoreCase?"toLowerCase":"substr";
if(dojo.string.trim(text[_746](0)).indexOf(dojo.string.trim(_744[_745][_746](0)))==0){
if(cpos+1>fn.value.length||fn.value.charAt(cpos)==this.token){
var end=cpos+text.length-_744[_745].length;
_744[_745]=text;
fn.value=_744.join(this.token);
dijit.selectInputText(fn,cpos,end);
}
}else{
_744[_745]=text;
fn.value=_744.join(this.token);
var _748=0;
for(var i=0;i<_745;i++){
_748+=_744[i].length;
}
_748+=this.token.length*_745;
dijit.selectInputText(fn,_748,_748+text.length);
}
},_openResultList:function(_74a,_74b){
if(!this.domNode||this.disabled||this.readOnly||(_74b.query!=this._lastQuery)){
return;
}
this._popupWidget.clearResultList();
if(!_74a.length&&this.hideEmptyResults){
this._hideResultList();
return;
}
var _74c=(_74a.length>0)?new String(this.formatItem(_74a[0])):null;
if(_74c&&this.autoComplete&&!this._prev_key_backspace&&(_74b.query!="")){
this._autoCompleteText(_74c);
}
_74b._maxOptions=this._maxOptions;
this._popupWidget.createOptions(_74a,_74b,dojo.hitch(this,"_getMenuLabelFromItem"));
if(_74a.length==1&&_74b.queryOptions.autoselectSingleResult){
var pw=this._popupWidget;
try{
pw.highlightFirstOption();
}
catch(e){
}
pw.attr("value",{target:pw.getHighlightedOption()});
if(this._isShowingNow){
this._hideResultList();
}
return;
}
this._showResultList();
if(_74b.direction){
if(1==_74b.direction){
this._popupWidget.highlightFirstOption();
}else{
if(-1==_74b.direction){
this._popupWidget.highlightLastOption();
}
}
this._announceOption(this._popupWidget.getHighlightedOption());
}else{
if(_74b.queryOptions.highlightFirstOption){
this._popupWidget.highlightFirstOption();
this._announceOption(this._popupWidget.getHighlightedOption());
}else{
if(_74c==_74b.query){
this._popupWidget.highlightFirstOption();
}
}
}
},_announceOption:function(node){
if(node==null){
return;
}
var _74f;
if(node==this._popupWidget.nextButton||node==this._popupWidget.previousButton||node==this._popupWidget.searchButton){
_74f=node.innerHTML;
}else{
_74f=this.formatItem(node.item);
}
var cpos=this._getCaretPos(this.focusNode);
if(this.multipleValues){
var _751=this.focusNode.value.split(this.token);
var _752=this._numTokensPreceding(this.focusNode.value,cpos);
var q=this._lastQuery;
if(this.multipleValues&&this.token!=" "&&_752>0){
q=" "+q;
}
_751[_752]=q;
this.focusNode.value=_751.join(this.token);
}else{
this.focusNode.value=this.focusNode.value.substring(0,cpos);
}
this._setCaretPos(this.focusNode,cpos);
dijit.setWaiState(this.focusNode,"activedescendant",dojo.attr(node,"id"));
this._autoCompleteText(_74f);
},_doSelect:function(tgt){
var _755=this.formatItem(tgt.item);
if(this.multipleValues){
var _756=this.keyArr[this.keyIdx];
this.keyArr[this.keyIdx]=(this.keyIdx!=0&&this.token!=" "?" ":"")+_755;
_755=this.keyArr.join(this.token);
var _757=this.token+(this.token!=" "?" ":"");
if(_755.length>=_757.length&&_755.substring(_755.length-_757.length)!=_757){
_755+=_757;
}
}else{
this.item=tgt.item;
}
this.attr("value",_755);
this._setCaretPos(this.focusNode,_755.length);
this.onSelect(tgt.item);
},onSelect:function(item){
},_startSearchFromInput:function(opt){
if(this.multipleValues&&this.autoReplace){
this._normalize(this.autoReplace,"");
}
var _75a=this.originalValue=this.focusNode.value;
var _75b=_75a;
if(this.multipleValues){
this.keyArr=_75a.split(this.token);
this.caretPos=this._getCaretPos(this.focusNode);
this.keyIdx=this._numTokensPreceding(_75a,this.caretPos);
_75b=this.keyArr[this.keyIdx];
}
_75b=dojo.string.trim(_75b);
if(_75b.length>=this.minChars){
this._startSearch(_75b,opt);
}else{
this._hideResultList();
}
},_startSearch:function(key,opt){
opt=opt||{};
if(!this._popupWidget){
var _75e=this.id+"_popup";
this._popupWidget=new dijit.form._ComboBoxMenu({onChange:dojo.hitch(this,this._selectOption),id:_75e});
dijit.removeWaiState(this.focusNode,"activedescendant");
dijit.setWaiState(this.textbox,"owns",_75e);
}
this.item=null;
var _75f=dojo.clone(this.query);
this._lastInput=key;
this._lastQuery=_75f=key;
this.searchTimer=setTimeout(dojo.hitch(this,function(_760,_761){
var _762={queryOptions:dojo.mixin({ignoreCase:this.ignoreCase,deep:true},opt),query:_760,onComplete:dojo.hitch(this,"_openResultList"),onError:function(_763){
console.error("dijit.form.ComboBox: "+_763);
dojo.hitch(_761,"_hideResultList")();
},start:0,count:this.pageSize};
dojo.mixin(_762,_761.fetchProperties);
var _764=_761.store.fetch(_762);
var _765=function(_766,_767){
_766.start+=_766.count*_767;
_766.direction=_767;
this.store.fetch(_766);
};
this._nextSearch=this._popupWidget.onPage=dojo.hitch(this,_765,_764);
},_75f,this),opt.searchImmediately?1:this.searchDelay);
},getAttribute:function(attr){
if(this.item&&this.item[attr]){
return this.item[attr];
}else{
return "";
}
},getTextBoxValue:function(){
return this.focusNode.value;
},_getMenuLabelFromItem:function(item){
var _76a=this.formatItem(item,true);
var key="";
if(this.multipleValues){
key=dojo.string.trim(this.keyArr[this.keyIdx]);
}else{
key=dojo.string.trim(this.focusNode.value);
}
key=key.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
_76a=_76a.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
var _76c=_76a.toLowerCase();
var _76d=key.toLowerCase();
var _76e=0;
var _76f=null;
var _770=_76d.split(/\s/);
var sbf=[];
for(var i=0;i<_770.length;i++){
var s=_770[i];
var _76f=_76c.indexOf(s,_76e);
if(_76f!=-1){
sbf.push(_76a.substring(_76e,_76f));
sbf.push("<b>");
sbf.push(_76a.substring(_76f,_76f+s.length));
sbf.push("</b>");
_76e=_76f+s.length;
}
}
sbf.push(_76a.substring(_76e));
return {html:true,label:sbf.join("")};
}});
}
if(!dojo._hasResource["lconn.core.PeopleTypeAhead"]){
dojo._hasResource["lconn.core.PeopleTypeAhead"]=true;
dojo.provide("lconn.core.PeopleTypeAhead");
dojo.declare("lconn.core.PeopleTypeAhead",[lconn.core.TypeAhead],{size:"",pageSize:15,multipleValues:false,autoSelectChars:[","],templateString:null,templateString:"<input type=\"text\" autocomplete=\"off\" name=\"${name}\" id=\"widget_${id}\" size=\"${size}\"\n\tdojoAttachEvent=\"onkeydown:_onKeyDown, onkeypress:_onKeyPress, onfocus:_update, compositionend,onKeyUp\"\n\tdojoAttachPoint=\"domNode,textbox,focusNode,comboNode\" waiRole=\"combobox\"/>\n",formatItem:function(item){
if(item.name){
return item.name+(item.member?" <"+item.member+">":"")+(item.inactive?" "+this._strings.INACTIVE:"");
}else{
return item;
}
},_startSearch:function(key,opt){
opt=opt||{};
if(opt.searchImmediately){
opt.searchBoth=true;
}
if(!this._popupWidget){
var _777=this.id+"_popup";
this._popupWidget=new lconn.core.PeopleTypeAheadMenu({_strings:this._strings,onChange:dojo.hitch(this,this._selectOption),id:_777});
dijit.removeWaiState(this.focusNode,"activedescendant");
dijit.setWaiState(this.textbox,"owns",_777);
}
this.item=null;
var _778=dojo.clone(this.query);
this._lastQuery=_778=key;
this.searchTimer=setTimeout(dojo.hitch(this,function(_779,_77a){
var _77b=this.store.fetch({queryOptions:dojo.mixin({ignoreCase:this.ignoreCase,deep:true},opt),query:_779,onComplete:dojo.hitch(this,"_openResultList"),onError:function(_77c){
console.error("dijit.form.ComboBox: "+_77c);
dojo.hitch(_77a,"_hideResultList")();
},start:0,count:this.pageSize});
var _77d=function(_77e,_77f){
_77e.start+=_77e.count*_77f;
_77e.direction=_77f;
this.store.fetch(_77e);
};
this._nextSearch=this._popupWidget.onPage=dojo.hitch(this,_77d,_77b);
this._popupWidget.searchDirectory=dojo.hitch(this,dojo.hitch(this,function(){
this._startSearch(key,{searchDirectory:true});
}));
},_778,this),opt.searchImmediately?1:this.searchDelay);
}});
dojo.declare("lconn.core.PeopleTypeAheadMenu",[dijit.form._ComboBoxMenu],{templateString:"<ul class='dijitMenu' dojoAttachEvent='onmousedown:_onMouseDown,onmouseup:_onMouseUp,onmouseover:_onMouseOver,onmouseout:_onMouseOut' tabIndex='-1' style='overflow:\"auto\";'>"+"<li class='dijitMenuItem dijitMenuPreviousButton' dojoAttachPoint='previousButton'></li>"+"<li class='dijitMenuItem resultsNode' dojoAttachPoint='resultsNode'></li>"+"<li class='dijitMenuItem searchDirectory' dojoAttachPoint='searchButton'>${_strings.SEARCH_DIRECTORY}</li>"+"<li class='dijitMenuItem dijitMenuNextButton' dojoAttachPoint='nextButton'></li>"+"</ul>",_messages:null,postCreate:function(){
this.searchButton.selectHandler=dojo.hitch(this,function(evt){
dojo.stopEvent(evt);
this.searchDirectory();
return true;
});
this.resultsNode.selectHandler=dojo.hitch(this,function(evt){
dojo.stopEvent(evt);
return true;
});
this.inherited("postCreate",arguments);
},searchDirectory:function(){
},setValue:function(_782){
if(_782.target.item){
this.value=_782;
this.onChange(_782);
}
},_onMouseUp:function(evt){
if(evt.target==this.searchButton){
this.searchDirectory();
}else{
if(evt.target!=this.resultsNode){
this.inherited("_onMouseUp",arguments);
}
}
},_onMouseOver:function(evt){
if(evt.target===this.domNode){
return;
}
var tgt=evt.target;
if(!(tgt==this.previousButton||tgt==this.nextButton||tgt==this.searchButton||tgt==this.resultsNode)){
while(!tgt.item){
tgt=tgt.parentNode;
}
}
this._focusOptionNode(tgt);
},createOptions:function(_786,_787,_788){
this.clearResultList();
this.previousButton.style.display=(!_787.start||_787.start==0)?"none":"";
dojo.attr(this.previousButton,"id",this.id+"_prev");
dojo.forEach(_786,function(item,i){
if(_787.count&&i>=_787.count){
return;
}
var _78b=this._createOption(item,_788);
_78b.className="dijitMenuItem";
dojo.attr(_78b,"id",this.id+i);
this.domNode.insertBefore(_78b,this.nextButton);
},this);
this.nextButton.style.display=(_787.count&&_787.count<_786.length)?"":"none";
dojo.attr(this.nextButton,"id",this.id+"_next");
var el=this.resultsNode;
if(_786.length==0){
var _78d=dojo.string.substitute(this._strings.NO_RESULTS,[_787.query]);
while(el.firstChild){
el.removeChild(el.firstChild);
}
el.appendChild(document.createTextNode(_78d));
el.item=_78d;
this.domNode.insertBefore(el,this.nextButton);
}
if(!_787.queryOptions.searchDirectory&&_787.searchType!="directory"){
this.domNode.insertBefore(this.searchButton,this.nextButton);
}
},clearResultList:function(){
var _78e=this.previousButton;
var last=this.nextButton;
while(_78e.nextSibling&&_78e.nextSibling!=last){
this.domNode.removeChild(_78e.nextSibling);
}
},getListLength:function(){
return this.domNode.childNodes.length-2-(this.searchButton.parentNode?1:0)-(this.resultsNode.parentNode?1:0);
}});
lconn.core.PeopleTypeAhead.getUserTypeAheadArguments=function(_790,opt){
var args={nameAttr:"name",minChars:2,searchDelay:400,pageSize:25,multipleValues:false,store:_790,hasDownArrow:false,"class":"",formatItem:function(item,html){
html=false;
if(item.name){
var str="";
if(item.name.indexOf(",")!=-1&&item.name.length>1&&item.name[0]!="\""&&item.name[item.name.length-1]!="\""){
if(html){
str+="&quot;"+item.name.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;")+"&quot;";
}else{
str+="\""+item.name+"\"";
}
}else{
str+=item.name;
}
if(quickr.util.text.trim(item.email).length>0){
if(html){
str+=" &lt;"+item.email.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;")+"&gt;&lrm;";
}else{
str+=" <"+item.email+">‎";
}
}
if(item.inactive){
str+=" "+this._strings.INACTIVE;
}
return str;
}else{
return item;
}
}};
if(opt){
dojo.mixin(args,opt);
}
return args;
};
}
if(!dojo._hasResource["quickr.widget.DeferredTooltip"]){
dojo._hasResource["quickr.widget.DeferredTooltip"]=true;
dojo.provide("quickr.widget.DeferredTooltip");
dojo.declare("quickr.widget._MasterTooltip",[dijit._Widget,dijit._Templated],{duration:200,templateString:"<div class=\"dijitTooltip dijitTooltipLeft\" id=\"dojoTooltip\"><div class=\"\" dojoAttachPoint=\"containerNode\" waiRole=\"alert\"></div></div>",postCreate:function(){
dojo.body().appendChild(this.domNode);
this.bgIframe=new dijit.BackgroundIframe(this.domNode);
this.fadeIn=dojo.fadeIn({node:this.domNode,duration:this.duration,onEnd:dojo.hitch(this,"_onShow")});
this.fadeOut=dojo.fadeOut({node:this.domNode,duration:this.duration,onEnd:dojo.hitch(this,"_onHide")});
},show:function(_796,_797,_798,_799){
if(this.aroundNode&&this.aroundNode===_797){
return;
}
if(this.fadeOut.status()=="playing"){
this._onDeck=arguments;
return;
}
var el=this.containerNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
if(typeof _796=="string"){
el.innerHTML=_796;
}else{
if(_796.length>0){
for(var i=0;i<_796.length;i++){
el.appendChild(_796[i]);
}
}else{
if(_796.nodeType){
el.appendChild(_796);
}
}
}
this.domNode.style.top=(this.domNode.offsetTop+1)+"px";
var _79c={};
var ltr=this.isLeftToRight();
dojo.forEach((_798&&_798.length)?_798:quickr.widget.DeferredTooltip.defaultPosition,dojo.hitch(null,this.pos,_79c,ltr));
var pos=dijit.placeOnScreenAroundElement(this.domNode,_797,_79c,dojo.hitch(this,"orient"));
dojo.style(this.domNode,"opacity",0);
this.fadeIn.play();
this.isShowingNow=true;
this.aroundNode=_797;
},pos:function(_79f,ltr,pos){
switch(pos){
case "after":
_79f[ltr?"BR":"BL"]=ltr?"BL":"BR";
break;
case "after_t":
_79f[ltr?"TR":"TL"]=ltr?"TL":"TR";
break;
case "before":
_79f[ltr?"BL":"BR"]=ltr?"BR":"BL";
break;
case "before_t":
_79f[ltr?"TL":"TR"]=ltr?"TR":"TL";
break;
case "below":
_79f[ltr?"BL":"BR"]=ltr?"TL":"TR";
_79f[ltr?"BR":"BL"]=ltr?"TR":"TL";
break;
case "above":
default:
_79f[ltr?"TL":"TR"]=ltr?"BL":"BR";
_79f[ltr?"TR":"TL"]=ltr?"BR":"BL";
break;
}
},update:function(_7a2,_7a3,_7a4){
if(!this.aroundNode||this.aroundNode!=_7a3){
this.show(_7a2,_7a3,_7a4);
return;
}
if(this.fadeOut.status()=="playing"){
this._onDeck=arguments;
return;
}
var el=this.containerNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
if(typeof _7a2=="string"){
el.innerHTML=_7a2;
}else{
if(_7a2.length>0){
for(var i=0;i<_7a2.length;i++){
el.appendChild(_7a2[i]);
}
}else{
if(_7a2.nodeType){
el.appendChild(_7a2);
}
}
}
this.domNode.style.top=(this.domNode.offsetTop+1)+"px";
var _7a7={};
var ltr=this.isLeftToRight();
dojo.forEach((_7a4&&_7a4.length)?_7a4:quickr.widget.DeferredTooltip.defaultPosition,dojo.hitch(null,this.pos,_7a7,ltr));
var pos=dijit.placeOnScreenAroundElement(this.domNode,_7a3,_7a7,dojo.hitch(this,"orient"));
dojo.style(this.domNode,"opacity",1);
this.isShowingNow=true;
this.aroundNode=_7a3;
this._onShow();
},orient:function(node,_7ab,_7ac){
node.className="dijitTooltip "+{"BL-TL":"dijitTooltipBelow dijitTooltipABLeft","TL-BL":"dijitTooltipAbove dijitTooltipABLeft","BR-TR":"dijitTooltipBelow dijitTooltipABRight","TR-BR":"dijitTooltipAbove dijitTooltipABRight","BR-BL":"dijitTooltipRight","BL-BR":"dijitTooltipLeft"}[_7ab+"-"+_7ac];
},_onShow:function(){
if(dojo.isIE){
this.domNode.style.filter="";
}
},hide:function(_7ad){
if(!this.aroundNode||this.aroundNode!==_7ad){
return;
}
if(this._onDeck){
this._onDeck=null;
return;
}
this.fadeIn.stop();
this.isShowingNow=false;
this.aroundNode=null;
this.fadeOut.play();
},_onHide:function(){
this.domNode.style.cssText="";
if(this._onDeck){
this.show.apply(this,this._onDeck);
this._onDeck=null;
}
}});
quickr.widget.showTooltip=function(_7ae,_7af,_7b0){
if(!quickr.widget._masterTT){
quickr.widget._masterTT=new quickr.widget._MasterTooltip();
}
return quickr.widget._masterTT.show(_7ae,_7af,_7b0);
};
quickr.widget.updateTooltip=function(_7b1,_7b2,_7b3){
if(!quickr.widget._masterTT){
quickr.widget._masterTT=new quickr.widget._MasterTooltip();
}
return quickr.widget._masterTT.update(_7b1,_7b2,_7b3);
};
quickr.widget.hideTooltip=function(_7b4){
if(!quickr.widget._masterTT){
quickr.widget._masterTT=new quickr.widget._MasterTooltip();
}
return quickr.widget._masterTT.hide(_7b4);
};
quickr.widget.destroyTooltip=function(_7b5){
if(quickr.widget._masterTT){
quickr.share.util.destroy(quickr.widget._masterTT);
quickr.widget._masterTT=null;
}
};
dojo.declare("quickr.widget.DeferredTooltip",[dijit._Widget],{href:null,handleAs:"text",label:"",showDelay:400,hideDelay:400,connectId:[],position:[],_loaded:false,postCreate:function(){
if(this.srcNodeRef){
this.srcNodeRef.style.display="none";
}
this._connectNodes=[];
dojo.forEach(this.connectId,function(id){
var node=dojo.byId(id);
if(node){
this._connectNodes.push(node);
dojo.forEach(["onMouseOver","onMouseOut","onFocus","onBlur","onHover","onUnHover"],function(_7b8){
this.connect(node,_7b8.toLowerCase(),"_"+_7b8);
},this);
if(dojo.isIE){
node.style.zoom=1;
}
}
},this);
},uninitialize:function(){
this.close();
quickr.widget.destroyTooltip();
},_onMouseOver:function(e){
this._onHover(e);
},_onMouseOut:function(e){
if(dojo.isDescendant(e.relatedTarget,e.target)){
return;
}
this._onUnHover(e);
},_onFocus:function(e){
this._focus=true;
this._onHover(e);
this.inherited(arguments);
},_onBlur:function(e){
this._focus=false;
this._onUnHover(e);
this.inherited(arguments);
},_onHover:function(e){
if(this._hideTimer){
clearTimeout(this._hideTimer);
delete this._hideTimer;
}
if(!this._showTimer){
var _7be=e.target;
this._showTimer=setTimeout(dojo.hitch(this,function(){
this.open(_7be);
}),this.showDelay);
}
},_onUnHover:function(e){
if(this._focus){
return;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
if(!this._hideTimer){
this._hideTimer=setTimeout(dojo.hitch(this,"close"),this.hideDelay);
}
},_connectTooltip:function(){
this._disconnectTooltip();
var el=dojo.getObject("quickr.widget._masterTT.domNode");
if(el){
this._listeners=[dojo.connect(el,"onmouseover",this,"_onMouseOverT"),dojo.connect(el,"onmouseout",this,"_onMouseOutT"),dojo.connect(el,"onhover",this,"_onHoverT"),dojo.connect(el,"onunhover",this,"_onUnHoverT")];
}
},_disconnectTooltip:function(){
dojo.forEach(this._listeners||[],function(l){
dojo.disconnect(l);
});
delete this._listeners;
},_onMouseOverT:function(){
if(this._connectNode){
this._onMouseOver({target:this._connectNode});
}
},_onMouseOutT:function(e){
if(dojo.isDescendant(e.relatedTarget,e.target)){
return;
}
this._onUnHover({target:this._connectNode});
},_onHoverT:function(){
if(this._connectNode){
this._onHover({target:this._connectNode});
}
},_onUnHoverT:function(){
if(this._connectNode){
this._onUnHover({target:this._connectNode});
}
},open:function(_7c3){
_7c3=_7c3||this._connectNodes[0];
if(!_7c3){
return;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
if(!this._loaded&&this.href!=null){
var args={url:this.href,handle:dojo.hitch(this,"_onLoad"),handleAs:this.handleAs,retry:dojo.hitch(this,this.reset)};
dojo.mixin(args,this.ioArgs||{});
this.net.get(args);
}
var html=this._html||this.renderEmpty()||this.label||this.domNode.innerHTML;
var t=quickr.widget.showTooltip(html,_7c3,this.position);
this._connectTooltip();
this._connectNode=_7c3;
},close:function(){
quickr.widget.hideTooltip(this._connectNode);
this._disconnectTooltip();
delete this._connectNode;
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
if(this.alwaysReload){
this._loaded=false;
}
},reset:function(opt){
if(opt){
dojo.mixin(this,opt);
}
this._loaded=false;
delete this._html;
this._disconnectTooltip();
},reload:function(){
this._loaded=false;
this.close();
},renderEmpty:function(){
return this.label;
},renderHtml:function(_7c8,_7c9){
return "Loaded";
},renderError:function(_7ca,_7cb){
return "Error";
},_onLoad:function(_7cc,_7cd){
if(_7cc instanceof Error||!_7cc){
this._loaded=true;
this._html=this.renderError(_7cc,_7cd);
var _7ce=this._connectNode;
if(_7ce){
html=this._html||this.label||this.domNode.innerHTML;
quickr.widget.updateTooltip(html,_7ce,this.position);
}
}else{
this._loaded=true;
this._html=this.renderHtml(_7cc,_7cd);
var _7ce=this._connectNode;
if(_7ce){
html=this._html||this.label||this.domNode.innerHTML;
quickr.widget.updateTooltip(html,_7ce,this.position);
}
}
}});
quickr.widget.DeferredTooltip.defaultPosition=["after","before"];
}
if(!dojo._hasResource["quickr.widget.QuickTips"]){
dojo._hasResource["quickr.widget.QuickTips"]=true;
dojo.provide("quickr.widget.QuickTips");
dojo.declare("quickr.widget.QuickTips",[dijit._Widget],{url:(dojo.getObject("quickr.share.config.baseUri")||"/")+"tips.xml",tips:null,_strings:{},strings:null,prefs:null,firstTip:null,newestTip:-1,allowHide:false,postMixInProperties:function(){
this._strings=this.strings||this._strings;
if(this.prefs){
this.hidden=this.hidden||this.prefs.get("ntp");
}
if(!this.hidden){
this.load();
}
},buildRendering:function(){
var d=document;
var el=this.domNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
this.update();
},load:function(){
this.net.getXml({url:this.url,timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,handle:dojo.hitch(this,this.handleLoad)});
},handleLoad:function(_7d1,_7d2){
if(_7d1 instanceof Error||!_7d1||!_7d1.documentElement){
this.tips=[];
this.update();
}else{
var _7d3=_7d1.documentElement.getElementsByTagName("entry");
this.tips=[];
for(var i=0,e;e=_7d3[i];i++){
var t={id:quickr.share.util.parseInt(quickr.share.util.getChildElementTextContent(e,"id"),0),published:quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(e,"published")),e:e};
this.tips.push(t);
}
if(this.tips.length>0){
quickr.share.util.sort(this.tips,["id",-1]);
var _7d7=this.tips.length-1;
var _7d8=this.prefs?this.prefs.get("tip"):null;
var _7d9=this.prefs?this.prefs.get("ttp"):null;
if(_7d9&&_7d9!=this.tips[0].id){
for(var i=0;i<this.tips.length;i++){
if(this.tips[i].id==_7d9){
_7d7=Math.max(0,i-1);
break;
}
}
}else{
if(_7d8){
for(var i=0;i<this.tips.length;i++){
if(this.tips[i].id==_7d8){
_7d7=i;
break;
}
}
}
}
this.setActiveIndex(_7d7);
}else{
this.setActiveIndex(-1);
}
this.update();
}
},newer:function(){
if(!this.tips){
return;
}
var _7da=this.getActiveIndex();
if(_7da>0){
this.setActiveIndex(_7da-1);
this.update();
}
},older:function(){
if(!this.tips){
return;
}
var _7db=this.getActiveIndex();
if(_7db<0){
this.setActiveIndex(1);
this.update();
}else{
if(_7db<(this.tips.length-1)){
this.setActiveIndex(_7db+1);
this.update();
}
}
},getActiveIndex:function(){
return this.activeIndex;
},setActiveIndex:function(_7dc){
this.activeIndex=_7dc;
if(this.prefs){
var tip=this.tips[_7dc];
this.prefs.put("tip",tip?tip.id:null);
this.prefs.put("ttp",this.tips[0].id);
}
},setActiveTip:function(tip){
var tip=tip.id;
this.activeTip=tip;
if(this.prefs){
this.prefs.put("tip",tip);
}
},update:function(){
var d=document;
var el=this.domNode;
if(this.hidden){
while(el.firstChild){
el.removeChild(el.firstChild);
}
}else{
if(this.tips&&this.tips.length>0){
while(el.firstChild){
el.removeChild(el.firstChild);
}
var _7e1=this.tips.length;
var _7e2=this.getActiveIndex();
var t=this.tips[_7e2];
var e=quickr.share.util.getElementByLanguage(t.e.getElementsByTagName("title"),djConfig.locale||"en");
var _7e5=quickr.share.util.trim(quickr.share.util.xmlText(e));
if(_7e5.length>0){
var h3=d.createElement("h3");
h3.appendChild(d.createTextNode(_7e5));
el.appendChild(h3);
}
var _7e7=dojo.filter(t.e.getElementsByTagName("content"),function(e){
return e.getAttribute("type")=="text/xhtml";
});
var _7e9=quickr.share.util.getElementByLanguage(_7e7,djConfig.locale||"en");
quickr.share.util.xhtmlToHtml(d,_7e9,el,true);
if(_7e1>1){
var div=d.createElement("p");
div.className="lotusTiny";
if(this.allowHide){
var a=d.createElement("a");
a.className="lotusRight";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"hide");
a.appendChild(d.createTextNode(this._strings.HIDE_TIPS));
div.appendChild(a);
}
var ul=d.createElement("ul");
ul.className="lotusInlinelist";
if(_7e2>0){
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"newer");
a.appendChild(d.createTextNode(this._strings.NEWER));
li.appendChild(a);
ul.appendChild(li);
}
if(_7e2<(_7e1-1)){
var li=d.createElement("li");
li.className=(!ul.firstChild)?"lotusFirst":"";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"older");
a.appendChild(d.createTextNode(this._strings.OLDER));
li.appendChild(a);
ul.appendChild(li);
}
div.appendChild(ul);
el.appendChild(div);
}
}else{
if(!this._empty){
while(el.firstChild){
el.removeChild(el.firstChild);
}
var h3=d.createElement("h3");
h3.appendChild(d.createTextNode(this._strings.H));
el.appendChild(h3);
var p=d.createElement("p");
p.appendChild(d.createTextNode(this._strings.P1));
el.appendChild(p);
var p=d.createElement("p");
p.appendChild(d.createTextNode(this._strings.P2));
el.appendChild(p);
}
this._empty=true;
}
}
}});
}
if(!dojo._hasResource["quickr.widget.Stream"]){
dojo._hasResource["quickr.widget.Stream"]=true;
dojo.provide("quickr.widget.Stream");
dojo.declare("quickr.widget.StreamPaging",null,{checkForMore:false,constructor:function(opt){
dojo.mixin(this,opt);
},detect:function(url,data,type){
var uri,p,_7f5=-1,_7f6=0;
if(url){
uri=quickr.share.util.parseUri(url);
p=uri.queryParameters;
if(p.page){
_7f5=quickr.share.util.parseInt(p.pageSize,10);
_7f6=(quickr.share.util.parseInt(p.page,1)-1)*_7f5;
}else{
if(p.sI){
_7f5=quickr.share.util.parseInt(p.pageSize,-1);
_7f6=quickr.share.util.parseInt(p.sI,1)-1;
}else{
_7f5=quickr.share.util.parseInt(p.pageSize,-1);
}
}
}
var _7f7,_7f8,_7f9,_7fa;
if(type=="json"){
_7f7=(data.items)?data.items.length:0;
_7f8=-1;
if(typeof data.totalItems=="number"){
_7f8=data.totalItems;
}else{
if(typeof data.totalSize=="number"){
_7f8=data.totalSize;
}
}
_7f9=data.previousUrl;
_7fa=data.nextUrl;
}else{
_7f7=data.getElementsByTagName("entry").length;
_7f8=quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(data,"totalResults",quickr.share.util.OPENSEARCH_NAMESPACE),-1);
_7f9=quickr.share.util.getChildElementAttributeMatching(data,"link","rel","prev","href");
_7fa=quickr.share.util.getChildElementAttributeMatching(data,"link","rel","next","href");
}
this.items=_7f7;
if(data){
if(_7f8!=-1){
this.mode="index";
this.total=(_7f6==0&&_7f7<_7f5)?_7f7:_7f8;
this.startIndex=_7f6;
this.uri=uri;
}else{
if(_7f6==0){
this.mode="index";
this.total=(_7f7<_7f5)?_7f7:-1;
this.startIndex=0;
this.uri=uri;
}
}
if(!this.mode){
if(_7f9||_7fa){
this.mode="url";
this.next=_7fa;
this.previous=_7f9;
this.startIndex=-1;
this.total=-1;
}else{
this.mode="index";
this.total=(_7f7<_7f5)?(_7f6+_7f7):-1;
this.startIndex=_7f6;
this.uri=uri;
}
}
if(!this.mode){
this.mode="unpaged";
this.startIndex=0;
this.total=-1;
}
this.hasMore=(this.total!=-1&&(this.startIndex+_7f7)<this.total)||this.next||(this.total==-1&&_7f7==_7f5);
this.pastEnd=(_7f7==0&&(this.total>0||this.startIndex>0));
if(_7f5==-1){
_7f5=_7f7;
}else{
if(this.checkForMore&&_7f5>0){
_7f5=_7f5-1;
}
}
this.size=_7f5;
}else{
if(_7f5!=-1){
if(this.checkForMore){
_7f5=_7f5-1;
}
this.mode="index";
this.startIndex=_7f6;
this.size=_7f5;
this.parameters=p;
}else{
this.mode="unpaged";
this.startIndex=0;
this.size=-1;
}
this.total=-1;
this.visible=0;
}
},getPageUrl:function(page,_7fc){
if(page<1){
return null;
}
if(this.mode=="index"){
var _7fd=this.uri.queryParameters;
var p=dojo.clone(_7fd);
if(typeof page!="undefined"){
p.sI=this.size*(page-1)+1;
}
if(typeof _7fc!="undefined"){
p.pageSize=_7fc+(this.checkForMore?1:0);
}
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_7fd;
return url;
}
return null;
},getNextUrl:function(){
if(this.mode=="url"){
return this.next;
}
if(this.mode=="index"){
var _800=this.uri.queryParameters;
var p=dojo.clone(_800);
p.sI=this.startIndex+this.size+1;
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_800;
return url;
}
return null;
},getNextPage:function(){
if(this.mode=="index"){
var page=Math.floor(this.startIndex/this.size)+1;
return page+1;
}
return -1;
},getPreviousUrl:function(){
if(this.mode=="url"){
return this.next;
}
if(this.mode=="index"){
var _804=this.uri.queryParameters;
var p=dojo.clone(_804);
if(this.startIndex<1){
return null;
}
p.sI=Math.max(this.startIndex-this.size+1,1);
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_804;
return url;
}
return null;
},getPreviousPage:function(){
if(this.mode=="index"){
var page=Math.floor(this.startIndex/this.size)+1;
return (page>1)?page-1:-1;
}
return -1;
},getLastPageUrl:function(){
if(this.mode=="url"){
return this.previous;
}
if(this.mode=="index"){
var _808;
if(this.total!=-1){
var page=this.getLastPage();
_808=(page-1)*this.size;
}else{
_808=this.startIndex-this.size;
}
var _80a=this.uri.queryParameters;
var p=dojo.clone(_80a);
p.sI=Math.max(_808+1,1);
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_80a;
return url;
}
return null;
},getLastPage:function(){
if(this.mode=="index"){
var page;
return (this.total!=-1)?Math.ceil(this.total/this.size):Math.floor(this.startIndex/this.size);
}
return -1;
},isPastEnd:function(){
return this.pastEnd;
},hasNext:function(){
return this.hasMore;
},hasPrevious:function(){
if(this.mode=="url"){
return (this.previous&&this.previous!=null);
}
return (this.startIndex>0);
},isFullPage:function(){
return (this.size>0&&this.size==this.items);
}});
dojo.declare("quickr.widget.StreamRenderer",null,{minimalPaging:false,constructor:function(opts){
this.widgets=[];
this.sorts=[];
dojo.mixin(this,opts);
},destroy:function(){
this.cleanup();
},cleanup:function(){
quickr.share.util.destroy(this.widgets);
this.widgets=[];
},render:function(_80f,el,data){
data.itemByPosition=[];
var _812=(data.json)?data.json.items:data.xml.getElementsByTagName("entry");
var size=(data.paging)?Math.min(data.paging.size,_812.length):_812.length;
if(size==0){
this.renderEmpty(_80f,el,data);
}else{
this.updatePaging(_80f,el,data);
quickr.share.util.removeChildren(el);
this.renderSorting(_80f,el,data);
for(var i=0;i<size;i++){
this.renderItem(_80f,el,data,_812[i],i,i==0,(i==size-1));
}
}
},getSortInfo:function(){
var _815=this.sortId;
var _816=this.sortReversed;
var _817=this.getSorts(_815,_816);
if(_817&&_817.length>0){
var _818=quickr.share.util.indexById(_817,"id",_815);
if(!_818){
for(var i=0;i<_817.length;i++){
if(_817[i].isDefault){
_818=_817[i];
break;
}
}
if(!_818){
_818=_817[0];
}
_816=false;
}
return {list:_817,active:_818,reversed:_816};
}
},renderSorting:function(_81a,el,data){
var _81d=this.getSortInfo();
if(_81d){
var _81e=_81d.list;
var _81f=_81d.active;
var _820=_81d.reversed;
var d=document;
var div=d.createElement("div");
div.className="lotusSort";
var ul=d.createElement("ul");
ul.className="lotusInlinelist";
var li=d.createElement("li");
li.className="lotusFirst";
li.appendChild(d.createTextNode(_81a._strings.SORT_BY));
ul.appendChild(li);
for(var i=0,sort;sort=_81e[i];i++){
var li=d.createElement("li");
if(i==0){
li.className="lotusFirst";
}
var a=d.createElement("a");
if(sort==_81f){
var asc=(sort.lowToHigh)?!_820:_820;
dojo.addClass(a,"lotusActiveSort");
dojo.addClass(a,asc?"lotusAscending":"lotusDescending");
}
this.generateSortLink(_81a,sort,(sort!=_81f||_820)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
if(sort==_81f){
var _829=d.createElement("span");
_829.className="lotusAltText";
_829.appendChild(d.createTextNode(asc?" ▴ ":" ▾ "));
a.appendChild(_829);
}
li.appendChild(a);
ul.appendChild(li);
}
div.appendChild(ul);
el.appendChild(div);
}
},renderItem:function(_82a,el,data,item,_82e,_82f,_830){
},renderLoading:function(_831,el){
var d=document;
quickr.share.util.removeChildren(el);
var div=d.createElement("DIV");
div.className="qkrLoading";
var img=d.createElement("IMG");
img.src=_831.baseUrl+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",_831._strings.LOADING);
div.appendChild(img);
div.appendChild(d.createTextNode(_831._strings.LOADING));
el.appendChild(div);
},renderError:function(_836,el,data,_839){
if(_839.type!="noFiles"){
var d=document;
quickr.share.util.removeChildren(el);
this.updatePaging(_836,el,{});
this.renderSorting(_836,el,data);
var div=d.createElement("DIV");
div.className="qkrError";
div.appendChild(d.createTextNode(_839.message));
el.appendChild(div);
}else{
this.renderEmpty(_836,el,data);
}
},renderEmpty:function(_83c,el,data){
var d=document;
quickr.share.util.removeChildren(el);
this.updatePaging(_83c,el,data);
this.renderTypes(_83c,el,data);
this.renderSorting(_83c,el,data);
var div=d.createElement("DIV");
div.className="qkrEmpty";
div.appendChild(d.createTextNode(_83c.msgNoData||"Empty"));
el.appendChild(div);
},renderTypes:function(_841,el,data){
var d=document;
if(this.types){
var div=d.createElement("div");
div.className="lotusSort";
var ul=d.createElement("ul");
ul.className="lotusInlinelist";
var li=d.createElement("li");
li.className="lotusFirst";
li.appendChild(d.createTextNode(_841.typeLabel));
ul.appendChild(li);
for(var i=0,type;type=this.types[i];i++){
var li=d.createElement("li");
if(i==0){
li.className="lotusFirst";
}
var a=d.createElement("a");
if(type==this.activeType){
dojo.addClass(a,"lotusActiveSort");
}
this.generateLinkToTypes(_841,type,a);
a.appendChild(d.createTextNode(type.name));
li.appendChild(a);
ul.appendChild(li);
}
div.appendChild(ul);
el.appendChild(div);
}
},allowMultipleExpand:function(_84b){
return true;
},forceExpandItem:function(_84c,_84d,e){
if(e){
dojo.stopEvent(e);
}
var item=_84c.data.itemByPosition[_84d];
if(!item._isExpanded){
this.toggleItem(_84c,_84d);
}
},toggleItem:function(_850,_851,e){
if(e){
dojo.stopEvent(e);
}
var item=_850.data.itemByPosition[_851];
if(item._isExpanded){
this.collapseItem(_850,_850.data,item,_851);
item._isExpanded=false;
if(!this.allowMultipleExpand()){
_850._expandItem=null;
}
}else{
if(!item._isRendered){
if(!this.allowMultipleExpand()&&_850._expandItem){
this.collapseItem(_850,_850.data,_850._expandItem,_850._expandItem._position);
_850._expandItem._isExpanded=false;
_850._expandItem=null;
}
this.renderItemExpand(_850,_850.data,item,_851);
item._isRendered=true;
item._isExpanded=true;
if(!this.allowMultipleExpand()){
_850._expandItem=item;
}
}else{
if(!this.allowMultipleExpand()&&_850._expandItem){
this.collapseItem(_850,_850.data,_850._expandItem,_850._expandItem._position);
_850._expandItem._isExpanded=false;
_850._expandItem=null;
}
this.expandItem(_850,_850.data,item,_851);
item._isExpanded=true;
if(!this.allowMultipleExpand()){
_850._expandItem=item;
}
}
}
},updatePaging:function(s,el,data){
var d=document;
if(s.topPageNode){
s.topPageNode.className="lotusPaging";
}
if(s.bottomPageNode){
s.bottomPageNode.className="lotusPaging";
}
var _858=data.paging;
if(_858&&_858.size>0&&_858.total!=0){
var _859=_858.hasPrevious();
var _85a=_858.hasNext();
if(this.minimalPaging&&!_85a&&!_859){
this._h(s.topPageNode);
this._h(s.bottomPageNode);
}else{
if(s.pageSizeListNode){
var _85b=s.pageSizeListNode.getElementsByTagName("A");
dojo.forEach(_85b,function(size){
size.parentNode.style.display="";
size.value=quickr.share.util.parseInt(size.innerHTML,-1);
dojo.byId(size.value.toString()).style.display="none";
});
for(var i=0;i<_85b.length;i++){
var size=_85b[i];
if(size.value==_858.size){
size.parentNode.style.display="none";
dojo.byId(size.value.toString()).style.display="";
}else{
if(size.value!=-1){
dojo.connect(size,"onclick",dojo.hitch(this,this.setPageSize,size.value));
}
}
}
}
this._d(s.tPreviousLinkNode,_859);
this._d(s.bPreviousLinkNode,_859);
this._d(s.tPreviousTextNode,!_859);
this._d(s.bPreviousTextNode,!_859);
this._d(s.tNextLinkNode,_85a);
this._d(s.bNextLinkNode,_85a);
this._d(s.tNextTextNode,!_85a);
this._d(s.bNextTextNode,!_85a);
if(this.minimalPaging){
var _85f=(_85a||_859)?"":"none";
this._s(s.topPageNode,_85f);
this._s(s.bottomPageNode,_85f);
}
this._s(s.topPageNavigateNode);
this._s(s.bottomPageNavigateNode);
this.createPageCount(d,s,s.pageInfoNode,_858);
if(_858.total!=-1){
var page=Math.floor((_858.startIndex)/_858.size)+1;
var _861=Math.ceil(_858.total/_858.size);
this.createPageList(d,s,s.pageListNode,page,_861);
this.createJumpTo(d,s,s.jumpPageNode,page,_861);
}else{
this._h(s.pageListNode);
}
this._d(s.pageSizeListNode,_858.size!=-1);
}
}else{
if(this.minimalPaging){
this._h(s.topPageNode);
this._h(s.bottomPageNode);
}
this._h(s.topPageNavigateNode);
this._h(s.bottomPageNavigateNode);
this._h(s.pageSizeListNode);
this._h(s.pageInfoNode);
this._h(s.pageListNode);
}
},_d:function(el,bool){
if(!el){
return;
}
el.style.display=bool?"":"none";
},_h:function(el){
if(!el){
return;
}
el.style.display="none";
},_s:function(el,_866){
if(!el){
return;
}
el.style.display=_866||"";
},createPageCount:function(d,s,el,_86a){
if(!el){
return;
}
if(_86a.startIndex!=-1){
var _86b=_86a.total!=-1?dojo.number.format(_86a.total):"??";
var _86c=_86a.startIndex+1;
var end=_86a.size+_86a.startIndex;
if(_86a.total!=-1){
end=Math.min(end,_86a.total);
}
while(el.firstChild){
el.removeChild(el.firstChild);
}
el.appendChild(d.createTextNode(dojo.string.substitute(s._strings.COUNT,[dojo.number.format(_86c),dojo.number.format(end),_86b])));
el.style.display="";
}else{
el.style.display="none";
}
},createJumpTo:function(d,s,el,page,_872){
if(!el){
return;
}
if(_872>1){
while(el.firstChild){
el.removeChild(el.firstChild);
}
el.appendChild(d.createTextNode(s._strings.JUMP_TO_PAGE));
var _873=d.createElement("input");
_873.type="text";
_873.value=page;
_873.setAttribute("autocomplete","OFF");
el.appendChild(_873);
el.appendChild(d.createTextNode(dojo.string.substitute(s._strings.OF_PAGES,[dojo.number.format(_872)])));
el.style.display="";
dojo.connect(_873,"onchange",dojo.hitch(null,function(_874,_875){
_874.page(_875.value);
},s,_873));
if(dojo.isIE){
dojo.connect(_873,"onkeyup",dojo.hitch(null,function(_876,_877,evt){
if(evt.keyCode==dojo.keys.ENTER){
_876.page(_877.value);
}
},s,_873));
}
}else{
el.style.display="none";
}
},createPageList:function(d,s,el,page,_87d){
if(!el){
return;
}
while(el.firstChild){
el.removeChild(el.firstChild);
}
el.style.display="none";
if(_87d>1){
var _87e=false;
var _87f=3;
for(var i=1;i<=_87d;i++){
var _881=Math.abs(page-i);
if(_881<=_87f){
this.createSpecificPageLinks(d,s,el,i,i,page);
_87e=false;
}else{
if(i==1){
this.createSpecificPageLinks(d,s,el,i,i,page);
_87e=false;
}else{
if(i==_87d){
this.createSpecificPageLinks(d,s,el,i,i,page);
_87e=false;
}else{
if(!_87e){
if(i+1==_87d){
this.createSpecificPageLinks(d,s,el,i,i,page);
_87e=false;
}else{
if(i-1==1&&_881<=(_87f+1)){
this.createSpecificPageLinks(d,s,el,i,i,page);
_87e=false;
}else{
var li=d.createElement("li");
li.appendChild(d.createTextNode(s._strings.ELLIPSIS));
el.appendChild(li);
_87e=true;
}
}
}
}
}
}
}
el.style.display="";
}else{
el.style.display="none";
}
},createSpecificPageLinks:function(d,_884,el,_886,_887,_888){
for(var i=_886;i<=_887;i++){
var li=d.createElement("li");
if(i==1){
li.className="lotusFirst";
}
if(i!=_888){
var a=d.createElement("a");
this.generatePagingLink(_884,i,a);
a.appendChild(d.createTextNode(i));
li.appendChild(a);
}else{
var span=d.createElement("span");
span.appendChild(d.createTextNode(dojo.number.format(i)));
li.appendChild(span);
}
el.appendChild(li);
}
},getSorts:function(_88d,_88e){
return this.sorts;
},changeSort:function(_88f,_890){
if(this.sortId){
this.isSortReversed=(this.sortId==_890)?!this.isSortReversed:false;
}else{
this.isSortReversed=false;
}
this.sortId=_890;
_88f.update();
},generateSortLink:function(_891,sort,_893,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeSort,_891,sort.id));
},generatePagingLink:function(_895,page,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_895,_895.page,page));
}});
dojo.declare("quickr.widget.Stream",[dijit._Widget,dijit._Templated],{templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\" style=\"${_initPageStyle}\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\" style=\"${_initPageStyle}\">\n     <div class=\"lotusLeft\">\n        <ul class=\"lotusLeft lotusInlinelist\" dojoAttachPoint=\"pageSizeListNode\" style=\"display: none;\">${_strings.SHOW}\n        \t  <li class=\"lotusFirst\"><a href=\"#\">10</a></li>\n        \t  <li class=\"lotusFirst\" style=\"display: none;\" id=\"10\">10</li>\n           <li><a href=\"#\">25</a></li>\n           <li style=\"display: none;\" id=\"25\">25</li>\n           <li><a href=\"#\">50</a></li>\n           <li style=\"display: none;\" id=\"50\">50</li>\n           ${_strings.ITEMS_PER_PAGE}\n        </ul>         \n     </div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <div style=\"display:none;\" dojoAttachPoint=\"jumpPageNode\"></div>\n  </div>      \n</div>\n",url:null,data:null,view:"summary",baseClass:"",baseUrl:dojo.getObject("quickr.share.config.baseUri")||"/",renderer:new quickr.widget.StreamRenderer(),timeoutRetrieve:10,proxyServlet:null,msgNoData:null,_strings:{},postMixInProperties:function(){
if(this.oldWidget){
var _898=this.oldWidget.data;
if(_898&&_898.fromUrl&&(_898.xml||_898.json)){
this.data={fromUrl:_898.fromUrl,xml:_898.xml,json:_898.json,paging:_898.paging};
}
delete this.oldWidget;
}
if(this.renderer){
this._initPageStyle=(this.renderer.minimalPaging)?"display: none":"";
if(this.renderer.templatePath){
this.templatePath=this.renderer.templatePath;
}
if(this.renderer.templateString){
this.templateString=this.renderer.templateString;
}
}
},postCreate:function(){
this.msgNoData=this.msgNoData||this._strings.EMPTY;
this.inherited(arguments);
if(this.pageSizeListNode){
var _899=this.pageSizeListNode.getElementsByTagName("A");
for(var i=0;i<_899.length;i++){
var size=_899[i];
var _89c=quickr.share.util.parseInt(size.innerHTML,-1);
if(_89c!=-1){
dojo.connect(size,"onclick",dojo.hitch(this,this.setPageSize,_89c));
}
}
}
this.renderer.renderLoading(this,this.streamNode);
},destroy:function(){
if(this.req&&!this.req.ioArgs._finished){
this.req.cancel();
}
if(this.renderer){
this.renderer.destroy();
this.renderer=null;
}
this.inherited(arguments);
},setPageSize:function(size,e){
if(e){
dojo.stopEvent(e);
}
if(this.data){
if(this.data.fromUrl){
var _89f=this.data.paging;
if(_89f.size!=size&&size>0){
var url=_89f.getPageUrl(1,size);
if(url){
this.url=url;
this.refresh();
}
}
}
}
},page:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(isNaN(page)||page<1){
page=1;
}
if(this.data){
if(this.data.fromUrl){
var _8a3=this.data.paging;
var url=_8a3.getPageUrl(page);
if(url){
this.url=url;
this.refresh();
}
}
}
},next:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.data){
if(this.data.fromUrl){
var _8a6=this.data.paging;
var url=_8a6.getNextUrl();
if(url){
this.url=url;
this.refresh();
}
}
}
},previous:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.data){
if(this.data.fromUrl){
var _8a9=this.data.paging;
var url=_8a9.getPreviousUrl();
if(url){
this.url=url;
this.refresh();
}
}
}
},refresh:function(){
if(this.data){
if(this.data.fromUrl){
this.update(null);
}else{
this.update();
}
}
},update:function(data){
if(data){
if(!data.paging&&(data.xml||data.json)){
data.paging=this.getPaging();
if(data.xml){
data.paging.detect(data.url,data.xml);
}else{
if(data.json){
data.paging.detect(data.url,data.json,"json");
}
}
if(this.handlePastLastPage(data.paging)){
return;
}
}
}
if(arguments.length>0){
this.data=data;
}
if(!this.data){
this._loadFromUrl(this.url);
}else{
if(this.data.error){
if(typeof this.data.error.message!="undefined"){
this._updateWithError(this.data.error);
}else{
this._updateWithError({type:"unknown",message:this._strings.ERROR});
}
}else{
if(this.data.xml){
if(this.handleAsXsl){
var _8ac=this._cleanFeed(response);
_8ac=this._renderXSLT(_8ac);
this.streamNode.innerHTML=_8ac;
this.renderer.postRender(this,this.streamNode,this.data);
}else{
this.renderer.render(this,this.streamNode,this.data);
}
this.onUpdate(this.data);
}else{
if(this.data.json){
this.renderer.render(this,this.streamNode,this.data);
this.onUpdate(this.data);
}else{
this.renderer.renderEmpty(this,this.streamNode,this.data);
this.onUpdate(this.data);
}
}
}
}
},updateItem:function(item,_8ae){
this.renderer.updateItem(this,this.data,this.streamNode,item,_8ae);
},_updateWithError:function(_8af){
this.data={fromUrl:true,error:_8af};
this.renderer.renderError(this,this.streamNode,this.data,_8af);
},_loadFromUrl:function(url){
if(!url||url==""){
this._updateWithError({message:"No URL specified",type:"noUrl"});
}else{
if(this.req&&!this.req.ioArgs._finished){
this.req.cancel();
}
var _8b1=this.handleAs||"xml";
if(this.handleAsXsl){
_8b1="text";
}
if(this.proxyServlet){
this.req=this.net.get({url:this.proxyServlet,handleAs:_8b1,timeout:this.timeoutRetrieve*1000,handle:dojo.hitch(this,this._loadFromUrlComplete),content:{url:url}});
}else{
this.req=this.net.get({url:url,handleAs:_8b1,timeout:this.timeoutRetrieve*1000,handle:dojo.hitch(this,this._loadFromUrlComplete)});
}
}
},getPaging:function(){
return new quickr.widget.StreamPaging({checkForMore:this.checkForMore});
},resetData:function(){
if(this.data){
delete this.data.xml;
delete this.data.json;
}
},_loadFromUrlComplete:function(_8b2,_8b3){
_8b3._finished=true;
if(_8b2 instanceof Error){
if(_8b2.dojoType=="cancel"){
console.log("Request cancelled.");
this._updateWithError({message:this._strings.ERROR_REQUEST_CANCELLED,type:"requestCancelled"});
}else{
if(_8b2.dojoType=="timeout"){
console.log("Request timed out.");
this._updateWithError({message:this._strings.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"});
}else{
if(_8b3.xhr.status==404){
console.error(_8b2);
this._updateWithError({message:this._strings.EMPTY,type:"noFiles"});
}else{
console.error(_8b2);
this._updateWithError({message:this._strings.ERROR,type:"unknown"});
}
}
}
}else{
var data={url:_8b3.url,fromUrl:true};
data.paging=this.getPaging();
if(_8b3.handleAs=="xml"){
data.xml=_8b2.documentElement;
data.paging.detect(_8b3.url,_8b2.documentElement);
}else{
if(_8b3.handleAs=="json-comment-optional"){
data.json=_8b2;
data.paging.detect(_8b3.url,_8b2,"json");
}
}
if(this.handlePastLastPage(data.paging)){
return;
}
this.data=data;
if(this.handleAsXsl){
var _8b5=this._cleanFeed(_8b2);
_8b5=this._renderXSLT(_8b5);
this.streamNode.innerHTML=_8b5;
this.renderer.postRender(this,this.streamNode,data);
}else{
this.renderer.render(this,this.streamNode,data);
}
this.onUpdate(this.data);
}
this.req=null;
return _8b2;
},handlePastLastPage:function(_8b6){
if(_8b6.isPastEnd()){
var url=_8b6.getLastPageUrl();
this.url=url;
this.update();
return true;
}
return false;
},onUpdate:function(data){
},_renderXSLT:function(xml){
return xml;
}});
}
if(!dojo._hasResource["quickr.widget.TagStream"]){
dojo._hasResource["quickr.widget.TagStream"]=true;
dojo.provide("quickr.widget.TagStream");
dojo.declare("quickr.widget.TagStreamRenderer",[quickr.widget.StreamRenderer],{minimalPaging:true,displayCloud:function(div,tags){
},render:function(_8bc,el,data,item){
this.updatePaging(_8bc,el,data);
this.cleanup();
quickr.share.util.removeChildren(el);
dojo.addClass(el,"lotusDialogContent");
dojo.addClass(el,"lotusTagCloud");
if(data.json.items.length==0){
this.renderEmpty(_8bc,el,data);
}else{
this.displayCloud(el,data.json.items);
}
}});
dojo.declare("quickr.widget.TagStream",[quickr.widget.Stream],{handleAs:"json-comment-optional",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusDialogContent\" dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\" style=\"${_initPageStyle}\">\n     <div class=\"lotusLeft\" dojoAttachPoint=\"loadingNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>\n</div>\n",url:null,displayCloud:function(div,tags){
},renderer:new quickr.widget.TagStreamRenderer(),_loaded:false,postMixInProperties:function(){
this.renderer.displayCloud=this.displayCloud;
this.inherited(arguments);
},_loadFromUrl:function(url){
if(url&&url!=""&&this._loaded){
this.renderer.renderLoading(this,this.loadingNode);
}
this.inherited(arguments);
},_loadFromUrlComplete:function(){
this._loaded=true;
quickr.share.util.removeChildren(this.loadingNode);
this.inherited(arguments);
}});
}
if(!dojo._hasResource["quickr.util.misc"]){
dojo._hasResource["quickr.util.misc"]=true;
dojo.provide("quickr.util.misc");
dojo.j=dojo.getObject("Jiffy")||{mark:function(){
},measure:function(){
}};
quickr.util.misc={indexById:function(arr,attr,_8c5){
if(arr){
for(var i=0;i<arr.length;i++){
if(arr[i]&&arr[i][attr]==_8c5){
return arr[i];
}
}
}
},initFromArray:function(obj,a,b,c,d,e,f,g){
if(obj==null){
return null;
}
var type=typeof obj;
if(type=="function"){
return obj(a,b,c,d,e,f,g);
}
var arr=[];
if(dojo.isArray(obj)){
for(var i=0;i<obj.length;i++){
var o=obj[i];
var type=typeof o;
if(type=="function"){
arr[i]=o(a,b,c,d,e,f,g);
}
if(type=="string"){
arr[i]=new dojo.getObject(o)(a,b,c,d,e,f,g);
}
}
}
return arr;
},sort:function(arr){
if(!dojo.isArray(arr)||arr.length<2){
return arr;
}
if(arguments.length==1){
return arr.sort();
}
var keys=arguments;
var _8d5=[];
for(var i=1;i<keys.length;i++){
var key=keys[i];
var _8d8=1;
if(dojo.isArray(key)){
_8d8=key[1];
key=key[0];
}
var f=(typeof arr[0][key]=="string"&&"".localeCompare)?quickr.util.misc.orderLocale:quickr.util.misc.order;
_8d5.push(dojo.partial(f,key,_8d8));
}
if(_8d5.length==1){
return arr.sort(_8d5[0]);
}
return arr.sort(function(a,b){
var l=_8d5.length;
for(var i=0;i<l;i++){
var c=_8d5[i](a,b);
if(c!=0){
return c;
}
}
return 0;
});
},orderLocale:function(key,_8e0,a,b){
return a[key].localeCompare(b[key])*_8e0;
},order:function(key,_8e4,a,b){
a=a[key];
b=b[key];
if(a==b){
return 0;
}
return (a>b?1:-1)*_8e4;
},destroy:function(){
if(arguments.length>1){
for(var i=0;i<arguments.length;i++){
quickr.util.misc.destroy(arguments[i]);
}
}else{
if(arguments.length==1){
var arg=arguments[0];
if(arg&&typeof arg=="object"&&arg.length>0){
for(var i=0;i<arg.length;i++){
quickr.util.misc.destroy(arg[i]);
}
}else{
var w=arg;
if(typeof w=="string"){
w=dijit.byId(w);
}
if(w){
if(w.destroyRecursive){
w.destroyRecursive();
}else{
if(w.destroy){
w.destroy();
}
}
}
}
}
}
},first:function(o){
return (o&&dojo.isArrayLike(o))?o[0]:o;
},last:function(o){
return (o&&dojo.isArrayLike(o))?o[o.length-1]:o;
},size:function(o){
var c=0;
if(o){
for(var i in o){
c++;
}
}
return c;
},date:{convertAtomDate:dojo.date.stamp.fromISOString}};
}
if(!dojo._hasResource["quickr.widget.TagList"]){
dojo._hasResource["quickr.widget.TagList"]=true;
dojo.provide("quickr.widget.TagList");
dojo.declare("quickr.widget.TagList",[dijit._Widget],{additionalClasses:"",initialTagList:15,initialTagCloud:30,initialAllTagCount:100,loadOnStartup:true,hasTags:false,tags:null,tagScope:{},tagStore:null,url:null,activeTags:null,defaultView:"list",tagCloudFontSize:5,wDialog:"650px",baseImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/",stylesImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/",_strings:{},postMixInProperties:function(){
this.activeTags=this.activeTags||{};
},buildRendering:function(){
var d=document;
var el=this.domNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
var div=this.loadingNode=d.createElement("div");
div.className="qkrLoading";
var img=d.createElement("img");
img.src=this.stylesImageUri+"loadingSmall.gif";
img.setAttribute("alt",this._strings.LOADING);
div.appendChild(img);
div.appendChild(d.createTextNode(this._strings.LOADING));
el.appendChild(div);
if(this.loadOnStartup){
this.load();
}else{
this.hasTags=false;
this.tags=[];
this.addActiveTags();
this.update();
}
},reload:function(){
if(this.listNode){
this.listNode.parentNode.removeChild(this.listNode);
this.listNode=null;
}
if(this.cloudNode){
this.cloudNode.parentNode.removeChild(this.cloudNode);
this.cloudNode=null;
}
if(this.menuNode){
this.menuNode.parentNode.removeChild(this.menuNode);
this.menuNode=null;
}
if(this.loadingNode){
this.loadingNode.style.display="";
}
this.tags=null;
this.cloudTags=null;
this.tagStore.clear();
this.load();
},load:function(){
this.tagStore.fetch({queryOptions:this.tagScope,count:Math.max(this.initialTagList,this.initialTagCloud),key:"weight",order:"dsc",onComplete:dojo.hitch(this,this.loadTags),onError:dojo.hitch(this,this.loadError)});
},loadError:function(){
this.hasTags=false;
this.tags=[];
this.addActiveTags();
this.update();
},loadTags:function(_8f3){
if(_8f3){
var tags=dojo.clone(_8f3);
this.hasTags=tags.length>0;
this.cloudTags=tags.slice(0,Math.min(tags.length,this.initialTagCloud));
this.tags=quickr.util.misc.sort(tags,["weight",-1],"name");
this.addActiveTags();
this.update();
}
},updateError:function(){
var d=document;
var el=this.domNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
var div=d.createElement("div");
div.className="qkrError";
div.appendChild(d.createTextNode(this._strings.ERROR));
el.appendChild(div);
},addActiveTags:function(){
var tags=this.tags;
var _8f9=[];
for(var key in this.activeTags){
var _8fb=false;
dojo.forEach(this.tags,function(tag){
if(tag.name==key){
_8fb=true;
}
});
if(!_8fb){
_8f9.push({name:key});
}
}
_8f9=quickr.share.util.sort(_8f9,["name",-1]);
dojo.forEach(_8f9,function(_8fd){
tags.unshift(_8fd);
});
},update:function(op,e){
if(e){
dojo.stopEvent(e);
}
if(op){
this.defaultView=op;
this.onviewchange(op);
}else{
op=this.hasTags?this.defaultView:"list";
}
if(op=="list"){
this.renderList();
}else{
if(op=="cloud"){
this.renderCloud();
}
}
},onviewchange:function(view){
},renderTag:function(d,el,tag,_904,_905){
var li=d.createElement("li");
if(_905){
dojo.addClass(li,"lotusSelected");
}
if(this.generateLinkToTag){
var a=d.createElement("a");
a.className="lotusLeft";
this.generateLinkToTag(tag.name,a);
a.appendChild(d.createTextNode(tag.name));
a.title=tag.name;
li.appendChild(a);
}else{
var span=d.createElement("span");
span.className="lotusLeft";
span.appendChild(d.createTextNode(tag.name));
span.title=tag.name;
li.appendChild(span);
}
li.appendChild(d.createTextNode((tag.weight||tag.weight==0)?dojo.number.format(Math.max(tag.weight,0)):" "));
el.appendChild(li);
},renderList:function(){
var d=document;
var tags=this.tags;
if(this.cloudNode){
this.cloudNode.style.display="none";
}
if(!this.listNode){
var el=this.domNode;
var div=this.listNode=d.createElement("div");
if(tags.length==0){
var _90d=d.createElement("div");
_90d.className="qkrEmpty";
_90d.appendChild(d.createTextNode(this.msgNoTags?this.msgNoTags:this._strings.NO_TAGS));
div.appendChild(_90d);
el.appendChild(div);
this.loadingNode.style.display="none";
}else{
if(tags.length>0){
var ul=d.createElement("ul");
ul.className="lotusList lotusEditable lotusTags lotusMeta";
for(var i=0;i<tags.length;i++){
var _910=(this.activeTags&&this.activeTags[tags[i].name]);
if(_910||i<this.initialTagList){
this.renderTag(d,ul,tags[i],i,_910);
}
}
div.appendChild(ul);
var ul=d.createElement("li");
}
this.loadingNode.style.display="none";
el.appendChild(div);
this.renderMenu(true);
}
}else{
this.listNode.style.display="";
this.loadingNode.style.display="none";
this.renderMenu(true);
}
},renderCloud:function(){
var d=document;
var tags=this.cloudTags;
if(this.listNode){
this.listNode.style.display="none";
}
if(!this.cloudNode){
var el=this.domNode;
var div=this.cloudNode=d.createElement("div");
if(tags.length==0){
var _915=d.createElement("div");
_915.className="qkrEmpty";
_915.appendChild(d.createTextNode(this.msgNoTags?this.msgNoTags:this._strings.NO_TAGS));
div.appendChild(_915);
el.appendChild(div);
this.loadingNode.style.display="none";
}else{
dojo.addClass(div,"lotusTagCloud");
this.displayCloud(div,tags);
this.loadingNode.style.display="none";
el.appendChild(div);
this.renderMenu(false);
}
}else{
this.cloudNode.style.display="";
this.loadingNode.style.display="none";
this.renderMenu(false);
}
},renderTagForCloud:function(d,el,tag,_919,_91a,tc){
var li=d.createElement("li");
if(_91a){
dojo.addClass(li,"lotusSelected");
}
var _91d="lotusF"+tc;
if(this.generateLinkToTag){
var a=d.createElement("a");
dojo.addClass(a,_91d);
this.generateLinkToTag(tag.name,a);
if(this.dialog){
dojo.connect(a,"onclick",this,"cancelDialog");
}
a.appendChild(d.createTextNode(tag.name));
a.title=tag.name;
li.appendChild(a);
li.appendChild(d.createTextNode(" "));
}else{
var span=d.createElement("span");
dojo.addClass(span,_91d);
span.className="lotusLeft";
span.appendChild(d.createTextNode(tag.name));
span.title=tag.name;
li.appendChild(span);
}
el.appendChild(li);
el.appendChild(d.createTextNode(" "));
},renderMenu:function(_920){
var d=document;
var tags=this.tags;
var el=this.domNode;
if(this.menuNode){
while(this.menuNode.firstChild){
this.menuNode.removeChild(this.menuNode.firstChild);
}
this.menuNode.parentNode.removeChild(this.menuNode);
this.menuNode=null;
}
if(!this.hasTags){
return;
}
var div=this.menuNode=d.createElement("div");
var ul=d.createElement("ul");
ul.className="lotusActions lotusInlinelist";
var li=d.createElement("li");
li.className="lotusFirst";
li.appendChild(d.createTextNode(this._strings.VIEW_AS));
li.appendChild(d.createTextNode(" "));
if(_920){
li.appendChild(d.createTextNode(this._strings.LIST));
}else{
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.update,"list"));
a.appendChild(d.createTextNode(this._strings.LIST));
a.title=this._strings.LIST_TITLE;
li.appendChild(a);
}
ul.appendChild(li);
var li=d.createElement("li");
if(!_920){
li.appendChild(d.createTextNode(this._strings.CLOUD));
}else{
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.update,"cloud"));
a.appendChild(d.createTextNode(this._strings.CLOUD));
a.title=this._strings.CLOUD_TITLE;
li.appendChild(a);
}
ul.appendChild(li);
var li=d.createElement("li");
var img=d.createElement("img");
img.src=this.stylesImageUri+"iconPopup.gif";
img.setAttribute("alt",this._strings.OPEN);
li.appendChild(img);
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.renderAllPopup));
a.appendChild(d.createTextNode(this._strings.ALL));
a.title=this._strings.ALL_TITLE;
li.appendChild(a);
ul.appendChild(li);
div.appendChild(ul);
el.appendChild(div);
},renderAllPopup:function(){
if(!_929){
var d=document;
var div=d.createElement("DIV");
d.body.appendChild(div);
var _929=this.dialog=new quickr.widget.Dialog({duration:100},div);
this.createDialog(_929);
}
_929.show();
},createDialog:function(_92c){
var d=document;
var tags=this.tags;
if(_92c.titleBar){
_92c.titleBar.style.display="none";
}
var _92f=d.createElement("div");
_92f.className="lotusDialogBorder";
_92f.style.width=this.wDialog;
var el=d.createElement("div");
el.className="lotusDialog";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this._appstrings.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this._appstrings.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this._strings.POPUPTITLE));
el.appendChild(h1);
var _935=d.createElement("div");
var _936=d.createElement("div");
_935.appendChild(_936);
el.appendChild(_935);
_92f.appendChild(el);
_92c.setContent(_92f);
var opt=dojo.mixin({sK:"name",sO:"asc",includeCount:true,pageSize:this.initialAllTagCount},this.tagScope);
var url=quickr.share.util.rewriteUri(this.url,opt);
this.tagStream=new quickr.widget.TagStream({_strings:this._strings,url:url,net:this.net,displayCloud:dojo.hitch(this,this.displayCloud),onUpdate:dojo.hitch(_92c,_92c.layout)},_936);
this.tagStream.update();
},destroy:function(){
this.cancelDialog();
this.inherited(arguments);
},cancelDialog:function(e){
if(e){
dojo.stopEvent(e);
}
var _93a=this.dialog;
if(_93a){
_93a.onCancel();
this.dialog.destroyRecursive();
this.dialog=null;
}
if(this.tagStream){
quickr.share.util.destroy(this.tagStream);
this.tagStream=null;
}
},displayCloud:function(div,tags){
var d=document;
var min;
var max;
for(var i=0;i<tags.length;i++){
if(tags[i].weight>=0){
if(!(min>=0)||min>tags[i].weight){
min=tags[i].weight;
}
if(!(max>=0)||max<tags[i].weight){
max=tags[i].weight;
}
}
}
var _941=max-min;
var _942=_941==0?0:(1/_941);
var _943=1;
var _944=this.tagCloudFontSize;
while(_941<_944-_943){
if(_941<_944-++_943){
_944--;
}
}
var ul=d.createElement("ul");
for(var i=0;i<tags.length;i++){
var _946=tags[i].weight>=0?((tags[i].weight-min)*_942):0.5;
var _947=_943+Math.round((_944-_943)*_946);
this.renderTagForCloud(d,ul,tags[i],i,(this.activeTags&&this.activeTags[tags[i].name]),_947);
}
div.appendChild(ul);
}});
}
if(!dojo._hasResource["quickr.widget.ImagePop"]){
dojo._hasResource["quickr.widget.ImagePop"]=true;
dojo.provide("quickr.widget.ImagePop");
dojo.declare("quickr.widget.ImagePop",[dijit._Widget],{showDelay:100,hideDelay:100,buildRendering:function(){
var d=document;
var el=this.domNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
var t=this.target;
dojo.forEach(["onMouseOver","onMouseOut","onHover","onUnHover"],function(_94b){
this.connect(t,_94b.toLowerCase(),"_"+_94b);
},this);
},uninitialize:function(){
this.close();
if(this.listeners){
dojo.forEach(this._listeners,dojo.disconnect);
delete this._listeners;
}
},_onMouseOver:function(e){
this._onHover(e);
},_onMouseOut:function(e){
if(dojo.isDescendant(e.relatedTarget,e.target)){
return;
}
this._onUnHover(e);
},_onHover:function(e){
if(this._hideTimer){
clearTimeout(this._hideTimer);
delete this._hideTimer;
}
if(!this._showTimer){
var _94f=e.target;
this._showTimer=setTimeout(dojo.hitch(this,function(){
this.open(_94f);
}),this.showDelay);
}
},_onUnHover:function(e){
if(this._focus){
return;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
if(!this._hideTimer){
this._hideTimer=setTimeout(dojo.hitch(this,"close"),this.hideDelay);
}
},_onMouseOverT:function(){
if(this._connectNode){
this._onMouseOver({target:this._connectNode});
}
},_onMouseOutT:function(e){
if(dojo.isDescendant(e.relatedTarget,e.target)){
return;
}
this._onUnHover({target:this._connectNode});
},_onHoverT:function(){
if(this._connectNode){
this._onHover({target:this._connectNode});
}
},_onUnHoverT:function(){
if(this._connectNode){
this._onUnHover({target:this._connectNode});
}
},_getImage:function(){
var img=this.largeImage;
if(!img){
img=this.largeImage=document.createElement("img");
img.src=this.target.src;
dijit.popup.prepare(img);
this._listeners=[dojo.connect(img,"onmouseover",this,"_onMouseOverT"),dojo.connect(img,"onmouseout",this,"_onMouseOutT"),dojo.connect(img,"onhover",this,"_onHoverT"),dojo.connect(img,"onunhover",this,"_onUnHoverT")];
}
return img;
},_disconnectTooltip:function(){
dojo.forEach(this._listeners||[],function(l){
dojo.disconnect(l);
});
delete this._listeners;
},open:function(_954){
_954=_954||this.target;
if(!_954){
return;
}
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
var img=this._connectNode=this._getImage();
img.style.display="";
var a=dojo.coords(this.target,true);
var b=dojo.marginBox(img);
dojo.marginBox(img,{l:a.x-(b.w-a.w)/2,t:a.y-(b.h-a.h)/2});
img.style.visibility="";
},close:function(){
if(this._showTimer){
clearTimeout(this._showTimer);
delete this._showTimer;
}
delete this._connectNode;
var img=this._getImage();
img.style.display="none";
img.style.visibility="hidden";
}});
}
if(!dojo._hasResource["quickr.share.action.Action"]){
dojo._hasResource["quickr.share.action.Action"]=true;
dojo.provide("quickr.share.action.Action");
dojo.declare("quickr.share.action.Action",null,{constructor:function(opts){
if(arguments.length==1){
dojo.mixin(this,arguments[0]);
}
},name:"",tooltip:"",isValid:function(item,opt){
return true;
},isEnabled:function(item,opt){
return true;
},getName:function(item,opt){
return this.name;
},getTooltip:function(item,opt){
return this.tooltip;
},execute:function(item,opt){
},getUrlResource:function(item,opt){
return null;
},requiresExtra:function(){
return false;
}});
}
if(!dojo._hasResource["quickr.share.action.EditDraft"]){
dojo._hasResource["quickr.share.action.EditDraft"]=true;
dojo.provide("quickr.share.action.EditDraft");
dojo.declare("quickr.share.action.EditDraft",[quickr.share.action.Action],{constructor:function(app,_967){
this.app=app;
this.name=this.app.nls.CONTENT.EDIT;
this.tooltip=this.app.nls.CONTENT.EDIT_DRAFT_TOOLTIP;
},isValid:function(item,opt){
return true;
},execute:function(item,opt,e){
if(e){
dojo.stopEvent(e);
}
var _96d;
var _96e=null;
var _96f=null;
if(item.getDraftId){
_96d=item.getDraftId();
_96f=item.getAuthor();
_96e=true;
}else{
_96d=item.getId();
_96f=item.getDocumentAuthor();
_96e=item.getDocumentId();
}
if(_96e){
this.app.navigate(this.app.routes.getEditDraftSummaryUrl(_96f?_96f.id:this.app.authenticatedUser.id,_96d));
}else{
this.app.navigate(this.app.routes.getUserCreatePagesUrl(this.app.authenticatedUser.id,{draftId:_96d}));
}
},complete:function(_970,_971){
if(_970 instanceof Error){
this.onerror("unknown");
}else{
this.onsuccess();
}
},onsuccess:function(){
},ondelete:function(){
},onerror:function(code){
alert(this.app.nls.CONTENT.EDIT_PAGE_ERROR);
}});
}
if(!dojo._hasResource["quickr.widget.Dialog"]){
dojo._hasResource["quickr.widget.Dialog"]=true;
dojo.provide("quickr.widget.Dialog");
dojo.declare("quickr.widget.Dialog",[dijit.Dialog],{setContent:function(_973){
this.inherited(arguments);
if(dojo.isObject(_973)&&_973.nodeType){
this._contentSetter.parseResults=dojo.query("[widgetId]",_973).map(dijit.byNode);
}
},show:function(){
var _974=!this.open;
this.inherited(arguments);
if(_974){
this._modalconnects.push(dojo.connect(window,"onresize",this,"layout"));
}
},_position:function(){
if(dojo.hasClass(dojo.body(),"dojoMove")){
return;
}
var _975=dijit.getViewport();
var mb=dojo.marginBox(this.domNode);
if(this._compact){
this._compact(_975,mb);
mb=dojo.marginBox(this.domNode);
}
var _977=this.domNode.style;
_977.left=Math.floor((_975.l+(_975.w-mb.w)/2))+"px";
_977.top=Math.floor((_975.t+(_975.h-mb.h)/2))+"px";
},_scrollingX:false,_scrollingY:false,_compact:function(_978,md){
var el=dojo.query("div.lotusDialogContent",this.domNode)[0];
if(el){
var div;
if(!dojo.hasClass(el,"_qkrDialogCompact")){
div=document.createElement("div");
el.parentNode.insertBefore(div,el);
el.parentNode.removeChild(el);
div.appendChild(el);
dojo.addClass(el,"_qkrDialogCompact");
}else{
div=el.parentNode;
}
var ms=dojo.marginBox(div);
var mc=dojo.marginBox(el);
var _97e=md.h-ms.h;
var _97f=false;
if((_97e+mc.h)>_978.h){
_97f=true;
dojo.addClass(div,"qkrDialogScrolledY");
dojo.marginBox(div,{h:_978.h-_97e});
dojo.marginBox(this.domNode,{h:_978.h});
}else{
dojo.removeClass(div,"qkrDialogScrolledY");
div.style.height="";
this.domNode.style.height="";
}
var _980=dojo.query("div.lotusDialogBorder",this.domNode)[0];
if(_980&&el.firstChild){
var _981=dojo.marginBox(_980).w;
var _982=_981-dojo.marginBox(div).w;
var _983=_981-dojo.contentBox(div).w;
var _984=dojo.marginBox(el).w-dojo.contentBox(el).w;
var _985=0;
var _986=0;
while(!_986&&el.childNodes[_985]){
_986=dojo.marginBox(el.childNodes[_985++]).w;
}
var _987=_986?(_986+_983+_984):_981;
if(dojo.isIE&&dojo.isIE>=7){
if(_97f||this._scrollingY){
_987-=16;
}
if(this._scrollingX){
_987+=16;
}
}
var _988=false;
var _989=_978.w-4;
if(_987>_989){
_988=true;
dojo.addClass(div,"qkrDialogScrolledX");
_987=_989;
}else{
div.scrollLeft=0;
dojo.removeClass(div,"qkrDialogScrolledX");
}
if(_981<_987||_988){
dojo.marginBox(div,{w:_987-_982});
dojo.marginBox(_980,{w:_987});
dojo.marginBox(this.domNode,{w:_987});
}
}
this._scrollingY=_97f;
this._scrollingX=_988;
}
}});
}
if(!dojo._hasResource["quickr.widget.ProtectedAction"]){
dojo._hasResource["quickr.widget.ProtectedAction"]=true;
dojo.provide("quickr.widget.ProtectedAction");
dojo.declare("quickr.widget.ProtectedAction",null,{startAction:function(){
if(this._actionInProgress){
return false;
}
this._actionInProgress=true;
return true;
},endAction:function(){
this._actionInProgress=false;
},enableInput:function(el){
this._toggleInput(el,true);
},disableInput:function(el){
this._toggleInput(el,false);
},_toggleInput:function(el,_98d){
dojo.forEach(dojo.query("INPUT",el),function(el){
if(el.type!="file"&&el.type!="hidden"){
el.disabled=!_98d;
}
});
dojo.forEach(dojo.query("TEXTAREA",el),function(el){
el.disabled=!_98d;
});
dojo.forEach(dojo.query("BUTTON",el),function(el){
el.disabled=!_98d;
});
dojo.forEach(dojo.query("SELECT",el),function(el){
el.disabled=!_98d;
});
}});
}
if(!dojo._hasResource["quickr.share.action.DialogAction"]){
dojo._hasResource["quickr.share.action.DialogAction"]=true;
dojo.provide("quickr.share.action.DialogAction");
dojo.declare("quickr.share.action.DialogAction",[quickr.share.action.Action,quickr.widget.ProtectedAction],{constructor:function(app,_993,opt){
this.listeners=[];
},execute:function(item,opt,e){
if(e){
dojo.stopEvent(e);
}
var _998=this.dialog;
if(_998&&_998.open){
return;
}
this.endAction();
if(this.alwaysRecreate&&_998){
_998.cancel();
_998.hide();
_998.destroyRecursive();
_998=this.dialog=null;
}
if(!_998){
var d=document;
var div=d.createElement("DIV");
d.body.appendChild(div);
var _998=new quickr.widget.Dialog({duration:100},div);
dojo.connect(_998,"hide",this,"onDialogCancel");
dojo.connect(_998,"onCancel",this,"onDialogCancel");
this.dialog=_998;
this.createDialog(item,opt,_998);
}else{
this.updateDialog(item,opt,_998);
}
if(_998.titleBar){
_998.titleBar.style.display="none";
}
_998.show();
},cancelDialog:function(e){
if(e){
dojo.stopEvent(e);
}
var _99c=this.dialog;
if(_99c){
_99c.onCancel();
}
},onDialogCancel:function(){
},destroy:function(){
dojo.forEach(this.listeners,dojo.disconnect);
this.listeners=[];
if(this.dialog){
this.dialog.destroyRecursive();
}
this.dialog=null;
},enableInput:function(_99d){
_99d=_99d||this.dialog;
if(_99d){
if(_99d.progressNode){
_99d.progressNode.style.display="none";
}
this._toggleInput(_99d.domNode,true);
}
},disableInput:function(_99e){
_99e=_99e||this.dialog;
if(_99e){
if(_99e.progressNode){
_99e.progressNode.style.display="";
}
this._toggleInput(_99e.domNode,false);
}
},resize:function(){
if(this.dialog){
this.dialog._position();
}
},protectedSave:function(){
if(!this.startAction()||!this.dialog||!this.dialog.open){
return;
}
if(this.monitor){
this.monitor.cancel();
}
try{
if(this.save.apply(this,arguments)){
this.disableInput();
}else{
this.endAction();
}
}
catch(e){
console.error(e);
this.endAction();
this.enableInput();
}
},protectedComplete:function(){
var _99f=false;
try{
var _9a0=arguments[arguments.length-1];
_9a0._finished=true;
if(this.monitor){
this.monitor.cancel();
}
if(_9a0.explicitCancel){
return;
}
_99f=this.complete.apply(this,arguments);
}
finally{
if(!_99f){
this.endAction();
this.enableInput();
}
}
if(_99f){
this.close();
}
},createMessage:function(s,args){
if(!args){
return {message:s};
}
var d=document;
var el=d.createDocumentFragment();
quickr.util.html.substitute(d,el,s,args,null,this);
return {message:el};
},onerror:function(code){
alert(this.nls.ERROR_OCCURRED);
},onsuccess:function(){
this.cancelDialog();
this.onSuccess({});
},onSuccess:function(e){
}});
}
if(!dojo._hasResource["quickr.share.wiki.util"]){
dojo._hasResource["quickr.share.wiki.util"]=true;
dojo.provide("quickr.share.wiki.util");
quickr.share.wiki.util.NAMESPACES={CA:{LONG:"http://www.ibm.com/xmlns/prod/composite-applications/v1.0",SHORT:"ca"}};
quickr.share.wiki.util.NAMESPACE_PREFIX={};
for(var key in quickr.share.wiki.util.NAMESPACES){
var value=quickr.share.wiki.util.NAMESPACES[key];
quickr.share.wiki.util[key+"_NAMESPACE"]=value;
quickr.share.wiki.util.NAMESPACE_PREFIX[value.SHORT]=value.LONG;
}
quickr.share.wiki.util.serializeObject=function(obj,rec){
rec=typeof rec=="undefined"?0:rec;
var s="{";
var p=[];
for(var i in obj){
var t=typeof (obj[i]);
if(t!="function"){
if(t!="object"){
p.push(i+":\""+obj[i]+"\"");
}else{
if(rec<10){
p.push(i+":"+quickr.share.wiki.util.serializeObject(obj[i]),++rec);
}
}
}
}
return s+p.join(",")+"}";
};
quickr.share.wiki.util.getWikiPostBody=function(id,_9ae,_9af,_9b0,_9b1,tags){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE,quickr.share.wiki.util.CA_NAMESPACE]);
var _9b4=doc.documentElement;
var _9b5=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_9b5.setAttribute("term","wiki");
_9b5.setAttribute("label","wiki");
_9b5.setAttribute("scheme","tag:ibm.com,2006:td/type");
_9b4.appendChild(_9b5);
var _9b6=quickr.share.util.createElementNS(doc,"title",quickr.share.util.ATOM_NAMESPACE);
_9b6.setAttribute("type","text");
_9b6.appendChild(doc.createTextNode(_9ae));
_9b4.appendChild(_9b6);
var _9b7=quickr.share.util.createElementNS(doc,"sharedResourceType",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9b7.appendChild(doc.createTextNode("wiki"));
_9b4.appendChild(_9b7);
var _9b8=quickr.share.util.createElementNS(doc,"sharedWith",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var _w=function(name){
return dojo.isIE?name:(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":"+name);
};
for(var i=0;i<_9b0.length;i++){
var _9bc=quickr.share.util.createElementNS(doc,"member",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_9bc,_w("id"),_9b0[i][0],quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_9bc,_w("type"),"user",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_9bc,_w("role"),_9b0[i][1],quickr.share.wiki.util.CA_NAMESPACE);
_9b8.appendChild(_9bc);
}
for(var i=0;i<_9b1.length;i++){
var _9bc=quickr.share.util.createElementNS(doc,"member",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_9bc,_w("id"),_9b1[i][0],quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_9bc,_w("type"),_9b1[i][2]?"virtual":"group",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_9bc,_w("role"),_9b1[i][1],quickr.share.wiki.util.CA_NAMESPACE);
_9b8.appendChild(_9bc);
}
_9b4.appendChild(_9b8);
for(var i=0;i<tags.length;i++){
var _9b5=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_9b5.setAttribute("term",tags[i]);
_9b5.setAttribute("label",tags[i]);
_9b4.appendChild(_9b5);
}
var _9bd=quickr.share.util.createElementNS(doc,"summary",quickr.share.util.ATOM_NAMESPACE);
_9bd.setAttribute("type","text");
_9bd.appendChild(doc.createTextNode(_9af));
_9b4.appendChild(_9bd);
var _9be=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_9be.setAttribute("type","application/atom+xml");
_9b4.appendChild(_9be);
var _9bf=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
return _9bf;
};
quickr.share.wiki.util.getPagePostBodyWithParent=function(id,HTML,_9c2,_9c3,_9c4,_9c5,_9c6,_9c7,_9c8,_9c9,_9ca){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var _9cc=doc.documentElement;
var _9cd=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_9cd.setAttribute("term",_9c8?"draft":"page");
_9cd.setAttribute("label",_9c8?"draft":"page");
_9cd.setAttribute("scheme","tag:ibm.com,2006:td/type");
_9cc.appendChild(_9cd);
if(_9c9){
var _9ce=quickr.share.util.createElementNS(doc,"draftUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9ce.appendChild(doc.createTextNode(_9c9));
_9cc.appendChild(_9ce);
}
if(_9ca){
var _9cf=quickr.share.util.createElementNS(doc,"parentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9cf.appendChild(doc.createTextNode(_9ca));
_9cc.appendChild(_9cf);
}
var _9d0=quickr.share.util.createElementNS(doc,"title",quickr.share.util.ATOM_NAMESPACE);
_9d0.appendChild(doc.createTextNode(_9c2));
_9cc.appendChild(_9d0);
var _9d1=quickr.share.util.createElementNS(doc,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9d1.appendChild(doc.createTextNode(_9c2));
_9cc.appendChild(_9d1);
var _9d2=quickr.share.util.createElementNS(doc,"visibility",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9d2.appendChild(doc.createTextNode((_9c5)?"public":"private"));
_9cc.appendChild(_9d2);
if(_9c6==true||_9c6==false){
var _9d3=quickr.share.util.createElementNS(doc,"propagation",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9d3.appendChild(doc.createTextNode(_9c6?"true":"false"));
_9cc.appendChild(_9d3);
}
var _9d4=quickr.share.util.createElementNS(doc,"summary",quickr.share.util.ATOM_NAMESPACE);
_9d4.appendChild(doc.createTextNode(_9c3));
_9cc.appendChild(_9d4);
if(_9c4){
var _9d5=quickr.share.util.createElementNS(doc,"changeSummary",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_9d5.appendChild(doc.createTextNode(_9c4));
_9cc.appendChild(_9d5);
}
var _9d6=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_9d6.setAttribute("type",_9c7);
_9d6.appendChild(doc.createTextNode(HTML));
_9cc.appendChild(_9d6);
var _9d7=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
return _9d7;
};
quickr.share.wiki.util.getPagePostBody=function(id,HTML,_9da,_9db,_9dc,_9dd,_9de,_9df,_9e0,_9e1){
return quickr.share.wiki.util.getPagePostBodyWithParent(id,HTML,_9da,_9db,_9dc,_9dd,_9de,_9df,_9e0,_9e1,null);
};
quickr.share.wiki.util.wrapWithQuotes=function(_9e2){
return "&ldquo;"+_9e2+"&rdquo;";
};
quickr.share.wiki.util.shallowClone=function(obj){
if(typeof (obj)=="object"){
var _9e4=null;
if(obj instanceof Array){
_9e4=[];
}else{
_9e4={};
}
for(var i in obj){
_9e4[i]=obj[i];
}
return _9e4;
}else{
return obj;
}
};
quickr.share.wiki.util.getFormElementValue=function(frm,name){
if(!frm||!frm.elements||!frm.elements[name]){
return null;
}
var el=frm.elements[name];
if(el.length){
for(var i=0;i<el.length;i++){
if(el[i].checked){
return el[i].value;
}
}
}
return el.value;
};
quickr.share.wiki.util.getPageDescription=function(_9ea,_9eb){
var _9ec=quickr.share.wiki.util.stripXMLPreamble(_9ea);
_9ec=quickr.share.wiki.util.stripTags(_9ec);
_9ec=quickr.share.wiki.util.stripEntities(_9ec);
_9ec=quickr.share.wiki.util.trim(_9ec,true);
return _9ec.substr(0,_9eb/4);
};
quickr.share.wiki.util.trim=function(s){
if(!s){
return "";
}
return s.replace(/^\s*/,"").replace(/\s*$/,"");
};
quickr.share.wiki.util.stripEntities=function(html){
return html.replace(/&[^;]+;/g,"");
};
quickr.share.wiki.util.substringUtf8=function(s,_9f0){
s=s.substring(0,s.length);
while(quickr.share.util.lengthUtf8(s)>_9f0){
s=s.substring(0,s.length-1);
}
return s;
};
quickr.share.wiki.util.stripXMLPreamble=function(html){
var c=0;
if((c=html.indexOf("<?"))!=-1){
html=html.substring(html.indexOf("?>",c)+2);
}
if((c=html.indexOf("<!DOCTYPE"))!=-1){
html=html.substring(html.indexOf(">]>",c)+3);
}
return html;
};
quickr.share.wiki.util.stripTags=function(html){
var a=0,b=0,c=0,s="";
while(a<html.length){
if((a=html.indexOf("<",c))!=-1){
s+=html.substring(c,a);
if((b=html.indexOf(">",a))!=-1){
c=b+1;
}
}else{
s+=html.substring(c);
break;
}
}
return s;
};
quickr.share.wiki.util.prependXMLDeclaration=function(xml){
if(xml.indexOf("<?xml ")==0){
xml=xml.substr(xml.indexOf("?>")+2);
}
return quickr.share.util.XML_DECLARATION+xml;
};
}
if(!dojo._hasResource["quickr.share.wiki.action.ConfirmDialogAction"]){
dojo._hasResource["quickr.share.wiki.action.ConfirmDialogAction"]=true;
dojo.provide("quickr.share.wiki.action.ConfirmDialogAction");
dojo.declare("quickr.share.wiki.action.ConfirmDialogAction",[quickr.share.action.DialogAction],{wDialog:"370px",alwaysRecreate:true,constructor:function(){
},isValid:function(user,opt){
},createDialog:function(item,opt,_9fd){
var _9fe=opt.strings;
var _9ff=opt.onSubmit;
var app=this.app;
var d=document;
var _a02=d.createElement("div");
_a02.className="lotusDialogBorder";
_a02.style.width=this.wDialog;
var el=_9fd.formNode=d.createElement("form");
el.className="lotusDialog lotusForm";
dojo.connect(el,"onsubmit",dojo.hitch(this,this.submit,_9ff));
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=_9fe.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",_9fe.CANCEL);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(_9fe.HEADING));
el.appendChild(h1);
var _a08=d.createElement("div");
_a08.className="lotusDialogContent";
var _a09=d.createElement("table");
_a09.className="lotusFormTable";
_a09.cellPadding=_a09.cellPadding=0;
var _a0a=d.createElement("tbody");
var tr=this.confirmNodeRow=d.createElement("tr");
var td=this.confirmNode=d.createElement("td");
td.appendChild(d.createTextNode(_9fe.MESSAGE));
tr.appendChild(td);
_a0a.appendChild(tr);
_a09.appendChild(_a0a);
_a08.appendChild(_a09);
el.appendChild(_a08);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_9fd.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",_9fe.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(_9fe.BUSY));
div.appendChild(span);
var _a0e=_9fd.saveNode=d.createElement("input");
_a0e.className="lotusFormButton";
_a0e.type="submit";
_a0e.value=_9fe.OK;
div.appendChild(_a0e);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(_9fe.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_a02.appendChild(el);
_9fd.setContent(_a02);
this.enableInput(_9fd);
},submit:function(_a0f,e){
dojo.stopEvent(e);
this.disableInput(this.dialog);
_a0f(this.dialog);
},updateDialog:function(item,opt,_a13){
},onerror:function(msg){
quickr.share.validation.addInlineErrorRow(this.confirmNodeRow,this.confirmNode.firstChild,"error",msg);
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.DiscardDraft"]){
dojo._hasResource["quickr.share.wiki.action.DiscardDraft"]=true;
dojo.provide("quickr.share.wiki.action.DiscardDraft");
dojo.declare("quickr.share.wiki.action.DiscardDraft",[quickr.share.action.Action],{constructor:function(app,_a16,opts){
this.nls=app.nls;
this.app=app;
this.scene=_a16;
this.name=this.nls.CONTENT.DISCARD;
this.tooltip=this.nls.CONTENT.DISCARD_DRAFT_TOOLTIP;
},isValid:function(item,opt){
return true;
},execute:function(item,opt,e){
if(e){
dojo.stopEvent(e);
}
var _a1d=true;
if(opt&&opt.doConfirm!=null){
_a1d=opt.doConfirm;
}
var cont=true;
if(_a1d){
var _a1f=new quickr.share.wiki.action.ConfirmDialogAction();
var nls=this.app.nls;
var _a21={CANCEL:nls.CANCEL,HEADING:nls.CONTENT.DISCARD_DRAFT_TOOLTIP,MESSAGE:nls.CONTENT.DISCARDDRAFT_CONFIRM,OK:nls.CONTENT.DISCARD,BUSY:nls.EDIT_FILE.BUSY};
this.scene.confirmDialog=_a1f;
_a1f.execute(null,{onSubmit:dojo.hitch(this,this.discard,item,opt,true),strings:_a21});
}else{
this.discard(item,opt,true);
}
},discard:function(item,opt,cont){
if(cont){
var _a25;
var _a26;
var _a27=null;
var _a28=opt.libraryId?opt.libraryId:null;
if(!item.getUrlEntry&&item.id){
_a25=item.id;
_a27=item.docAuthor;
_a26=true;
}else{
if(item.getDraftId){
_a25=item.getDraftId();
_a27=item.getAuthor();
_a26=false;
}else{
_a25=item.getId();
_a27=item.getDocumentAuthor();
_a26=false;
}
}
var url=this.app.routes.getWikiPageDraftInfoServiceUrl(_a28,_a25);
this.app.net.deleteXml({url:url,handle:dojo.hitch(this,this.complete,item,_a25,_a26)});
}
},complete:function(item,_a2b,_a2c,_a2d,_a2e){
if(_a2d instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_a2d,_a2e),_a2c);
}else{
if(this.app.resetUnsavedChanges){
this.app.resetUnsavedChanges();
}
this.onsuccess();
}
},onsuccess:function(){
this.ondeletedraft();
},ondeletedraft:function(){
if((this.scene.declaredClass!="quickr.share.wiki.scenes.PageCreate")&&(this.scene.declaredClass!="quickr.share.wiki.scenes.WikiPageEdit")){
this.scene.begin();
}
if(this.scene.confirmDialog){
this.scene.confirmDialog.cancelDialog();
delete this.scene.confirmDialog;
}
},onerror:function(code,_a30){
if(!_a30){
if(code=="cancel"){
alert(this.nls.CONTENT.DISCARDDRAFT_ERROR_CANCEL);
}else{
if(code=="timeout"){
alert(this.nls.CONTENT.DISCARDDRAFT_ERROR_TIMEOUT);
}else{
if(code=="ItemNotFound"){
alert(this.nls.CONTENT.DISCARDDRAFT_ERROR_NOT_FOUND);
if(this.app.resetUnsavedChanges){
this.app.resetUnsavedChanges();
}
this.ondeletedraft();
}else{
alert(this.nls.CONTENT.DISCARDDRAFT_ERROR);
}
}
}
}
}});
}
if(!dojo._hasResource["quickr.share.bean.StreamPermissions"]){
dojo._hasResource["quickr.share.bean.StreamPermissions"]=true;
dojo.provide("quickr.share.bean.StreamPermissions");
dojo.declare("quickr.share.bean.StreamPermissions",null,{constructor:function(opts){
dojo.mixin(this,opts);
},canTag:function(file){
return this.isAuthenticated();
},canRate:function(file){
return this.isAuthenticated();
},canEdit:function(file){
return file&&this.isAuthenticated()&&(this.isOwner(file)||file.getPermissions().Edit||this.isAdministrator());
},canAdd:function(file){
return file&&this.isAuthenticated()&&(this.isOwner(file)||file.getPermissions().AddChild||this.isAdministrator());
},canShare:function(file){
return file&&this.isAuthenticated()&&(file.isPublic()||file.isViralShareAllowed()||file.getPermissions().GrantAccess);
},canDelete:function(file){
return this.isAuthenticated()&&(this.isOwner(file)||this.isAdministrator());
},canChangeVisibility:function(file){
return this.isAuthenticated()&&(this.isOwner(file)||this.isAdministrator());
},canDemote:function(file){
return this.isAuthenticated()&&(file.getPermissions().GrantAccess||this.isOwner(file)||this.isAdministrator());
},canPromote:function(file){
return this.canShareWithEdit(file);
},canShareWithEdit:function(file){
return this.isAuthenticated()&&(this.isOwner(file)||this.isAdministrator());
},canDeleteShare:function(file){
return this.isAuthenticated()&&(file.getPermissions().GrantAccess||this.isOwner(file)||this.isAdministrator());
},isOwner:function(file){
return this.owner||(file&&this.authenticatedId&&this.authenticatedId==file.getAuthor().id);
},isShareOwner:function(_a3e,file){
return this.owner||(file&&this.authenticatedId&&this.authenticatedId==file.getAuthor().id)||(_a3e&&this.authenticatedId&&this.authenticatedId==_a3e.getOwner().id);
},isAuthenticated:function(s){
return (s?(s==this.authenticatedId):(typeof this.authenticatedId=="string"));
},isAdministrator:function(){
return this.admin;
}});
}
if(!dojo._hasResource["quickr.share.bean.Library"]){
dojo._hasResource["quickr.share.bean.Library"]=true;
dojo.provide("quickr.share.bean.Library");
dojo.declare("quickr.share.bean.Library",null,{constructor:function(e){
this.e=e;
this.qsu=quickr.share.util;
},getUrlEntry:function(){
return this.qsu.makeAtomUrlIESafe(this.qsu.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
},getOwner:function(){
if(!this.author){
var qsu=this.qsu;
var node=this.e.getElementsByTagName("author")[0];
this.author={id:decodeURIComponent(qsu.getChildElementTextContent(node,"uri")),name:qsu.getChildElementTextContent(node,"name"),email:qsu.getChildElementTextContent(node,"email")};
}
return this.author;
},getSize:function(){
return this.qsu.parseInt(this.qsu.getChildElementTextContentNS(this.e,"librarySize",this.qsu.DOCUMENTS_ATOM_NAMESPACE),0);
},getQuota:function(){
return this.qsu.parseInt(this.qsu.getChildElementTextContentNS(this.e,"libraryQuota",this.qsu.DOCUMENTS_ATOM_NAMESPACE),-1);
},hasQuota:function(){
return (this.getQuota()>0);
},getDefaultDocumentUuid:function(){
var d=this.getDefaultDocument();
if(d){
return d.getId();
}
return this.qsu.getChildElementTextContentNS(this.e,"defaultDocumentUuid",this.qsu.DOCUMENTS_ATOM_NAMESPACE);
},getDefaultDocument:function(){
var d=this.defaultDocument;
if(!d){
var el=this.qsu.getElementsByTagNameNS(this.e,"defaultDocument",this.qsu.DOCUMENTS_ATOM_NAMESPACE)[0];
if(el){
el=el.getElementsByTagName("entry")[0];
if(el){
d=this.defaultDocument=new quickr.share.bean.Page(el);
}
}
}
return d;
}});
dojo.declare("quickr.share.bean.LibraryFromFeed",[quickr.share.bean.Library],{constructor:function(e){
},getUrlEntry:function(){
var url=this.urlEntry;
if(!url){
url=this.qsu.makeAtomUrlIESafe(this.qsu.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
url=this.qsu.parseUri(url);
url.path=url.path.replace(/\/feed$/,"/entry");
url=this.urlEntry=this.qsu.writeUri(url);
}
return url;
}});
}
if(!dojo._hasResource["dojox.html._base"]){
dojo._hasResource["dojox.html._base"]=true;
dojo.provide("dojox.html._base");
(function(){
if(dojo.isIE){
var _a49=/(AlphaImageLoader\([^)]*?src=(['"]))(?![a-z]+:|\/)([^\r\n;}]+?)(\2[^)]*\)\s*[;}]?)/g;
}
var _a4a=/(?:(?:@import\s*(['"])(?![a-z]+:|\/)([^\r\n;{]+?)\1)|url\(\s*(['"]?)(?![a-z]+:|\/)([^\r\n;]+?)\3\s*\))([a-z, \s]*[;}]?)/g;
var _a4b=dojox.html._adjustCssPaths=function(_a4c,_a4d){
if(!_a4d||!_a4c){
return;
}
if(_a49){
_a4d=_a4d.replace(_a49,function(_a4e,pre,_a50,url,post){
return pre+(new dojo._Url(_a4c,"./"+url).toString())+post;
});
}
return _a4d.replace(_a4a,function(_a53,_a54,_a55,_a56,_a57,_a58){
if(_a55){
return "@import \""+(new dojo._Url(_a4c,"./"+_a55).toString())+"\""+_a58;
}else{
return "url("+(new dojo._Url(_a4c,"./"+_a57).toString())+")"+_a58;
}
});
};
var _a59=/(<[a-z][a-z0-9]*\s[^>]*)(?:(href|src)=(['"]?)([^>]*?)\3|style=(['"]?)([^>]*?)\5)([^>]*>)/gi;
var _a5a=dojox.html._adjustHtmlPaths=function(_a5b,cont){
var url=_a5b||"./";
return cont.replace(_a59,function(tag,_a5f,name,_a61,_a62,_a63,_a64,end){
return _a5f+(name?(name+"="+_a61+(new dojo._Url(url,_a62).toString())+_a61):("style="+_a63+_a4b(url,_a64)+_a63))+end;
});
};
var _a66=dojox.html._snarfStyles=function(_a67,cont,_a69){
_a69.attributes=[];
return cont.replace(/(?:<style([^>]*)>([\s\S]*?)<\/style>|<link\s+(?=[^>]*rel=['"]?stylesheet)([^>]*?href=(['"])([^>]*?)\4[^>\/]*)\/?>)/gi,function(_a6a,_a6b,_a6c,_a6d,_a6e,href){
var i,attr=(_a6b||_a6d||"").replace(/^\s*([\s\S]*?)\s*$/i,"$1");
if(_a6c){
i=_a69.push(_a67?_a4b(_a67,_a6c):_a6c);
}else{
i=_a69.push("@import \""+href+"\";");
attr=attr.replace(/\s*(?:rel|href)=(['"])?[^\s]*\1\s*/gi,"");
}
if(attr){
attr=attr.split(/\s+/);
var _a72={},tmp;
for(var j=0,e=attr.length;j<e;j++){
tmp=attr[j].split("=");
_a72[tmp[0]]=tmp[1].replace(/^\s*['"]?([\s\S]*?)['"]?\s*$/,"$1");
}
_a69.attributes[i-1]=_a72;
}
return "";
});
};
var _a76=dojox.html._snarfScripts=function(cont,_a78){
_a78.code="";
function download(src){
if(_a78.downloadRemote){
dojo.xhrGet({url:src,sync:true,load:function(code){
_a78.code+=code+";";
},error:_a78.errBack});
}
};
return cont.replace(/<script\s*(?![^>]*type=['"]?dojo)(?:[^>]*?(?:src=(['"]?)([^>]*?)\1[^>]*)?)*>([\s\S]*?)<\/script>/gi,function(_a7b,_a7c,src,code){
if(src){
download(src);
}else{
_a78.code+=code;
}
return "";
});
};
var _a7f=dojox.html.evalInGlobal=function(code,_a81){
_a81=_a81||dojo.doc.body;
var n=_a81.ownerDocument.createElement("script");
n.type="text/javascript";
_a81.appendChild(n);
n.text=code;
};
dojo.declare("dojox.html._ContentSetter",[dojo.html._ContentSetter],{adjustPaths:false,referencePath:".",renderStyles:false,executeScripts:false,scriptHasHooks:false,scriptHookReplacement:null,_renderStyles:function(_a83){
this._styleNodes=[];
var st,att,_a86,doc=this.node.ownerDocument;
var head=doc.getElementsByTagName("head")[0];
for(var i=0,e=_a83.length;i<e;i++){
_a86=_a83[i];
att=_a83.attributes[i];
st=doc.createElement("style");
st.setAttribute("type","text/css");
for(var x in att){
st.setAttribute(x,att[x]);
}
this._styleNodes.push(st);
head.appendChild(st);
if(st.styleSheet){
st.styleSheet.cssText=_a86;
}else{
st.appendChild(doc.createTextNode(_a86));
}
}
},empty:function(){
this.inherited("empty",arguments);
this._styles=[];
},onBegin:function(){
this.inherited("onBegin",arguments);
var cont=this.content,node=this.node;
var _a8e=this._styles;
if(dojo.isString(cont)){
if(this.adjustPaths&&this.referencePath){
cont=_a5a(this.referencePath,cont);
}
if(this.renderStyles||this.cleanContent){
cont=_a66(this.referencePath,cont,_a8e);
}
if(this.executeScripts){
var _t=this;
var _a90={downloadRemote:true,errBack:function(e){
_t._onError.call(_t,"Exec","Error downloading remote script in \""+_t.id+"\"",e);
}};
cont=_a76(cont,_a90);
this._code=_a90.code;
}
}
this.content=cont;
},onEnd:function(){
var code=this._code,_a93=this._styles;
if(this._styleNodes&&this._styleNodes.length){
while(this._styleNodes.length){
dojo._destroyElement(this._styleNodes.pop());
}
}
if(this.renderStyles&&_a93&&_a93.length){
this._renderStyles(_a93);
}
if(this.executeScripts&&code){
if(this.cleanContent){
code=code.replace(/(<!--|(?:\/\/)?-->|<!\[CDATA\[|\]\]>)/g,"");
}
if(this.scriptHasHooks){
code=code.replace(/_container_(?!\s*=[^=])/g,this.scriptHookReplacement);
}
try{
_a7f(code,this.node);
}
catch(e){
this._onError("Exec","Error eval script in "+this.id+", "+e.message,e);
}
}
this.inherited("onEnd",arguments);
},tearDown:function(){
this.inherited(arguments);
delete this._styles;
if(this._styleNodes&&this._styleNodes.length){
while(this._styleNodes.length){
dojo._destroyElement(this._styleNodes.pop());
}
}
delete this._styleNodes;
dojo.mixin(this,dojo.getObject(this.declaredClass).prototype);
}});
dojox.html.set=function(node,cont,_a96){
if(!_a96){
return dojo.html._setNodeContent(node,cont,true);
}else{
var op=new dojox.html._ContentSetter(dojo.mixin(_a96,{content:cont,node:node}));
return op.set();
}
};
})();
}
if(!dojo._hasResource["dojox.layout.ContentPane"]){
dojo._hasResource["dojox.layout.ContentPane"]=true;
dojo.provide("dojox.layout.ContentPane");
(function(){
dojo.declare("dojox.layout.ContentPane",dijit.layout.ContentPane,{adjustPaths:false,cleanContent:false,renderStyles:false,executeScripts:true,scriptHasHooks:false,constructor:function(){
this.ioArgs={};
this.ioMethod=dojo.xhrGet;
this.onLoadDeferred=new dojo.Deferred();
this.onUnloadDeferred=new dojo.Deferred();
},postCreate:function(){
this._setUpDeferreds();
dijit.layout.ContentPane.prototype.postCreate.apply(this,arguments);
},onExecError:function(e){
},_setContentAttr:function(data){
var _a9a=this._setUpDeferreds();
this.inherited(arguments);
return _a9a;
},cancel:function(){
if(this._xhrDfd&&this._xhrDfd.fired==-1){
this.onUnloadDeferred=null;
}
dijit.layout.ContentPane.prototype.cancel.apply(this,arguments);
},_setUpDeferreds:function(){
var _t=this,_a9c=function(){
_t.cancel();
};
var _a9d=(_t.onLoadDeferred=new dojo.Deferred());
var _a9e=(_t._nextUnloadDeferred=new dojo.Deferred());
return {cancel:_a9c,addOnLoad:function(func){
_a9d.addCallback(func);
},addOnUnload:function(func){
_a9e.addCallback(func);
}};
},_onLoadHandler:function(){
dijit.layout.ContentPane.prototype._onLoadHandler.apply(this,arguments);
if(this.onLoadDeferred){
this.onLoadDeferred.callback(true);
}
},_onUnloadHandler:function(){
this.isLoaded=false;
this.cancel();
if(this.onUnloadDeferred){
this.onUnloadDeferred.callback(true);
}
dijit.layout.ContentPane.prototype._onUnloadHandler.apply(this,arguments);
if(this._nextUnloadDeferred){
this.onUnloadDeferred=this._nextUnloadDeferred;
}
},_onError:function(type,err){
dijit.layout.ContentPane.prototype._onError.apply(this,arguments);
if(this.onLoadDeferred){
this.onLoadDeferred.errback(err);
}
},_prepareLoad:function(_aa3){
var _aa4=this._setUpDeferreds();
dijit.layout.ContentPane.prototype._prepareLoad.apply(this,arguments);
return _aa4;
},_setContent:function(cont){
var _aa6=this._contentSetter;
if(!(_aa6&&_aa6 instanceof dojox.html._ContentSetter)){
_aa6=this._contentSetter=new dojox.html._ContentSetter({node:this.containerNode,_onError:dojo.hitch(this,this._onError),onContentError:dojo.hitch(this,function(e){
var _aa8=this.onContentError(e);
try{
this.containerNode.innerHTML=_aa8;
}
catch(e){
console.error("Fatal "+this.id+" could not change content due to "+e.message,e);
}
})});
}
this._contentSetterParams={adjustPaths:Boolean(this.adjustPaths&&(this.href||this.referencePath)),referencePath:this.href||this.referencePath,renderStyles:this.renderStyles,executeScripts:this.executeScripts,scriptHasHooks:this.scriptHasHooks,scriptHookReplacement:"dijit.byId('"+this.id+"')"};
this.inherited("_setContent",arguments);
}});
})();
}
if(!dojo._hasResource["quickr.share.scenes"]){
dojo._hasResource["quickr.share.scenes"]=true;
dojo.provide("quickr.share.scenes");
var _nls=quickr.share.scenes.nls=dojo.i18n.getLocalization("quickr.share.wiki","wiki");
quickr.share.scenes.getPivotMsgNoData=function(_aa9){
var p=this.msgNoData;
var msg;
if(dojo.some(_aa9.activeFilters,function(a){
return a.id=="files";
})){
p=(_aa9.activeFilters.length>1)?p.FILTERED:p.NORMAL;
msg=p.FILES;
}else{
if(dojo.some(_aa9.activeFilters,function(a){
return a.id=="pages";
})){
p=(_aa9.activeFilters.length>1)?p.FILTERED:p.NORMAL;
msg=p.PAGES;
}else{
p=(_aa9.activeFilters.length>0)?p.FILTERED:p.NORMAL;
msg=p.MEDIA;
}
}
return msg;
};
quickr.share.scenes.CHANNEL_VIEWS=[{id:"details",name:_nls.VIEWS.DETAILS,tooltip:_nls.VIEWS.DETAILS_TOOLTIP,img:"Details"},{id:"summary",name:_nls.VIEWS.SUMMARY,tooltip:_nls.VIEWS.SUMMARY_TOOLTIP,img:"Summary"}];
quickr.share.scenes.CHANNEL_FILTERS={EVENT:[{id:"media",name:_nls.FILTERS.EVENT.MEDIA_UPDATES,group:1},{id:"comments",name:_nls.FILTERS.EVENT.COMMENTS,group:1},{id:"recommend",name:_nls.FILTERS.EVENT.RECOMMENDATIONS,group:1},{id:"shares",name:_nls.FILTERS.EVENT.SHARED_WITH,group:2},{id:"newuser",name:_nls.FILTERS.EVENT.PEOPLE_JOINED,group:2}],SHARE:[{id:"public",name:_nls.FILTERS.SHARE.PUBLIC,longName:_nls.FILTERS.SHARE.PUBLIC_LONG,tooltip:_nls.FILTERS.SHARE.PUBLIC_TOOLTIP,setServiceOptions:function(_aae){
_aae.visibility="public";
},removeAppParams:function(_aaf){
delete _aaf.sharing;
}},{id:"shared",name:_nls.FILTERS.SHARE.SELECTIVE,longName:_nls.FILTERS.SHARE.SELECTIVE_LONG,tooltip:_nls.FILTERS.SHARE.SELECTIVE_TOOLTIP,setServiceOptions:function(_ab0){
_ab0.visibility=this.id;
},removeAppParams:function(_ab1){
delete _ab1.sharing;
}},{id:"private",name:_nls.FILTERS.SHARE.PRIVATE,longName:_nls.FILTERS.SHARE.PRIVATE_LONG,tooltip:_nls.FILTERS.SHARE.PRIVATE_TOOLTIP,isValid:function(app,_ab3){
return _ab3.isPersonalHome;
},setServiceOptions:function(_ab4){
_ab4.visibility=this.id;
},removeAppParams:function(_ab5){
delete _ab5.sharing;
}}],TYPE:[{id:"files",name:_nls.FILTERS.TYPE.FILES,longName:_nls.FILTERS.TYPE.FILES_LONG,tooltip:_nls.FILTERS.TYPE.FILES_TOOLTIP,setServiceOptions:function(_ab6){
_ab6.category="document";
},removeAppParams:function(_ab7){
delete _ab7.type;
}},{id:"pages",name:_nls.FILTERS.TYPE.PAGES,longName:_nls.FILTERS.TYPE.PAGES_LONG,tooltip:_nls.FILTERS.TYPE.PAGES_TOOLTIP,setServiceOptions:function(_ab8){
_ab8.category="page";
},removeAppParams:function(_ab9){
delete _ab9.type;
}}],DATE:[{id:"today",name:_nls.FILTERS.DATE.TODAY,longName:_nls.FILTERS.DATE.TODAY_LONG,tooltip:_nls.FILTERS.DATE.TODAY_TOOLTIP,setServiceOptions:function(_aba){
var now=new Date();
now.setHours(0);
now.setMinutes(0);
now.setSeconds(0);
now.setMilliseconds(0);
_aba.startDate=now.getTime();
},removeAppParams:function(_abc){
delete _abc.date;
}},{id:"lastweek",name:_nls.FILTERS.DATE.LASTWEEK,longName:_nls.FILTERS.DATE.LASTWEEK_LONG,tooltip:_nls.FILTERS.DATE.LASTWEEK_TOOLTIP,interval:7*24*60*60*1000,setServiceOptions:function(_abd){
var now=new Date().getTime()-this.interval;
_abd.startDate=now;
},removeAppParams:function(_abf){
delete _abf.date;
}},{id:"lastmonth",name:_nls.FILTERS.DATE.LASTMONTH,longName:_nls.FILTERS.DATE.LASTMONTH_LONG,tooltip:_nls.FILTERS.DATE.LASTMONTH_TOOLTIP,interval:31*24*60*60*1000,setServiceOptions:function(_ac0){
var now=new Date().getTime()-this.interval;
_ac0.startDate=now;
},removeAppParams:function(_ac2){
delete _ac2.date;
}},{id:"lastyear",name:_nls.FILTERS.DATE.LASTYEAR,longName:_nls.FILTERS.DATE.LASTYEAR_LONG,tooltip:_nls.FILTERS.DATE.LASTYEAR_TOOLTIP,interval:365*24*60*60*1000,setServiceOptions:function(_ac3){
var now=new Date().getTime()-this.interval;
_ac3.startDate=now;
},removeAppParams:function(_ac5){
delete _ac5.date;
}}]};
quickr.share.scenes.CHANNEL_PIVOTS=[{id:"start",name:_nls.PIVOTS.START,tooltip:_nls.PIVOTS.START_TOOLTIP,longName:_nls.PIVOTS.START_LONG,description:_nls.PIVOTS.START_DESC,isValid:function(app,_ac7){
return (!_ac7.user||(_ac7.user.hasPersonalPlace!=false&&_ac7.user.hasPersonalPlace!=true));
}},{id:"files",name:_nls.PIVOTS.MEDIA,tooltip:_nls.PIVOTS.MEDIA_TOOLTIP,longName:_nls.PIVOTS.MEDIA_LONG,description:_nls.PIVOTS.MEDIA_DESC,isValid:function(app,_ac9){
return !_ac9.isPersonalHome&&(!_ac9.user||_ac9.user.hasPersonalPlace==true);
},msgNoData:_nls.CONTENT.EMPTY.MY_MEDIA,getMsgNoData:quickr.share.scenes.getPivotMsgNoData},{id:"files",name:_nls.PIVOTS.MY_MEDIA,tooltip:_nls.PIVOTS.MY_MEDIA_TOOLTIP,longName:_nls.PIVOTS.MY_MEDIA_LONG,description:_nls.PIVOTS.MY_MEDIA_DESC,isValid:function(app,_acb){
return _acb.isPersonalHome&&(!_acb.user||_acb.user.hasPersonalPlace==true);
},msgNoData:_nls.CONTENT.EMPTY.MY_MEDIA,getMsgNoData:quickr.share.scenes.getPivotMsgNoData},{id:"interested",name:_nls.PIVOTS.INTERESTED,tooltip:_nls.PIVOTS.INTERESTED_TOOLTIP,longName:_nls.PIVOTS.INTERESTED_LONG,description:_nls.PIVOTS.INTERESTED_DESC,isValid:function(app,_acd){
return !_acd.isPersonalHome&&(!_acd.user||_acd.user.hasPersonalPlace==true);
},msgNoData:_nls.CONTENT.EMPTY.INTERESTED,getMsgNoData:quickr.share.scenes.getPivotMsgNoData},{id:"interested",name:_nls.PIVOTS.MY_INTERESTED,tooltip:_nls.PIVOTS.MY_INTERESTED_TOOLTIP,longName:_nls.PIVOTS.MY_INTERESTED_LONG,description:_nls.PIVOTS.MY_INTERESTED_DESC,isValid:function(app,_acf){
return _acf.isPersonalHome&&(!_acf.user||_acf.user.hasPersonalPlace==true);
},msgNoData:_nls.CONTENT.EMPTY.MY_INTERESTED,getMsgNoData:quickr.share.scenes.getPivotMsgNoData},{id:"favorites",name:_nls.PIVOTS.WATCHLIST,tooltip:_nls.PIVOTS.WATCHLIST_TOOLTIP,longName:_nls.PIVOTS.WATCHLIST_LONG,description:_nls.PIVOTS.WATCHLIST_DESC,isValid:function(app,_ad1){
return !_ad1.isPersonalHome&&(!_ad1.user||_ad1.user.hasPersonalPlace==true||_ad1.user.hasPersonalPlace==false);
},msgNoData:_nls.CONTENT.EMPTY.WATCHLIST,getMsgNoData:quickr.share.scenes.getPivotMsgNoData},{id:"favorites",name:_nls.PIVOTS.MY_WATCHLIST,tooltip:_nls.PIVOTS.MY_WATCHLIST_TOOLTIP,longName:_nls.PIVOTS.MY_WATCHLIST_LONG,description:_nls.PIVOTS.MY_WATCHLIST_DESC,isValid:function(app,_ad3){
return _ad3.isPersonalHome&&(!_ad3.user||_ad3.user.hasPersonalPlace==true||_ad3.user.hasPersonalPlace==false);
},msgNoData:_nls.CONTENT.EMPTY.MY_WATCHLIST,getMsgNoData:quickr.share.scenes.getPivotMsgNoData},{id:"profile",name:_nls.PIVOTS.PROFILE,tooltip:_nls.PIVOTS.PROFILE_TOOLTIP,getExternalUrl:function(app,_ad5,_ad6){
return _ad5.getUserProfileUrl(app.scene.user);
},isValid:function(app,_ad8){
var url=dojo.getObject("quickr.share.config.services.userProfileUri");
return typeof url!="undefined"&&url!=null&&url.length>0;
}}];
dojo.declare("quickr.share.scenes.ChannelTagList",[quickr.widget.TagList],{renderTag:function(d,el,tag,_add,_ade){
var li=d.createElement("li");
if(_ade){
dojo.addClass(li,"lotusSelected");
}
if(this.generateLinkToTag){
var _ae0=d.createElement("span");
_ae0.className="lotusLeft";
var a=d.createElement("a");
this.generateLinkToTag(tag.name,a);
a.appendChild(d.createTextNode(tag.name));
a.title=tag.name;
_ae0.appendChild(a);
li.appendChild(_ae0);
li.appendChild(d.createTextNode((tag.weight||tag.weight===0)?dojo.number.format(Math.max(tag.weight,0)):" "));
if(_ade&&this.generateLinkWithoutTag){
var a=d.createElement("a");
a.title=this._appstrings.CONTENT.REMOVE_FILTER_TOOLTIP;
this.generateLinkWithoutTag(tag.name,a);
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/remove.gif";
img.setAttribute("alt","");
a.appendChild(img);
li.appendChild(a);
}
}else{
var span=d.createElement("span");
span.className="lotusLeft";
span.appendChild(d.createTextNode(tag.name));
span.title=tag.name;
li.appendChild(span);
li.appendChild(d.createTextNode((tag.weight||tag.weight==0)?dojo.number.format(Math.max(tag.weight,0)):" "));
}
el.appendChild(li);
},renderTagForCloud:function(d,el,tag,_ae7,_ae8,tc){
var li=d.createElement("li");
if(_ae8){
dojo.addClass(li,"lotusSelected");
}
var _aeb=12;
var _aec="lotusF"+tc;
if(this.generateLinkToTag){
if(!_ae8){
var a=d.createElement("a");
dojo.addClass(a,_aec);
this.generateLinkToTag(tag.name,a);
if(this.dialog){
dojo.connect(a,"onclick",this,"cancelDialog");
}
quickr.share.util.createWrappableText(d,a,tag.name,_aeb);
a.title=tag.name;
li.appendChild(a);
li.appendChild(d.createTextNode(" "));
}else{
var span=d.createElement("span");
if(tag.name.length<_aeb){
span.className="lotusNowrap";
}
var a=d.createElement("a");
dojo.addClass(a,_aec);
dojo.addClass(a,"lotusTag");
this.generateLinkToTag(tag.name,a,true);
if(this.dialog){
dojo.connect(a,"onclick",this,"cancelDialog");
}
quickr.share.util.createWrappableText(d,a,tag.name,_aeb);
a.title=tag.name;
span.appendChild(a);
if(this.generateLinkWithoutTag){
var a=d.createElement("a");
a.title=this._appstrings.CONTENT.REMOVE_FILTER_TOOLTIP;
this.generateLinkWithoutTag(tag.name,a);
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/remove.gif";
img.setAttribute("alt","");
a.appendChild(img);
span.appendChild(a);
}
li.appendChild(span);
li.appendChild(d.createTextNode(" "));
}
}else{
var span=d.createElement("span");
dojo.addClass(span,className);
span.className="lotusLeft";
quickr.share.util.createWrappableText(d,span,tag.name,_aeb);
span.title=tag.name;
li.appendChild(span);
}
el.appendChild(li);
el.appendChild(d.createTextNode(" "));
}});
quickr.share.scenes.applyHeader=function(d,el,app,opt){
var _af4=app.authenticatedUser;
var _af5=app.routes;
var _af6=dojo.getObject("quickr.share.config.templates.base.header");
if(typeof _af6=="function"){
if(_af6(d,el,app)){
return;
}
}
var _af7=d.createElement("div");
_af7.className="lotusRightCorner";
var div=d.createElement("div");
div.className="lotusInner";
var a=d.createElement("a");
a.href=_af5.getHomeUrl();
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/logo-connections.gif";
img.width="106";
img.height="22";
img.id="lotusLogo";
img.alt=img.title=app.nls.HEADER.LOGO;
a.appendChild(img);
div.appendChild(a);
var ul=d.createElement("ul");
ul.className="lotusInlinelist lotusLinks";
var _afc=dojo.getObject("quickr.share.config.siteLinks")||[];
for(var i=0;i<_afc.length;i++){
var _afe=_afc[i];
var li=d.createElement("li");
if(i==0){
dojo.addClass(li,"lotusFirst");
}
if(_afe.home){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("a");
a.href=_afe.generateUri(_af5);
a.appendChild(d.createTextNode(_afe.getName()));
a.title=_afe.getTitle();
li.appendChild(a);
ul.appendChild(li);
}
div.appendChild(ul);
var ul=d.createElement("ul");
ul.className="lotusInlinelist";
if(_af4){
var li=d.createElement("li");
li.className="lotusFirst";
var span=d.createElement("span");
span.id="logged-in-message";
span.className="lotusUser";
span.appendChild(d.createTextNode(_af4.name?_af4.name:_af4.id));
li.appendChild(span);
ul.appendChild(li);
}else{
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,app.getUrl(),app.login);
a.appendChild(d.createTextNode(app.nls.HEADER.LOGIN));
a.title=app.nls.HEADER.LOGIN_TITLE;
li.appendChild(a);
ul.appendChild(li);
}
var li=d.createElement("li");
var a=d.createElement("a");
a.href="javascript:;";
a.onclick=function(){
pe.activateHelp();
};
a.appendChild(d.createTextNode(app.nls.MENUBAR.HELP));
a.title=app.nls.MENUBAR.HELP_TITLE;
li.appendChild(a);
ul.appendChild(li);
if(_af4){
var li=d.createElement("li");
var a=d.createElement("a");
if(opt&&opt.logout&&typeof opt.logout=="function"){
quickr.share.scenes.setOnClick(a,app,_af5.getGlobalHomeUrl({authenticated:false}),opt.logout);
}else{
quickr.share.scenes.setOnClick(a,app,_af5.getGlobalHomeUrl({authenticated:false}),app.logout);
}
a.appendChild(d.createTextNode(app.nls.HEADER.LOGOUT));
a.title=app.nls.HEADER.LOGOUT_TITLE;
li.appendChild(a);
ul.appendChild(li);
}
div.appendChild(ul);
_af7.appendChild(div);
el.appendChild(_af7);
};
quickr.share.scenes.applyConnectionsTemplate=function(id,d,el,app){
var url=dojo.getObject("quickr.share.config.templates.base.connections");
if(!url){
return false;
}
var _b06=(app.authenticatedUser?app.authenticatedUser.name:null);
var _b07=(app.authenticatedUser&&app.authenticatedUser.roles&&dojo.indexOf(app.authenticatedUser.roles,"admin")!=-1);
url=quickr.util.uri.rewriteUri(url,{user:_b06,admin:_b07});
var _b08=_b06+"_"+_b07;
el.reusable=function(app){
var _b0a=(app.authenticatedUser?app.authenticatedUser.name:null);
var _b0b=(app.authenticatedUser&&app.authenticatedUser.roles&&dojo.indexOf(app.authenticatedUser.roles,"admin")!=-1);
return (_b0a+"_"+_b0b)==_b08;
};
dojo[_b07?"removeClass":"addClass"](el,"qkrHideAdmin");
var html=app.templates.getHtml(url);
if(html){
var _b0d=dojo.query("div[id="+id+"]",html)[0];
if(_b0d){
var _b0e;
if(dojo.isIE){
_b0e=dojo._toArray(_b0d.getElementsByTagName("SCRIPT"));
}
dojo.forEach(_b0d.getElementsByTagName("A"),quickr.share.scenes.applyLinkRulesForConnections,app);
var arr=dojo._toArray(_b0d.childNodes);
for(var i=0;i<arr.length;i++){
el.appendChild(arr[i]);
}
if(dojo.isIE){
dojo.forEach(_b0e,quickr.util.html.evalScriptTag);
}
return true;
}
}
};
quickr.share.scenes.applyLinkRulesForConnections=function(a){
if(a.href){
if(/login_app_replace$/.test(a.href)){
quickr.share.scenes.setOnClick(a,this,this.getUrl(),this.login);
}else{
if(/logout_app_replace$/.test(a.href)){
quickr.share.scenes.setOnClick(a,this,this.routes.getGlobalHomeUrl({authenticated:false}),this.logout);
}else{
if(/help_app_replace$/.test(a.href)){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,"activateHelp"));
}else{
if(!a.getAttribute("onclick")){
quickr.share.scenes.setOnClick(a,this,a.href);
}
}
}
}
}
};
quickr.share.scenes.applyFooter=function(d,el,app){
var _b15=app.routes;
var _b16=dojo.getObject("quickr.share.config.templates.base.footer");
if(typeof _b16=="function"){
if(_b16(d,el,app)){
return;
}
}
var _b17=dojo.getObject("quickr.share.config.quickrConnectorsInstallUri");
var _b18=d.createElement("table");
var _b19=d.createElement("tbody");
var tr=d.createElement("tr");
var th=d.createElement("th");
th.appendChild(d.createTextNode(app.nls.FOOTER.CONNECTIONS.HEADING));
tr.appendChild(th);
var th=d.createElement("th");
th.appendChild(d.createTextNode(app.nls.FOOTER.HELP.HEADING));
tr.appendChild(th);
var th=d.createElement("th");
th.appendChild(d.createTextNode(app.nls.FOOTER.TOOLS.HEADING));
tr.appendChild(th);
var th=d.createElement("th");
th.className="lotusLast";
th.appendChild(d.createTextNode(app.nls.FOOTER.ABOUT.HEADING));
tr.appendChild(th);
_b19.appendChild(tr);
var tr=d.createElement("tr");
var td=d.createElement("td");
var ul=d.createElement("ul");
var li=d.createElement("li");
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_b15.getWelcomeUrl());
a.appendChild(d.createTextNode(app.nls.FOOTER.CONNECTIONS.HOME));
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var a=d.createElement("a");
a.onclick=function(){
openDemoWindow();
return false;
};
a.appendChild(d.createTextNode(app.nls.FOOTER.CONNECTIONS.DEMO));
li.appendChild(a);
ul.appendChild(li);
var _b20=dojo.getObject("quickr.share.config.adminUri");
if(_b20&&(!app.authenticatedUser||dojo.indexOf(app.authenticatedUser.roles,"admin")!=-1)){
var li=d.createElement("li");
var a=d.createElement("a");
a.href=_b20;
a.appendChild(d.createTextNode(app.nls.FOOTER.TOOLS.ADMINPAGE));
li.appendChild(a);
ul.appendChild(li);
}
td.appendChild(ul);
tr.appendChild(td);
var td=d.createElement("td");
var ul=d.createElement("ul");
var li=d.createElement("li");
var a=d.createElement("a");
a.onclick=function(){
openHelpWindow();
return false;
};
a.href="javascript:;";
a.appendChild(d.createTextNode(app.nls.FOOTER.HELP.HELP));
li.appendChild(a);
ul.appendChild(li);
td.appendChild(ul);
tr.appendChild(td);
var td=d.createElement("td");
var ul=d.createElement("ul");
if(_b17){
var li=d.createElement("li");
li.id="ConnectorsLink";
var a=d.createElement("a");
a.href=(_b17||"javascript:;");
a.appendChild(d.createTextNode(app.nls.FOOTER.DOWNLOAD_CONNECTORS));
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
li.id="ConnectorsLink";
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_b15.getToolsUrl());
a.appendChild(d.createTextNode(app.nls.FOOTER.TOOLS.BROWSERPLUGINS));
li.appendChild(a);
ul.appendChild(li);
}
var li=d.createElement("li");
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_b15.getStatisticsUrl());
a.appendChild(d.createTextNode(app.nls.FOOTER.TOOLS.METRICS));
li.appendChild(a);
ul.appendChild(li);
td.appendChild(ul);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusLast";
var ul=d.createElement("ul");
var li=d.createElement("li");
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_b15.getAboutUrl());
a.appendChild(d.createTextNode(app.nls.FOOTER.ABOUT.ABOUT));
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var a=d.createElement("a");
a.href="http://www-306.ibm.com/software/lotus/products/connections/";
a.appendChild(d.createTextNode(app.nls.FOOTER.ABOUT.CONNECTIONSONLINE));
li.appendChild(a);
ul.appendChild(li);
td.appendChild(ul);
tr.appendChild(td);
_b19.appendChild(tr);
_b18.appendChild(_b19);
el.appendChild(_b18);
};
quickr.share.scenes.applyLoading=function(app){
var d=app.document;
var body=d.body;
var _b24=d.getElementById("lotusFrame");
if(_b24){
body=_b24.parentNode;
quickr.share.util.destroyWidgets(_b24);
_b24.parentNode.removeChild(_b24);
}
_b24=d.createElement("div");
_b24.id="lotusFrame";
var el=d.createElement("div");
el.id="lotusApplicationLoading";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/indicator.white.gif";
img.setAttribute("alt","");
el.appendChild(img);
el.appendChild(d.createTextNode(" "));
el.appendChild(d.createTextNode(app.nls.LOADING));
_b24.appendChild(el);
body.appendChild(_b24);
};
quickr.share.scenes.applyHomeTemplate=function(d,_b28,app,_b2a,opt){
var body=d.body;
var _b2d=d.getElementById("lotusFrame");
if(_b2d){
body=_b2d.parentNode;
quickr.util.html.destroyWidgets(_b2d);
_b2d.parentNode.removeChild(_b2d);
}
_b2d=d.createElement("div");
_b2d.id="lotusFrame";
_b2d.className="lotusFrame lotusWelcome";
var el=d.createElement("div");
el.id="lotusBanner";
el.className="lotusBanner";
el.setAttribute("role","banner");
quickr.share.scenes.applyHeader(d,el,app,opt);
_b2d.appendChild(el);
body.appendChild(_b2d);
var el=d.createElement("div");
el.id="lotusTitleBar";
el.className="lotusTitleBar";
quickr.share.scenes.applyTitleBar(d,el,app,opt);
_b2d.appendChild(el);
var el=d.createElement("div");
el.id="lotusPlaceBar";
el.className="lotusPlaceBar";
el.style.display="none";
_b2d.appendChild(el);
var el=d.createElement("div");
el.id="lotusMain";
el.className="lotusMain";
_b2d.appendChild(el);
var el=d.createElement("div");
el.id="lotusFooter";
el.className="lotusFooter";
el.setAttribute("role","contentinfo");
quickr.share.scenes.applyFooter(d,el,app);
_b2d.appendChild(el);
};
quickr.share.scenes.applyFilterList=function(app,ul,item,_b32,f,_b34){
var d=app.d;
var li=d.createElement("li");
if(_b32){
dojo.addClass(li,"lotusSelected");
}
var e=d.createElement("a");
e.className=_b34||"";
e.appendChild(d.createTextNode(item.name));
e.title=item.tooltip;
f(e,item);
li.appendChild(e);
if(_b32){
var a=d.createElement("a");
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
f(a);
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/remove.gif";
img.setAttribute("alt","");
a.appendChild(img);
li.appendChild(a);
}
ul.appendChild(li);
};
quickr.share.scenes.findFilter=function(_b3a,_b3b){
var _b3c=-1;
for(var i=0;i<_b3b.length;i++){
if(dojo.indexOf(_b3a,_b3b[i])!=-1){
_b3c=i;
break;
}
}
return _b3c;
};
quickr.share.scenes.findFilters=function(_b3e,_b3f){
var _b40=[];
for(var i=0;i<_b3f.length;i++){
if(dojo.indexOf(_b3e,_b3f[i])!=-1){
_b40.push(i);
}
}
return _b40;
};
quickr.share.scenes.createFilterSection=function(app,el,_b44,_b45,_b46,f,_b48,_b49){
var d=app.d;
var div=this.createFilterFrame(app,el,_b44,_b45,_b49);
var ul=d.createElement("ul");
ul.className="lotusList lotusEditable lotusMeta lotusTags";
for(var i=0;i<_b46.length;i++){
this.applyFilterList(app,ul,_b46[i],(i==_b48),f,"lotusLeft lotusTag");
ul.lastChild.appendChild(d.createTextNode(" "));
}
div.appendChild(ul);
return div;
};
quickr.share.scenes.createFilterFrame=function(app,el,_b50,_b51,_b52){
var d=app.d;
var _b54=d.createElement("div");
_b54.className="lotusSection";
if(!el.firstChild){
dojo.addClass(_b54,"lotusFirst");
}
var h3=d.createElement("h2");
var _b56=dojo.string.substitute(app.nls.TOGGLE_SECTION_NAMED,[_b50]);
var a=d.createElement("A");
a.title=_b56;
a.href="javascript:;";
a.className="lotusSprite lotusArrow"+(_b52?" lotusTwistyClosed":" lotusTwistyOpen");
dojo.connect(a,"onclick",a,quickr.share.scenes.toggleSection);
var _b58=d.createElement("span");
_b58.className="lotusHidden";
_b58.appendChild(d.createTextNode(_b56));
a.appendChild(_b58);
var _b59=d.createElement("span");
_b59.className="lotusAltText";
_b59.appendChild(d.createTextNode(_b52?(dojo._isBodyLtr()?"▶":"◀"):"▼"));
a.appendChild(_b59);
h3.appendChild(a);
var span=d.createElement("SPAN");
span.className="lotusLeft";
span.style.cursor="pointer";
span.appendChild(d.createTextNode(_b50));
dojo.connect(span,"onclick",a,quickr.share.scenes.toggleSection);
span.title=quickr.share.scenes.nls.TOGGLE_SECTION;
h3.appendChild(span);
if(_b51){
var a=d.createElement("A");
a.className="lotusRight";
a.href="javascript:;";
var img=d.createElement("IMG");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/help.gif";
img.setAttribute("alt",app.nls.HELP);
a.appendChild(img);
quickr.share.scenes.applyTipPopup(app,h3,a,_b51);
h3.appendChild(a);
}
_b54.appendChild(h3);
var div=d.createElement("div");
div.style.display=_b52?"none":"";
div.className="lotusSectionBody lotusChunk";
_b54.appendChild(div);
el.appendChild(_b54);
return div;
};
quickr.share.scenes.createHelpLink=function(app,el,_b5f){
var d=document;
var a=d.createElement("A");
a.href="javascript:;";
var img=d.createElement("IMG");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/help.gif";
img.setAttribute("alt",app.nls.HELP);
a.appendChild(img);
if(_b5f){
quickr.share.scenes.applyTipPopup(app,el,a,_b5f);
}
el.appendChild(a);
return a;
};
quickr.share.scenes.createSortLink=function(app,_b64,_b65,_b66,el,item){
var p=dojo.clone(_b66);
p.sort=item.id;
var url=_b64.getUserChannelUrl(_b65,p);
quickr.share.scenes.setOnClick(el,app,url);
};
quickr.share.scenes.createNavigationLink=function(app,_b6c,_b6d,_b6e,el,item){
var p=dojo.clone(_b6e);
p.visibility=item.id;
var url=_b6c.getUserChannelUrl(_b6d,p);
quickr.share.scenes.setOnClick(el,app,url);
};
quickr.share.scenes.createTypeFilterLink=function(app,_b74,_b75,_b76,el,item){
var p=dojo.clone(_b76);
p.type=item.id;
var url=_b74.getUserChannelUrl(_b75,p);
quickr.share.scenes.setOnClick(el,app,url);
};
quickr.share.scenes.createSharingFilterLink=function(app,_b7c,_b7d,_b7e,el,item){
var p=dojo.clone(_b7e);
p.visibility=item.id;
var url=_b7c.getUserChannelUrl(_b7d,p);
quickr.share.scenes.setOnClick(el,app,url);
};
quickr.share.scenes.createDateFilterLink=function(app,_b84,_b85,_b86,el,item){
var p=dojo.clone(_b86);
p.date=item.id;
var url=_b84.getUserChannelUrl(_b85,p);
quickr.share.scenes.setOnClick(el,app,url);
};
quickr.share.scenes.applyInlinePersonCard=function(d,c,user,_b8e,app,_b90){
var _b91=d.createElement("table");
_b91.className="lotusFirst";
var _b92=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
if(dojo.isIE){
td.style.width="85px";
td.style.height="64px";
}
var el=d.createElement("div");
el.className="lotusVCardController";
var img=d.createElement("IMG");
img.style.height="50px";
img.style.width="50px";
img.src=user.photoURL;
img.setAttribute("alt",user.name);
el.appendChild(img);
td.appendChild(el);
tr.appendChild(td);
var td=d.createElement("td");
var h5=d.createElement("h5");
h5.appendChild(d.createTextNode(user.name));
td.appendChild(h5);
tr.appendChild(td);
_b92.appendChild(tr);
_b91.appendChild(_b92);
c.appendChild(_b91);
};
quickr.share.scenes.applyInlineCommunityCard=function(d,c,_b9a,_b9b,app,_b9d){
var _b9e=d.createElement("table");
_b9e.className="lotusFirst";
var _b9f=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
if(dojo.isIE){
td.style.width="85px";
td.style.height="64px";
}
var el=d.createElement("div");
el.className="lotusVCardControllerSmall";
var a=d.createElement("a");
a.href="javascript:;";
a.appendChild(d.createTextNode(" "));
el.appendChild(a);
var _ba4=dojo.getObject("quickr.share.config.services.communityPhotoUri");
if(_ba4){
var img=d.createElement("IMG");
img.style.height="50px";
img.style.width="50px";
img.src=_ba4.replace("{communityId}",_b9a.id);
img.setAttribute("alt",_b9a.id);
el.appendChild(img);
}
td.appendChild(el);
tr.appendChild(td);
var td=d.createElement("td");
var h5=d.createElement("h5");
h5.appendChild(d.createTextNode(_b9a.name));
td.appendChild(h5);
tr.appendChild(td);
_b9f.appendChild(tr);
_b9e.appendChild(_b9f);
c.appendChild(_b9e);
};
quickr.share.scenes.applyTitleBar=function(d,el,_ba9,app){
var _bab=app.authenticatedUser;
var _bac=app.routes;
var _bad=d.createElement("div");
_bad.className="lotusRightCorner";
var _bae=d.createElement("div");
_bae.className="lotusInner";
var ul=d.createElement("UL");
ul.className="lotusTabs";
var li=d.createElement("LI");
li.className="lotusFirst";
if(_ba9=="home"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,_bac.getGlobalHomeUrl());
a.appendChild(d.createTextNode(app.nls.TITLEBAR.HOME));
a.title=app.nls.TITLEBAR.HOME_TITLE;
a.setAttribute("accesskey","3");
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("LI");
if(_ba9=="mychannel"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
if(_bab){
quickr.share.scenes.setOnClick(a,app,_bac.getUserChannelUrl(_bab.id));
}else{
quickr.share.scenes.setOnClick(a,app,_bac.getPersonalUserChannelUrl());
}
a.appendChild(d.createTextNode(app.nls.TITLEBAR.MYCHANNEL));
a.title=app.nls.TITLEBAR.MYCHANNEL_TITLE;
a.setAttribute("accesskey","4");
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
if(_ba9=="myfavorites"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
if(_bab){
quickr.share.scenes.setOnClick(a,app,_bac.getUserChannelUrl(_bab.id,{pivot:"favorites"}));
}else{
quickr.share.scenes.setOnClick(a,app,_bac.getPersonalUserWatchlistUrl());
}
a.appendChild(d.createTextNode(app.nls.TITLEBAR.WATCHLIST));
a.title=app.nls.TITLEBAR.WATCHLIST_TITLE;
a.setAttribute("accesskey","5");
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("LI");
if(_ba9=="myshares"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
if(_bab){
quickr.share.scenes.setOnClick(a,app,_bac.getUserSharesUrl());
}else{
quickr.share.scenes.setOnClick(a,app,_bac.getPersonalUserSharesUrl());
}
a.appendChild(d.createTextNode(app.nls.TITLEBAR.SHARES));
a.title=app.nls.TITLEBAR.SHARES_TITLE;
a.setAttribute("accesskey","6");
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("LI");
if(_ba9=="usersearch"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,_bac.getUserSearchUrl());
a.appendChild(d.createTextNode(app.nls.TITLEBAR.ALLUSERS));
a.title=app.nls.TITLEBAR.ALLUSERS_TITLE;
a.setAttribute("accesskey","7");
li.appendChild(a);
ul.appendChild(li);
if(_ba9&&_ba9.url){
var li=d.createElement("LI");
li.className="lotusSelected";
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,_ba9.url);
a.appendChild(d.createTextNode(_ba9.name));
a.setAttribute("accesskey","8");
li.appendChild(a);
ul.appendChild(li);
}
var accessibilityTabNavigationLink = d.createElement("a");
accessibilityTabNavigationLink.id = accessibilityTabNavigationLink.name = "tabNavigation";
_bae.appendChild(accessibilityTabNavigationLink);
_bae.appendChild(ul);
var form=d.createElement("FORM");
form.id="searchForm";
form.className="lotusSearch";
form.name="simpleSearchForm";
form.setAttribute("role","search");
form.action=_bac.getUserSearchUrl();
var _bb3=d.createElement("INPUT");
_bb3.value=app.nls.SEARCH.PEOPLE_DEFAULT;
_bb3.size="30";
form.appendChild(_bb3);
var _bb4=d.createElement("label");
_bb4.className="lotusHidden";
form.appendChild(_bb4);
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(app.getUserTypeAheadStore(),{_strings:app.nls.USERSEARCH,id:"searchFor",name:"usersearch","class":"lotusText",orient:{"BR":"TR","TR":"BR"}});
var _bb6=new lconn.core.PeopleTypeAhead(args,_bb3);
_bb6.textbox.style.color="#aaa";
_bb6.textbox.value=dojo.getObject("quickr.share.config.services.typeahead.hintText")||app.nls.SEARCH.PEOPLE_DEFAULT;
dojo.connect(_bb6,"onSelect",app,quickr.share.scenes.onSelectTypeAheadUser);
dojo.connect(_bb6.textbox,"onfocus",_bb6.textbox,function(){
if(!this.old){
this.old=true;
this.style.color="#000";
this.value="";
}
});
dojo.connect(_bb6.textbox,"onblur",_bb6.textbox,function(){
if(this.value==""){
this.old=false;
this.style.color="#aaa";
this.value=dojo.getObject("quickr.share.config.services.typeahead.hintText")||app.nls.SEARCH.PEOPLE_DEFAULT;
}
});
dojo.connect(form,"onsubmit",null,dojo.hitch(form,quickr.share.scenes.onSearchUser,app,_bac,_bb6.textbox));
_bb4.setAttribute("for",args.id);
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",app.nls.SEARCH.SEARCH);
var _bb3=d.createElement("input");
_bb3.id="simpleSearchSubmit";
_bb3.className="lotusSearchButton";
_bb3.type="image";
_bb3.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/blank.gif";
_bb3.name="submit";
_bb3.setAttribute("alt",app.nls.SEARCH.SEARCH_ALT);
span.appendChild(_bb3);
dojo.connect(_bb3,"onclick",null,dojo.hitch(form,quickr.share.scenes.onSearchUser,app,_bac,_bb6.textbox));
var _bb8=d.createElement("a");
_bb8.className="lotusAltText";
_bb8.appendChild(d.createTextNode(app.nls.SEARCH.SEARCH_ALT));
_bb8.href="javascript:;";
dojo.connect(_bb8,"onclick",function(){
try{
_bb3.click();
}
catch(e){
}
});
span.appendChild(_bb8);
form.appendChild(span);
_bae.appendChild(form);
_bad.appendChild(_bae);
el.appendChild(_bad);
};
quickr.share.scenes.onSearchUser=function(app,_bba,_bbb,e){
dojo.stopEvent(e);
app.navigate(_bba.getUserSearchUrl(_bbb.value));
};
quickr.share.scenes.onSelectUser=function(_bbd,_bbe){
if(_bbd){
this.navigate(this.routes.getUserChannelUrl(_bbd));
}else{
if(_bbe){
this.navigate(this.routes.getUserSearchUrl(userSearch));
}
}
};
quickr.share.scenes.onSelectTypeAheadUser=function(item){
if(item&&item.id){
this.navigate(this.routes.getUserChannelUrl(item.id));
}
};
quickr.share.scenes.generateUserImage=function(app,user,el,_bc3,_bc4,_bc5){
var src=app.routes.getUserPhotoUrl(user);
return quickr.share.scenes.createThumbnail(document,el,src,_bc3,_bc4,_bc5);
};
quickr.share.scenes.createThumbnail=function(d,el,src,_bca,_bcb,_bcc){
if(!src){
return null;
}
_bca=_bca||_bcb;
_bcb=_bcb||_bca;
var img=d.createElement("img");
if(_bcc=="left"){
dojo.addClass(img,"lotusLeft");
}else{
if(_bcc=="right"){
dojo.addClass(img,"lotusRight");
}
}
img.style.width=_bca+"px";
img.style.height=_bcb+"px";
img.src=src;
img.setAttribute("alt","");
el.appendChild(img);
var span=d.createElement("span");
el.appendChild(span);
new quickr.widget.ImagePop({target:img},span);
return img;
};
quickr.share.scenes.applyApplicationError=function(app){
this.applyGenericError(app);
};
quickr.share.scenes.applyGenericError=function(app,_bd1,_bd2,_bd3){
quickr.share.scenes.applyMessageBox(app,"iconErrorLarge.gif",_bd1,_bd2,_bd3);
};
quickr.share.scenes.applyGenericWarning=function(app,_bd5,_bd6,_bd7){
quickr.share.scenes.applyMessageBox(app,"iconWarningLarge.gif",_bd5,_bd6,_bd7);
};
quickr.share.scenes.applyMessageBox=function(app,_bd9,_bda,_bdb,_bdc){
var d=app.document;
var _bde=app.authenticatedUser;
var _bdf=app.routes;
var _bda=_bda||app.nls.ERROR_IN_APP_TITLE;
if(!_bdb){
_bdb=[app.nls.ERROR_IN_APP_MESSAGE];
}else{
if(!dojo.isArray(_bdb)){
_bdb=[_bdb];
}
}
var _bdc=_bdc||[];
_bdc.push([app.nls.BACK_TO_APP,_bdf.getWelcomeUrl()]);
var el=d.getElementById("lotusFrame");
if(!el){
el=d.createElement("div");
el.id="lotusFrame";
d.body.appendChild(el);
}
quickr.share.util.removeChildren(el);
var div=d.createElement("div");
div.className="lotusErrorBox lotusError";
var divc=d.createElement("div");
divc.className="lotusErrorContent";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/"+_bd9;
img.setAttribute("alt",_bda);
divc.appendChild(img);
var divf=d.createElement("div");
divf.className="lotusErrorForm";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(_bda));
divf.appendChild(h1);
for(var i=0;i<_bdb.length;i++){
var p=d.createElement("p");
p.appendChild(d.createTextNode(_bdb[i]));
divf.appendChild(p);
}
if(_bdc&&_bdc.length>0){
var diva=d.createElement("ul");
diva.className="lotusInlinelist lotusBtnContainer";
for(var i=0;i<_bdc.length;i++){
var li=d.createElement("li");
if(i==0){
li.className="lotusFirst";
}
var a=d.createElement("a");
a.appendChild(d.createTextNode(_bdc[i][0]));
quickr.share.scenes.setOnClick(a,app,_bdc[i][1],_bdc[i][2]);
li.appendChild(a);
diva.appendChild(li);
}
divf.appendChild(diva);
}
divc.appendChild(divf);
div.appendChild(divc);
el.appendChild(div);
};
quickr.share.scenes.applyUserHomeError=function(d,_bec,app,_bee,_bef){
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="userhome-error"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
el.innerHTML="<!-- IE -->";
c.appendChild(el);
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var div=d.createElement("div");
div.appendChild(d.createTextNode(_bef));
el.appendChild(div);
c.appendChild(el);
c.activeTemplate="userhome-error";
}
};
quickr.share.scenes.generateFileLink=function(app,_bf4,file,a,opt){
var _bf8=file.getAuthor().id;
var _bf9=file.getId();
quickr.share.scenes.setOnClick(a,app,_bf4.getFileSummaryUrl(_bf8,_bf9,{section:(opt)?opt.section:null}));
};
quickr.share.scenes.generateFileCommentLink=function(app,_bfb,doc,_bfd,a){
var _bff=doc.getAuthor().id;
var _c00=doc.getId();
var _c01=_bfd.getId();
quickr.share.scenes.setOnClick(a,app,_bfb.getFileSummaryUrl(_bff,_c00,{comment:_c01}));
};
quickr.share.scenes.generatePageCommentLink=function(app,_c03,doc,_c05,a){
var _c07=doc.getAuthor().id;
var _c08=doc.getId();
var _c09=_c05.getId();
quickr.share.scenes.setOnClick(a,app,_c03.getPageSummaryUrl(_c07,_c08,null,{comment:_c09}));
};
quickr.share.scenes.generateSharedFileLink=function(app,_c0b,_c0c,a){
var _c0e=_c0c.getSharedResourceOwner().id;
var _c0f=_c0c.getSharedResourceId();
quickr.share.scenes.setOnClick(a,app,_c0b.getFileSummaryUrl(_c0e,_c0f));
};
quickr.share.scenes.generateSharedPageLink=function(app,_c11,_c12,a){
var _c14=_c12.getSharedResourceOwner().id;
var _c15=_c12.getSharedResourceId();
quickr.share.scenes.setOnClick(a,app,_c11.getPageSummaryUrl(_c14,_c15));
};
quickr.share.scenes.generatePageLink=function(app,_c17,file,a,opt){
var _c1b;
var _c1c=file.getAuthor().id;
var _c1d=quickr.share.util.getChildElementAttribute(file.getEntry(),"category","term");
if(_c1d=="share"){
throw "generatePageLink called on a share, should be dereferenced first";
var url=quickr.share.util.getChildElementAttributeMatching(file.getEntry(),"link","rel","enclosure","href"),_c1b=/\/document\/(.+?)\/media$/.exec(url)[1];
}else{
_c1b=file.getId();
}
quickr.share.scenes.setOnClick(a,app,_c17.getPageSummaryUrl(_c1c,_c1b,null,{section:(opt)?opt.section:null}));
};
quickr.share.scenes.generateUserLink=function(app,_c20,user,a){
var id=(typeof user=="object")?user.id:user;
a.href="javascript:;";
if(user&&id&&window["SemTagSvc"]){
dojo.addClass(a,"vcard");
dojo.addClass(a,"fn");
var span=document.createElement("span");
span.className="x-lconn-userid";
span.style.display="none";
span.appendChild(document.createTextNode(id));
a.appendChild(span);
if(dojo.getObject("SemTagSvc.add")){
SemTagSvc.add(a);
}
}
};
quickr.share.scenes.generateUploadUrl=function(_c25,_c26){
return _c25.getUploadServiceUrl(_c26);
};
quickr.share.scenes.generateTagLink=function(app,_c28,_c29,opts,tag,a){
a.href="javascript:;";
a.title=dojo.string.substitute(app.nls.CONTENT.TAG_TOOLTIP,[tag]),quickr.share.scenes.setOnClick(a,app,_c28.getUserChannelTaggedMediaUrl(_c29,tag,{sort:(opts?opts.sortId:null)}));
};
quickr.share.scenes.setOnClick=function(a,obj,href,_c30){
a.href=href;
var _c31=dojo.hitch(null,quickr.share.scenes.linkOnClick,href,(_c30?_c30:"navigate"));
return dojo.connect(a,"onclick",obj,_c31);
};
quickr.share.scenes.linkOnClick=function(){
var e=arguments[2];
var _c33=arguments[1];
if(typeof _c33=="string"){
_c33=this[_c33];
}
if(e.ctrlKey||e.altKey||e.shiftKey){
return;
}
if(e){
dojo.stopEvent(e);
}
_c33.apply(this,arguments);
};
quickr.share.scenes.toggleSection=function(){
var _c34=dojo.hasClass(this,"lotusTwistyOpen");
var _c35=this.parentNode.nextSibling;
var _c36=this.firstChild;
if(_c34){
_c36.innerHTML=dojo._isBodyLtr()?"&#9654;":"&#9664;";
this.anim=dojo.fx.wipeOut({node:_c35,duration:100});
var me=this;
dojo.connect(this.anim,"onEnd",function(){
dojo.removeClass(me,"lotusTwistyOpen");
dojo.addClass(me,"lotusTwistyClosed");
if(me.onClose){
me.onClose();
}
});
this.anim.play();
}else{
_c36.innerHTML="&#9660;";
this.anim=dojo.fx.wipeIn({node:_c35,duration:100});
var me=this;
dojo.connect(this.anim,"onEnd",function(){
dojo.removeClass(me,"lotusTwistyClosed");
dojo.addClass(me,"lotusTwistyOpen");
if(me.onClose){
me.onClose();
}
});
this.anim.play();
}
};
quickr.share.scenes.applyPivotList=function(app,ul,item,_c3b,f,_c3d){
var d=app.d;
var li=d.createElement("li");
if(_c3b){
dojo.addClass(li,"lotusSelected");
}
var e=d.createElement("a");
e.className=_c3d||"";
e.appendChild(d.createTextNode(item.name));
e.title=item.tooltip;
f(e,item);
li.appendChild(e);
li.appendChild(d.createTextNode(" "));
ul.appendChild(li);
};
quickr.share.scenes.applyCheckedFilterList=function(app,ul,item,_c44,_c45,type,_c47){
var d=app.d;
var li=d.createElement("li");
var _c4a=d.createElement("input");
_c4a.id=dijit.getUniqueId("filter");
_c4a.type="checkbox";
_c4a.className="qkrCheckbox";
_c4a.defaultChecked=_c4a.checked=_c44;
_c4a.value=item.id;
dojo.connect(_c4a,"onchange",dojo.hitch(_c45,"onfilterchange",type));
li.appendChild(_c4a);
var _c4b=d.createElement("label");
_c4b.setAttribute("for",_c4a.id);
_c4b.appendChild(d.createTextNode(item.name));
li.appendChild(_c4b);
ul.appendChild(li);
};
quickr.share.fx={swipeIn:function(args){
args.node=dojo.byId(args.node);
var node=args.node,s=node.style;
var anim=dojo.animateProperty(dojo.mixin({properties:{width:{start:function(){
s.overflow="hidden";
if(s.visibility=="hidden"||s.display=="none"){
s.width="1px";
s.display="";
s.visibility="";
return 1;
}else{
var _c50=dojo.style(node,"width");
return Math.max(_c50,1);
}
},end:function(){
return node.scrollWidth;
}}}},args));
dojo.connect(anim,"onEnd",function(){
s.width="";
});
return anim;
},swipeOut:function(args){
var node=args.node=dojo.byId(args.node);
var s=node.style;
var anim=dojo.animateProperty(dojo.mixin({properties:{width:{end:1}}},args));
dojo.connect(anim,"beforeBegin",function(){
s.overflow="hidden";
s.display="";
});
dojo.connect(anim,"onEnd",function(){
s.width="";
s.display="none";
});
return anim;
}};
quickr.share.scenes.applyCommonUnauthenticatedSection=function(app,el){
var d=app.d;
var nls=app.nls.LOGINHELP;
var div=d.createElement("div");
div.className="lotusSection lotusFirst";
var h2=d.createElement("h2");
h2.appendChild(d.createTextNode(nls.TITLE));
div.appendChild(h2);
var p=d.createElement("p");
p.className="lotusSectionBody lotusChunk";
p.appendChild(d.createTextNode(nls.P1));
div.appendChild(p);
var p=d.createElement("p");
p.className="lotusSectionBody lotusChunk";
p.appendChild(d.createTextNode(nls.P2));
div.appendChild(p);
var ul=d.createElement("ul");
ul.className="lotusSectionBody lotusChunk";
var li=d.createElement("li");
li.appendChild(d.createTextNode(nls.ACT1));
ul.appendChild(li);
var li=d.createElement("li");
li.appendChild(d.createTextNode(nls.ACT2));
ul.appendChild(li);
var li=d.createElement("li");
li.appendChild(d.createTextNode(nls.ACT3));
ul.appendChild(li);
var li=d.createElement("li");
li.appendChild(d.createTextNode(nls.ACT4));
ul.appendChild(li);
var li=d.createElement("li");
li.appendChild(d.createTextNode(nls.ACT5));
ul.appendChild(li);
div.appendChild(ul);
var p=d.createElement("p");
p.className="lotusSectionBody lotusChunk";
p.style.marginTop="10px";
var a=d.createElement("a");
a.style.fontWeight="bold";
a.style.fontSize="1.1em";
quickr.share.scenes.setOnClick(a,app,app.getUrl(),app.login);
a.appendChild(d.createTextNode(nls.NOW));
p.appendChild(a);
div.appendChild(p);
el.appendChild(div);
};
quickr.share.scenes.applySidebar=function(d,c,_c61,app,_c63){
var _c64=_c63;
var _c65=_c61.sidebar={id:"lotusColRight","class":"lotusColRight","role":"complementary",idBar:"lotusCollapseBar",idArrow:"lotusCollapseArrow",prefs:app.prefs,visible:_c64,msgAlert:app.nls.SIDEBAR.ALERT,toggle:quickr.share.scenes.sidebarToggle,hover:quickr.share.scenes.sidebarHover,unhover:quickr.share.scenes.sidebarUnHover};
var _c66;
var el=d.getElementById(_c65.id);
if(el){
el.style.display=(_c64)?"":"none";
_c66=d.createElement("div");
while(el.firstChild){
var _c68=el.firstChild;
el.removeChild(_c68);
_c66.appendChild(_c68);
}
el.appendChild(_c66);
}else{
el=d.createElement("div");
el.style.display=(_c64)?"":"none";
el.id=_c65.id;
el.className=_c65["class"];
_c66=d.createElement("div");
el.appendChild(_c66);
c.appendChild(el);
}
el.setAttribute("role",_c65.role);
return _c66;
};
quickr.share.scenes.sidebarToggle=function(){
var el=dojo.byId(this.id);
var bar=dojo.byId(this.idBar);
dojo.byId(this.idArrow).off();
if(this.visible){
var _c6b=this.prefs.get("sbc");
if(_c6b!=0&&_c6b!=1){
alert(this.msgAlert);
}
el.style.display="none";
bar.style.display="";
this.prefs.put("sbc",1);
if(this.anim){
this.anim.stop();
}
this.anim=dojo.animateProperty({duration:900,node:this.idBar,properties:{backgroundColor:{start:"#ffff66",end:"white"}},onEnd:function(){
var s=dojo.byId(this.node).style;
s.backgroundColor="";
}}).play();
}else{
if(this.anim){
this.anim.stop();
delete this.anim;
}
el.style.display="";
bar.style.display="none";
this.prefs.put("sbc",0);
}
this.visible=!this.visible;
};
quickr.share.scenes.sidebarHover=function(e){
this._overBar=true;
dojo.addClass(dojo.byId(this.idBar),"lotusCollapseHover");
dojo.byId(this.idArrow).on(!this.isVisible,e);
};
quickr.share.scenes.sidebarUnHover=function(){
this._overBar=false;
dojo.removeClass(dojo.byId(this.idBar),"lotusCollapseHover");
dojo.byId(this.idArrow).off();
};
quickr.share.scenes.sidebarArrowUpdate=function(e){
var x=e.pageX;
var y=e.pageY;
var lx=e.layerX;
var ly=e.layerY;
var s=this.style;
s.left=(x-lx)+"px";
s.top=(y)+"px";
};
quickr.share.scenes.sidebarArrowOn=function(_c74,e){
this.className=(_c74)?"left":"right";
if(e){
this.update(e);
}
this.style.display="block";
};
quickr.share.scenes.sidebarArrowOff=function(){
this.style.display="";
};
dojo.declare("quickr.share.scenes.CommonTooltip",quickr.widget.DeferredTooltip,{renderEmpty:function(){
var d=document;
var el=d.createElement("div");
el.className="lotusHelp qkrLotusHelp";
if(this.width>0){
el.style.width=this.width+"px";
}
el.style.marginLeft=el.style.marginRight="8px";
var div=d.createElement("div");
div.className="lotusInfoBox";
div.appendChild(d.createTextNode(this.label));
el.appendChild(div);
return el;
},renderError:function(_c79,_c7a){
var d=document;
var code=quickr.share.util.getAtomErrorCode(_c79,_c7a);
var msg=this.nls.ERROR;
var type,msg;
if(code=="cancel"){
msg=this.nls.ERROR_CANCEL;
}else{
if(code=="timeout"){
msg=this.nls.ERROR_TIMEOUT;
}else{
if(code=="AccessDenied"){
msg=this.nls.ERROR_ACCESS_DENIED;
}else{
if(code=="ItemNotFound"){
msg=this.nls.ERROR_NOT_FOUND;
}else{
msg=this.nls.ERROR;
}
}
}
}
var el=d.createElement("div");
el.className="lotusHelp qkrLotusHelp";
if(this.width>0){
el.style.width=this.width+"px";
}
el.style.marginTop=el.style.marginBottom="8px";
var div=d.createElement("div");
div.className="lotusInfoBox";
div.appendChild(d.createTextNode(msg));
el.appendChild(div);
return el;
}});
dojo.declare("quickr.share.scenes.UserListTooltip",quickr.share.scenes.CommonTooltip,{label:null,baseWidth:200,ioArgs:{preventLoginRefresh:true,handleAs:"json-comment-optional"},renderHtml:function(_c81,_c82){
var _c83={};
dojo.forEach(_c81.items,function(item){
_c83[item.id]=item;
});
var _c85=[];
var _c86=[];
for(var id in _c83){
(this.showRoles&&_c83[id].permission=="Edit"?_c86:_c85).push(_c83[id]);
}
quickr.share.util.sort(_c85,"name");
quickr.share.util.sort(_c86,"name");
var size=_c85.length+_c86.length;
var d=document;
var el=d.createElement("div");
el.className="lotusHelp qkrLotusHelp";
if(dojo.isIE){
var w;
if(size>20){
w=2.5*this.baseWidth;
}else{
if(size>5){
w=1.5*this.baseWidth;
}else{
w=this.baseWidth;
}
}
el.style.width=w+"px";
}
el.style.marginTop=el.style.marginBottom="8px";
var div=d.createElement("div");
div.className="lotusInfoBox";
if(this.showRoles&&size>0){
var p=d.createElement("div");
var h3=d.createElement("h5");
h3.appendChild(d.createTextNode(this.nls.CONTRIBUTORS_LABEL));
p.appendChild(h3);
dojo.forEach(_c86,function(user){
if(p.lastChild.nodeName!="H5"){
p.appendChild(d.createTextNode(", "));
}
if(this.generateLinkToPerson){
var a=d.createElement("a");
a.appendChild(d.createTextNode(user.name));
this.generateLinkToPerson(user,a);
p.appendChild(a);
}else{
p.appendChild(d.createTextNode(user.name));
}
if(this.generateDemoteUrl){
var a=d.createElement("a");
a.href="javascript:;";
a.title=this.nls.DEMOTE;
var img=d.createElement("img");
img.style.padding="0 3px 1px";
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconDemote.gif";
img.setAttribute("alt","");
a.appendChild(img);
dojo.connect(a,"onclick",dojo.hitch(this,this.demote,user));
p.appendChild(a);
}
},this);
if(_c86.length==0){
p.appendChild(d.createTextNode(this.nls.EMPTY_CONTRIBUTORS));
}
div.appendChild(p);
var p=d.createElement("div");
var h3=d.createElement("h5");
h3.appendChild(d.createTextNode(this.nls.READERS_LABEL));
p.appendChild(h3);
dojo.forEach(_c85,function(user){
if(p.lastChild.nodeName!="H5"){
p.appendChild(d.createTextNode(", "));
}
if(this.generateLinkToPerson){
var a=d.createElement("a");
a.appendChild(d.createTextNode(user.name));
this.generateLinkToPerson(user,a);
p.appendChild(a);
}else{
p.appendChild(d.createTextNode(user.name));
}
},this);
if(_c85.length==0){
p.appendChild(d.createTextNode(this.nls.EMPTY_READERS));
}
div.appendChild(p);
}else{
dojo.forEach(_c85,function(user){
if(div.firstChild){
div.appendChild(d.createTextNode(", "));
}
if(this.generateLinkToPerson){
var a=d.createElement("a");
a.appendChild(d.createTextNode(user.name));
this.generateLinkToPerson(user,a);
div.appendChild(a);
}else{
div.appendChild(d.createTextNode(user.name));
}
},this);
if(_c85.length==0){
div.appendChild(d.createTextNode(this.nls.EMPTY));
}
}
el.appendChild(div);
return el;
},demote:function(user,e){
if(e){
dojo.stopEvent(e);
}
this.net.putXml({url:this.generateDemoteUrl({user:user.id,demote:true}),handle:dojo.hitch(this,this.demoteComplete)});
},demoteComplete:function(_c98,_c99){
if(_c98 instanceof Error||!_c98||!_c98.documentElement){
var _c9a=quickr.share.util.getAtomErrorCode(_c98,_c99);
if(_c9a=="cancel"){
alert(this.nls.DEMOTE_ERROR_CANCEL);
}else{
if(_c9a=="timeout"){
alert(this.nls.DEMOTE_ERROR_TIMEOUT);
}else{
if(_c9a=="ItemNotFound"){
alert(this.nls.DEMOTE_ERROR_NOT_FOUND);
}else{
if(_c9a=="AccessDenied"){
alert(this.nls.DEMOTE_ERROR_ACCESS_DENIED);
}else{
if(_c9a=="unauthenticated"){
}else{
alert(this.nls.DEMOTE_ERROR);
}
}
}
}
}
}else{
this.reload();
}
}});
dojo.declare("quickr.share.scenes.TipTooltip",quickr.share.scenes.CommonTooltip,{label:"Loading...",width:200,ioArgs:{preventLoginRefresh:true,handleAs:"json-comment-optional"},renderHtml:function(_c9b,_c9c){
var d=document;
var el=d.createElement("div");
el.className="lotusHelp qkrLotusHelp";
el.style.width=this.width+"px";
el.style.marginLeft=el.style.marginRight="8px";
var div=d.createElement("div");
div.className="lotusInfoBox";
if(_c9b.message){
if(_c9b.title){
var h3=d.createElement("h3");
h3.appendChild(d.createTextNode(_c9b.title));
div.appendChild(h3);
}
var p=d.createElement("p");
p.appendChild(d.createTextNode(_c9b.message));
div.appendChild(p);
}else{
div.appendChild(d.createTextNode(this.msgEmpty));
}
el.appendChild(div);
return el;
}});
quickr.share.scenes.applySharePopup=function(app,el,_ca4,_ca5,file,_ca7,_ca8,_ca9){
var _caa;
var d=app.d;
if(_ca5){
quickr.share.util.html.substitute(d,el,_ca4,{0:function(){
var a=d.createElement("a");
a.href="javascript:;";
a.appendChild(d.createTextNode(_ca5));
return a;
}});
var _cad=el.getElementsByTagName("a");
if(_cad.length>0){
var _cae=d.createElement("span");
el.appendChild(_cae);
var _caf=(_ca9)?dojo.hitch(app.routes,app.routes.getFileShareListServiceUrl,file.getId()):null;
_caa=new quickr.share.scenes.UserListTooltip({net:app.net,href:app.routes.getFileUsersSharedWithUrl(file.getAuthor().id,file.getId(),{pageSize:dojo.getObject("quickr.share.config.services.shareInfo.pageSize")||100}),generateLinkToPerson:_ca7,showRoles:_ca8,generateDemoteUrl:_caf,connectId:_cad,position:["below"],label:app.nls.LOADING,nls:(file.getCategory()=="page"?app.nls.SHARING.USERS_POPUP_PAGE:app.nls.SHARING.USERS_POPUP_FILE)},_cae);
}
}else{
el.appendChild(d.createTextNode(_ca4));
}
return _caa;
};
quickr.share.scenes.applyTipPopup=function(app,el,a,_cb3){
var d=app.d;
a.href="javascript:;";
var _cb5=d.createElement("span");
el.appendChild(_cb5);
tooltip=new quickr.share.scenes.TipTooltip({href:app.routes.getHelpTopicUrl(_cb3),connectId:[a],position:["after_t","before_t"],label:app.nls.LOADING,msgError:app.nls.TIPS.ERROR,msgEmpty:app.nls.TIPS.ERROR,net:app.net},_cb5);
return tooltip;
};
quickr.share.scenes.applyGenericPopup=function(app,el,a,_cb9){
var d=app.d;
a.href="javascript:;";
var _cbb=d.createElement("span");
el.appendChild(_cbb);
tooltip=new quickr.share.scenes.TipTooltip({href:null,connectId:[a],position:["after_t","before_t"],label:_cb9},_cbb);
return tooltip;
};
quickr.share.scenes.createUser=function(app,user){
if(!user){
return null;
}
if(!user.photoURL){
user.photoURL=app.routes.getUserPhotoUrl(user);
}
return user;
};
quickr.share.scenes.applyUnsavedChangesAlert=function(app,el,_cc0){
if(!app.authenticatedUser){
return;
}
var _cc1=app.routes;
var d=app.document;
var div=d.createElement("div");
div.className="lotusMessage lotusWarning";
div.style.display="none";
div.style.marginBottom="20px";
el.appendChild(div);
var _cc4=app.getUnsavedChangesList();
if(_cc4.length>0){
var d=app.document;
var opt={permissions:new quickr.share.bean.StreamPermissions({authenticatedId:(app.authenticatedUser?app.authenticatedUser.id:null)})};
var img=d.createElement("img");
img.alt=app.nls.WARNING;
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/iconWarning.gif";
div.appendChild(img);
div.appendChild(d.createTextNode(app.nls.UNSAVED_CHANGES.ALERT));
for(var j=0;j<_cc4.length&&j<6;j++){
var item=_cc4[j];
var _cc9=d.createElement("div");
var span=d.createElement("span");
span.className="lotusLeft";
span.style.marginRight="10px";
span.style.marginLeft="20px";
var df=new quickr.share.util.DateFormat(item.getUpdated());
var _ccc=df.formatByAge(app.nls.UNSAVED_CHANGES.AUTOSAVED);
quickr.share.util.html.substitute(d,span,_ccc,{name:function(){
var _ccd=d.createElement("span");
_ccd.style.fontWeight="bold";
_ccd.style.margin="0";
_ccd.style.display="inline";
_ccd.appendChild(d.createTextNode(item.getName()));
return _ccd;
},wikiname:function(){
var _cce=d.createElement("span");
_cce.style.fontWeight="bold";
_cce.style.margin="0";
_cce.style.display="inline";
var _ccf=item.getLibrary();
_cce.appendChild(d.createTextNode(_ccf.libraryTitle));
return _cce;
},expires:function(){
var dfe=new quickr.share.util.DateFormat(item.getExpiration());
var _cd1=dfe.formatByAge(app.nls.UNSAVED_CHANGES.EXPIRES);
var _cd2=d.createElement("span");
_cd2.style.color="red";
_cd2.style.margin="0";
_cd2.style.display="inline";
_cd2.appendChild(d.createTextNode(_cd1));
return _cd2;
}});
_cc9.appendChild(span);
var ul=d.createElement("ul");
ul.className="lotusActions lotusInlinelist";
for(var i=0;i<_cc0.length;i++){
var _cd5=_cc0[i];
if(_cd5.isValid(item,opt)){
var li=d.createElement("li");
if(!ul.firstChild){
li.className="lotusFirst";
}
var a=d.createElement("a");
var url=_cd5.getUrlResource(item,opt);
a.href=url||"javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_cd5,_cd5.execute,item,opt));
a.appendChild(d.createTextNode(_cd5.getName(item,opt)));
a.title=_cd5.getTooltip(item,opt);
li.appendChild(a);
ul.appendChild(li);
}
}
if(ul.firstChild){
_cc9.appendChild(ul);
}
div.appendChild(_cc9);
}
div.style.display="";
}
};
quickr.share.scenes.accessibility=function(){
console.group("Accessibility Test for '"+pe.urlState+"'");
console.info("Images without alt text: ",dojo.query("img").filter(function(i){
return !i.attributes.getNamedItem("alt");
}));
console.info("Labels without 'for':    ",dojo.query("label").filter(function(i){
return !i.attributes.getNamedItem("for");
}));
console.groupEnd();
};
}
if(!dojo._hasResource["quickr.share.wiki.Routes"]){
dojo._hasResource["quickr.share.wiki.Routes"]=true;
dojo.provide("quickr.share.wiki.Routes");
dojo.declare("quickr.share.wiki.Routes",[quickr.share.Routes],{constructor:function(){
},_getBaseWikiFeedServiceUrl:function(_cdb){
var s;
s=dojo.getObject("quickr.share.config.services.wikiFeedUri");
s=s.replace("{userId}",encodeURIComponent(_cdb));
return s;
},getWelcomeUrl:function(){
return quickr.share.wiki.Routes.BASE_PATH+(quickr.share.wiki.Routes.ROOT)+this.getQueryString();
},getGlobalHomeUrl:function(opt){
var p={};
var _cdf=this.isAuthenticatedUser();
if(opt){
if(typeof opt.authenticated!="undefined"){
_cdf=opt.authenticated==true;
}
if(dojo.indexOf(["global"],opt.pivot)!=-1){
p.pivot=opt.pivot;
}
}
return quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT+this.getQueryString(p);
},getConnectionsHomepageUrl:function(){
return quickr.share.config.connectionsHomepageUri;
},getLotusSupportForumsUrl:function(){
return quickr.share.config.lotusSupportForumsUri;
},getProductFeedbackUrl:function(){
return quickr.share.config.productFeedbackUri;
},getManageMembersUrl:function(_ce0,_ce1,opt){
var base=quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT;
if(_ce1){
base+="/wiki/"+encodeURIComponent(_ce0)+"/members/"+encodeURIComponent(_ce1);
}
var p={};
if(opt){
if(opt.memberType){
p.memberType=opt.memberType;
}
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(typeof opt.start!="undefined"){
p.start=opt.start;
}
}
return base+quickr.share.util.writeParameters(p);
},getTagServiceUrl:function(opt){
var p={format:"json",sK:"cloud",sO:"dsc",locale:pe.language};
if(opt&&opt.wikiLabel){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiTagServiceUri"):dojo.getObject("quickr.share.config.services.anonymousWikiTagServiceUri");
url=url.replace("{wikiLabel}",encodeURIComponent(opt.wikiLabel));
}else{
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.tagServiceUri"):dojo.getObject("quickr.share.config.services.anonymousTagServiceUri");
p.scope="library";
}
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.userLibrary){
p.userLibrary=opt.userLibrary;
}
if(opt.libraryId){
p.libraryId=opt.libraryId;
}
if(opt.filter){
p.filter=opt.filter;
}
}
return url+quickr.share.util.writeParameters(p);
},_getWikiPageBaseUrl:function(_ce8,_ce9){
var base=quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT;
if(_ce8){
base+="/wiki/"+encodeURIComponent(_ce8);
if(_ce9){
base+="/page/"+encodeURIComponent(_ce9);
}
}
return base;
},getWikiPageEditUrl:function(_ceb,_cec){
var s=this._getWikiPageBaseUrl(_ceb,_cec);
return s+"/edit";
},getWikiPageCreateUrl:function(_cee,_cef){
var s=this._getWikiPageBaseUrl(_cee,_cef);
return s+"/create";
},getWikiPageDraftInfoServiceUrl:function(_cf1,_cf2,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.draftUri"):dojo.getObject("quickr.share.config.services.anonymousDraftUri");
url=url.replace("{libraryId}",encodeURIComponent(_cf1)).replace("{draftId}",encodeURIComponent(_cf2));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.includeNotification){
p.includeNotification=true;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.includeRecommendation){
p.includeRecommendation=true;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.submit){
p.submit=true;
}
if(opt.inline){
p.inline=true;
}
if(opt.shares){
p.metadata="full";
}
if(opt.includeDocumentModifiedInfo){
p.includeDocumentModifiedInfo=true;
}
if(opt.includeDocumentAuthorInfo){
p.includeDocumentAuthorInfo=true;
}
if(opt.source){
p.source=opt.source;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWikiPageCreateDraftInfoServiceUrl:function(_cf6,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiDraftCreateUri"):dojo.getObject("quickr.share.config.services.anonymousDraftUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_cf6));
return url+this.getQueryString(opt);
},getWikiUrl:function(_cf9,opt){
return this.getWikiPageUrl(_cf9,null,opt);
},getWikiPageUrl:function(_cfb,_cfc,opt,_cfe){
var url=this._getWikiPageBaseUrl(_cfb,_cfc);
var p={};
if(opt){
}
if(_cfe!=true){
url=url+this.getQueryString(p);
}
return url;
},getWikiPageCommentUrl:function(_d01,_d02,opt,_d04){
var url=this._getWikiPageBaseUrl(_d01,_d02);
var p={};
if(opt){
}
var s="/comment"+((_d04)?"/"+_d04:"");
return url+s+this.getQueryString(p);
},getWikiPageCreateDraftSummaryUrl:function(_d08,opt){
return quickr.share.wiki.Routes.ROOT+"/draft/"+encodeURIComponent(_d08)+"/create"+this.getQueryString(opt);
},getWikiPageEditDraftSummaryUrl:function(_d0a,opt){
return quickr.share.wiki.Routes.ROOT+"/draft/"+encodeURIComponent(_d0a)+"/edit"+this.getQueryString(opt);
},getWikiPageInfoUrl:function(_d0c,_d0d,opt){
var url=this._getWikiPageBaseUrl(_d0c,_d0d);
var p={};
if(opt){
}
var s="/info";
return url+s+this.getQueryString(p);
},getWikiPageVersionsUrl:function(_d12,_d13,opt){
var url=this._getWikiPageBaseUrl(_d12,_d13);
var p={};
if(opt){
}
var s="/versions";
return url+s+this.getQueryString(p);
},getWikiPageAttachmentsUrl:function(_d18,_d19,opt){
var url=this._getWikiPageBaseUrl(_d18,_d19);
var p={};
if(opt){
}
var s="/attachments";
return url+s+this.getQueryString(p);
},getWikiPageVersionUrl:function(_d1e,_d1f,_d20,opt){
var url=this._getWikiPageBaseUrl(_d1e,_d1f);
var p={};
if(opt){
}
var s="/version/"+encodeURIComponent(_d20);
return url+((_d20!=null)?s:"")+this.getQueryString(p);
},getWikiEntryServiceUrl:function(_d25,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiEntryUri"):dojo.getObject("quickr.share.config.services.anonymousWikiEntryUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_d25));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
if(dojo.isIE==6){
p.ts=new Date().getTime();
}
return url+this.getQueryString(p);
},getMyWikiFeedServiceUrl:function(_d29,opt){
var url=this._getBaseWikiFeedServiceUrl(_d29,(opt&&opt.basicAuth));
var p={};
if(opt){
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousWikisFeedUri");
var p={};
if(opt){
if(opt.format&&(dojo.indexOf(["xml","json"],opt.format)!=-1)){
p.format=opt.format;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWikiPageInfoServiceUrl:function(_d30,_d31,opt){
var url=null;
if(_d31){
url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiPageServiceUri"):dojo.getObject("quickr.share.config.services.anonymousWikiPageServiceUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_d30));
url=url.replace("{pageId}",encodeURIComponent(_d31));
}else{
url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiHomepageServiceUri"):dojo.getObject("quickr.share.config.services.anonymousWikiHomepageServiceUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_d30));
}
var p={};
if(opt){
if(opt.includeWorkingDraftInfo){
p.includeWorkingDraftInfo=true;
}
if(opt.fetchAcl){
p.acls=true;
}
if(opt.includeNotification){
p.includeNotification=true;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.includeRecommendation){
p.includeRecommendation=true;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.submit){
p.submit=true;
}
if(opt.identifier&&(dojo.indexOf(["uuid","label"],opt.identifier)!=-1)){
p.identifier=opt.identifier;
}
if(opt.inline){
p.inline=true;
}
if(opt.shares){
p.metadata="full";
}
if(opt.createVersion){
p.createVersion=true;
}
if(opt.draft){
p.draft=opt.draft;
}
if(opt.sendNotification){
p.sendNotification=opt.sendNotification;
}
if(opt.source&&(dojo.indexOf(["external","internal"],opt.source)!=-1)){
p.source=opt.source;
}
if(opt.dontLogDownload){
p.dontLogDownload=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getMyWikisFeedServiceUrl:function(opt){
var url=dojo.getObject("quickr.share.config.services.myWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getAllWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.ratedWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousRatedWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getTaggedWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.taggedWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousTaggedWikisFeedUri");
var p={};
if(opt){
if(opt.includeTags){
p.includeTags=true;
}
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
p.visibility="public";
return url+this.getQueryString(p);
},getMyTaggedWikisFeedServiceUrl:function(opt){
var url=dojo.getObject("quickr.share.config.services.myTaggedWikisFeedUri");
var p={};
if(opt){
if(opt.includeTags){
p.includeTags=true;
}
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getTaggedPagesTooltipServiceUrl:function(_d41,tag){
var p={};
p.wikiLabel=_d41;
if(tag){
if(typeof tag=="string"){
p.tag=[tag];
}else{
p.tag=tag;
}
}
return this.getPageIndexUrl(_d41,p);
},getTaggedWikisUrl:function(opt){
var url=quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT+"/wikis/tagged";
var p={};
if(opt){
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(opt.tag){
if(dojo.isArray(opt.tag)&&opt.tag.length>3){
p.tag=opt.tag[opt.tag.length-1];
}else{
p.tag=opt.tag;
}
}
}
return url+this.getQueryString(p);
},getNewWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.newWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousNewWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getUpdatedWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.updatedWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousUpdatedWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getMostVisitedWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.mostVisitedWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousMostVisitedWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getMostCommentedWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.mostCommentedWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousMostCommentedWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getMostRecommendedWikisFeedServiceUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.mostRecommendedWikisFeedUri"):dojo.getObject("quickr.share.config.services.anonymousMostRecommendedWikisFeedUri");
var p={};
if(opt){
if(opt.page&&opt.page>1){
p.page=opt.page;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.includeTags){
p.includeTags=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getUserCreatePagesUrl:function(_d56,_d57,opt){
var p={};
if(opt.rel){
p.rel=opt.rel;
}
return dojo.getObject("quickr.share.config.baseUri")+"home/wiki/"+encodeURIComponent(_d56)+"/pages/create"+this.getQueryString(p);
},getPageNavigationUrl:function(opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiNavUri"):dojo.getObject("quickr.share.config.services.anonymousWikiNavUri");
url=url.replace("{libraryId}",encodeURIComponent(opt.library));
url=url.replace("{pageId}",encodeURIComponent(opt.page));
var p={};
if(opt.breadcrumbs){
p.breadcrumbs=opt.breadcrumbs;
}
if(opt.timestamp){
p.timestamp=opt.timestamp;
}
if(opt.parent){
p.parent=opt.parent;
}
url=url+quickr.share.util.writeParameters(p);
return url;
},getFileDownloadInfoServiceUrl:function(_d5d,_d5e,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.fileDownloadInfoUri"):dojo.getObject("quickr.share.config.services.anonymousFileDownloadInfoUri");
url=url.replace("{libraryId}",encodeURIComponent(_d5d)).replace("{fileId}",encodeURIComponent(_d5e));
var p={format:"json"};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
}
return url+quickr.share.util.writeParameters(p);
},getFileInfoServiceUrl:function(_d62,_d63,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.fileDirectUri"):dojo.getObject("quickr.share.config.services.anonymousFileDirectUri");
url=url.replace("{libraryId}",encodeURIComponent(_d62)).replace("{fileId}",encodeURIComponent(_d63));
var p={};
if(opt){
if(opt.includeWorkingDraftInfo){
p.includeWorkingDraftInfo=true;
}
if(opt.fetchAcl){
p.acls=true;
}
if(opt.includeNotification){
p.includeNotification=true;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.includeRecommendation){
p.includeRecommendation=true;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.submit){
p.submit=true;
}
if(opt.inline){
p.inline=true;
}
if(opt.shares){
p.metadata="full";
}
if(opt.createVersion){
p.createVersion=true;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getAttachmentListServiceUrl:function(_d67,_d68,opt){
var url=this._getFileFeedServiceUrl(_d67,_d68);
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getDraftAttachmentListServiceUrl:function(_d6c,_d6d,opt,_d6f){
var url=this._getDraftFeedServiceUrl(_d6c,_d6d,_d6f);
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},_getDraftFeedServiceUrl:function(_d72,_d73,_d74){
var s;
if(this.getAuthenticatedUser().id==_d74){
s=dojo.getObject("quickr.share.config.services.draftFeedUri");
}
s=s.replace("{libraryId}",encodeURIComponent(_d72));
s=s.replace("{draftId}",encodeURIComponent(_d73));
return s;
},getWikiPageVersionInfoServiceUrl:function(_d76,_d77,_d78,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiPageServiceUri"):dojo.getObject("quickr.share.config.services.anonymousWikiPageServiceUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_d76));
if(_d77){
url=url.replace("{pageId}",encodeURIComponent(_d77));
}
var p={};
if(opt){
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.fetchAcl){
p.acls=true;
}
if(opt.inline){
p.inline=true;
}
}
p.versionUuid=encodeURIComponent(_d78);
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWikiFileListServiceUrl:function(_d7c,opt){
return this.getWikiDocumentsFeedServiceUrl(_d7c,opt);
},getMyWikiDocumentsFeedServiceUrl:function(_d7e,opt){
var url=dojo.getObject("quickr.share.config.services.myWikiDocumentsFeedUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_d7e));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
if(opt.sharing=="withme"){
p.direction="inbound";
}else{
if(opt.sharing=="byme"){
p.direction="outbound";
}
}
if(dojo.indexOf(["public","shared","private"],opt.visibility)!=-1){
p.visibility=opt.visibility;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(dojo.indexOf(["view","edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt.startDate){
p.dF=opt.startDate;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.notification===true||opt.notification=="on"){
p.notification="on";
}else{
if(opt.notification===false||opt.notification=="off"){
p.notification="off";
}
}
if(opt.defaultContents){
p.includeDefaultDocument=true;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.createVersion){
p.createVersion=true;
}
if(opt.source){
p.source=opt.source;
}
if(opt.draft){
p.draft=opt.draft;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWikiDocumentsFeedServiceUrl:function(_d82,opt){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiDocumentsFeedUri"):dojo.getObject("quickr.share.config.services.anonymousWikiDocumentsFeedUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_d82));
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
if(opt.sharing=="withme"){
p.direction="inbound";
}else{
if(opt.sharing=="byme"){
p.direction="outbound";
}
}
if(dojo.indexOf(["public","shared","private"],opt.visibility)!=-1){
p.visibility=opt.visibility;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(dojo.indexOf(["view","edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt.startDate){
p.dF=opt.startDate;
}
if(opt.includeTags){
p.includeTags=true;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.notification===true||opt.notification=="on"){
p.notification="on";
}else{
if(opt.notification===false||opt.notification=="off"){
p.notification="off";
}
}
if(opt.defaultContents){
p.includeDefaultDocument=true;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.createVersion){
p.createVersion=true;
}
if(opt.source){
p.source=opt.source;
}
if(opt.draft){
p.draft=opt.draft;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getWikiComparisonServiceUrl:function(_d86,_d87,toId,_d89){
var url=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.wikiComparisonUri"):dojo.getObject("quickr.share.config.services.anonymousWikiComparisonUri");
var p={diffParent:_d86,input1:Math.max(toId,_d89),input2:Math.min(toId,_d89),library:_d87};
if(dojo.isIE){
p.format="xml";
}
return url+this.getQueryString(p);
},getWikiComparisonUrl:function(_d8c,_d8d,opt){
var to,from;
to=Math.max(opt.to,opt.from);
from=Math.min(opt.to,opt.from);
return this._getWikiPageBaseUrl(_d8c,_d8d)+"/compare"+this.getQueryString(opt);
},getVersionListServiceUrl:function(_d91,_d92,opt){
var url=this._getFileFeedServiceUrl(_d91,_d92,(opt&&opt.basicAuth));
var p={};
if(opt){
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.category){
p.category=opt.category;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.deleteFrom){
p.deleteFrom=opt.deleteFrom;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},_getFilestreamDirectFeedServiceUrl:function(_d96){
s=dojo.getObject("quickr.share.config.services.filestreamDirectFeedUri");
s=s.replace("{libraryId}",encodeURIComponent(_d96));
return s;
},_getFileFeedServiceUrl:function(_d97,_d98,_d99){
var s;
if(_d99){
s=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.basicAuth.fileDirectFeedUri"):dojo.getObject("quickr.share.config.services.basicAuth.anonymousFileDirectFeedUri");
}else{
s=this.isAuthenticatedUser()?dojo.getObject("quickr.share.config.services.fileDirectFeedUri"):dojo.getObject("quickr.share.config.services.anonymousFileDirectFeedUri");
}
s=s.replace("{libraryId}",encodeURIComponent(_d97));
s=s.replace("{fileId}",encodeURIComponent(_d98));
return s;
},getFileListServiceUrl:function(_d9b,opt){
var url=this._getFilestreamDirectFeedServiceUrl(_d9b);
var p={};
if(opt){
if(opt.fetchAcl){
p.acls=true;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.tag){
if(typeof opt.tag=="string"){
p.tag=[opt.tag];
}else{
p.tag=opt.tag;
}
}
if(opt.sharing=="withme"){
p.direction="inbound";
}else{
if(opt.sharing=="byme"){
p.direction="outbound";
}
}
if(dojo.indexOf(["public","shared","private"],opt.visibility)!=-1){
p.visibility=opt.visibility;
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(dojo.indexOf(["view","edit"],opt.sharePermission)!=-1){
p.sharePermission=opt.sharePermission;
}
if(opt.startDate){
p.dF=opt.startDate;
}
if(opt.sortKey){
p.sK=opt.sortKey;
p.sO=opt.sortDescending?"dsc":"asc";
}
if(opt.notification===true||opt.notification=="on"){
p.notification="on";
}else{
if(opt.notification===false||opt.notification=="off"){
p.notification="off";
}
}
if(opt.defaultContents){
p.includeDefaultDocument=true;
}
if(opt.category){
p.category=opt.category;
}
if(opt.fileType){
p.fileType=opt.fileType;
}
if(typeof opt.format!="undefined"){
p.format=opt.format;
}
if(opt.createVersion){
p.createVersion=true;
}
if(opt.source){
p.source=opt.source;
}
if(opt.draft){
p.draft=opt.draft;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+quickr.share.util.writeParameters(p);
},getAllWikisUrl:function(opt){
var url=(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/wikis";
var p={};
if(opt){
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(opt.tag){
if(dojo.isArray(opt.tag)&&opt.tag.length>3){
p.tag=opt.tag[opt.tag.length-1];
}else{
p.tag=opt.tag;
}
}
}
return url+this.getQueryString(p);
},getMyWikisUrl:function(_da2,opt){
var url=(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/mywikis";
var p={};
if(opt){
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(opt.tag){
if(dojo.isArray(opt.tag)&&opt.tag.length>3){
p.tag=opt.tag[opt.tag.length-1];
}else{
p.tag=opt.tag;
}
}
}
return url+this.getQueryString(p);
},getMyPagesUrl:function(_da6,opt){
var base=(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/wiki/"+encodeURIComponent(_da6)+"/mypages";
var p={};
if(opt){
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(opt.tag){
if(dojo.isArray(opt.tag)&&opt.tag.length>3){
p.tag=opt.tag[opt.tag.length-1];
}else{
p.tag=opt.tag;
}
}
if(opt.date){
p.date=opt.date;
}
}
return base+this.getQueryString(p);
},getPageIndexUrl:function(_daa,opt){
var base=(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/wiki/"+encodeURIComponent(_daa)+"/index";
var p={};
if(opt){
if(opt.sort){
p.sort=opt.sort;
}
if(opt.sortReversed){
p.reverse="1";
}
if(opt.tag){
if(dojo.isArray(opt.tag)&&opt.tag.length>3){
p.tag=opt.tag[opt.tag.length-1];
}else{
p.tag=opt.tag;
}
}
if(opt.date){
p.date=opt.date;
}
}
return base+this.getQueryString(p);
},getSiteMapUrl:function(_dae){
var base=(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/wiki/"+encodeURIComponent(_dae)+"/map";
return base;
},getDragAndDropUrl:function(opt,_db1,_db2,_db3,_db4){
var url=dojo.getObject("quickr.share.config.services.wikiDragAndDropUri");
url=url.replace("{libraryId}",encodeURIComponent(opt.library));
url=url.replace("{pageId}",encodeURIComponent(opt.page));
var p={};
if(_db1){
if(_db1.id){
p.parentUuid=_db1.id;
}else{
p.parent=_db1;
}
}
if(_db3){
p.above=_db3.id;
}
if(_db2){
p.below=_db2.id;
}
if(_db4==true){
p.postFeed=_db4;
}
return url+quickr.share.util.writeParameters(p);
},getGroupSearchServiceUrl:function(_db7,opt){
var url=dojo.getObject("quickr.share.config.services.groupUri");
var p={searchString:_db7,format:"json",includeVirtualGroups:"false"};
if(opt){
if(opt.directory){
p.searchType="directory";
}
if(opt.pageSize){
p.pageSize=opt.pageSize;
}
if(opt.page){
p.page=opt.page;
}else{
if(opt.start){
p.sI=opt.start;
}
}
if(opt.includeExtendedAttributes){
p.includeExtendedAttributes=true;
}
}
return url+this.getQueryString(p);
},getApplicationRoleMembersServiceUrl:function(_dbb,role,opt){
var url=dojo.getObject("quickr.share.config.services.applicationRoleMembersUri");
url=url.replace("{libraryId}",encodeURIComponent(_dbb));
url=url.replace("{role}",encodeURIComponent(role));
p={};
if(opt){
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getApplicationRolesServiceUrl:function(_dbf,opt){
var url=dojo.getObject("quickr.share.config.services.applicationRolesUri");
url=url.replace("{libraryId}",encodeURIComponent(_dbf));
p={"resolve-membership":true};
if(opt){
if(opt.memberId){
p.memberId=opt.memberId;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getApplicationMembersServiceUrl:function(_dc2,opt){
var url=dojo.getObject("quickr.share.config.services.applicationMembersUri");
url=url.replace("{libraryId}",encodeURIComponent(_dc2));
p={rep:"full",ts:new Date().getTime()};
if(opt){
if(typeof opt.start!="undefined"){
p["start-index"]=opt.start;
}
if(opt.sortKey){
p["order-by"]=opt.sortKey;
p["sort-order"]=opt.sortDescending?"dsc":"asc";
}
if(opt.filter){
p.filter=opt.filter;
}
if(opt.pageSize){
p["max-entries"]=opt.pageSize;
}
if(opt.memberId){
p.memberId=opt.memberId;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getWikiMembersServiceUrl:function(_dc5,opt){
var url=dojo.getObject("quickr.share.config.services.wikiMembersUri");
url=url.replace("{wikiLabel}",encodeURIComponent(_dc5));
p={rep:"full",ts:new Date().getTime()};
if(opt){
if(typeof opt.start!="undefined"){
p["start-index"]=opt.start;
}
if(opt.sortKey){
p["order-by"]=opt.sortKey;
p["sort-order"]=opt.sortDescending?"dsc":"asc";
}
if(opt.filter){
p.filter=opt.filter;
}
if(opt.pageSize){
p["max-entries"]=opt.pageSize;
}
if(opt.memberId){
p.memberId=opt.memberId;
}
if(opt.memberType){
p.memberType=opt.memberType;
}
}
if(dojo.isIE){
p.format=p.format||"xml";
}
return url+this.getQueryString(p);
},getSearchUrl:function(_dc8,mode,_dca){
var url=quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT+"/search";
p={"query":_dc8};
if(mode){
p.mode=mode;
}
if(_dca){
p.wikiLabel=_dca;
}
return url+this.getQueryString(p);
},getConnectionsSearchUrl:function(_dcc,opt){
var p={};
var _dcf=dojo.getObject("quickr.share.config.services.connections.uri.search");
var stem=(opt&&opt.advanced)?"/web/jsp/advancedSearch.jsp":"/web/search";
if(_dcc){
p.query=_dcc;
}
if(opt&&opt.component){
p.component=opt.component;
}
return _dcf+stem+this.getQueryString(p);
},getConnectionsSearchServiceUrl:function(){
return this.getProxiedUrl(dojo.getObject("quickr.share.config.services.connections.uri.search"));
},getProxiedUrl:function(url){
var uri=quickr.util.uri.parseUri(url);
var _dd3=quickr.util.uri.parseUri(dojo.getObject("quickr.share.config.applicationUri")||"/");
if(uri.scheme==_dd3.scheme&&uri.authority==_dd3.authority){
return url;
}else{
return dojo.getObject("quickr.share.config.proxyUri")+url.replace("://","/");
}
}});
quickr.share.wiki.Routes.BASE_PATH=quickr.share.Routes.BASE_PATH=dojo.getObject("quickr.share.config.baseUri")||"/";
quickr.share.wiki.Routes.ROOT=quickr.share.Routes.ROOT="home";
quickr.share.wiki.Routes.WIKI_HOME="home";
}
if(!dojo._hasResource["quickr.share.wiki.widget.TagList"]){
dojo._hasResource["quickr.share.wiki.widget.TagList"]=true;
dojo.provide("quickr.share.wiki.widget.TagList");
dojo.declare("quickr.share.wiki.widget.TagList",[quickr.share.scenes.ChannelTagList],{filterTags:function(_dd4){
this.tags=this._filterByWeight(_dd4);
this.hasTags=this.tags.length>0;
this.addActiveTags();
this.update();
},_filterByWeight:function(_dd5){
var _dd6=[];
if(this._alltags.length>0){
var _dd7=this._alltags[0].weight;
var _dd8=this._alltags[this._alltags.length-1].weight;
var _dd9=_dd8-1+(_dd7-_dd8+1)*_dd5;
for(var i=0;i<this._alltags.length;i++){
if(this._alltags[i].weight>=_dd9){
_dd6.unshift(this._alltags[i]);
}
}
}
return _dd6;
},loadTags:function(_ddb){
if(_ddb){
var tags=dojo.clone(_ddb);
this.hasTags=tags.length>0;
this.cloudTags=tags.slice(0,Math.min(tags.length,this.initialTagCloud));
this._alltags=this.tags=quickr.util.misc.sort(tags,["weight",-1],"name");
this.addActiveTags();
this.update();
}
},renderList:function(){
var d=document;
var tags=this.tags;
if(this.cloudNode){
this.cloudNode.style.display="none";
}
var el=this.domNode;
if(this.listNode){
el.removeChild(this.listNode);
this.listNode=null;
}
var div=this.listNode=d.createElement("div");
if(tags.length==0){
var _de1=d.createElement("div");
_de1.className="qkrEmpty";
_de1.appendChild(d.createTextNode(this.msgNoTags?this.msgNoTags:this._strings.NO_TAGS));
div.appendChild(_de1);
el.appendChild(div);
this.loadingNode.style.display="none";
}else{
if(tags.length>0){
var ul=d.createElement("ul");
ul.className="lotusList lotusEditable lotusMeta";
for(var i=0;i<tags.length;i++){
var _de4=(this.activeTags&&this.activeTags[tags[i].name]);
if(_de4||i<this.initialTagList){
this.renderTag(d,ul,tags[i],i,_de4);
}
}
div.appendChild(ul);
var ul=d.createElement("li");
}
this.loadingNode.style.display="none";
quickr.share.util.insertBefore(el,div,this.menuNode);
this.renderMenu(true);
}
},renderCloud:function(){
var d=document;
var tags=this.cloudTags;
if(this.listNode){
this.listNode.style.display="none";
}
var el=this.domNode;
if(this.cloudNode){
el.removeChild(this.cloudNode);
this.cloudNode=null;
}
var div=this.cloudNode=d.createElement("div");
if(tags.length==0){
var _de9=d.createElement("div");
_de9.className="qkrEmpty";
_de9.appendChild(d.createTextNode(this.msgNoTags?this.msgNoTags:this._strings.NO_TAGS));
div.appendChild(_de9);
el.appendChild(div);
this.loadingNode.style.display="none";
}else{
dojo.addClass(div,"lotusTagCloud");
this.displayCloud(div,tags);
this.loadingNode.style.display="none";
quickr.share.util.insertBefore(el,div,this.menuNode);
this.renderMenu(false);
}
},renderMenu:function(_dea){
var d=document;
var tags=this.tags;
var el=this.domNode;
if(!this.hasTags){
return;
}
if(!this.menuNode){
var div=this.menuNode=d.createElement("div");
var ul=d.createElement("ul");
ul.className="lotusActions lotusInlinelist";
var li=d.createElement("li");
li.className="lotusFirst";
li.appendChild(d.createTextNode(this._strings.VIEW_AS));
li.appendChild(d.createTextNode(" "));
var span=this.listTextNode=d.createElement("span");
span.appendChild(d.createTextNode(this._strings.LIST));
if(!_dea){
span.style.display="none";
}
li.appendChild(span);
var a=this.listLinkNode=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.update,"list"));
a.appendChild(d.createTextNode(this._strings.LIST));
a.title=this._strings.LIST_TITLE;
if(_dea){
a.style.display="none";
}
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var span=this.cloudTextNode=d.createElement("span");
span.appendChild(d.createTextNode(this._strings.CLOUD));
if(_dea){
span.style.display="none";
}
li.appendChild(span);
var a=this.cloudLinkNode=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.update,"cloud"));
a.appendChild(d.createTextNode(this._strings.CLOUD));
a.title=this._strings.CLOUD_TITLE;
if(!_dea){
a.style.display="none";
}
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var img=d.createElement("img");
img.src=this.stylesImageUri+"iconPopup.gif";
img.setAttribute("alt",this._strings.OPEN);
li.appendChild(img);
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.renderAllPopup));
a.appendChild(d.createTextNode(this._strings.ALL));
a.title=this._strings.ALL_TITLE;
li.appendChild(a);
ul.appendChild(li);
div.appendChild(ul);
el.appendChild(div);
}else{
this.listTextNode.style.display=_dea?"":"none";
this.listLinkNode.style.display=_dea?"none":"";
this.cloudTextNode.style.display=_dea?"none":"";
this.cloudLinkNode.style.display=_dea?"":"none";
}
}});
}
if(!dojo._hasResource["quickr.share.bean.User"]){
dojo._hasResource["quickr.share.bean.User"]=true;
dojo.provide("quickr.share.bean.User");
dojo.declare("quickr.share.bean.User",null,{constructor:function(e){
var qsu=quickr.share.util;
this.id=quickr.share.bean.User.decodeUserUri(qsu.getChildElementTextContentNS(e,"userid",qsu.NAMESPACES.SNX)||qsu.getChildElementTextContent(e,"userid"));
this.name=qsu.getChildElementTextContentNS(e,"name",qsu.NAMESPACES.DOCUMENTS_ATOM)||qsu.getChildElementTextContent(e,"name");
this.email=qsu.getChildElementTextContentNS(e,"email",qsu.NAMESPACES.DOCUMENTS_ATOM)||qsu.getChildElementTextContent(e,"email");
}});
quickr.share.bean.User.decodeUserUri=function(s){
return decodeURIComponent(s.replace("+"," "));
};
}
if(!dojo._hasResource["quickr.share.wiki.bean.Wiki"]){
dojo._hasResource["quickr.share.wiki.bean.Wiki"]=true;
dojo.provide("quickr.share.wiki.bean.Wiki");
dojo.declare("quickr.share.wiki.bean.Wiki",null,{constructor:function(_df7){
this.e=_df7;
},getLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getTitle:function(){
return quickr.share.util.getChildElementTextContent(this.e,"title");
},getDescription:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getPermissions:function(){
if(!this.permissions){
var s=quickr.share.util.getChildElementTextContentNS(this.e,"permissions",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.permissions=p;
}
return this.permissions;
},getCategory:function(){
return "wiki";
},getContent:function(){
return this.content||quickr.share.util.getChildElementTextContent(this.e,"content");
},getAuthor:function(){
if(!this.author){
this.author=new quickr.share.bean.User(this.e.getElementsByTagName("author")[0]);
}
return this.author;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getEntry:function(){
return this.e;
},getTags:function(){
if(!this.tags){
var tags=[];
for(var i=0;i<this.e.childNodes.length;i++){
var _dfd=this.e.childNodes[i];
if(_dfd.nodeName=="category"&&_dfd.getAttribute("scheme")==null){
tags.push(_dfd.getAttribute("term"));
}
}
this.tags=tags;
}
return this.tags;
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemCreated();
}
return this.published;
},getSystemLastModified:function(){
if(!this.systemLastModified){
this.systemLastModified=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.systemLastModified;
},getSystemCreated:function(){
if(!this.systemCreated){
this.systemCreated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.systemCreated;
},getTimesDownloaded:function(){
if(typeof this.downloadCount=="undefined"){
this.downloadCount=quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/hit"));
}
return this.downloadCount;
},getModifier:function(){
if(!this.modifier){
var e=quickr.share.util.getElementsByTagNameNS(this.e,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(e){
this.modifier=new quickr.share.bean.User(e);
}
}
return this.modifier;
},getModifiedItem:function(){
if(!this.modifiedItem){
this.modifiedItem=quickr.share.util.getChildElementTextContentNS(this.e,"modifiedItem",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
}
return this.modifiedItem;
},getRecommendationsCount:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/recommendations"));
},getCommentsCount:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/comment"));
},getVisitsCount:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/hit"));
},getUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
},getUrlFeed:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","replies","href"));
},getCommunityId:function(){
if(!this.communityId){
var l=quickr.share.util.getElementsByTagNameNS(this.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
var _e00=l?l:this.e;
this.communityId=quickr.share.util.getChildElementTextContentNS(_e00,"libraryCommunity",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
}
return this.communityId;
},isCommunityWiki:function(){
return !!this.getCommunityId();
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.DeleteWiki"]){
dojo._hasResource["quickr.share.wiki.action.DeleteWiki"]=true;
dojo.provide("quickr.share.wiki.action.DeleteWiki");
dojo.declare("quickr.share.wiki.action.DeleteWiki",[quickr.share.action.DialogAction],{wDialog:"470px",_stringsPrefix:"DELETE_WIKI",constructor:function(app,_e02){
this.listeners=[];
this.app=app;
this.nls=app.nls[this._stringsPrefix];
this.wikiLabel=_e02.wikiLabel||_e02.sceneInfo.wikiLabel;
},destroy:function(){
this.inherited(arguments);
},isValid:function(file,opt){
return true;
},createDialog:function(item,opt,_e07){
var d=document;
var _e09=d.createElement("div");
_e09.className="lotusDialogBorder";
_e09.style.width=this.wDialog;
var el=_e07.formNode=d.createElement("form");
dojo.connect(el,"onsubmit",dojo.hitch(this,function(e){
dojo.stopEvent(e);
}));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.TITLE));
el.appendChild(h1);
var _e10=d.createElement("div");
_e10.className="lotusDialogContent";
var _e11=d.createElement("table");
_e11.className="lotusFormTable";
_e11.cellPadding=_e11.cellPadding=0;
var _e12=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
td.className="lotusCenter";
var span=this.btn=d.createElement("span");
span.appendChild(document.createTextNode(this.nls.TEXT));
td.appendChild(span);
tr.appendChild(td);
_e12.appendChild(tr);
_e11.appendChild(_e12);
_e10.appendChild(_e11);
el.appendChild(_e10);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_e07.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(this.nls.BUSY));
div.appendChild(span);
var _e16=_e07.saveNode=d.createElement("input");
_e16.className="lotusFormButton";
_e16.type="submit";
_e16.value=this.nls.OK;
dojo.connect(_e16,"onclick",this,"deleteWiki");
div.appendChild(_e16);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_e09.appendChild(el);
_e07.setContent(_e09);
},updateDialog:function(file,opt,_e19){
return;
},loadWiki:function(_e1a,_e1b){
var _e1c;
if(_e1a instanceof Error||!_e1a){
alert("Couldn't load wiki metadata");
this.cancelDialog();
}else{
var wiki=this.wiki=new quickr.share.wiki.bean.Wiki(_e1a.documentElement);
var _e1e=wiki.getPermissions();
if(!(_e1e&&_e1e.Delete)){
_e1c={type:"unauthorized"};
}else{
this.canDelete=true;
dojo.removeClass(this.btn,"lotusBtnDisabled");
}
}
this.enableInput(this.dialog);
},deleteWiki:function(){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel);
this.app.net.deleteXml({url:url,handle:dojo.hitch(this,this.complete)});
},complete:function(_e20,_e21){
if(_e20 instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_e20,_e21));
}else{
this.destroy();
this.app.navigate(this.app.routes.getWelcomeUrl());
}
},onerror:function(code){
alert("Error deleting wiki");
return;
if(code=="ShareQuotaExceeded"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.MAX_SHARES_ERROR);
}else{
if(code=="ItemNotFound"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.NOT_FOUND_ERROR);
}else{
if(code=="AccessDenied"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.ACCESS_DENIED_ERROR);
}else{
if(code=="cancel"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.CANCEL_ERROR);
}else{
if(code=="timeout"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.TIMEOUT_ERROR);
}else{
if(code=="unauthenticated"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.NOT_LOGGED_IN_ERROR);
}else{
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.ERROR);
}
}
}
}
}
}
}});
}
if(!dojo._hasResource["dijit.Menu"]){
dojo._hasResource["dijit.Menu"]=true;
dojo.provide("dijit.Menu");
dojo.declare("dijit.Menu",[dijit._Widget,dijit._Templated,dijit._KeyNavContainer],{constructor:function(){
this._bindings=[];
},templateString:"<table class=\"dijit dijitMenu dijitReset dijitMenuTable\" waiRole=\"menu\" dojoAttachEvent=\"onkeypress:_onKeyPress\">"+"<tbody class=\"dijitReset\" dojoAttachPoint=\"containerNode\"></tbody>"+"</table>",targetNodeIds:[],contextMenuForWindow:false,leftClickToOpen:false,parentMenu:null,popupDelay:500,_contextMenuWithMouse:false,postCreate:function(){
if(this.contextMenuForWindow){
this.bindDomNode(dojo.body());
}else{
dojo.forEach(this.targetNodeIds,this.bindDomNode,this);
}
this.connectKeyNavHandlers([dojo.keys.UP_ARROW],[dojo.keys.DOWN_ARROW]);
},startup:function(){
if(this._started){
return;
}
dojo.forEach(this.getChildren(),function(_e23){
_e23.startup();
});
this.startupKeyNavChildren();
this.inherited(arguments);
},onExecute:function(){
},onCancel:function(_e24){
},_moveToPopup:function(evt){
if(this.focusedChild&&this.focusedChild.popup&&!this.focusedChild.disabled){
this.focusedChild._onClick(evt);
}
},_onKeyPress:function(evt){
if(evt.ctrlKey||evt.altKey){
return;
}
switch(evt.charOrCode){
case dojo.keys.RIGHT_ARROW:
this._moveToPopup(evt);
dojo.stopEvent(evt);
break;
case dojo.keys.LEFT_ARROW:
if(this.parentMenu){
this.onCancel(false);
}else{
dojo.stopEvent(evt);
}
break;
}
},onItemHover:function(item){
this.focusChild(item);
if(this.focusedChild.popup&&!this.focusedChild.disabled&&!this.hover_timer){
this.hover_timer=setTimeout(dojo.hitch(this,"_openPopup"),this.popupDelay);
}
},_onChildBlur:function(item){
dijit.popup.close(item.popup);
item._blur();
this._stopPopupTimer();
},onItemUnhover:function(item){
},_stopPopupTimer:function(){
if(this.hover_timer){
clearTimeout(this.hover_timer);
this.hover_timer=null;
}
},_getTopMenu:function(){
for(var top=this;top.parentMenu;top=top.parentMenu){
}
return top;
},onItemClick:function(item,evt){
if(item.disabled){
return false;
}
if(item.popup){
if(!this.is_open){
this._openPopup();
}
}else{
this.onExecute();
item.onClick(evt);
}
},_iframeContentWindow:function(_e2d){
var win=dijit.getDocumentWindow(dijit.Menu._iframeContentDocument(_e2d))||dijit.Menu._iframeContentDocument(_e2d)["__parent__"]||(_e2d.name&&dojo.doc.frames[_e2d.name])||null;
return win;
},_iframeContentDocument:function(_e2f){
var doc=_e2f.contentDocument||(_e2f.contentWindow&&_e2f.contentWindow.document)||(_e2f.name&&dojo.doc.frames[_e2f.name]&&dojo.doc.frames[_e2f.name].document)||null;
return doc;
},bindDomNode:function(node){
node=dojo.byId(node);
var win=dijit.getDocumentWindow(node.ownerDocument);
if(node.tagName.toLowerCase()=="iframe"){
win=this._iframeContentWindow(node);
node=dojo.withGlobal(win,dojo.body);
}
var cn=(node==dojo.body()?dojo.doc:node);
node[this.id]=this._bindings.push([dojo.connect(cn,(this.leftClickToOpen)?"onclick":"oncontextmenu",this,"_openMyself"),dojo.connect(cn,"onkeydown",this,"_contextKey"),dojo.connect(cn,"onmousedown",this,"_contextMouse")]);
},unBindDomNode:function(_e34){
var node=dojo.byId(_e34);
if(node){
var bid=node[this.id]-1,b=this._bindings[bid];
dojo.forEach(b,dojo.disconnect);
delete this._bindings[bid];
}
},_contextKey:function(e){
this._contextMenuWithMouse=false;
if(e.keyCode==dojo.keys.F10){
dojo.stopEvent(e);
if(e.shiftKey&&e.type=="keydown"){
var _e={target:e.target,pageX:e.pageX,pageY:e.pageY};
_e.preventDefault=_e.stopPropagation=function(){
};
window.setTimeout(dojo.hitch(this,function(){
this._openMyself(_e);
}),1);
}
}
},_contextMouse:function(e){
this._contextMenuWithMouse=true;
},_openMyself:function(e){
if(this.leftClickToOpen&&e.button>0){
return;
}
dojo.stopEvent(e);
var x,y;
if(dojo.isSafari||this._contextMenuWithMouse){
x=e.pageX;
y=e.pageY;
}else{
var _e3e=dojo.coords(e.target,true);
x=_e3e.x+10;
y=_e3e.y+10;
}
var self=this;
var _e40=dijit.getFocus(this);
function closeAndRestoreFocus(){
dijit.focus(_e40);
dijit.popup.close(self);
};
dijit.popup.open({popup:this,x:x,y:y,onExecute:closeAndRestoreFocus,onCancel:closeAndRestoreFocus,orient:this.isLeftToRight()?"L":"R"});
this.focus();
this._onBlur=function(){
this.inherited("_onBlur",arguments);
dijit.popup.close(this);
};
},onOpen:function(e){
this.isShowingNow=true;
},onClose:function(){
this._stopPopupTimer();
this.parentMenu=null;
this.isShowingNow=false;
this.currentPopup=null;
if(this.focusedChild){
this._onChildBlur(this.focusedChild);
this.focusedChild=null;
}
},_openPopup:function(){
this._stopPopupTimer();
var _e42=this.focusedChild;
var _e43=_e42.popup;
if(_e43.isShowingNow){
return;
}
_e43.parentMenu=this;
var self=this;
dijit.popup.open({parent:this,popup:_e43,around:_e42.domNode,orient:this.isLeftToRight()?{"TR":"TL","TL":"TR"}:{"TL":"TR","TR":"TL"},onCancel:function(){
dijit.popup.close(_e43);
_e42.focus();
self.currentPopup=null;
}});
this.currentPopup=_e43;
if(_e43.focus){
_e43.focus();
}
},uninitialize:function(){
dojo.forEach(this.targetNodeIds,this.unBindDomNode,this);
this.inherited(arguments);
}});
dojo.declare("dijit.MenuItem",[dijit._Widget,dijit._Templated,dijit._Contained],{templateString:"<tr class=\"dijitReset dijitMenuItem\" dojoAttachPoint=\"focusNode\" waiRole=\"menuitem\" tabIndex=\"-1\""+"dojoAttachEvent=\"onmouseenter:_onHover,onmouseleave:_onUnhover,ondijitclick:_onClick\">"+"<td class=\"dijitReset\" waiRole=\"presentation\"><div class=\"dijitMenuItemIcon\" dojoAttachPoint=\"iconNode\"></div></td>"+"<td class=\"dijitReset dijitMenuItemLabel\" dojoAttachPoint=\"containerNode\"></td>"+"<td class=\"dijitReset dijitMenuArrowCell\" waiRole=\"presentation\">"+"<div dojoAttachPoint=\"arrowWrapper\" style=\"display: none\">"+"<div class=\"dijitMenuExpand\"></div>"+"<span class=\"dijitMenuExpandA11y\">+</span>"+"</div>"+"</td>"+"</tr>",attributeMap:dojo.mixin(dojo.clone(dijit._Widget.prototype.attributeMap),{label:{node:"containerNode",type:"innerHTML"},iconClass:{node:"iconNode",type:"class"}}),label:"",iconClass:"",disabled:false,_fillContent:function(_e45){
if(_e45&&!("label" in this.params)){
this.attr("label",_e45.innerHTML);
}
},postCreate:function(){
dojo.setSelectable(this.domNode,false);
dojo.attr(this.containerNode,"id",this.id+"_text");
dijit.setWaiState(this.domNode,"labelledby",this.id+"_text");
},_onHover:function(){
this.getParent().onItemHover(this);
},_onUnhover:function(){
this.getParent().onItemUnhover(this);
},_onClick:function(evt){
this.getParent().onItemClick(this,evt);
dojo.stopEvent(evt);
},onClick:function(evt){
},focus:function(){
dojo.addClass(this.domNode,"dijitMenuItemHover");
try{
dijit.focus(this.focusNode);
}
catch(e){
}
},_blur:function(){
dojo.removeClass(this.domNode,"dijitMenuItemHover");
},setLabel:function(_e48){
dojo.deprecated("dijit.MenuItem.setLabel() is deprecated.  Use attr('label', ...) instead.","","2.0");
this.attr("label",_e48);
},setDisabled:function(_e49){
dojo.deprecated("dijit.Menu.setDisabled() is deprecated.  Use attr('disabled', bool) instead.","","2.0");
this.attr("disabled",_e49);
},_setDisabledAttr:function(_e4a){
this.disabled=_e4a;
dojo[_e4a?"addClass":"removeClass"](this.domNode,"dijitMenuItemDisabled");
dijit.setWaiState(this.focusNode,"disabled",_e4a?"true":"false");
}});
dojo.declare("dijit.PopupMenuItem",dijit.MenuItem,{_fillContent:function(){
if(this.srcNodeRef){
var _e4b=dojo.query("*",this.srcNodeRef);
dijit.PopupMenuItem.superclass._fillContent.call(this,_e4b[0]);
this.dropDownContainer=this.srcNodeRef;
}
},startup:function(){
if(this._started){
return;
}
this.inherited(arguments);
if(!this.popup){
var node=dojo.query("[widgetId]",this.dropDownContainer)[0];
this.popup=dijit.byNode(node);
}
dojo.body().appendChild(this.popup.domNode);
this.popup.domNode.style.display="none";
dojo.style(this.arrowWrapper,"display","");
dijit.setWaiState(this.focusNode,"haspopup","true");
},destroyDescendants:function(){
if(this.popup){
this.popup.destroyRecursive();
delete this.popup;
}
this.inherited(arguments);
}});
dojo.declare("dijit.MenuSeparator",[dijit._Widget,dijit._Templated,dijit._Contained],{templateString:"<tr class=\"dijitMenuSeparator\"><td colspan=3>"+"<div class=\"dijitMenuSeparatorTop\"></div>"+"<div class=\"dijitMenuSeparatorBottom\"></div>"+"</td></tr>",postCreate:function(){
dojo.setSelectable(this.domNode,false);
},isFocusable:function(){
return false;
}});
dojo.declare("dijit.CheckedMenuItem",dijit.MenuItem,{templateString:"<tr class=\"dijitReset dijitMenuItem\" dojoAttachPoint=\"focusNode\" waiRole=\"menuitemcheckbox\" tabIndex=\"-1\""+"dojoAttachEvent=\"onmouseenter:_onHover,onmouseleave:_onUnhover,ondijitclick:_onClick\">"+"<td class=\"dijitReset\" waiRole=\"presentation\"><div class=\"dijitMenuItemIcon dijitCheckedMenuItemIcon\" dojoAttachPoint=\"iconNode\">"+"<div class=\"dijitCheckedMenuItemIconChar\">&#10003;</div>"+"</div></td>"+"<td class=\"dijitReset dijitMenuItemLabel\" dojoAttachPoint=\"containerNode,labelNode\"></td>"+"<td class=\"dijitReset dijitMenuArrowCell\" waiRole=\"presentation\">"+"<div dojoAttachPoint=\"arrowWrapper\" style=\"display: none\">"+"<div class=\"dijitMenuExpand\"></div>"+"<span class=\"dijitMenuExpandA11y\">+</span>"+"</div>"+"</td>"+"</tr>",checked:false,_setCheckedAttr:function(_e4d){
dojo.toggleClass(this.iconNode,"dijitCheckedMenuItemIconChecked",_e4d);
dijit.setWaiState(this.domNode,"checked",_e4d);
this.checked=_e4d;
},onChange:function(_e4e){
},_onClick:function(e){
if(!this.disabled){
this.attr("checked",!this.checked);
this.onChange(this.checked);
}
this.inherited(arguments);
}});
}
if(!dojo._hasResource["quickr.widget.SearchBox"]){
dojo._hasResource["quickr.widget.SearchBox"]=true;
dojo.provide("quickr.widget.SearchBox");
dojo.declare("quickr.widget.SearchBox",[dijit._Widget],{postMixInProperties:function(){
this.scopes=this.scopes||[];
if(this.app){
this.userStore=this.userStore||this.app.getUserTypeAheadStore();
this._stringsUser=this._stringsUser||this.app.nls.USERSEARCH;
this._strings=this._strings||this.app.nls.SEARCH;
}
},buildRendering:function(){
var _e50=this;
var d=document;
var el=this.domNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
var _e53=dojo.filter(this.scopes,function(s){
return !s.isValid||s.isValid(_e50.app,_e50.app.scene);
});
this.currentScope=_e53[0];
var form=el;
form.className="lotusSearch";
form.setAttribute("role","search");
dojo.connect(form,"onsubmit",this,"search");
var _e56,_e57,_e58;
var _e59=d.createElement("table");
_e59.className="lotusLayout";
_e59.cellspacing="0";
var _e5a=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
_e56=d.createElement("div");
td.appendChild(_e56);
tr.appendChild(td);
var td=_e57=d.createElement("td");
tr.appendChild(td);
var td=_e58=d.createElement("td");
tr.appendChild(td);
_e5a.appendChild(tr);
_e59.appendChild(_e5a);
form.appendChild(_e59);
var _e5d=this.scopeLink=d.createElement("a");
_e5d.className="lotusScope";
_e5d.title=this._strings.HOVER;
_e5d.href="javascript:;";
var _e5e=this.scopeIcon=d.createElement("img");
_e5e.className="lconnSprite";
_e5e.alt="";
_e5e.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
_e5d.appendChild(_e5e);
var _e5f=this.scopeLabel=d.createElement("span");
_e5d.appendChild(_e5f);
_e56.appendChild(_e5d);
var _e60=new dijit.Menu();
dojo.forEach(_e53,function(_e61){
if(_e61.separator){
_e60.addChild(new dijit.MenuSeparator());
}else{
if(_e50.defaultSearchScope&&_e61.id==_e50.defaultSearchScope){
_e50.currentScope=_e61;
}
var _e62=new dijit.MenuItem({baseClass:"qkrSearchScope",iconClass:_e61.iconClass,label:_e61.label,title:_e61.title,onClick:dojo.hitch(_e50,_e50.changeScope,_e61)});
if(_e61.onClick){
dojo.connect(_e62,"onClick",null,dojo.hitch(_e61,_e61.onClick,_e50.app));
}
_e60.addChild(_e62);
}
});
dojo.addClass(_e60.domNode,"lotusActionMenu");
var _e59=_e60.domNode;
var _e63=d.createElement("colgroup");
var col=d.createElement("col");
col.width="25";
_e63.appendChild(col);
var col=d.createElement("col");
_e63.appendChild(col);
_e59.insertBefore(_e63,_e59.firstChild);
dojo.connect(_e5d,"onclick",function(){
if(_e60.domNode.originalWidth){
dojo.marginBox(_e60.domNode,{w:_e60.domNode.originalWidth});
}
lconn.core.MenuUtility.openAround(_e60,_e5d);
if(!_e60.domNode.originalWidth){
_e60.domNode.originalWidth=_e60.domNode.offsetWidth;
}
var _e65=_e60.domNode.offsetWidth;
var _e66=_e5d.offsetWidth;
if(_e66>_e65){
var _e67=null;
if(!dojo._isBodyLtr()){
_e67=_e60.domNode.parentNode;
}
dojo.marginBox(_e60.domNode,{w:_e66});
if(_e67){
_e67.style.left=(_e67.offsetLeft+_e65-_e66)+"px";
}
}
});
if(_e53.length<=1){
_e56.style.display="none";
}
var _e68=this.currentScope.hintText||"";
if(dojo.some(_e53,function(a){
return a.typeahead=="people";
})){
var _e6a=d.createElement("INPUT");
_e6a.style.display=(this.currentScope.typeahead=="people")?"":"none";
_e6a.title=_e6a.value=_e68;
_e6a.size="30";
_e57.appendChild(_e6a);
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(this.userStore,{_strings:this._stringsUser,id:this.id+"_people","class":"lotusText",orient:dojo._isBodyLtr()?{"BR":"TR","TR":"BR"}:{"BL":"TL","TL":"BL"}});
var _e6c=this.people=new lconn.core.PeopleTypeAhead(args,_e6a);
var _e6d=_e6c.textbox;
_e6d.title=_e68;
dojo.connect(_e6c,"onSelect",this,"selectPerson");
dojo.connect(_e6d,"onfocus",_e6d,this.onTextFocus);
dojo.connect(_e6d,"onblur",_e6d,this.onTextBlur);
}
if(dojo.some(_e53,function(a){
return !a.typeahead;
})){
var _e6a=this.simpleInputNode=d.createElement("INPUT");
_e6a.className="lotusText";
_e6a.style.display=(this.currentScope.typeahead=="people")?"":"none";
_e6a.size="30";
_e6a.id=this.id+"_simpleInput";
_e6a.title=_e6a.value=_e68;
_e57.appendChild(_e6a);
dojo.connect(_e6a,"onfocus",_e6a,this.onTextFocus);
dojo.connect(_e6a,"onblur",_e6a,this.onTextBlur);
}
quickr.share.scenes.createSearchButton(d,_e58,this.id+"_submit",this._strings.SEARCH_ALT);
this.changeScope(this.currentScope);
},onTextFocus:function(){
if(!this.hasInput){
this.hasInput=true;
this.style.color="#000";
this.value="";
}
},onTextBlur:function(){
if(this.value==""){
this.hasInput=false;
this.style.color="#aaa";
this.value=this.defaultText||"";
}
},getCurrentScope:function(){
return this.currentScope;
},changeScope:function(_e6f){
var i;
var d=document;
var ip=this.people;
var is=this.simpleInputNode;
this.currentScope=_e6f;
quickr.util.html.removeChildren(this.scopeLabel);
this.scopeLabel.appendChild(d.createTextNode(_e6f.label));
var _e74=d.createElement("span");
_e74.className="lotusAltText";
_e74.appendChild(d.createTextNode("▾"));
this.scopeLabel.appendChild(_e74);
this.scopeIcon.className="lotusIcon "+_e6f.iconClass;
if(_e6f.typeahead=="people"){
ip.domNode.style.display="";
if(is){
is.style.display="none";
}
i=this.inputNode=ip.textbox;
}else{
is.style.display="";
if(ip){
ip.domNode.style.display="none";
}
i=this.inputNode=is;
}
i.defaultText=i.value=_e6f.hintText||"";
i.hasInput=false;
i.style.color="#aaa";
},selectPerson:function(){
var _e75=this.getCurrentScope();
if(_e75.onSelect){
_e75.onSelect.apply(_e75,arguments);
}
},search:function(e){
if(e){
dojo.stopEvent(e);
}
var _e77=this.inputNode;
var _e78=_e77.value;
if(!_e77.hasInput||quickr.util.text.trim(_e78).length==0){
return;
}
var _e79=this.getCurrentScope();
if(_e79.onSearch){
_e79.onSearch(this.inputNode.value);
}
}});
}
if(!dojo._hasResource["dijit.form.Slider"]){
dojo._hasResource["dijit.form.Slider"]=true;
dojo.provide("dijit.form.Slider");
dojo.declare("dijit.form.HorizontalSlider",[dijit.form._FormValueWidget,dijit._Container],{templateString:"<table class=\"dijit dijitReset dijitSlider\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" rules=\"none\" dojoAttachEvent=\"onkeypress:_onKeyPress\"\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset\" colspan=\"2\"></td\n\t\t><td dojoAttachPoint=\"containerNode,topDecoration\" class=\"dijitReset\" style=\"text-align:center;width:100%;\"></td\n\t\t><td class=\"dijitReset\" colspan=\"2\"></td\n\t></tr\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset dijitSliderButtonContainer dijitSliderButtonContainerH\"\n\t\t\t><div class=\"dijitSliderDecrementIconH\" tabIndex=\"-1\" style=\"display:none\" dojoAttachPoint=\"decrementButton\"><span class=\"dijitSliderButtonInner\">-</span></div\n\t\t></td\n\t\t><td class=\"dijitReset\"\n\t\t\t><div class=\"dijitSliderBar dijitSliderBumper dijitSliderBumperH dijitSliderLeftBumper dijitSliderLeftBumper\" dojoAttachEvent=\"onclick:_onClkDecBumper\"></div\n\t\t></td\n\t\t><td class=\"dijitReset\"\n\t\t\t><input dojoAttachPoint=\"valueNode\" type=\"hidden\" name=\"${name}\"\n\t\t\t/><div class=\"dijitReset dijitSliderBarContainerH\" waiRole=\"presentation\" dojoAttachPoint=\"sliderBarContainer\"\n\t\t\t\t><div waiRole=\"presentation\" dojoAttachPoint=\"progressBar\" class=\"dijitSliderBar dijitSliderBarH dijitSliderProgressBar dijitSliderProgressBarH\" dojoAttachEvent=\"onclick:_onBarClick\"\n\t\t\t\t\t><div class=\"dijitSliderMoveable dijitSliderMoveableH\" \n\t\t\t\t\t\t><div dojoAttachPoint=\"sliderHandle,focusNode\" class=\"dijitSliderImageHandle dijitSliderImageHandleH\" dojoAttachEvent=\"onmousedown:_onHandleClick\" waiRole=\"slider\" valuemin=\"${minimum}\" valuemax=\"${maximum}\"></div\n\t\t\t\t\t></div\n\t\t\t\t></div\n\t\t\t\t><div waiRole=\"presentation\" dojoAttachPoint=\"remainingBar\" class=\"dijitSliderBar dijitSliderBarH dijitSliderRemainingBar dijitSliderRemainingBarH\" dojoAttachEvent=\"onclick:_onBarClick\"></div\n\t\t\t></div\n\t\t></td\n\t\t><td class=\"dijitReset\"\n\t\t\t><div class=\"dijitSliderBar dijitSliderBumper dijitSliderBumperH dijitSliderRightBumper dijitSliderRightBumper\" dojoAttachEvent=\"onclick:_onClkIncBumper\"></div\n\t\t></td\n\t\t><td class=\"dijitReset dijitSliderButtonContainer dijitSliderButtonContainerH\" style=\"right:0px;\"\n\t\t\t><div class=\"dijitSliderIncrementIconH\" tabIndex=\"-1\" style=\"display:none\" dojoAttachPoint=\"incrementButton\"><span class=\"dijitSliderButtonInner\">+</span></div\n\t\t></td\n\t></tr\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset\" colspan=\"2\"></td\n\t\t><td dojoAttachPoint=\"containerNode,bottomDecoration\" class=\"dijitReset\" style=\"text-align:center;\"></td\n\t\t><td class=\"dijitReset\" colspan=\"2\"></td\n\t></tr\n></table>\n",value:0,showButtons:true,minimum:0,maximum:100,discreteValues:Infinity,pageIncrement:2,clickSelect:true,slideDuration:dijit.defaultDuration,widgetsInTemplate:true,attributeMap:dojo.mixin(dojo.clone(dijit.form._FormWidget.prototype.attributeMap),{id:"",name:"valueNode"}),baseClass:"dijitSlider",_mousePixelCoord:"pageX",_pixelCount:"w",_startingPixelCoord:"x",_startingPixelCount:"l",_handleOffsetCoord:"left",_progressPixelSize:"width",_onKeyPress:function(e){
if(this.disabled||this.readOnly||e.altKey||e.ctrlKey){
return;
}
switch(e.charOrCode){
case dojo.keys.HOME:
this._setValueAttr(this.minimum,true);
break;
case dojo.keys.END:
this._setValueAttr(this.maximum,true);
break;
case ((this._descending||this.isLeftToRight())?dojo.keys.RIGHT_ARROW:dojo.keys.LEFT_ARROW):
case (this._descending===false?dojo.keys.DOWN_ARROW:dojo.keys.UP_ARROW):
case (this._descending===false?dojo.keys.PAGE_DOWN:dojo.keys.PAGE_UP):
this.increment(e);
break;
case ((this._descending||this.isLeftToRight())?dojo.keys.LEFT_ARROW:dojo.keys.RIGHT_ARROW):
case (this._descending===false?dojo.keys.UP_ARROW:dojo.keys.DOWN_ARROW):
case (this._descending===false?dojo.keys.PAGE_UP:dojo.keys.PAGE_DOWN):
this.decrement(e);
break;
default:
this.inherited(arguments);
return;
}
dojo.stopEvent(e);
},_onHandleClick:function(e){
if(this.disabled||this.readOnly){
return;
}
if(!dojo.isIE){
dijit.focus(this.sliderHandle);
}
dojo.stopEvent(e);
},_isReversed:function(){
return !this.isLeftToRight();
},_onBarClick:function(e){
if(this.disabled||this.readOnly||!this.clickSelect){
return;
}
dijit.focus(this.sliderHandle);
dojo.stopEvent(e);
var _e7d=dojo.coords(this.sliderBarContainer,true);
var _e7e=e[this._mousePixelCoord]-_e7d[this._startingPixelCoord];
this._setPixelValue(this._isReversed()?(_e7d[this._pixelCount]-_e7e):_e7e,_e7d[this._pixelCount],true);
},_setPixelValue:function(_e7f,_e80,_e81){
if(this.disabled||this.readOnly){
return;
}
_e7f=_e7f<0?0:_e80<_e7f?_e80:_e7f;
var _e82=this.discreteValues;
if(_e82<=1||_e82==Infinity){
_e82=_e80;
}
_e82--;
var _e83=_e80/_e82;
var _e84=Math.round(_e7f/_e83);
this._setValueAttr((this.maximum-this.minimum)*_e84/_e82+this.minimum,_e81);
},_setValueAttr:function(_e85,_e86){
this.valueNode.value=this.value=_e85;
dijit.setWaiState(this.focusNode,"valuenow",_e85);
this.inherited(arguments);
var _e87=(_e85-this.minimum)/(this.maximum-this.minimum);
var _e88=(this._descending===false)?this.remainingBar:this.progressBar;
var _e89=(this._descending===false)?this.progressBar:this.remainingBar;
if(this._inProgressAnim&&this._inProgressAnim.status!="stopped"){
this._inProgressAnim.stop(true);
}
if(_e86&&this.slideDuration>0&&_e88.style[this._progressPixelSize]){
var _e8a=this;
var _e8b={};
var _e8c=parseFloat(_e88.style[this._progressPixelSize]);
var _e8d=this.slideDuration*(_e87-_e8c/100);
if(_e8d==0){
return;
}
if(_e8d<0){
_e8d=0-_e8d;
}
_e8b[this._progressPixelSize]={start:_e8c,end:_e87*100,units:"%"};
this._inProgressAnim=dojo.animateProperty({node:_e88,duration:_e8d,onAnimate:function(v){
_e89.style[_e8a._progressPixelSize]=(100-parseFloat(v[_e8a._progressPixelSize]))+"%";
},onEnd:function(){
delete _e8a._inProgressAnim;
},properties:_e8b});
this._inProgressAnim.play();
}else{
_e88.style[this._progressPixelSize]=(_e87*100)+"%";
_e89.style[this._progressPixelSize]=((1-_e87)*100)+"%";
}
},_bumpValue:function(_e8f){
if(this.disabled||this.readOnly){
return;
}
var s=dojo.getComputedStyle(this.sliderBarContainer);
var c=dojo._getContentBox(this.sliderBarContainer,s);
var _e92=this.discreteValues;
if(_e92<=1||_e92==Infinity){
_e92=c[this._pixelCount];
}
_e92--;
var _e93=(this.value-this.minimum)*_e92/(this.maximum-this.minimum)+_e8f;
if(_e93<0){
_e93=0;
}
if(_e93>_e92){
_e93=_e92;
}
_e93=_e93*(this.maximum-this.minimum)/_e92+this.minimum;
this._setValueAttr(_e93,true);
},_onClkIncBumper:function(){
this._setValueAttr(this._descending===false?this.minimum:this.maximum,true);
},_onClkDecBumper:function(){
this._setValueAttr(this._descending===false?this.maximum:this.minimum,true);
},decrement:function(e){
this._bumpValue(e.charOrCode==dojo.keys.PAGE_DOWN?-this.pageIncrement:-1);
},increment:function(e){
this._bumpValue(e.charOrCode==dojo.keys.PAGE_UP?this.pageIncrement:1);
},_mouseWheeled:function(evt){
dojo.stopEvent(evt);
var _e97=!dojo.isMozilla;
var _e98=evt[(_e97?"wheelDelta":"detail")]*(_e97?1:-1);
this[(_e98<0?"decrement":"increment")](evt);
},startup:function(){
dojo.forEach(this.getChildren(),function(_e99){
if(this[_e99.container]!=this.containerNode){
this[_e99.container].appendChild(_e99.domNode);
}
},this);
},_typematicCallback:function(_e9a,_e9b,e){
if(_e9a==-1){
return;
}
this[(_e9b==(this._descending?this.incrementButton:this.decrementButton))?"decrement":"increment"](e);
},postCreate:function(){
if(this.showButtons){
this.incrementButton.style.display="";
this.decrementButton.style.display="";
this._connects.push(dijit.typematic.addMouseListener(this.decrementButton,this,"_typematicCallback",25,500));
this._connects.push(dijit.typematic.addMouseListener(this.incrementButton,this,"_typematicCallback",25,500));
}
this.connect(this.domNode,!dojo.isMozilla?"onmousewheel":"DOMMouseScroll","_mouseWheeled");
var _e9d=this;
var _e9e=function(){
dijit.form._SliderMover.apply(this,arguments);
this.widget=_e9d;
};
dojo.extend(_e9e,dijit.form._SliderMover.prototype);
this._movable=new dojo.dnd.Moveable(this.sliderHandle,{mover:_e9e});
var _e9f=dojo.query("label[for=\""+this.id+"\"]");
if(_e9f.length){
_e9f[0].id=(this.id+"_label");
dijit.setWaiState(this.focusNode,"labelledby",_e9f[0].id);
}
dijit.setWaiState(this.focusNode,"valuemin",this.minimum);
dijit.setWaiState(this.focusNode,"valuemax",this.maximum);
this.inherited(arguments);
},destroy:function(){
this._movable.destroy();
if(this._inProgressAnim&&this._inProgressAnim.status!="stopped"){
this._inProgressAnim.stop(true);
}
this.inherited(arguments);
}});
dojo.declare("dijit.form.VerticalSlider",dijit.form.HorizontalSlider,{templateString:"<table class=\"dijitReset dijitSlider\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" rules=\"none\" dojoAttachEvent=\"onkeypress:_onKeyPress\"\n><tbody class=\"dijitReset\"\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset\"></td\n\t\t><td class=\"dijitReset dijitSliderButtonContainer dijitSliderButtonContainerV\"\n\t\t\t><div class=\"dijitSliderIncrementIconV\" tabIndex=\"-1\" style=\"display:none\" dojoAttachPoint=\"decrementButton\"><span class=\"dijitSliderButtonInner\">+</span></div\n\t\t></td\n\t\t><td class=\"dijitReset\"></td\n\t></tr\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset\"></td\n\t\t><td class=\"dijitReset\"\n\t\t\t><center><div class=\"dijitSliderBar dijitSliderBumper dijitSliderBumperV dijitSliderTopBumper dijitSliderTopBumper\" dojoAttachEvent=\"onclick:_onClkIncBumper\"></div></center\n\t\t></td\n\t\t><td class=\"dijitReset\"></td\n\t></tr\n\t><tr class=\"dijitReset\"\n\t\t><td dojoAttachPoint=\"leftDecoration\" class=\"dijitReset\" style=\"text-align:center;height:100%;\"></td\n\t\t><td class=\"dijitReset\" style=\"height:100%;\"\n\t\t\t><input dojoAttachPoint=\"valueNode\" type=\"hidden\" name=\"${name}\"\n\t\t\t/><center class=\"dijitReset dijitSliderBarContainerV\" waiRole=\"presentation\" dojoAttachPoint=\"sliderBarContainer\"\n\t\t\t\t><div waiRole=\"presentation\" dojoAttachPoint=\"remainingBar\" class=\"dijitSliderBar dijitSliderBarV dijitSliderRemainingBar dijitSliderRemainingBarV\" dojoAttachEvent=\"onclick:_onBarClick\"><!--#5629--></div\n\t\t\t\t><div waiRole=\"presentation\" dojoAttachPoint=\"progressBar\" class=\"dijitSliderBar dijitSliderBarV dijitSliderProgressBar dijitSliderProgressBarV\" dojoAttachEvent=\"onclick:_onBarClick\"\n\t\t\t\t\t><div class=\"dijitSliderMoveable\" style=\"vertical-align:top;\" \n\t\t\t\t\t\t><div dojoAttachPoint=\"sliderHandle,focusNode\" class=\"dijitSliderImageHandle dijitSliderImageHandleV\" dojoAttachEvent=\"onmousedown:_onHandleClick\" waiRole=\"slider\" valuemin=\"${minimum}\" valuemax=\"${maximum}\"></div\n\t\t\t\t\t></div\n\t\t\t\t></div\n\t\t\t></center\n\t\t></td\n\t\t><td dojoAttachPoint=\"containerNode,rightDecoration\" class=\"dijitReset\" style=\"text-align:center;height:100%;\"></td\n\t></tr\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset\"></td\n\t\t><td class=\"dijitReset\"\n\t\t\t><center><div class=\"dijitSliderBar dijitSliderBumper dijitSliderBumperV dijitSliderBottomBumper dijitSliderBottomBumper\" dojoAttachEvent=\"onclick:_onClkDecBumper\"></div></center\n\t\t></td\n\t\t><td class=\"dijitReset\"></td\n\t></tr\n\t><tr class=\"dijitReset\"\n\t\t><td class=\"dijitReset\"></td\n\t\t><td class=\"dijitReset dijitSliderButtonContainer dijitSliderButtonContainerV\"\n\t\t\t><div class=\"dijitSliderDecrementIconV\" tabIndex=\"-1\" style=\"display:none\" dojoAttachPoint=\"incrementButton\"><span class=\"dijitSliderButtonInner\">-</span></div\n\t\t></td\n\t\t><td class=\"dijitReset\"></td\n\t></tr\n></tbody></table>\n",_mousePixelCoord:"pageY",_pixelCount:"h",_startingPixelCoord:"y",_startingPixelCount:"t",_handleOffsetCoord:"top",_progressPixelSize:"height",_descending:true,startup:function(){
if(this._started){
return;
}
if(!this.isLeftToRight()&&dojo.isMoz){
if(this.leftDecoration){
this._rtlRectify(this.leftDecoration);
}
if(this.rightDecoration){
this._rtlRectify(this.rightDecoration);
}
}
this.inherited(arguments);
},_isReversed:function(){
return this._descending;
},_rtlRectify:function(_ea0){
var _ea1=[];
while(_ea0.firstChild){
_ea1.push(_ea0.firstChild);
_ea0.removeChild(_ea0.firstChild);
}
for(var i=_ea1.length-1;i>=0;i--){
if(_ea1[i]){
_ea0.appendChild(_ea1[i]);
}
}
}});
dojo.declare("dijit.form._SliderMover",dojo.dnd.Mover,{onMouseMove:function(e){
var _ea4=this.widget;
var _ea5=_ea4._abspos;
if(!_ea5){
_ea5=_ea4._abspos=dojo.coords(_ea4.sliderBarContainer,true);
_ea4._setPixelValue_=dojo.hitch(_ea4,"_setPixelValue");
_ea4._isReversed_=_ea4._isReversed();
}
var _ea6=e[_ea4._mousePixelCoord]-_ea5[_ea4._startingPixelCoord];
_ea4._setPixelValue_(_ea4._isReversed_?(_ea5[_ea4._pixelCount]-_ea6):_ea6,_ea5[_ea4._pixelCount],false);
},destroy:function(e){
dojo.dnd.Mover.prototype.destroy.apply(this,arguments);
var _ea8=this.widget;
_ea8._abspos=null;
_ea8._setValueAttr(_ea8.value,true);
}});
dojo.declare("dijit.form.HorizontalRule",[dijit._Widget,dijit._Templated],{templateString:"<div class=\"dijitRuleContainer dijitRuleContainerH\"></div>",count:3,container:"containerNode",ruleStyle:"",_positionPrefix:"<div class=\"dijitRuleMark dijitRuleMarkH\" style=\"left:",_positionSuffix:"%;",_suffix:"\"></div>",_genHTML:function(pos,ndx){
return this._positionPrefix+pos+this._positionSuffix+this.ruleStyle+this._suffix;
},_isHorizontal:true,postCreate:function(){
var _eab;
if(this.count==1){
_eab=this._genHTML(50,0);
}else{
var i;
var _ead=100/(this.count-1);
if(!this._isHorizontal||this.isLeftToRight()){
_eab=this._genHTML(0,0);
for(i=1;i<this.count-1;i++){
_eab+=this._genHTML(_ead*i,i);
}
_eab+=this._genHTML(100,this.count-1);
}else{
_eab=this._genHTML(100,0);
for(i=1;i<this.count-1;i++){
_eab+=this._genHTML(100-_ead*i,i);
}
_eab+=this._genHTML(0,this.count-1);
}
}
this.domNode.innerHTML=_eab;
}});
dojo.declare("dijit.form.VerticalRule",dijit.form.HorizontalRule,{templateString:"<div class=\"dijitRuleContainer dijitRuleContainerV\"></div>",_positionPrefix:"<div class=\"dijitRuleMark dijitRuleMarkV\" style=\"top:",_isHorizontal:false});
dojo.declare("dijit.form.HorizontalRuleLabels",dijit.form.HorizontalRule,{templateString:"<div class=\"dijitRuleContainer dijitRuleContainerH dijitRuleLabelsContainer dijitRuleLabelsContainerH\"></div>",labelStyle:"",labels:[],numericMargin:0,minimum:0,maximum:1,constraints:{pattern:"#%"},_positionPrefix:"<div class=\"dijitRuleLabelContainer dijitRuleLabelContainerH\" style=\"left:",_labelPrefix:"\"><span class=\"dijitRuleLabel dijitRuleLabelH\">",_suffix:"</span></div>",_calcPosition:function(pos){
return pos;
},_genHTML:function(pos,ndx){
return this._positionPrefix+this._calcPosition(pos)+this._positionSuffix+this.labelStyle+this._labelPrefix+this.labels[ndx]+this._suffix;
},getLabels:function(){
var _eb1=this.labels;
if(!_eb1.length){
_eb1=dojo.query("> li",this.srcNodeRef).map(function(node){
return String(node.innerHTML);
});
}
this.srcNodeRef.innerHTML="";
if(!_eb1.length&&this.count>1){
var _eb3=this.minimum;
var inc=(this.maximum-_eb3)/(this.count-1);
for(var i=0;i<this.count;i++){
_eb1.push((i<this.numericMargin||i>=(this.count-this.numericMargin))?"":dojo.number.format(_eb3,this.constraints));
_eb3+=inc;
}
}
return _eb1;
},postMixInProperties:function(){
this.inherited(arguments);
this.labels=this.getLabels();
this.count=this.labels.length;
}});
dojo.declare("dijit.form.VerticalRuleLabels",dijit.form.HorizontalRuleLabels,{templateString:"<div class=\"dijitRuleContainer dijitRuleContainerV dijitRuleLabelsContainer dijitRuleLabelsContainerV\"></div>",_positionPrefix:"<div class=\"dijitRuleLabelContainer dijitRuleLabelContainerV\" style=\"top:",_labelPrefix:"\"><span class=\"dijitRuleLabel dijitRuleLabelV\">",_calcPosition:function(pos){
return 100-pos;
},_isHorizontal:false});
}
if(!dojo._hasResource["lconn.core.MenuUtility"]){
dojo._hasResource["lconn.core.MenuUtility"]=true;
dojo.provide("lconn.core.MenuUtility");
dojo.declare("lconn.core.MenuUtility",null,{openedBy:null,openMenu:function(evt,_eb8,_eb9){
var menu=dijit.byId(_eb8);
if(evt){
evt=dojo.fixEvent(evt);
}
var _eb9=_eb9?_eb9:evt?evt.target:null;
function closeAndRestoreFocus(){
dijit.focus(_eb9);
dijit.popup.close(menu);
};
dijit.popup.open({popup:menu,around:_eb9,orient:dojo._isBodyLtr()?{"BL":"TL","TL":"BL"}:{"BR":"TR","TR":"BR"},onExecute:closeAndRestoreFocus,onCancel:closeAndRestoreFocus});
menu.focus();
dojo.connect(menu,"_onBlur",function(){
dijit.popup.close(menu);
});
if(evt){
dojo.stopEvent(evt);
}
},openMenuA11y:function(evt,_ebc){
if(evt.keyCode==dojo.keys.ENTER){
this.openMenu(evt,_ebc);
}
}});
menuUtility=new lconn.core.MenuUtility();
lconn.core.MenuUtility.open=function(_ebd,e){
menuUtility.openMenu(e,_ebd);
};
lconn.core.MenuUtility.openAround=function(_ebf,_ec0){
menuUtility.openMenu(null,_ebf,_ec0);
};
}
if(!dojo._hasResource["lconn.core.LanguageSelector"]){
dojo._hasResource["lconn.core.LanguageSelector"]=true;
dojo.provide("lconn.core.LanguageSelector");
dojo.declare("lconn.core.LanguageSelector",null,{_jsonString:null,_selectorNode:null,_menu:null,_cookieProperties:null,COOKIE_NAME:null,constructor:function(_ec1,_ec2,_ec3,_ec4){
this._selectorNode=_ec1;
this._jsonString=_ec2;
this._cookieProperties=_ec4;
this.COOKIE_NAME=_ec3;
this._setSelectorLabel();
dojo.connect(this._selectorNode,"onclick",dojo.hitch(this,"_openMenu"));
},_openMenu:function(evt){
try{
this._buildLanguageMenu();
menuUtility.openMenu(evt,this._menu.id);
dojo.stopEvent(evt);
}
catch(e){
console.log(e);
}
},_setSelectorLabel:function(){
var _ec6=dojo.cookie(this.COOKIE_NAME);
if(_ec6!=null){
for(var key in this._jsonString){
if(this._isCodeEqual(key,_ec6)){
this._selectorNode.innerHTML=this._jsonString[key]+" &#9660;";
break;
}
}
if(!this._isCodeEqual(key,_ec6)){
this._selectorNode.innerHTML="Custom Language &#9660;";
}
}else{
this._selectorNode.innerHTML="Select language &#9660;";
}
},_buildLanguageMenu:function(){
if(this._menu==null){
this._menu=new dijit.Menu();
for(var key in this._jsonString){
this._menu.addChild(this._buildMenuItem(this._jsonString[key],key));
}
//this._menu.addChild(this._buildMenuItem("Browser Setting","BD"));
this._menu.domNode.style.display="none";
dojo.body().appendChild(this._menu.domNode);
var that=this;
dojo.connect(this._menu,"onItemClick",function(item){
if((item!=null)&&(typeof item.language!="undefined")){
dojo.cookie(that.COOKIE_NAME,item.language,that._cookieProperties);
var _ecb=null;
var _ecc=document.getElementById("REFRESH_URL");
if(_ecc!=null){
_ecb=_ecc.getAttribute("href");
}else{
_ecb=window.location.href;
}
if(_ecb.indexOf("lang=")>0){
var _ecd=/([\&\?])(lang=)([^\&\#]*)/g;
var _ece=null;
if(item.language&&item.language!=="BD"){
_ece=_ecb.replace(_ecd,function(){
var _ecf=arguments[1]+arguments[2]+item.language;
return _ecf;
});
}else{
_ece=_ecb.replace(_ecd,"");
}
window.location.href=_ece;
}else{
window.location.href=_ecb;
}
}
});
}
},_buildMenuItem:function(_ed0,_ed1){
var item=new dijit.MenuItem({label:_ed0});
item.language=_ed1;
return item;
},_isCodeEqual:function(_ed3,_ed4){
var str1=_ed3.toLowerCase().replace(/-/,"_");
var str2=_ed4.toLowerCase().replace(/-/,"_");
return str1===str2;
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes"]){
dojo._hasResource["quickr.share.wiki.scenes"]=true;
dojo.provide("quickr.share.wiki.scenes");
var _nls=quickr.share.scenes.nls=dojo.i18n.getLocalization("quickr.share.wiki","wiki");
quickr.share.wiki.scenes.WIKI_VIEWS=[{id:"details",name:_nls.VIEWS.DETAILS,tooltip:_nls.VIEWS.WIKI_DETAILS_TOOLTIP,img:"Details"},{id:"summary",name:_nls.VIEWS.SUMMARY,tooltip:_nls.VIEWS.WIKI_SUMMARY_TOOLTIP,img:"Summary"}];
quickr.share.wiki.scenes.WIKIPAGE_VIEWS=[{id:"details",name:_nls.VIEWS.DETAILS,tooltip:_nls.VIEWS.PAGE_DETAILS_TOOLTIP,img:"Details"},{id:"summary",name:_nls.VIEWS.SUMMARY,tooltip:_nls.VIEWS.PAGE_SUMMARY_TOOLTIP,img:"Summary"}];
quickr.share.wiki.scenes.MEMBER_VIEWS=[{id:"details",name:_nls.VIEWS.DETAILS,tooltip:_nls.VIEWS.MEMBERS_DETAILS_TOOLTIP,img:"Details"},{id:"summary",name:_nls.VIEWS.SUMMARY,tooltip:_nls.VIEWS.MEMBERS_SUMMARY_TOOLTIP,img:"Summary"}];
quickr.share.wiki.scenes.SEARCH_MENU_ITEMS=[["ALL","searchAllAreas"],["ACTIVITIES","searchActivities"],["PROFILES","searchProfiles"],["BLOGS","searchBlogs"],["DOGEAR","searchDogear"],["COMMUNITIES","searchCommunities"],["WIKIS","searchWikis"],["FILES","searchFiles"]];
quickr.share.wiki.scenes.MEMBER_FILTERS={TYPE:[{id:"user",name:_nls.FILTERS.MEMBER_TYPE.USER,longName:_nls.FILTERS.MEMBER_TYPE.USER_LONG,tooltip:_nls.FILTERS.MEMBER_TYPE.USER_TOOLTIP,setServiceOptions:function(_ed7){
_ed7.memberType="user";
},removeAppParams:function(_ed8){
_ed8.memberType=["user","group"];
}},{id:"group",name:_nls.FILTERS.MEMBER_TYPE.GROUP,longName:_nls.FILTERS.MEMBER_TYPE.GROUP_LONG,tooltip:_nls.FILTERS.MEMBER_TYPE.GROUP_TOOLTIP,setServiceOptions:function(_ed9){
_ed9.memberType="group";
},removeAppParams:function(_eda){
_eda.memberType=["user","group"];
}}]};
quickr.share.scenes.getSearchScopes=function(app){
if(quickr.share.scenes.SEARCH_SCOPES){
return quickr.share.scenes.SEARCH_SCOPES;
}
var nls=app.nls.CONNSEARCH;
quickr.share.scenes.SEARCH_SCOPES=[{id:"allwikis",label:nls.SCOPE_ALLWIKIS.LABEL,title:nls.SCOPE_ALLWIKIS.HOVER,iconClass:"lconnSprite lconnSprite-iconWikis16",hintText:nls.HINT,isValid:function(app,_ede){
return quickr.share.config.services.connections.enabled.search;
},onSearch:function(_edf,_ee0){
app.navigate(app.routes.getSearchUrl(_edf));
}},{id:"mywikis",label:nls.SCOPE_MYWIKIS.LABEL,title:nls.SCOPE_MYWIKIS.HOVER,iconClass:"lconnSprite lconnSprite-iconWikis16",hintText:nls.HINT,isValid:function(app,_ee2){
return app.authenticatedUser&&quickr.share.config.services.connections.enabled.search;
},onSearch:function(_ee3){
app.navigate(app.routes.getSearchUrl(_ee3,"my"));
}},{id:"thiswiki",label:nls.SCOPE_THISWIKI.LABEL,title:nls.SCOPE_THISWIKI.HOVER,iconClass:"lconnSprite lconnSprite-iconWikis16",hintText:nls.HINT,isValid:function(app,_ee5){
if(_ee5&&_ee5.wikiLabel){
this.wikiLabel=_ee5.wikiLabel;
}
return _ee5.wikiLabel&&quickr.share.config.services.connections.enabled.search;
},onSearch:function(_ee6){
app.navigate(app.routes.getSearchUrl(_ee6,"this",this.wikiLabel));
}},{separator:true,isValid:function(app,_ee8){
return quickr.share.config.services.connections.enabled.search;
}},{id:"all",label:nls.SCOPE_CONNECTIONS_ALL.LABEL,title:nls.SCOPE_CONNECTIONS_ALL.HOVER,iconClass:"lconnSprite lconnSprite-iconConnections16",hintText:nls.HINT,onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_eea){
return quickr.share.config.services.connections.enabled.search;
}},{id:"profiles",component:"profiles",label:nls.SCOPE_CONNECTIONS_PROFILES.LABEL,title:nls.SCOPE_CONNECTIONS_PROFILES.HOVER,iconClass:"lconnSprite lconnSprite-iconProfiles16",hintText:nls.HINT,onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_eec){
return quickr.share.config.services.connections.enabled.search&&quickr.share.config.services.connections.enabled.profiles;
}},{id:"communities",component:"communities",label:nls.SCOPE_CONNECTIONS_COMMUNITIES.LABEL,title:nls.SCOPE_CONNECTIONS_COMMUNITIES.HOVER,iconClass:"lconnSprite lconnSprite-iconCommunities16",hintText:nls.HINT,onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_eee){
return quickr.share.config.services.connections.enabled.search&&quickr.share.config.services.connections.enabled.communities;
}},{id:"blogs",component:"blogs",label:nls.SCOPE_CONNECTIONS_BLOGS.LABEL,title:nls.SCOPE_CONNECTIONS_BLOGS.HOVER,iconClass:"lconnSprite lconnSprite-iconBlogs16",hintText:nls.HINT,onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_ef0){
return quickr.share.config.services.connections.enabled.search&&quickr.share.config.services.connections.enabled.blogs;
}},{id:"dogear",component:"dogear",label:nls.SCOPE_CONNECTIONS_DOGEAR.LABEL,title:nls.SCOPE_CONNECTIONS_DOGEAR.HOVER,iconClass:"lconnSprite lconnSprite-iconDogear16",hintText:nls.HINT,onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_ef2){
return quickr.share.config.services.connections.enabled.search&&quickr.share.config.services.connections.enabled.dogear;
}},{id:"activities",label:nls.SCOPE_CONNECTIONS_ACTIVITIES.LABEL,title:nls.SCOPE_CONNECTIONS_ACTIVITIES.HOVER,iconClass:"lconnSprite lconnSprite-iconActivities16",hintText:nls.HINT,component:"activities",onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_ef4){
return quickr.share.config.services.connections.enabled.search&&quickr.share.config.services.connections.enabled.activities;
}},{id:"files",label:nls.SCOPE_CONNECTIONS_FILES.LABEL,title:nls.SCOPE_CONNECTIONS_FILES.HOVER,iconClass:"lconnSprite lconnSprite-iconFiles16",hintText:nls.HINT,component:"files",onSearch:dojo.partial(quickr.share.scenes.onSearchConnectionsComponent,app),isValid:function(app,_ef6){
return quickr.share.config.services.connections.enabled.search&&quickr.share.config.services.connections.enabled.files;
}},{separator:true,isValid:function(app,_ef8){
return quickr.share.config.services.connections.enabled.search;
}},{id:"advanced",label:nls.SCOPE_CONNECTIONS_ADVANCED.LABEL,title:nls.SCOPE_CONNECTIONS_ADVANCED.HOVER,iconClass:"",onClick:function(app){
app.navigate(app.routes.getConnectionsSearchUrl(null,{advanced:true}));
},isValid:function(app,_efb){
return quickr.share.config.services.connections.enabled.search;
}}];
return quickr.share.scenes.SEARCH_SCOPES;
};
quickr.share.scenes.createSearchButton=function(d,el,id,text){
var _f00=d.createElement("span");
_f00.className="lotusBtnImg";
_f00.title=text;
var _f01=d.createElement("INPUT");
if(id){
_f01.id=id;
}
_f01.className="lotusSearchButton";
_f01.type="image";
_f01.title=_f01.alt=text;
_f01.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
_f00.appendChild(_f01);
var _f02=d.createElement("a");
_f02.className="lotusAltText";
_f02.appendChild(d.createTextNode(text));
_f02.href="javascript:;";
dojo.connect(_f02,"onclick",function(){
try{
_f01.click();
}
catch(e){
}
});
_f00.appendChild(_f02);
if(el){
el.appendChild(_f00);
}
return _f01;
};
quickr.share.scenes.onSearchConnectionsComponent=function(app,_f04){
app.navigate(app.routes.getConnectionsSearchUrl(_f04,{component:this.component}));
};
quickr.share.wiki.scenes.applyHomeTemplate=function(d,_f06,app,_f08,opt){
var body=d.body;
var _f0b=d.getElementById("lotusFrame");
if(_f0b){
body=_f0b.parentNode;
quickr.util.html.destroyWidgets(_f0b);
_f0b.parentNode.removeChild(_f0b);
}
_f0b=d.createElement("div");
_f0b.id="lotusFrame";
_f0b.className="lotusFrame lotusWelcome";
var el=d.createElement("div");
el.id="lotusBanner";
el.className="lotusBanner";
el.setAttribute("role","banner");
quickr.share.scenes.applyHeader(d,el,app,opt);
_f0b.appendChild(el);
body.appendChild(_f0b);
var el=d.createElement("div");
el.id="lotusTitleBar";
el.className="lotusTitleBar";
quickr.share.wiki.scenes.applyTitleBar(d,el,app,opt);
_f0b.appendChild(el);
var el=d.createElement("div");
el.id="lotusPlaceBar";
el.className="lotusPlaceBar";
el.style.display="none";
_f0b.appendChild(el);
var el=d.createElement("div");
el.id="lotusMain";
el.className="lotusMain";
_f0b.appendChild(el);
var el=d.createElement("div");
el.id="lotusFooter";
el.className="lotusFooter";
el.setAttribute("role","contentinfo");
quickr.share.scenes.applyFooter(d,el,app);
_f0b.appendChild(el);
};
quickr.share.wiki.scenes.itemClicked=function(_f0d){
quickr.share.wiki.scenes.searchComponent=_f0d;
var _f0e=dijit.byId("searchCombo");
if(_f0e){
_f0e.setLabel(_nls.SEARCH[_f0d]);
dojo.removeClass(_f0e.iconNode,_f0e.iconNode.getAttribute("class"));
dojo.addClass(_f0e.iconNode,"baseIcon search"+_f0d.toLowerCase());
}
};
quickr.share.wiki.scenes.applyTitleBar=function(d,el,app,opt){
var _f13=app.authenticatedUser;
var _f14=app.routes;
var _f15=opt&&opt.activeTab?opt.activeTab:null;
var _f16=d.createElement("div");
_f16.className="lotusRightCorner";
var _f17=d.createElement("div");
_f17.className="lotusInner";
var ul=d.createElement("UL");
ul.className="lotusTabs";
var li=d.createElement("LI");
li.className="lotusFirst";
if(_f15=="allWikis"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/wikis");
a.appendChild(d.createTextNode(app.nls.HEADER.PUBLICWIKIS));
a.setAttribute("accesskey","3");
a.setAttribute("title",app.nls.HEADER.PUBLICWIKIS_TITLE);
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("LI");
if(_f15=="mywikis"){
dojo.addClass(li,"lotusSelected");
}
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,(dojo.getObject("quickr.share.config.baseUri")||"/")+quickr.share.wiki.Routes.ROOT+"/mywikis");
a.appendChild(d.createTextNode(app.nls.HEADER.MYWIKIS));
a.setAttribute("accesskey","4");
a.setAttribute("title",app.nls.HEADER.MYWIKIS_TITLE);
li.appendChild(a);
ul.appendChild(li);
if(_f15&&_f15.url){
var li=d.createElement("LI");
li.className="lotusSelected";
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,_f15.url);
a.appendChild(d.createTextNode(_f15.name));
a.setAttribute("accesskey","6");
li.appendChild(a);
ul.appendChild(li);
}
var accessibilityTabNavigationLink = d.createElement("a");
accessibilityTabNavigationLink.id = accessibilityTabNavigationLink.name = "tabNavigation";
_f17.appendChild(accessibilityTabNavigationLink);
_f17.appendChild(ul);
var form=d.createElement("FORM");
_f17.appendChild(form);
var _f1c=quickr.share.scenes.getSearchScopes(app);
var _f1d=_f1c[0].id;
if(opt&&opt.defaultSearchScope){
_f1d=opt.defaultSearchScope;
}
new quickr.widget.SearchBox({app:app,scene:app.scene,defaultSearchScope:_f1d,scopes:_f1c,id:"searchForm",_strings:app.nls.CONNSEARCH},form);
_f16.appendChild(_f17);
el.appendChild(_f16);
};
quickr.share.wiki.scenes.search=function(app,_f1f,inp,e){
dojo.stopEvent(e);
var _f22=inp.value;
var comp=quickr.share.wiki.scenes.searchComponent.toLowerCase();
if(comp=="wikis"){
app.navigate(_f1f.getSearchUrl(_f22));
}else{
app.navigate(_f1f.getConnectionsSearchUrl(_f22,{component:comp}));
}
};
quickr.share.wiki.scenes.applyPlaceBar=function(d,_f25,_f26,user,_f28,app,_f2a,_f2b,_f2c){
var _f2d=d.getElementById("lotusPlaceBar");
_f2d.style.display="";
var _f2e=d.createElement("div");
_f2e.className="lotusRightCorner";
var _f2f=d.createElement("div");
_f2f.className="lotusInner";
var name=d.createElement("H2");
if(_f2c){
var a=d.createElement("a");
a.appendChild(d.createTextNode(_f28));
var url=_f2a.getWikiUrl(app.scene.wikiLabel,{});
quickr.share.scenes.setOnClick(a,app,url);
name.appendChild(a);
}else{
name.appendChild(d.createTextNode(_f28));
}
var _f33=d.createElement("div");
_f33.className="lotusBtnContainer";
if(quickr.share.config.deployment=="quickr"){
var _f34=d.createElement("SPAN");
_f34.className="lotusBtn";
var a=d.createElement("A");
a.appendChild(d.createTextNode(app.nls.ADD_FAVORITE.ACTION));
_f34.appendChild(a);
_f33.appendChild(_f34);
}
var wiki=app.scene.wiki;
if(wiki&&wiki.getPermissions().GrantAccess&&!wiki.isCommunityWiki()){
var _f36=new dijit.Menu({style:"display:none"});
var _f37=new dijit.MenuItem({label:""});
_f37.domNode.style.display="none";
_f36.addChild(_f37);
_f37=new dijit.MenuItem({label:app.nls.DELETE_WIKI.ACTION});
dojo.connect(_f37,"onClick",dojo.hitch(_f37,quickr.share.wiki.scenes.deleteWiki,app,app.scene));
_f36.addChild(_f37);
var span=d.createElement("span");
span.className="lotusBtn";
var a=d.createElement("a");
a.appendChild(d.createTextNode(app.nls.MORE_ACTIONS.TEXT));
a.href="javascript:;";
a.style.display="block";
a.style.visibility="visible";
var img=d.createElement("img");
img.className="qkrDropDownArrow";
img.setAttribute("alt","");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/btnDropDown2.gif";
a.appendChild(img);
var _f3a=d.createElement("span");
_f3a.className="lotusAltText";
_f3a.appendChild(d.createTextNode("▼"));
a.appendChild(_f3a);
span.appendChild(a);
dojo.connect(a,"onclick",function(e){
try{
menuUtility.openMenu(e,_f36.id,a);
dojo.stopEvent(e);
}
catch(e){
console.log(e);
}
});
_f33.appendChild(span);
}
_f2f.appendChild(name);
_f2f.appendChild(_f33);
_f2e.appendChild(_f2f);
_f2d.appendChild(_f2e);
};
quickr.share.wiki.scenes.deleteWiki=function(app,_f3d){
var _f3e=new quickr.share.wiki.action.DeleteWiki(app,_f3d);
_f3e.execute();
};
quickr.share.wiki.scenes.applyTagCloud=function(d,el,app,_f42,_f43,_f44,_f45){
var _f46=d.createElement("div");
_f46.className="lotusTagSliderContainer";
var sdiv=d.createElement("div");
_f46.appendChild(sdiv);
el.appendChild(_f46);
new dijit.form.HorizontalSlider({minimum:0,maximum:100,value:0,showButtons:false,pageIncrement:1,intermediateChanges:true,onChange:function(_f48){
var _f49=null;
if(_f49=dijit.byId("userTagList")){
range=(this.maximum-this.minimum)||1;
_f49.filterTags(_f48/range);
}
}},sdiv);
var _f4a=d.createElement("div");
el.appendChild(_f4a);
var opt={isGlobal:_f44,wikiLabel:_f42.wikiLabel,sortKey:"cloud"};
var _f4c=_f42.taglist=new quickr.share.wiki.widget.TagList({id:"userTagList",baseClass:"lotusSectionBody lotusChunk",url:app.routes.getTagServiceUrl(opt),tagStore:app.getTagTypeAheadStore(),tagScope:{},activeTags:_f42.activeTags,defaultView:app.prefs.get("tagView")||"list",onviewchange:function(view){
app.prefs.put("tagView",view);
},_strings:app.nls.TAGLIST,_appstrings:app.nls,net:app.net,generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,_f42.userId,_f42.params,true,_f44,_f45),generateLinkWithoutTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,_f42.userId,_f42.params,false,_f44,_f45)},_f4a);
if(app.tagsChanged){
app.tagsChanged=false;
_f4c.reload();
}
};
quickr.share.wiki.scenes.generateTagLink=function(app,_f4f,_f50,opts,_f52,_f53,_f54,tag,a){
var p=(opts)?dojo.clone(opts):[];
p.tag=p.tag||[];
var _f58=dojo.indexOf(p.tag,tag);
if(_f52&&_f58==-1){
if(p.tag.length<3){
p.tag.push(tag);
}else{
p.tag[2]=tag;
}
}else{
if(!_f52&&_f58!=-1){
delete p.tag[_f58];
}
}
p.wikiLabel=p.wikiLabel||app.scene.wikiLabel;
var url=_f53?_f54?_f4f.getMyWikisUrl(_f50,p):p.tag.length>0?_f4f.getTaggedWikisUrl(p):_f4f.getGlobalHomeUrl():_f4f.getPageIndexUrl(p.wikiLabel,p);
quickr.share.scenes.setOnClick(a,app,url);
};
quickr.share.wiki.scenes.applyWelcome=function(app,el,_f5c){
var d=app.d;
var _f5e=app.routes;
var nls=app.nls.WELCOMECONTENT;
var div=d.createElement("div");
div.id="welcome";
div.className="lotusWelcomeBox";
div.setAttribute("role","banner");
var h2=d.createElement("h2");
h2.appendChild(d.createTextNode(nls.TITLE));
div.appendChild(h2);
var p=d.createElement("p");
p.appendChild(d.createTextNode(nls.BLURB));
div.appendChild(p);
var _f63=d.createElement("div");
_f63.className="lotusBtnContainer";
var span=d.createElement("span");
span.className="lotusBtn lotusBtnSpecial";
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_f5e.getAboutUrl());
a.appendChild(d.createTextNode(nls.LEARN_MORE));
span.appendChild(a);
_f63.appendChild(span);
var span=d.createElement("span");
span.className="lotusBtn lotusBtnSpecial";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",a,function(){
openDemoWindow();
return false;
});
a.appendChild(d.createTextNode(nls.WATCH_DEMO));
span.appendChild(a);
_f63.appendChild(span);
div.appendChild(_f63);
var a=d.createElement("a");
a.className="lotusBtnImg lotusClose";
a.title=nls.CLOSE;
a.href="javascript:;";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
dojo.connect(a,"onclick",_f5c,"hideWelcome");
div.appendChild(a);
el.appendChild(div);
};
quickr.share.wiki.scenes.showUnauthenticatedWarning=function(app,_f68){
app.login();
_f68=(_f68||[]);
quickr.share.scenes.applyGenericWarning(app,app.nls.APP.ERRORS.LOGIN.TITLE,app.nls.APP.ERRORS.LOGIN.MESSAGES,_f68);
};
quickr.share.wiki.scenes.applyBackToWikiLink=function(d,el,app,_f6c){
var _f6d=_f6c.wiki?dojo.string.substitute(app.nls.BACK_TO_WIKI,[_f6c.wiki.getTitle()]):app.nls.BACK_TO_APP;
var div=d.createElement("DIV");
div.className="lotusTiny qkrBackLink";
var a=d.createElement("A");
quickr.share.scenes.setOnClick(a,app,app.routes.getWikiUrl(_f6c.wikiLabel));
a.appendChild(d.createTextNode(_f6d));
div.appendChild(a);
el.appendChild(div);
};
quickr.share.wiki.scenes.applyWikiSearchBox=function(d,el,app,_f73){
var div=d.createElement("div");
div.className="lotusSection";
var h2=d.createElement("h2");
var _f76=dojo.string.substitute(app.nls.TOGGLE_SECTION_NAMED,[app.nls.WIKI_SEARCH.TITLE]);
var a=d.createElement("a");
a.title=_f76;
var _f78=_f73.wikisSearchSectionOpen||false;
if(!_f78){
a.className="lotusSprite lotusArrow lotusTwistyOpen";
}else{
a.className="lotusSprite lotusArrow lotusTwistyClosed";
}
a.href="javascript:;";
dojo.connect(a,"onclick",a,quickr.share.scenes.toggleSection);
var _f79=d.createElement("span");
_f79.className="lotusAltText";
_f79.appendChild(d.createTextNode(_f78?(dojo._isBodyLtr()?"▶":"◀"):"▼"));
a.appendChild(_f79);
var _f7a=d.createElement("span");
_f7a.className="lotusHidden";
_f7a.appendChild(d.createTextNode(_f76));
a.appendChild(_f7a);
h2.appendChild(a);
var span=d.createElement("span");
span.style.cursor="pointer";
span.title=app.nls.TOGGLE_SECTION;
dojo.connect(span,"onclick",a,quickr.share.scenes.toggleSection);
span.appendChild(d.createTextNode(app.nls.WIKI_SEARCH.TITLE));
span.className="lotusLeft";
h2.appendChild(span);
var tip=quickr.share.scenes.createHelpLink(app,h2,"wiki.search");
dojo.addClass(tip,"lotusRight");
div.appendChild(h2);
var sdiv=d.createElement("div");
sdiv.className="lotusSectionBody lotusChunk lotusSearch";
var form=_f73.form=d.createElement("form");
form.onsubmit=function(e){
dojo.stopEvent(e);
};
var _f80=d.createElement("input");
_f80.type="text";
_f80.className="lotusText";
_f80.value=app.nls.WIKI_SEARCH.PLACEHOLDER;
form.appendChild(_f80);
var _f81=d.createElement("label");
_f81.appendChild(d.createTextNode(app.nls.WIKI_SEARCH.TITLE));
_f81.className="lotusHidden";
form.appendChild(_f81);
var args=quickr.share.wiki.widget.WikiTypeAhead.getWikiTypeAheadArguments(_f73.getWikiTypeAheadStore(),{_strings:app.nls.WIKI_SEARCH,id:"wikiSearchBox",name:"wikisearch",size:"40"});
var _f83=_f73.wikiSearchCombo=new quickr.share.wiki.widget.WikiTypeAhead(args,_f80);
dojo.connect(_f83,"onSelect",_f73,"onSelectTypeAheadWiki");
dojo.connect(form,"onsubmit",_f73,"onSelectTypeAheadWiki");
dojo.connect(_f83.textbox,"onfocus",_f73,"onFocusTypeAheadWiki");
dojo.connect(_f83.textbox,"onblur",_f73,"onBlurTypeAheadWiki");
_f83.textbox.value=_f83.textbox.defaultValue=app.nls.WIKI_SEARCH.PLACEHOLDER;
_f83.textbox.style.color="#aaa";
_f81.setAttribute("for",args.id);
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",app.nls.SEARCH.SEARCH);
var _f84=d.createElement("input");
_f84.className="lotusSearchButton";
_f84.type="image";
_f84.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
_f84.name="submit";
_f84.setAttribute("alt",app.nls.SEARCH.SEARCH_ALT);
span.appendChild(_f84);
var _f85=d.createElement("a");
_f85.className="lotusAltText";
_f85.appendChild(d.createTextNode(app.nls.SEARCH.SEARCH_ALT));
_f85.href="javascript:;";
dojo.connect(_f85,"onclick",function(){
try{
_f84.click();
}
catch(e){
}
});
span.appendChild(_f85);
form.appendChild(span);
sdiv.appendChild(form);
div.appendChild(sdiv);
el.appendChild(div);
};
quickr.share.wiki.scenes.createUserAvatar=function(el,user,opt){
quickr.share.wiki.scenes._createMemberAvatar(el,user,opt);
};
quickr.share.wiki.scenes.createGroupAvatar=function(el,_f8a,opt){
quickr.share.wiki.scenes._createMemberAvatar(el,_f8a,opt,true);
};
quickr.share.wiki.scenes._createMemberAvatar=function(el,_f8d,opt,_f8f){
var id=_f8d.id;
var _f91=opt.strings;
var app=opt.app;
var d=app.document;
var _f94=opt.onremove;
var li=d.createElement("li");
if(_f8f){
li.groupId=id;
}else{
li.userId=id;
}
if(!el.firstChild){
li.className="lotusFirst";
}
var img=d.createElement("img");
img.className="_qkrMemberAvatar";
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+(_f8f?"nav/common/styles/images/iconGroup.gif":"nav/common/styles/images/iconVisitor.gif");
img.setAttribute("alt",_f8f?app.nls.FILTERS.MEMBER_TYPE.GROUP_TITLE:app.nls.FILTERS.MEMBER_TYPE.USER_TITLE);
li.appendChild(img);
var a=d.createElement("a");
a.appendChild(d.createTextNode(_f8d.name));
a.href="javascript:;";
a.className="lotusPerson";
if(dojo.isIE==6){
a.style.whiteSpace="nowrap";
}
li.appendChild(a);
var a=d.createElement("a");
a.title=_f91.REMOVE_USER_TOOLTIP;
a.className="lotusPerson";
if(dojo.isIE==6){
a.style.whiteSpace="nowrap";
}
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconRemove.gif";
img.setAttribute("alt",app.nls.REMOVE_MEMBER.ACTION);
a.appendChild(img);
dojo.connect(a,"onclick",_f94);
li.appendChild(a);
el.appendChild(li);
var fake=d.createTextNode(" ");
el.appendChild(fake);
};
}
if(!dojo._hasResource["com.ibm.ajax.auth"]){
dojo._hasResource["com.ibm.ajax.auth"]=true;
dojo.provide("com.ibm.ajax.auth");
com.ibm.ajax.auth={prepareSecure:function(args,_f9a,_f9b){
args._handle=args.handle;
args.handle=dojo.partial(this.testAuthenticationHandler,this,_f9a,_f9b);
return args;
},setAuthenticationHandler:function(_f9c){
this.authenticationHandler=_f9c;
},setTestAuthenticationHandler:function(_f9d){
this.testAuthenticationHandler=_f9d;
},setDefaultAuthenticationTests:function(_f9e,_f9f,_fa0){
this.checkFromCaller=_f9e;
this.checkByContentType=_f9f;
this.checkByStatusCode=_fa0;
},addAuthenticationCheck:function(_fa1){
if(_fa1){
this.authenticationChecks.push(_fa1);
}
},isAuthenticationRequired:function(_fa2,_fa3){
var _fa4=_fa3.args.handleAs;
var _fa5=false;
if(_fa3.xhr&&(!_fa2||dojo.indexOf(["cancel","timeout"],_fa2.dojoType)==-1)){
if(this.checkByContentType&&dojo.indexOf(["xml","json","json-comment-optional"],_fa4)!=-1&&/^text\/html/.exec(_fa3.xhr.getResponseHeader("Content-Type"))&&_fa3.xhr.status>=200&&_fa3.xhr.status<300){
console.log("auth::isAuthenticationRequired DEBUG content type does not match request, assume logged out");
return true;
}
if(this.checkByStatusCode&&dojo.indexOf(["xml","json","json-comment-optional"],_fa4)!=-1){
if(_fa3.xhr.status==302){
console.log("auth::isAuthenticationRequired DEBUG redirect received, assume login request");
return true;
}
if(_fa3.xhr.status==401){
console.log("auth::isAuthenticationRequired DEBUG 401 Unauthorized, assume login required");
return true;
}
if(dojo.isIE&&_fa3.xhr.status==0){
console.log("auth::isAuthenticationRequired DEBUG status code was 0 on IE, assume login request");
return true;
}
}
}
if(!_fa5){
for(var i=0;i<this.authenticationChecks.length;i++){
if(this.authenticationChecks[i](this,_fa2,_fa3)){
return true;
}
}
}
return false;
},testAuthenticationHandler:function(auth,_fa8,_fa9,_faa,_fab){
var args=dojo._toArray(arguments).slice(3);
var _fad=false;
if(!_faa||dojo.indexOf(["cancel","timeout"],_faa.dojoType)==-1){
if(auth.checkFromCaller&&typeof _fa8=="function"&&_fa8(_faa,_fab)){
console.log("auth::_testAuthentication DEBUG caller provided detection logic that indicated form login, assume logged out");
_fad=true;
}else{
_fad=auth.isAuthenticationRequired(_faa,_fab,_fa8);
}
}
if(_fad){
var path=auth._parseUri(_fab.args.url).path;
dojo.cookie("WASPostParam",null,{expires:-1,path:path});
dojo.cookie("WASReqURL",null,{expires:-1,path:"/"});
auth.authenticationHandler(_faa,_fab,_fa9);
args[0]=new Error("xhr unauthenticated");
args[0].dojoType="unauthenticated";
}
if(_fab.args._handle){
return _fab.args._handle.apply(this,args);
}else{
return (_faa);
}
},_parseUri:function(uri){
if(!uri){
return null;
}
uri=new dojo._Url(uri);
var _fb0=this._splitQuery(uri.query);
uri.queryParameters=_fb0;
return uri;
},_splitQuery:function(_fb1){
var _fb2={};
if(!_fb1){
return _fb2;
}
if(_fb1.charAt(0)=="?"){
_fb1=_fb1.substring(1);
}
var args=_fb1.split("&");
for(var i=0;i<args.length;i++){
if(args[i].length>0){
var _fb5=args[i].indexOf("=");
if(_fb5==-1){
var key=decodeURIComponent(args[i]);
var _fb7=_fb2[key];
if(dojo.isArray(_fb7)){
_fb7.push("");
}else{
if(_fb7){
_fb2[key]=[_fb7,""];
}else{
_fb2[key]="";
}
}
}else{
if(_fb5>0){
var key=decodeURIComponent(args[i].substring(0,_fb5));
var _fb8=decodeURIComponent(args[i].substring(_fb5+1));
var _fb7=_fb2[key];
if(dojo.isArray(_fb7)){
_fb7.push(_fb8);
}else{
if(_fb7){
_fb2[key]=[_fb7,_fb8];
}else{
_fb2[key]=_fb8;
}
}
}
}
}
}
return _fb2;
},checkFromCaller:true,checkByContentType:true,checkByStatusCode:true,authenticationChecks:[],authenticationHandler:function(){
console.log("auth::authenticationHandler DEBUG authentication was required");
}};
}
if(!dojo._hasResource["quickr.util.atom"]){
dojo._hasResource["quickr.util.atom"]=true;
dojo.provide("quickr.util.atom");
quickr.util.atom.getErrorCode=function(_fb9,_fba){
var _fbb=quickr.util.atom.getError(_fb9,_fba);
return (_fbb?_fbb.code:null);
};
quickr.util.atom.getError=function(_fbc,_fbd,opts){
if(_fbc instanceof Error&&_fbc.code){
return _fbc;
}
var _fbf=null;
var _fc0;
try{
if(_fbd&&_fbd.xhr){
_fc0=_fbd.xhr.status;
}
}
catch(e){
}
_fbc=_fbc||{};
var _fc1=false;
_fc1=_fc1||_fbc instanceof Error;
_fc1=_fc1||(_fc0>0&&!(_fc0>=200&&_fc0<300));
_fc1=_fc1||(dojo.isIE&&_fbc.number==-2147024891);
if(opts&&opts.requireData){
_fc1=_fc1||(_fbd.handleAs=="xml"&&!_fbc.documentElement);
_fc1=_fc1||(dojo.indexOf(["json","json-comment-filtered"],_fbd.handleAs)!=-1&&typeof _fbc!="object");
}
if(_fc1){
_fbf=new Error();
if(_fbc&&dojo.indexOf(["cancel","timeout","unauthenticated"],_fbc.dojoType)!=-1){
_fbf.message=_fbf.code=_fbf.dojoType=_fbc.dojoType;
}
if(!_fbf.code&&dojo.isIE&&_fbc.number==-2147024891){
_fbf.message=_fbf.code="InvalidRequest";
}
if(!_fbf.code&&_fc0==412&&_fbd.xhr&&_fbd.xhr.responseXML&&_fbd.xhr.responseXML.documentElement&&quickr.util.dom.isNamedNS(_fbd.xhr.responseXML.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
_fbf.message=_fbf.code="ConcurrentModification";
var file=new quickr.share.bean.File(_fbd.xhr.responseXML.documentElement);
_fbf.date=file.getUpdated();
_fbf.user=file.getModifier();
}
if(!_fbf.code&&_fbd.xhr&&_fbd.xhr.responseXML&&_fbd.xhr.responseXML.documentElement){
var el=_fbd.xhr.responseXML.documentElement;
var text=quickr.util.dom.getChildElementTextContentNS(el,"errorCode",quickr.util.dom.DOCUMENTS_ATOM_NAMESPACE);
var code=quickr.util.text.trim(text);
if(code.length>0){
_fbf.message=_fbf.code=code;
_fbf.el=el;
_fbf.message=quickr.util.dom.getChildElementTextContentNS(el,"errorMessage",quickr.util.dom.DOCUMENTS_ATOM_NAMESPACE);
if(code=="QuotaViolation"){
_fbf.libraryQuota=quickr.util.text.parseInt(quickr.util.dom.getChildElementTextContentNS(el,"libraryQuota",quickr.util.dom.DOCUMENTS_ATOM_NAMESPACE));
_fbf.librarySize=quickr.util.text.parseInt(quickr.util.dom.getChildElementTextContentNS(el,"librarySize",quickr.util.dom.DOCUMENTS_ATOM_NAMESPACE));
_fbf.uploadSize=quickr.util.text.parseInt(quickr.util.dom.getChildElementTextContentNS(el,"uploadSize",quickr.util.dom.DOCUMENTS_ATOM_NAMESPACE));
}
}
}
if(!_fbf.code&&_fc0==404){
_fbf.message=_fbf.code="ItemNotFound";
}
if(!_fbf.code){
_fbf.message=_fbf.code="unknown";
}
if(_fc0==412&&_fbf.code=="InvalidUser"){
_fbf.message=_fbf.code="SessionInvalidated";
}
}
return _fbf;
};
quickr.util.atom.getJsonResponseFromHtml=function(d){
var r={};
try{
if(d&&d.body){
var meta=dojo.filter(d.getElementsByTagName("meta"),function(el){
return el.name=="status";
})[0];
r.status=meta?parseInt(meta.content):200||200;
try{
var _fca=dojo.fromJson(d.body.innerHTML);
if(typeof _fca=="object"){
r.contents=_fca;
}
}
catch(e){
console.log("util::getJsonResponseFromHtml DEBUG innerHTML not JSON");
}
}
}
catch(e){
console.log("util::getJsonResponseFromHtml DEBUG unable to access body");
}
return r;
};
quickr.util.atom.getJsonError=function(r){
if(r&&r.status==404){
var _fcc=new Error();
_fcc.message=_fcc.code="ItemNotFound";
return _fcc;
}
if(!r||typeof r.contents!="object"){
var _fcc=new Error();
_fcc.message=_fcc.code="unknown";
return _fcc;
}
if(r.status==412){
var _fcd={};
var _fce=null;
var c=r.contents;
for(var i=0;i<c.extensions.length;i++){
var ext=c.extensions[i];
if(ext.name=="td:modifier"){
for(var j=0;j<ext.children.length;j++){
var _fd3=ext.children[j];
if(_fd3.name=="snx:userid"){
_fcd.id=_fd3.children[0];
}else{
if(_fd3.name=="td:name"){
_fcd.name=_fd3.children[0];
}
}
}
}else{
if(ext.name=="td:modified"){
_fce=quickr.util.misc.date.convertAtomDate(ext.children[0]);
}
}
}
var _fcc=new Error();
_fcc.message=_fcc.code="ConcurrentModification";
_fcc.user=_fcd;
_fcc.date=_fce;
return _fcc;
}else{
if(typeof r.contents.errorCode=="string"){
var _fcc=new Error();
_fcc.message=r.contents.errorMessage;
_fcc.code=r.contents.errorCode;
for(var key in r.contents){
if(key!="errorCode"&&key!="errorMessage"){
_fcc[key]=r.contents[key];
}
}
return _fcc;
}else{
if(r.status<200||r.status>=300){
var _fcc=new Error();
_fcc.message=_fcc.code="unknown";
return _fcc;
}
}
}
return null;
};
quickr.util.atom.detectLoginForMultipartResponse=function(_fd5,_fd6){
var _fd7=false;
if(_fd5&&!(_fd5 instanceof Error)){
var body;
try{
body=_fd5.body;
}
catch(e){
}
if(body&&body.childNodes){
var arr=body.childNodes;
console.log("util::detectLoginForMultipartAtomResponse DEBUG scan child nodes");
for(var i=0;i<arr.length;i++){
if(arr[i]&&arr[i].nodeType!=3){
_fd7=true;
console.log("util::detectLoginForMultipartAtomResponse DEBUG is a login");
break;
}
}
}
}
return _fd7;
};
quickr.util.atom.createOperationId=function(){
var s=dojo._toArray(arguments).join("_");
if(s.length>256){
s=s.substring(0,256);
}
return quickr.util.text.trim(s);
};
}
if(!dojo._hasResource["quickr.share.Network"]){
dojo._hasResource["quickr.share.Network"]=true;
dojo.provide("quickr.share.Network");
dojo.declare("quickr.share.Network",null,{_handleAsMap:{"text":"Text","html":"Text","xml":"Xml","json":"Json","json-embedded":"Json","json-comment-optional":"Json","json-comment-filtered":"Json"},constructor:function(opts){
if(opts){
dojo.mixin(this,opts);
}
},_validate:function(opts){
if(!opts){
throw "opts is a required argument";
}
if(!opts.url){
throw "url is a required argument";
}
},_setDefaults:function(verb,opts){
var _fe0=this.getAuthenticatedUser();
opts.verb=verb=verb.toLowerCase();
switch(verb){
case "put":
case "post":
case "delete":
if(!opts.timeout){
opts.timeout=(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000;
}
if(_fe0){
opts.nonce=opts.nonce||_fe0.nonce;
}
break;
default:
if(!opts.timeout){
opts.timeout=(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000;
}
}
if(verb=="get"&&opts.requireData!==false){
opts.requireData=true;
}
var _fe1=opts.ifMatch;
opts.headers=opts.headers||{};
if(!_fe1&&opts.headers["If-Match"]){
_fe1=opts.headers["If-Match"];
}
delete opts.headers["If-Match"];
_fe1=dojo.trim(_fe1||"");
if(opts.secured!==false){
if(_fe0){
if(_fe1.length>0){
_fe1+=":";
}
_fe1+=_fe0?("uid="+_fe0.id):"anonymous";
}
}
if(_fe1.length>0){
opts.ifMatch=_fe1;
}else{
delete opts.ifMatch;
}
if(opts.handleAs=="xml"&&dojo.isIE){
var url=quickr.util.uri.parseUri(opts.url);
if(!url.queryParameters.format){
url.queryParameters.format="xml";
opts.url=quickr.util.uri.writeUri(url);
}
}
},_setXmlDefaults:function(verb,opts){
this._validate(opts);
opts.handleAs="xml";
this._setDefaults(verb,opts);
},_setJsonDefaults:function(verb,opts){
this._validate(opts);
opts.handleAs=opts.handleAs||"json";
this._setDefaults(verb,opts);
},_setTextDefaults:function(verb,opts){
this._validate(opts);
opts.handleAs=opts.handleAs||"text";
this._setDefaults(verb,opts);
},_setMultipartDefaults:function(verb,opts){
this._validate(opts);
opts.timeout=opts.timeout||(dojo.getObject("quickr.share.config.services.timeout.upload")*1000),opts.handleAs=opts.handleAs||"json-embedded";
this._setDefaults(verb,opts);
},_addDirectives:function(opts,_fec,_fed,_fee,_fef){
if(_fed){
opts.headers=opts.headers||{};
}
if(_fee){
var uri=quickr.util.uri.parseUri(opts.url);
}
if(_fef){
opts.content=opts.content||{};
}
for(var key in _fec){
var _ff2=_fec[key];
if(typeof (_ff2)!="undefined"&&_fec.hasOwnProperty(key)){
if(_fed){
opts.headers[key]=_ff2;
}
if(_fee){
uri.queryParameters[key]=_ff2;
}
if(_fef){
opts.content[key]=_ff2;
}
}
}
if(_fee){
opts.url=quickr.util.uri.writeUri(uri);
}
},_decorateHandler:function(opts){
var _ff4={};
_ff4.handle=opts.handle;
_ff4.handleAs=opts.handleAs;
_ff4.requireData=opts.requireData;
if(opts.handleAs=="json-embedded"){
opts.handleAs="html";
}
opts.handle=dojo.hitch(this,"_handle",_ff4);
},get:function(opts){
return this._delegate("get",opts);
},put:function(opts){
return this._delegate("put",opts);
},post:function(opts){
return this._delegate("post",opts);
},_delegate:function(verb,opts){
this._validate(opts);
var type=this._handleAsMap[opts.handleAs];
if(!type){
throw ("Unsupported handleAs type "+opts.handleAs);
}
var op=this[verb.toLowerCase()+type];
if(typeof (op)!="function"){
throw ("Unsupported operation "+verb+" for handleAs type "+opts.handleAs);
}
return op.apply(this,[opts]);
},getXml:function(opts){
this._setXmlDefaults("get",opts);
this._addDirectives(opts,{"If-Match":opts.ifMatch},true,false,false);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.xhrGet(opts);
},postXml:function(opts){
this._setXmlDefaults("post",opts);
this._addDirectives(opts,{"If-Match":opts.ifMatch,"X-Update-Nonce":opts.nonce},true,false,false);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.rawXhrPost(opts);
},putXml:function(opts){
this._setXmlDefaults("put",opts);
this._addDirectives(opts,{"X-Method-Override":"PUT","If-Match":opts.ifMatch,"X-Update-Nonce":opts.nonce},true,false,false);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.rawXhrPost(opts);
},deleteXml:function(opts){
this._setXmlDefaults("delete",opts);
this._addDirectives(opts,{"X-Method-Override":"DELETE","If-Match":opts.ifMatch,"X-Update-Nonce":opts.nonce},true,false,false);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.rawXhrPost(opts);
},getJson:function(opts){
this._setJsonDefaults("get",opts);
this._addDirectives(opts,{"If-Match":opts.ifMatch},true,false,false);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.xhrGet(opts);
},getText:function(opts){
this._setTextDefaults("get",opts);
this._addDirectives(opts,{"If-Match":opts.ifMatch},true,false,false);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.xhrGet(opts);
},putMultipart:function(opts){
this._setMultipartDefaults("put",opts);
this._addDirectives(opts,{"X-Method-Override":"PUT","If-Match":opts.ifMatch,"X-Update-Nonce":opts.nonce},false,true,true);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.io.iframe.send(opts);
},postMultipart:function(opts){
this._setMultipartDefaults("post",opts);
this._addDirectives(opts,{"If-Match":opts.ifMatch,"X-Update-Nonce":opts.nonce},false,true,true);
this._decorateHandler(opts);
this.onNetwork(opts);
return dojo.io.iframe.send(opts);
},onNetwork:function(opts){
},onNetworkEnd:function(opts){
},_handle:function(opts,_1007,_1008){
this.onNetworkEnd(opts);
var error=quickr.util.atom.getError(_1007,_1008,opts);
if(error){
if(_1007.status==400&&error.code=="AccessDenied"){
var auth=pe.auth;
var path=auth._parseUri(_1008.args.url).path;
dojo.cookie("WASPostParam",null,{expires:-1,path:path});
dojo.cookie("WASReqURL",null,{expires:-1,path:"/"});
dojo.cookie("JSESSIONID",null,{expires:-1,path:"/"});
dojo.cookie("LtpaToken",null,{expires:-1,path:"/"});
dojo.cookie("LtpaToken2",null,{expires:-1,path:"/"});
auth.authenticationHandler(_1007,_1008,null);
error.code="unauthenticated";
return opts.handle(error,_1008);
}else{
return opts.handle(error,_1008);
}
}
if(opts.handleAs=="json-embedded"){
var json=quickr.util.atom.getJsonResponseFromHtml(_1007);
var error=quickr.util.atom.getJsonError(json);
if(error){
if(json.status==400&&error.code=="AccessDenied"){
var auth=pe.auth;
var path=auth._parseUri(_1008.args.url).path;
dojo.cookie("WASPostParam",null,{expires:-1,path:path});
dojo.cookie("WASReqURL",null,{expires:-1,path:"/"});
dojo.cookie("JSESSIONID",null,{expires:-1,path:"/"});
dojo.cookie("LtpaToken",null,{expires:-1,path:"/"});
dojo.cookie("LtpaToken2",null,{expires:-1,path:"/"});
auth.authenticationHandler(_1007,_1008,null);
error.code="unauthenticated";
return opts.handle(error,_1008);
}else{
return opts.handle(error,_1008);
}
}else{
return opts.handle(json,_1008);
}
}else{
return opts.handle(_1007,_1008);
}
},getAuthenticatedUser:function(){
return null;
},onError:function(error,_100e){
return error;
}});
}
if(!dojo._hasResource["lconn.core.PeopleDataStore"]){
dojo._hasResource["lconn.core.PeopleDataStore"]=true;
dojo.provide("lconn.core.PeopleDataStore");
dojo.declare("lconn.core.PeopleDataStore",null,{constructor:function(_100f,node){
this.queryParam=(_100f.queryParam?_100f.queryParam:node.getAttribute("queryParam"));
this.url=_100f.url;
this.getUrl=_100f.getUrl;
},queryParam:"",maxResults:100,pageSize:25,fastCache:[],dirCache:[],bothCache:[],clear:function(){
this.fastCache=[];
this.dirCache=[];
this.bothCache=[];
},fetch:function(_1011){
var _1012={};
var cache;
var _1014=(_1011.queryOptions.searchDirectory?true:false);
var _1015=(_1011.queryOptions.searchBoth?true:false);
if(_1015){
cache=this.bothCache;
}else{
if(_1014){
cache=this.dirCache;
}else{
cache=this.fastCache;
}
}
var start=_1011.start||1;
var _1017=this.pageSize;
if(_1011.count&&_1011.count!=Infinity){
if(_1015||_1014){
_1017=(_1011.count+1);
}else{
_1017=_1011.count;
}
}
var _1018=_1011.query.toLowerCase();
if(cache[_1018]){
_1011.searchType=cache[_1018].searchType;
_1011.onComplete(cache[_1018].items.slice(start-1,start-1+_1017),_1011);
return _1011;
}
if(this.queryParam){
_1012[this.queryParam]=_1011.query;
}
if(_1015){
_1012.searchType=["fastlist","directory"];
}else{
if(_1014){
_1012.searchType="directory";
}else{
_1012.searchType="fastlist";
}
}
_1012.pageSize=this.maxResults;
dojo.xhrGet({url:this.url||this.getUrl(),content:_1012,handleAs:"json-comment-optional",timeout:5000,load:dojo.hitch(this,function(data){
if(data instanceof Error){
console.log("There was an error");
return;
}
cache[_1018]=data;
_1011.searchType=data.searchType;
if(_1011.onComplete){
_1011.onComplete(data.items.slice(start-1,start-1+_1017),_1011);
}
}),error:function(){
console.log("There was an error");
}});
return _1011;
},getValue:function(item,_101b,_101c){
if(item[_101b]){
return item[_101b];
}else{
return _101c;
}
}});
}
if(!dojo._hasResource["quickr.share.util.TagDataStore"]){
dojo._hasResource["quickr.share.util.TagDataStore"]=true;
dojo.provide("quickr.share.util.TagDataStore");
dojo.declare("quickr.share.util.TagDataStore",null,{constructor:function(_101d,node){
this.queryParam=(_101d.queryParam?_101d.queryParam:node.getAttribute("queryParam"));
this.url=_101d.url;
this.getUrl=_101d.getUrl;
this.net=_101d.net;
},queryParam:"",cache:[],clear:function(){
this.cache=[];
},fetch:function(_101f){
var _1020={};
var cache=this.cache;
var _1022=_101f.queryOptions.libraryId;
var _1023=_101f.queryOptions.userLibrary;
var _1024=(_1022||"")+"\n"+(_1023||"")+"\n"+(_101f.key||"")+"\n"+(_101f.order||"")+"\n"+(_101f.count||"")+"\n"+(_101f.start||"")+"\n"+(_101f.query||"").toLowerCase();
if(cache[_1024]){
_101f.onComplete(cache[_1024],_101f);
return _101f;
}
if(_1022){
_1020.libraryId=_1022;
}
if(_1023){
_1020.userLibrary=_1023;
}
if(this.queryParam&&_101f.query){
_1020[this.queryParam]=_101f.query;
}
if(_101f.key){
_1020.sK=_101f.key;
}
if(_101f.order){
_1020.sO=_101f.order;
}
if(_101f.start){
_1020.sI=_101f.start;
}
if(_101f.count&&_101f.count!=Infinity){
_1020.pageSize=_101f.count;
}
var url=this.getUrl(_1020);
this.net.getJson({url:url,noStatus:true,preventLogin:true,headers:{"Content-Type":"text/plain; charset=UTF-8"},handle:dojo.hitch(this,function(_1026,_1027){
if(_1026 instanceof Error){
if(_101f.onError){
_101f.onError();
}else{
console.log("Error fetching tags");
}
}else{
cache[_1024]=_1026.items;
if(_101f.onComplete){
_101f.onComplete(_1026.items,_101f);
}
}
})});
return _101f;
},getValue:function(item,_1029,_102a){
if(item[_1029]){
return item[_1029];
}else{
return _102a;
}
},getUrl:function(){
return this.url;
}});
}
if(!dojo._hasResource["quickr.share.util.SceneTemplates"]){
dojo._hasResource["quickr.share.util.SceneTemplates"]=true;
dojo.provide("quickr.share.util.SceneTemplates");
dojo.declare("quickr.share.util.SceneTemplates",null,{constructor:function(map,opts){
dojo.mixin(this,opts||{});
this.defaultParameters=this.defaultParameters||{};
var cache=this.cache={};
if(map){
for(var id in map){
var value=map[id];
if(!value){
continue;
}
if(typeof value=="object"&&value.documentElement){
cache[id]={xml:value};
}else{
if(typeof value=="string"){
if(/^<?xml/.exec(value)){
cache[id]={text:value};
}else{
if(value[0]=="/"||/^http/i.exec(value)){
cache[id]={url:value};
}else{
cache[id]={url:(dojo.getObject("quickr.share.config.baseUri")||"/")+value};
}
}
}
}
}
}
},getXhtml:function(id,opts){
var xhtml;
var item=this.cache[id];
if(item){
if(!item.xml||(opts&&opts.bypassCache)||item.error){
this.loadXml(item,opts);
}
xhtml=item.xml;
}
return xhtml;
},loadXml:function(item,opts){
if(!item){
return;
}
if(item.text){
var xml=this.createDocument(item.text);
item.xml=xml;
}else{
if(item.url){
var r,io;
var url=quickr.util.uri.rewriteUri(item.url,dojo.mixin((opts&&opts.parameters)?opts.parameters:{},this.defaultParameters));
this.net.getXml({url:url,handle:function(_103a,_103b){
r=_103a;
io=_103b;
},sync:true});
if(r instanceof Error){
console.log("SceneTemplates::loadXml DEBUG unable to load template from url");
item.xml=null;
}else{
item.xml=r;
}
}
}
if(!item.xml){
item.error=true;
}
},getHtml:function(id,opts){
var url=(id.charAt(0)=="/"||/^http/i.exec(id))?id:(dojo.getObject("quickr.share.config.baseUri")||"/")+id;
var item={url:url};
this.loadHtml(item,opts);
return item.html;
},loadHtml:function(item,opts){
if(!item){
return;
}
if(item.text){
item.html=this.createHtmlFragment(item.text);
}else{
if(item.url){
var r,io;
var url=quickr.util.uri.rewriteUri(item.url,dojo.mixin((opts&&opts.parameters)?opts.parameters:{},this.defaultParameters));
this.net.getText({url:url,handle:function(_1045,_1046){
r=_1045;
io=_1046;
},sync:true});
if(r instanceof Error){
console.log("SceneTemplates::loadXml DEBUG unable to load template from url");
}else{
item.html=this.createHtmlFragment(r);
}
}
}
if(!item.html){
item.error=true;
}
},createHtmlFragment:function(s){
if(dojo.isIE&&s){
s=s.replace(/\<link\s/ig,"<div class=\"lotusHidden\">&nbsp;</div><link ");
}
var d=document.createDocumentFragment();
var div=document.createElement("div");
div.innerHTML=s;
d.appendChild(div);
return div;
},createDocument:function(s){
var doc;
if(typeof DOMParser!="undefined"){
var _104c=new DOMParser();
doc=_104c.parseFromString(s,"text/xml");
}else{
if(typeof ActiveXObject!="undefined"){
doc=new ActiveXObject("Microsoft.XMLDOM");
doc.async="false";
doc.loadXML(s);
}
}
return doc;
}});
}
if(!dojo._hasResource["lconn.core.TypeAheadDataStore"]){
dojo._hasResource["lconn.core.TypeAheadDataStore"]=true;
dojo.provide("lconn.core.TypeAheadDataStore");
dojo.declare("lconn.core.TypeAheadDataStore",null,{constructor:function(_104d,node){
this.queryParam=(_104d.queryParam?_104d.queryParam:node.getAttribute("queryParam"));
this.url=(_104d.url?_104d.url:node.getAttribute("url"));
},queryParam:"",cache:[],clear:function(){
this.cache=[];
},fetch:function(_104f){
var _1050={};
if(this.cache[_104f.query.toLowerCase()]){
_104f.onComplete(this.cache[_104f.query.toLowerCase()],_104f);
return _104f;
}
if(this.queryParam){
_1050[this.queryParam]=_104f.query;
}
dojo.xhrGet({url:this.url,content:_1050,handleAs:"json-comment-optional",timeout:5000,load:dojo.hitch(this,function(data){
this.cache[_104f.query.toLowerCase()]=data;
if(_104f.onComplete){
_104f.onComplete(data,_104f);
}
}),error:function(){
console.log("There was an error");
}});
return _104f;
},getValue:function(item,_1053,_1054){
return item;
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.Toolbox"]){
dojo._hasResource["quickr.share.wiki.scenes.Toolbox"]=true;
dojo.provide("quickr.share.wiki.scenes.Toolbox");
dojo.declare("quickr.share.wiki.scenes.Toolbox",[quickr.share.wiki.scenes.AbstractTemplate],{getWindowTitle:function(){
return this.app.nls.WINDOWTITLE.TOOLS;
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.Statistics"]){
dojo._hasResource["quickr.share.wiki.scenes.Statistics"]=true;
dojo.provide("quickr.share.wiki.scenes.Statistics");
dojo.declare("quickr.share.wiki.scenes.Statistics",[quickr.share.wiki.scenes.AbstractTemplate],{getWindowTitle:function(){
return this.app.nls.WINDOWTITLE.STATISTICS;
}});
}
if(!dojo._hasResource["quickr.share.bean.Share"]){
dojo._hasResource["quickr.share.bean.Share"]=true;
dojo.provide("quickr.share.bean.Share");
dojo.declare("quickr.share.bean.Share",null,{constructor:function(entry){
this.e=entry;
},getEntry:function(){
return this.e;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getCategory:function(){
return "share";
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getGroupId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"shareGroupId",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDescription:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getCreator:function(){
if(!this.author){
var node=this.e.getElementsByTagName("author")[0];
this.author={id:decodeURIComponent(quickr.share.util.getChildElementTextContent(node,"uri")),name:quickr.share.util.getChildElementTextContent(node,"name"),email:quickr.share.util.getChildElementTextContent(node,"email")};
}
return this.author;
},getShareTarget:function(){
return this.getShareTargets()[0];
},getShareTargets:function(){
if(!this.shareTargets){
this.shareTargets=[];
var _1057=quickr.share.util.getElementsByTagNameNS(this.e,"sharedWith",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(_1057){
var users=quickr.share.util.getElementsByTagNameNS(this.e,"user",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
for(var i=0;i<users.length;i++){
this.shareTargets.push({id:decodeURIComponent(quickr.share.util.getChildElementTextContentNS(users[i],"uri",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)),name:quickr.share.util.getChildElementTextContentNS(users[i],"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),email:quickr.share.util.getChildElementTextContentNS(users[i],"email",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)});
}
}
}
return this.shareTargets;
},getShareTargetCount:function(){
var count=-1;
var _105b=quickr.share.util.getElementsByTagNameNS(this.e,"sharedWith",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(_105b){
count=quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(_105b,"sharedWithCount",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),-1);
}
return count;
},getSharedResourceId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"sharedWhat",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getSharedResourceName:function(){
return quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","title");
},getSharedResourceSize:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","length"));
},getSharedResourceUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","related","href"));
},getSharedResourceOwner:function(){
if(!this.owner){
var user=quickr.share.util.getElementsByTagNameNS(this.e,"documentOwner",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
this.owner={id:decodeURIComponent(quickr.share.util.getChildElementTextContentNS(user,"uri",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)),name:quickr.share.util.getChildElementTextContentNS(user,"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),email:quickr.share.util.getChildElementTextContentNS(user,"email",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)};
}
return this.owner;
},getSharedResourceType:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"sharedResourceType",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getSharedResourceTimesDownloaded:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/hit"));
},getPermissions:function(){
if(!this.permissions){
var s=quickr.share.util.getChildElementTextContentNS(this.e,"sharePermission",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={View:true};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.permissions=p;
}
return this.permissions;
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.updated=this.updated||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.published=this.published||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.published;
},getUrlDownload:function(){
return quickr.share.util.rewriteUri(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href"),{errorPage:true});
},getUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
}});
}
if(!dojo._hasResource["quickr.share.bean.File"]){
dojo._hasResource["quickr.share.bean.File"]=true;
dojo.provide("quickr.share.bean.File");
dojo.declare("quickr.share.bean.File",null,{constructor:function(entry){
this.e=entry;
},getEntry:function(){
return this.e;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getName:function(){
var s=quickr.share.util.getChildElementTextContentNS(this.e,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
if(!s||s.length==0){
s=quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","title");
}
if(!s||s.length==0){
s=quickr.share.util.getChildElementTextContent(this.e,"title");
}
return s;
},getTitle:function(){
var s="";
if(!s||s.length==0){
s=quickr.share.util.getChildElementTextContent(this.e,"title");
}
return s;
},getLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDescription:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getChangeSummary:function(){
return quickr.share.util.getChildElementTextContent(this.e,"changeSummary");
},getCategory:function(){
return "document";
},getAuthor:function(){
if(!this.author){
this.author=new quickr.share.bean.User(this.e.getElementsByTagName("author")[0]);
}
return this.author;
},getModifier:function(){
if(!this.modifier){
var e=quickr.share.util.getElementsByTagNameNS(this.e,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(e){
this.modifier=new quickr.share.bean.User(e);
}
}
return this.modifier;
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemCreated();
}
return this.published;
},getSystemLastModified:function(){
if(!this.systemLastModified){
this.systemLastModified=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.systemLastModified;
},getSystemCreated:function(){
if(!this.systemCreated){
this.systemCreated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.systemCreated;
},getRating:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(this.e,"rating",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
},getAverageRating:function(){
return quickr.share.util.parseFloat(quickr.share.util.getChildElementTextContentNS(this.e,"averageRating",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
},getRatingCount:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/recommendations"));
},getUrlRecommendation:function(){
if(!this.urlRecommendation){
this.urlRecommendation=quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","recommendation","href");
this.urlRecommendation=this.urlRecommendation?quickr.share.util.makeAtomUrlIESafe(this.urlRecommendation):null;
}
return this.urlRecommendation;
},isUserRecommended:function(){
return this.getUrlRecommendation()?true:false;
},getPermissions:function(){
if(!this.permissions){
var s=quickr.share.util.getChildElementTextContentNS(this.e,"permissions",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={View:true};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.permissions=p;
}
return this.permissions;
},getVisibility:function(){
if(!this.visibility){
this.visibility=quickr.share.util.getChildElementTextContentNS(this.e,"visibility",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
}
return this.visibility;
},isPublic:function(){
return this.getVisibility()=="public";
},isPrivate:function(){
return this.getVisibility()=="private";
},isViralShareAllowed:function(){
return (quickr.share.util.getChildElementTextContentNS(this.e,"propagation",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)=="true");
},isNotificationEnabled:function(){
if(typeof this.notificationEnabled=="undefined"){
this.notificationEnabled=(quickr.share.util.getChildElementTextContentNS(this.e,"notification",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)=="on");
}
return this.notificationEnabled;
},getNotifications:function(){
if(typeof this.notifications=="undefined"&&this.e){
var n=this.notifications={};
var e=quickr.share.util.getChildElementNS(this.e,"notifications",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
if(e){
var c;
for(var i=0;c=e.childNodes[i];i++){
if(c.nodeType==1){
n[c.localName||c.baseName]=quickr.share.util.xmlText(c)=="on";
}
}
}
}
return this.notifications;
},getShares:function(){
if(!this.shares){
this.shares=[];
var child=quickr.share.util.getElementsByTagNameNS(this.e,"metadata",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(child){
var _106c=child.getElementsByTagName("entry");
for(var i=0,entry;entry=_106c[i];i++){
this.shares.push(new quickr.share.bean.Share(entry));
}
}
}
return this.shares;
},getTimesDownloaded:function(){
if(typeof this.downloadCount=="undefined"){
this.downloadCount=quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/hit"));
}
return this.downloadCount;
},getTimesDownloadedAnonymously:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/anonymous_hit"));
},getUrlDownload:function(){
this.urlDownload=this.urlDownload||quickr.share.util.rewriteUri(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href"),{errorPage:true});
return this.urlDownload;
},getUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
},getUrlFeed:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","replies","href"));
},getTags:function(){
if(!this.tags){
var tags=[];
for(var i=0;i<this.e.childNodes.length;i++){
var child=this.e.childNodes[i];
if(child.nodeName=="category"&&child.getAttribute("scheme")==null){
tags.push(child.getAttribute("term"));
}
}
this.tags=tags;
}
return this.tags;
},getSize:function(){
if(typeof this.size=="undefined"){
this.size=quickr.share.util.parseInt(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","length"));
}
return this.size;
},getTotalSize:function(){
if(typeof this.totalSize=="undefined"){
this.totalSize=quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(this.e,"totalMediaSize",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
}
return this.totalSize;
},getMimeType:function(){
return quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","type");
},getDocumentId:function(){
quickr.share.util.getChildElementTextContentNS(this.e,"documentId",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getVersionId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"versionUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getVersionLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"versionLabel",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentVersionId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentVersionUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentVersionLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentVersionLabel",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getCurrentVersionId:function(){
return this.getVersionId()||this.getDocumentVersionId();
},getCurrentVersionLabel:function(){
return this.getVersionLabel()||this.getDocumentVersionLabel();
},getLatestVersionId:function(){
return this.getDocumentVersionId()||this.getVersionId();
},getLatestVersionLabel:function(){
return this.getDocumentVersionLabel()||this.getVersionLabel();
},getCommentCount:function(){
if(typeof this.commentCount=="undefined"){
this.commentCount=quickr.share.util.parseInt(quickr.share.util.getChildElementAttributeMatchingNS(this.e,"link",null,"rel",null,"replies","count",quickr.share.util.THREAD_ATOM_NAMESPACE));
}
return this.commentCount;
},getShareCount:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"urn:ibm.com/td/share"));
},getAttachmentCount:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"urn:ibm.com/td/attachments"));
},getVersionCount:function(){
if(typeof this.versionCount=="undefined"){
this.versionCount=quickr.share.util.parseInt(quickr.share.util.getChildElementMatchingAttributeTextContentNS(this.e,"rank",quickr.share.util.SNX_NAMESPACE,"scheme",null,"http://www.ibm.com/xmlns/prod/sn/versions"));
}
return this.versionCount;
}});
quickr.share.bean.File.isFilenameTooLong=function(s){
var i=dojo.getObject("quickr.share.config.validation.warnForDownload");
if(i>0){
return quickr.share.util.lengthUtf8(s)>i;
}
return false;
};
}
if(!dojo._hasResource["quickr.share.bean.Draft"]){
dojo._hasResource["quickr.share.bean.Draft"]=true;
dojo.provide("quickr.share.bean.Draft");
dojo.declare("quickr.share.bean.Draft",quickr.share.bean.File,{getCategory:function(){
return "draft";
},getContent:function(){
return this.content||quickr.share.util.getChildElementTextContent(this.e,"content");
},getDocumentAuthor:function(){
if(!this.documentAuthor){
var node=quickr.share.util.getElementsByTagNameNS(this.e,"documentAuthor",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
this.documentAuthor={id:decodeURIComponent(quickr.share.util.getChildElementTextContentNS(node,"uri",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)),name:quickr.share.util.getChildElementTextContentNS(node,"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),email:quickr.share.util.getChildElementTextContentNS(node,"email",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)};
}
return this.documentAuthor;
},getDocumentId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentUpdated:function(){
if(!this.documentUpdated){
this.documentUpdated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"documentModified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.documentUpdated;
},getDocumentPublished:function(){
if(!this.documentPublished){
this.documentPublished=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"documentCreated",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.documentPublished;
},getDocumentSystemLastModified:function(){
if(!this.documentLastModified){
this.documentLastModified=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"documentUpdated",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.documentLastModified;
},getDocumentSystemCreated:function(){
if(!this.documentCreated){
this.documentCreated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"documentPublished",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.documentCreated;
},getDocumentModifier:function(){
if(!this.modifier){
var user=quickr.share.util.getElementsByTagNameNS(this.e,"documentModifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(user){
this.modifier={id:decodeURIComponent(quickr.share.util.getChildElementTextContentNS(user,"uri",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)),name:quickr.share.util.getChildElementTextContentNS(user,"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),email:quickr.share.util.getChildElementTextContentNS(user,"email",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)};
}
}
return this.modifier;
},getLibrary:function(){
if(!this.library){
var lib=quickr.share.util.getElementsByTagNameNS(this.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
}
if(lib){
this.library={libraryId:quickr.share.util.getChildElementTextContentNS(lib,"libraryUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),libraryTitle:quickr.share.util.getChildElementTextContentNS(lib,"libraryTitle",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)};
}
return this.library;
}});
}
if(!dojo._hasResource["quickr.share.wiki.Wiki"]){
dojo._hasResource["quickr.share.wiki.Wiki"]=true;
dojo.provide("quickr.share.wiki.Wiki");
dojo.declare("quickr.share.wiki.Wiki",[quickr.share.App],{nls:dojo.i18n.getLocalization("quickr.share.wiki","wiki"),tagsChanged:false,useNavCookie:false,constructor:function(_1077,url){
this.securedUrls=dojo.map(dojo.getObject("quickr.share.config.securedUrls")||[],function(s){
return new dojo._Url(s);
});
var auth=this.auth=com.ibm.ajax.auth;
auth.setAuthenticationHandler(dojo.hitch(this,this.onAuthenticationRequestDetected));
auth.addAuthenticationCheck(quickr.share.wiki.Wiki.isSessionInvalidated);
dojo.xhrGet=dojo.hitch(dojo,quickr.share.wiki.Wiki.xhrIntercept,this,auth,dojo.xhrGet,false);
dojo.xhrPost=dojo.hitch(dojo,quickr.share.wiki.Wiki.xhrIntercept,this,auth,dojo.xhrPost,true);
dojo.rawXhrPost=dojo.hitch(dojo,quickr.share.wiki.Wiki.xhrIntercept,this,auth,dojo.rawXhrPost,true);
dojo.io.iframe.send=dojo.hitch(dojo.io.iframe,quickr.share.wiki.Wiki.xhrIntercept,this,auth,dojo.io.iframe.send,true);
this.securedUrls=dojo.map(dojo.getObject("quickr.share.config.securedUrls")||[],function(s){
return new dojo._Url(s);
});
this.net=new quickr.share.Network({getAuthenticatedUser:dojo.hitch(this,this.getAuthenticatedUser)});
dojo.connect(this.net,"onNetwork",this,"onNetwork");
dojo.connect(this.net,"onNetworkEnd",this,"onNetworkEnd");
this.templates=new quickr.share.util.SceneTemplates(dojo.getObject("quickr.share.config.templates")||{},{net:this.net,defaultParameters:{lang:this.language,ver:dojo.getObject("quickr.share.config.versionShort")}});
},initRoutes:function(){
return new quickr.share.wiki.Routes();
},_loadAuthentication:function(){
var _107c,_107d;
this.net.getJson({url:this.routes.getUserInfoServiceUrl(),secured:false,handle:function(r,io){
_107c=r;
_107d=io;
},sync:true,noStatus:true});
if(this.auth.isAuthenticationRequired(_107c,_107d)){
return null;
}
if(_107c instanceof Error){
console.log("App::_loadAuthentication DEBUG user is authenticated to WAS, but services cannot create a user - code="+_107c.code);
throw _107c;
}
return quickr.share.scenes.createUser(this,_107c.items[0]);
},onAuthenticationRequestDetected:function(_1080,_1081,_1082){
if(this.waitingForLogin()){
if(_1082){
this._pendingRetries.push(dojo.partial(_1082,_1081.args));
}
if(_1081.args.preventLoginRefresh){
this._avoidRefresh=true;
}
}else{
if(!_1081.args.preventLogin&&confirm(this.nls.SESSION_TIMEOUT)){
this._avoidRefresh=_1081.args.preventLoginRefresh;
this._pendingRetries=(_1082)?[dojo.partial(_1082,_1081.args)]:[];
this.login();
}
}
},onNetwork:function(opts){
if(opts&&opts.verb&&!opts.statusText){
switch(opts.verb){
case "put":
case "post":
case "delete":
opts.statusText=this.nls.SAVING;
break;
default:
opts.statusText=this.nls.LOADING;
}
}
if(opts&&!opts.noStatus){
this.working(opts.statusText);
}
},onNetworkEnd:function(opts){
if(opts&&!opts.noStatus){
this.idle();
}
},onApplicationStart:function(){
if(window["doSemTagSvcOnload"]){
try{
doSemTagSvcOnload();
}
catch(e){
console.log(e);
}
}
if(window["SemTagSvc"]){
SemTagSvc.add=this._addElementToSemanticTagging;
}
},_getDefaultSceneFunction:function(){
return this._getSceneFunction("quickr.share.wiki.scenes.AllWikis");
},activateHelp:function(){
var _1085=dojo.getObject("quickr.share.config.helpUri");
if(_1085){
openHelpWindow(_1085);
}
},_addElementToSemanticTagging:function(el){
if(window["SemTagSvc"]){
SemTagSvc.onTagChanged(el,true);
}
},_hideSemTagMenu:function(){
var _1087=dojo.byId("semtagmenu");
if(_1087){
_1087.style.display="none";
}
},navigate:function(url){
this._hideSemTagMenu();
if(this.scene&&this.scene.onnavigate&&this.scene.onnavigate(url)){
return;
}
var _1089=false;
quickr.share.util.history.stop();
if(_1089){
this.load(url);
}else{
if(dojo.getObject("quickr.share.config.disableLinkNavigation")){
url=quickr.share.util.toAnchorForm(url,[quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT],{"lang":this.language});
quickr.share.util.history.add(url);
}else{
window.location.href=url;
}
}
},load:function(scene){
try{
this.working();
if(typeof scene=="string"){
scene=quickr.share.util.fromAnchorForm(scene,[quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT]);
this.urlState=scene;
var _108b=this._decodeState(scene);
if(_108b.requireAuthentication&&!this.authenticatedUser){
this.login(dojo.hitch(this,this.protectedLoad,scene));
this.idle();
return;
}
if(this.scene&&this.scene.refresh&&this.scene.refresh(_108b)){
this.idle();
return;
}
var _108c=this._getSceneFunction(_108b.id)||this._getDefaultSceneFunction(_108b.id);
scene=new _108c(this,_108b);
}
if(scene){
if(this.loadRecursion>10){
throw "Scene load loop (scenes redirecting to other scenes)";
}
var _108d={};
for(var key in dijit.registry._hash){
_108d[key]=dijit.registry._hash[key];
}
var _108f=this.scene;
if(_108f){
try{
_108f.end(scene);
}
catch(e){
console.error(e);
}
}
this._handleGlobalToLocalTransition(scene);
this.scene=scene;
var url=scene.begin(_108f);
if(url){
this.loadRecursion++;
this.navigate(url);
return;
}else{
this.loadRecursion=0;
}
this.onSceneChange();
for(var key in _108d){
delete _108d[key];
}
}
}
catch(e){
this.idle();
console.error(e);
quickr.share.scenes.applyApplicationError(this);
if(dojo.isIE){
throw e;
}
}
this.idle();
},_handleGlobalToLocalTransition:function(_1091){
if(!this.scene){
return;
}
if(this.scene.isGlobal^_1091.isGlobal){
if(this.tagTypeAheadStore){
this.tagTypeAheadStore.clear();
}
}
},_decodeState:function(url){
var scene={};
var uri=quickr.share.util.parseUri(url);
var user=this.authenticatedUser;
scene.parameters=uri.queryParameters;
var path=uri.path;
var _1097=quickr.share.util.parseUri(dojo.getObject("quickr.share.config.baseUri")||"/");
var _1098=_1097.path;
if(path.indexOf(_1098)==0){
path=path.substring(_1098.length);
}
var _1099;
if(_1099=(this.ROUTE_WIKIS_HOME.exec(path))){
var _109a=_1099[3];
if(_109a!=null){
var _109b=this.PARSE_WIKI_LABEL.exec(_109a);
if((_109b!=null)&&(_109b.length>1)){
scene.wikiLabel=decodeURIComponent(_109b[1]);
}
var _109c=this.PARSE_PAGE_NAME.exec(_109a);
if((_109c!=null)&&(_109c.length>1)){
scene.pageId=decodeURIComponent(_109c[1]);
}
}
if(_1099=this.ROUTE_WIKI_INDEX_SUBPATH.exec(_109a)){
scene.wikiLabel=decodeURIComponent(_1099[1]);
scene.id="quickr.share.wiki.scenes.WikiIndex";
}else{
if(_1099=this.ROUTE_WIKI_MYPAGES_SUBPATH.exec(_109a)){
scene.wikiLabel=decodeURIComponent(_1099[1]);
scene.id="quickr.share.wiki.scenes.MyPages";
}else{
if(_1099=this.ROUTE_WIKI_SITEMAP_SUBPATH.exec(_109a)){
scene.wikiLabel=decodeURIComponent(_1099[1]);
scene.id="quickr.share.wiki.scenes.SiteMap";
}else{
if(_1099=this.ROUTE_MEMBERS_SUBPATH.exec(_109a)){
scene.wikiLabel=decodeURIComponent(_1099[1]);
scene.libraryId=decodeURIComponent(_1099[2]);
scene.id="quickr.share.wiki.scenes.Members";
}else{
if(this.ROUTE_TAGGED_WIKIS_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.TaggedWikis";
}else{
if(_1099=this.ROUTE_SEARCH_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.WikiSearch";
}else{
if(this.ROUTE_WIKI_PAGE_EDIT_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.WikiPageEdit";
}else{
if(this.ROUTE_MYWIKIS_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.MyWikis";
}else{
if(this.ROUTE_WIKI_ABOUT_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.About";
}else{
if(this.ROUTE_TOOLBOX_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.Toolbox";
}else{
if(this.ROUTE_WIKI_STATS_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.Statistics";
}else{
if(this.ROUTE_WIKI_PAGE_CREATE_SUBPATH.exec(_109a)){
_1099=this.PARSE_WIKI_LABEL.exec(_109a);
scene.wikiLabel=decodeURIComponent(_1099[1]);
scene.id="quickr.share.wiki.scenes.PageCreate";
}else{
if(_1099=this.ROUTE_PAGE_EDIT_DRAFT_SUBPATH.exec(_109a)){
scene.draftId=_1099[1];
scene.id="quickr.share.wiki.scenes.WikiPageEdit";
}else{
if(_1099=this.ROUTE_PAGE_CREATE_DRAFT_SUBPATH.exec(_109a)){
scene.draftId=_1099[1];
scene.id="quickr.share.wiki.scenes.PageCreate";
}else{
if(_1099=(this.ROUTE_WIKI_HOME_SUBPATH.exec(_109a)||this.ROUTE_WIKI_HOMEPAGE_SUBPATH.exec(_109a))){
_109a=_1099[2];
scene.wikiLabel=decodeURIComponent(_1099[1]);
if(_1099=this.ROUTE_WIKI_ALPHALIST_SUBPATH.exec(_109a)){
scene.id="quickr.share.wiki.scenes.AlphabeticalPagesList";
}else{
if(_1099=this.ROUTE_WIKI_PAGE_SUBPATH.exec(_109a)){
_109a=_1099[2];
scene.pageId=decodeURIComponent(_1099[1]);
if(_1099=this.ROUTE_WIKI_PAGE_COMMENT_SUBPATH.exec(_109a)){
scene.mode="comments";
scene.commentId=_1099[1];
}else{
if(_1099=this.ROUTE_WIKI_PAGE_INFO_SUBPATH.exec(_109a)){
scene.mode="info";
}else{
if(_1099=this.ROUTE_WIKI_PAGE_VERSIONS_SUBPATH.exec(_109a)){
scene.mode="versions";
}else{
if(_1099=this.ROUTE_WIKI_PAGE_ATTACHMENTS_SUBPATH.exec(_109a)){
scene.mode="attachments";
}else{
if(_1099=this.ROUTE_WIKI_PAGE_VERSION_SUBPATH.exec(_109a)){
scene.mode="versions";
scene.versionId=_1099[1];
}else{
if(_1099=this.ROUTE_WIKI_PAGE_COMPARE_SUBPATH.exec(_109a)){
scene.mode="compare";
}
}
}
}
}
}
scene.id="quickr.share.wiki.scenes.WikiPage";
}else{
scene.id="quickr.share.wiki.scenes.WikiPage";
}
}
}else{
scene.id="quickr.share.wiki.scenes.AllWikis";
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}else{
scene.id="quickr.share.wiki.scenes.AllWikis";
}
return scene;
},getMonitor:function(opt){
opt=opt||{};
opt.net=opt.net||this.net;
opt.url=opt.url||dojo.getObject("quickr.share.config.services.introspectionUri");
return new quickr.share.util.OperationMonitor(opt);
},getTemplate:function(scene,opts){
if(!scene){
return null;
}
var doc=this.templates.getXhtml(scene.declaredClass,opts);
return (doc?doc.documentElement:null);
},onUserLogin:function(){
this._clearTypeAheadStores();
this._clearWikiProperties();
this.navigate(this.urlState);
},onUserReauthenticated:function(){
this._clearTypeAheadStores();
this._clearWikiProperties();
if(this._avoidRefresh){
if(this._pendingRetries){
for(var i=0;i<this._pendingRetries.length;i++){
this._pendingRetries[i].apply(null,[]);
}
}
this._pendingRetries=[];
}else{
this.load(this.urlState);
}
this._avoidRefresh=false;
},onUserReset:function(){
this._clearTypeAheadStores();
this._clearWikiProperties();
this.resetUnsavedChanges();
this.navigate(this.routes.getGlobalHomeUrl());
},_clearWikiProperties:function(){
if(this.scene&&this.scene.wiki){
delete this.scene.wiki;
}
},_clearTypeAheadStores:function(){
if(this.tagTypeAheadStore){
this.tagTypeAheadStore.clear();
}
if(this.userTypeAheadStore){
this.userTypeAheadStore.clear();
}
if(this.groupTypeAheadStore){
this.groupTypeAheadStore.clear();
}
},getTemplate:function(scene){
if(!scene){
return null;
}
var doc=this.templates.getXhtml(scene.declaredClass);
return (doc?doc.documentElement:null);
},getUserTypeAheadStore:function(){
if(!this.userTypeAheadStore){
var d=document;
var div=d.createElement("div");
div.style.display="none";
d.body.appendChild(div);
this.userTypeAheadStore=new lconn.core.PeopleDataStore({getUrl:dojo.hitch(this.routes,this.routes.getTypeAheadUserServiceUrl),queryParam:"searchString",maxResults:dojo.getObject("quickr.share.config.peopleSearch.maxResults"),pageSize:dojo.getObject("quickr.share.config.peopleSearch.pageSize")},div);
}
return this.userTypeAheadStore;
},getWikiPageTypeAheadStore:function(scene){
if(!this.wikiPageTypeAheadStore){
var d=this.document;
var div=d.createElement("div");
div.style.display="none";
d.body.appendChild(div);
this.wikiPageTypeAheadStore=new lconn.core.TypeAheadDataStore({url:this.routes.getWikiFileListServiceUrl(scene.wikiLabel,{format:"json",sortKey:"title"}),queryParam:"searchString",maxResults:dojo.getObject("quickr.share.config.peopleSearch.maxResults"),pageSize:dojo.getObject("quickr.share.config.peopleSearch.pageSize")},div);
this.wikiPageTypeAheadStore.wikiLabel=scene.wikiLabel;
}
if(scene.wikiLabel!=this.wikiPageTypeAheadStore.wikiLabel||scene.declaredClass=="quickr.share.wiki.scenes.ConfirmNewPage"){
this.wikiPageTypeAheadStore.url=this.routes.getWikiFileListServiceUrl(scene.wikiLabel,{format:"json"});
this.wikiPageTypeAheadStore.clear();
}
return this.wikiPageTypeAheadStore;
},getGroupTypeAheadStore:function(){
if(!this.groupTypeAheadStore){
var d=document;
var div=d.createElement("div");
div.style.display="none";
d.body.appendChild(div);
this.groupTypeAheadStore=new lconn.core.PeopleDataStore({getUrl:dojo.hitch(this.routes,this.routes.getGroupSearchServiceUrl),queryParam:"searchString",maxResults:dojo.getObject("quickr.share.config.peopleSearch.maxResults"),pageSize:dojo.getObject("quickr.share.config.peopleSearch.pageSize")},div);
}
return this.groupTypeAheadStore;
},getTagTypeAheadStore:function(){
if(!this.tagTypeAheadStore){
var d=document;
var div=d.createElement("div");
div.style.display="none";
d.body.appendChild(div);
this.tagTypeAheadStore=new quickr.share.util.TagDataStore({net:this.net,getUrl:dojo.hitch(this,this.getTagTypeAheadStoreUrl),queryParam:"filter"},div);
}
return this.tagTypeAheadStore;
},getTagTypeAheadStoreUrl:function(opt){
var _10ae={sortKey:"weight",sortDescending:true,isGlobal:!this.scene.wikiLabel,wikiLabel:this.scene.wikiLabel};
dojo.mixin(opt,_10ae);
return this.routes.getTagServiceUrl(opt);
},_loadUnsavedChanges:function(){
var url=this.routes.getWorkingDraftsServiceUrl({fetchAcl:true,sortKey:"modified",sortDescending:true,includeDocumentAuthorInfo:true});
this.net.getXml({url:url,sync:true,handle:dojo.hitch(this,this._loadUnsavedChangesComplete)});
},_loadUnsavedChangesComplete:function(_10b0,_10b1){
var _10b2=[];
if(_10b0 instanceof Error||!_10b0||!_10b0.documentElement){
var error=quickr.share.util.getAtomErrorCode(_10b0,_10b1);
}else{
var xml=_10b0.documentElement;
var items=xml.getElementsByTagName("entry");
for(var j=0;j<items.length;j++){
var item=new quickr.share.bean.Draft(items[j]);
_10b2.push(item);
}
}
this.unsavedChanges=_10b2;
},resetUnsavedChanges:function(){
delete this.unsavedChanges;
},getUnsavedChangesList:function(){
if(!this.unsavedChanges){
this._loadUnsavedChanges();
}
return this.unsavedChanges;
},_isSecureUrl:function(s){
if(!s){
return false;
}
var url=new dojo._Url(s);
return dojo.some(this.securedUrls,function(_10ba){
return url.path.indexOf(_10ba.path)==0;
});
},ROUTE_GLOBAL_HOME:/^(home)?\/?$/,ROUTE_WIKIS_HOME:/^(home)(\/(.+))?$/,ROUTE_TAGGED_WIKIS_SUBPATH:/^wikis\/tagged\/?$/,ROUTE_MYWIKIS_SUBPATH:/^mywikis$/,ROUTE_WIKI_ABOUT_SUBPATH:/^about$/,ROUTE_TOOLBOX_SUBPATH:/^toolbox$/,ROUTE_WIKI_STATS_SUBPATH:/^statistics$/,ROUTE_MEMBERS_SUBPATH:/^wiki\/([^\/]+)\/members\/([^\/]+)\/?$/,ROUTE_SEARCH_SUBPATH:/^search\/?$/,ROUTE_WIKI_PAGE_CREATE_SUBPATH:/pages\/create\/?$/,ROUTE_WIKI_HOME:/^(home)\/wiki(\/([^\/]+))?$/,ROUTE_WIKI_PAGEVIEW_SUBPATH:/^(page\/([^\/]+))\/?$/,ROUTE_WIKI_ALPHALIST_SUBPATH:/^alphabetical\/?$/,ROUTE_WIKI_INDEX_SUBPATH:/^wiki\/([^\/]+)\/index\/?$/,ROUTE_WIKI_MYPAGES_SUBPATH:/^wiki\/([^\/]+)\/mypages\/?$/,ROUTE_WIKI_SITEMAP_SUBPATH:/^wiki\/([^\/]+)\/map\/?$/,ROUTE_WIKI_HOMEPAGE_SUBPATH:/^wiki\/([^\/]+)$/,ROUTE_WIKI_HOME_SUBPATH:/^wiki\/([^\/]+)\/(.+)$/,ROUTE_WIKI_PAGE_SUBPATH:/^page\/([^\/]+)(?:\/(.+))?$/,ROUTE_WIKI_PAGE_COMMENT_SUBPATH:/^comment\/?([^\/]+)?\/?$/,ROUTE_WIKI_PAGE_INFO_SUBPATH:/^info\/?$/,ROUTE_WIKI_PAGE_VERSIONS_SUBPATH:/^versions\/?$/,ROUTE_WIKI_PAGE_ATTACHMENTS_SUBPATH:/^attachments\/?$/,ROUTE_WIKI_PAGE_VERSION_SUBPATH:/^version\/?([^\/]+)?\/?$/,ROUTE_WIKI_PAGE_COMPARE_SUBPATH:/^compare\/?$/,ROUTE_WIKI_PAGE_EDIT_SUBPATH:/^wiki\/([^\/]+)\/page\/([^\/]+)\/edit\/?$/,PARSE_WIKI_LABEL:/^wiki\/([^\/]+)/,PARSE_PAGE_NAME:/page\/([^\/]+)(\/edit)?$/,ROUTE_PAGE_EDIT_DRAFT_SUBPATH:/^draft\/([^\/]+)\/edit?$/,ROUTE_PAGE_CREATE_DRAFT_SUBPATH:/^draft\/([^\/]+)\/create?$/});
quickr.share.wiki.Wiki.xhrIntercept=function(app,auth,f,_10be,_10bf){
var args=dojo._toArray(arguments).slice(4);
if(!(_10bf.secured==false)&&(_10bf.secured==true||app._isSecureUrl(_10bf.url))){
if(typeof _10bf.preventLoginRefresh=="undefined"||_10bf.preventLoginRefresh==null){
_10bf.preventLoginRefresh=_10be;
}
args[0]=auth.prepareSecure(_10bf,_10bf.detectHtmlLogin,_10bf.retry);
}
return f.apply(this,args);
};
quickr.share.wiki.Wiki.isSessionInvalidated=function(auth,_10c2,_10c3){
try{
if(_10c3&&_10c3.xhr){
var _10c4=_10c3.xhr.status;
if(_10c4==412&&_10c3.xhr.responseXML&&_10c3.xhr.responseXML.documentElement){
var el=_10c3.xhr.responseXML.documentElement;
var text=quickr.util.dom.getChildElementTextContentNS(el,"errorCode",quickr.util.dom.DOCUMENTS_ATOM_NAMESPACE);
var code=quickr.util.text.trim(text);
return ("InvalidUser"==code);
}
}
}
catch(e){
}
return false;
};
quickr.share.wiki.Wiki.xhrTestAuthentication=function(app,_10c9,_10ca){
var args=dojo._toArray(arguments).slice(1);
var _10cc=_10ca.args.handleAs;
var _10cd=false;
if(_10ca.args&&_10ca.args.detectHtmlLogin&&_10ca.args.detectHtmlLogin(_10c9,_10ca)){
console.log("Wiki::xhrTestAuthentication DEBUG caller provided detection logic that indicated form login, assume logged out");
_10cd=true;
}else{
if(dojo.indexOf(["xml","json","json-comment-optional"],_10cc)!=-1&&_10ca.xhr&&/^text\/html/.exec(_10ca.xhr.getResponseHeader("Content-Type"))&&_10ca.xhr.status>=200&&_10ca.xhr.status<300){
console.log("Wiki::xhrTestAuthentication DEBUG content type does not match request, assume logged out");
_10cd=true;
}
}
if(_10cd){
console.log("Wiki::xhrTestAuthentication DEBUG expire special WAS login cookies");
var path=quickr.share.util.parseUri(_10ca.args.url).path;
dojo.cookie("WASPostParam",null,{expires:-1,path:path});
dojo.cookie("WASReqURL",null,{expires:-1,path:path});
if(app.waitingForLogin()){
console.log("Wiki::xhrTestAuthentication DEBUG login already in progress");
if(_10ca.args.retry){
app._pendingRetries.push(dojo.partial(_10ca.args.retry,_10ca.args));
}
if(_10ca.args.preventLoginRefresh){
app._avoidRefresh=true;
}
}else{
if(!_10ca.args.preventLogin&&confirm(app.nls.SESSION_TIMEOUT)){
console.log("Wiki::xhrTestAuthentication DEBUG user requested login");
app._avoidRefresh=_10ca.args.preventLoginRefresh;
app._pendingRetries=(_10ca.args.retry)?[dojo.partial(_10ca.args.retry,_10ca.args)]:[];
app.login();
}
}
args[0]=new Error("xhr unauthenticated");
args[0].dojoType="unauthenticated";
}
if(_10ca.args._handle){
return _10ca.args._handle.apply(this,args);
}
};
window.openHelpWindow=function(uri){
var h=Math.max(window.screen.height/4,800);
var w=Math.max(window.screen.width/4,800);
var _10d2="height="+h+",width="+w+",status=yes,toolbar=yes,menubar=no,location=no,scrollbars=yes,resizable=yes";
var _10d3="";
if(!uri){
uri=dojo.getObject("quickr.share.config.helpUri");
}
if(/^\s*([a-zA-Z]+:\/\/|\/)/.test(uri)){
_10d3=uri;
}else{
_10d3=(dojo.getObject("quickr.share.config.baseUri")||"/")+uri;
}
window.open(_10d3,"helpWindow",_10d2).focus();
};
window.openDemoWindow=function(){
var _10d4=dojo.getObject("quickr.share.config.demoUri");
if(!_10d4){
return;
}
var h=Math.max(window.screen.height/4,700);
var w=Math.max(window.screen.width/4,820);
var _10d7="height="+h+",width="+w+",status=yes,toolbar=yes,menubar=no,location=no,scrollbars=yes,resizable=yes";
window.open(_10d4,"demoWindow",_10d7).focus();
};
}
if(!dojo._hasResource["quickr.share.scenes.AbstractList"]){
dojo._hasResource["quickr.share.scenes.AbstractList"]=true;
dojo.provide("quickr.share.scenes.AbstractList");
dojo.declare("quickr.share.scenes.AbstractList",null,{pivots:null,sorts:null,views:null,msgNoData:"Nothing to show",itemsPerPage:10,_byId:function(arr,id){
if(arr){
for(var i=0;i<arr.length;i++){
if(arr[i]&&arr[i].id==id){
return arr[i];
}
}
}
},_changed:function(_10db,after){
var c={};
var _10de=0;
for(var key in _10db){
if(!after[key]){
c[key]=null;
_10de++;
}
}
var _10e0=0;
for(var key in after){
var o=after[key];
if(_10db[key]!=o){
c[key]=o||null;
_10e0++;
}
}
return {removed:_10de,changed:_10e0,keys:c};
},init:function(app,_10e3){
var scene=this;
var p=_10e3.parameters||{};
this.baseParams=p;
this.app=app;
this.activeFilters=[];
this.params={};
var _10e6=_10e3.pivot||p.pivot;
var pivot;
if(this.pivots){
var _10e8=dojo.filter(this.pivots,function(pivot){
return (!pivot.isValid||pivot.isValid(app,scene));
});
pivot=dojo.filter(_10e8,function(pivot){
return pivot.id==_10e6;
})[0]||_10e8[0];
if(pivot){
this.activePivot=pivot;
this.params.pivot=pivot.id;
}
}
if(this.views&&this.views.length>0){
var view=this.app.prefs.get("vw");
this.activeView=this._byId(this.views,view);
if(!this.activeView||(this.activeView.isValid&&!this.activeView.isValid(this.app,this))){
this.activeView=this.views[0];
}
}
if(this.sorts){
var _10ec=p.sort;
var _10ed=dojo.filter(this.sorts,function(sort){
return (!sort.isValid||sort.isValid(app,scene));
});
var sort=dojo.filter(_10ed,function(sort){
return sort.id==_10ec;
})[0]||_10ed[0];
if(sort){
this.activeSort=sort;
this.sortId=sort.id;
this.sortReversed=(p.reverse=="1");
this.params.sort=sort.id;
this.params.sortReversed=this.sortReversed?"1":null;
}
}
if(p.page>1){
this.initialPage=this.params.page=p.page;
}else{
this.initialPage=1;
this.params.page=null;
}
this.initFilters(p);
var _10f1=this.app.prefs.get("itemsPerPage");
if(!_10f1||_10f1<1){
_10f1=this.itemsPerPage?this.itemsPerPage:10;
this.app.prefs.put("itemsPerPage",_10f1);
}
this.itemsPerPage=_10f1;
if(this.activePivot&&this.activePivot.getMsgNoData){
this.msgNoData=this.activePivot.getMsgNoData(this);
}
},end:function(_10f2){
this.list=null;
},update:function(_10f3){
},updateList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadListData)});
},handlePastLastPage:function(_10f5){
if(_10f5.isPastEnd()){
var url=_10f5.getLastPageUrl();
this.updateList(url);
return true;
}
return false;
},loadListData:function(_10f7,_10f8){
},getListUrl:function(){
return null;
},renderView:function(d,el){
var views=this.views;
var _10fc=this.activeView;
var _10fd=d.getElementById("qkrViewControl");
if(_10fd){
quickr.share.util.removeChildren(_10fd);
}
var table=_10fd?_10fd:d.createElement("table");
table.id="qkrViewControl";
table.cellPadding="0";
table.className="lotusRight lotusViewControl";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
td.appendChild(d.createTextNode(this.app.nls.CONTENT.VIEW_SELECTION+" "));
tr.appendChild(td);
var td=d.createElement("td");
var div=d.createElement("div");
for(var i=0;i<views.length;i++){
var view=views[i];
if(view.isValid&&!view.isValid(this.app,this)){
continue;
}
var _1105=(view==_10fc);
var a=d.createElement("a");
a.className="lotusSprite lotusView lotus"+view.img+(_1105?"On":"Off");
a.tabIndex=0;
a.title=view.tooltip;
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeView,view.id));
var alt=d.createElement("span");
alt.className="lotusAltText"+(_1105?" lotusBold":"");
alt.appendChild(d.createTextNode(view.name));
a.appendChild(alt);
div.appendChild(a);
}
td.appendChild(div);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
if(!_10fd){
el.appendChild(table);
}
},_setView:function(_1108){
if(this.list&&this.list.renderer){
this.list.renderer.view=_1108;
}
},changeView:function(_1109,e){
if(e){
dojo.stopEvent(e);
}
if(this.activeView&&this.activeView.id==_1109){
return;
}
if(this.views&&this.views.length>0){
this.app.prefs.put("vw",_1109);
var view=_1109;
this.activeView=this._byId(this.views,view);
if(!this.activeView||(this.activeView.isValid&&!this.activeView.isValid(this.app,this))){
this.activeView=this.views[0];
}
this._setView(this.activeView.id);
this.renderView(this.app.d);
}else{
return;
}
this.list.update(this.listData);
},setPageSize:function(size,e){
if(e){
dojo.stopEvent(e);
}
if(size<1){
return;
}
this.app.prefs.put("itemsPerPage",size);
this.update();
},page:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(page<1){
page=1;
}
var p=dojo.clone(this.params);
p.page=page!=1?page:null;
this.update(p);
},nextPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.listData.paging.hasNext()){
var page=this.listData.paging.getNextPage();
var p=dojo.clone(this.params);
p.page=page!=1?page:null;
this.update(p);
}
},previousPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.listData.paging.hasPrevious()){
var page=this.listData.paging.getPreviousPage();
var p=dojo.clone(this.params);
p.page=page!=1?page:null;
this.update(p);
}
}});
}
if(!dojo._hasResource["quickr.widget.Recommend"]){
dojo._hasResource["quickr.widget.Recommend"]=true;
dojo.provide("quickr.widget.Recommend");
dojo.declare("quickr.widget.Recommend",[dijit._Widget],{small:false,editable:true,showText:true,userRecommended:false,timesRated:-1,urlFeed:null,url:null,urlRecommendation:null,baseUri:(dojo.getObject("quickr.share.config.baseUri")||"/"),baseClass:"lotusRecommend",_strings:{},buildRendering:function(){
var d=document;
var el=this.domNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
this.update();
},getIconUrl:function(){
var type;
if(this.timesRated>0){
type="iconRating1";
}else{
type="iconRating0";
}
return this.baseUri+"nav/common/styles/images/"+type+(this.small?".gif":".gif");
},update:function(_111a){
var d=document;
var el=this.domNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
var _111d=null;
var _111e=null;
var _111f=null;
if(this.timesRated<=0){
_111d=(this.userRecommended)?this._strings.ERROR_RETRIEVE:this._strings.NOT_RECOMMENDED;
_111e=this._strings.FIRST_TO_RECOMMEND;
_111f=this._strings.FIRST_TO_RECOMMEND_TOOLTIP;
}else{
_111d=(this.timesRated==1)?(this.userRecommended?this._strings.YOU_HAVE_RECOMMENDED:this._strings.ONE_HAS_RECOMMENDED):(this.userRecommended?this._strings.YOU_AND_X_HAVE_RECOMMENDED:this._strings.X_HAVE_RECOMMENDED);
if(this.userRecommended){
_111e=this._strings.UNRECOMMEND;
_111f=this._strings.UNRECOMMEND_TOOLTIP;
}else{
_111e=this._strings.RECOMMEND;
_111f=this._strings.RECOMMEND_TOOLTIP;
}
}
var _1120=dojo.string.substitute(this.timesRated==1?this._strings.ONE:this._strings.MANY,[this.timesRated]);
var img=d.createElement("img");
img.src=this.getIconUrl();
img.setAttribute("alt",_111f);
if(this.editable){
var _1122=d.createElement("a");
_1122.appendChild(img);
_1122.href="javascript:;";
_1122.title=_111f;
dojo.connect(_1122,"onclick",dojo.hitch(this,this.toggleRecommend));
el.appendChild(_1122);
}else{
img.setAttribute("alt",_111e);
el.appendChild(img);
}
var label=d.createElement("label");
label.setAttribute("for","");
if(this.showText&&_111d){
quickr.share.util.html.substitute(d,label,_111d,{0:_1120});
if(_111e.text&&_111e.tipText){
label.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.appendChild(d.createTextNode(_111e));
a.href="javascript:;";
_1122.title=a.title=_111f;
dojo.connect(a,"onclick",dojo.hitch(this,this.toggleRecommend));
label.appendChild(a);
}
}else{
label.appendChild(d.createTextNode(this.timesRated));
label.title=dojo.string.substitute(_111d||_111e,[_1120]);
}
el.appendChild(label);
},toggleRecommend:function(e){
this.recommend(!this.userRecommended,e);
},recommend:function(_1126,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _112a=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_112a.setAttribute("term","recommendation");
_112a.setAttribute("scheme","tag:ibm.com,2006:td/type");
_112a.setAttribute("label","recommendation");
entry.appendChild(_112a);
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(entry));
if(_1126){
this.net.postXml({url:this.urlFeed,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,contentType:"application/atom+xml",postData:text,handle:dojo.hitch(this,this.handleRecommend,_1126,Math.max(1,this.timesRated+1))});
}else{
this.net.deleteXml({url:this.urlRecommendation,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:text,handle:dojo.hitch(this,this.handleRecommend,_1126,Math.max(0,this.timesRated-1))});
}
},handleRecommend:function(_112c,_112d,_112e,_112f){
if(_112e instanceof Error){
error=_112e.code;
if(_112c&&error=="ItemExists"){
}else{
if(!_112c&&error=="ItemNotFound"){
}else{
this.onerror(error);
return;
}
}
}
this.userRecommended=_112c;
this.timesRated=_112d;
this.update();
this.onrecommend(this.userRecommended,this.timesRated);
},onerror:function(code){
if(code=="cancel"){
alert(this._strings.ERROR_CANCEL);
}else{
if(code=="timeout"){
alert(this._strings.ERROR_TIMEOUT);
}else{
if(code=="ItemNotFound"){
alert(this._strings.NOT_FOUND);
}else{
if(code=="AccessDenied"){
alert(this._strings.ACCESS_DENIED);
}else{
if(code=="unauthenticated"){
}else{
alert(this._strings.ERROR_SAVE);
}
}
}
}
}
},onrecommend:function(_1131,_1132){
}});
}
if(!dojo._hasResource["quickr.share.validation"]){
dojo._hasResource["quickr.share.validation"]=true;
dojo.provide("quickr.share.validation");
quickr.share.validation.TAG_LENGTH=100;
quickr.share.validation.FILENAME_LENGTH=252;
quickr.share.validation.DESCRIPTION_LENGTH=1020;
quickr.share.validation.COMMENT_LENGTH=50*1024;
quickr.share.validation.INVALID_FILENAME_CHARS=/[\\\/\:\*\?\<\>\|\[\]\"]/g;
quickr.share.validation.SPLIT_TAGS=/[,\s]+/;
quickr.share.validation.validateTextLength=function(s,_1134){
if(!s){
return true;
}
var _1135=s.length;
var bytes=quickr.share.util.lengthUtf8(s);
return (bytes<=_1134);
};
quickr.share.validation.addRequiredIndicator=function(el){
var d=document;
var _1139=d.createElement("span");
_1139.className="lotusFormRequired";
_1139.appendChild(d.createTextNode("*"));
el.appendChild(_1139);
};
quickr.share.validation.addInlineErrorRow=function(row,field,id,_113d){
var d=document;
dojo.addClass(field,"lotusFormErrorField");
var _113f=(row.previousSibling&&dojo.hasClass(row.previousSibling,"_qkrErrorRow"))?row.previousSibling:null;
var _1140;
if(_113f){
var td=dojo.query("TD.lotusFormError",_113f)[0];
var ul=td.getElementsByTagName("UL")[0];
if(!ul){
if(td.errorId==id){
return;
}
ul=d.createElement("ul");
var li=d.createElement("li");
li.errorId=td.errorId;
while(td.firstChild){
var a=td.firstChild;
td.removeChild(a);
li.appendChild(a);
}
ul.appendChild(li);
td.appendChild(ul);
td.errorId=null;
}else{
if(dojo.some(td.getElementsByTagName("li"),function(a){
return a.errorId==id;
})){
return;
}
}
var li=d.createElement("li");
ul.appendChild(li);
_1140=li;
}else{
var _1146=field;
var _1147;
while(_1146&&!(_1146.nodeName=="TR"&&dojo.hasClass(_1146,"lotusFormFieldRow"))){
_1147=_1146;
_1146=_1146.parentNode;
}
var _1148=quickr.share.validation.countCells(row);
var _1149=quickr.share.validation.countCells(row,_1147);
var tr=d.createElement("tr");
tr.className="_qkrErrorRow";
if(_1149>0){
var td=d.createElement("td");
dojo.attr(td,"colSpan",_1149);
tr.appendChild(td);
}
var td=d.createElement("td");
dojo.attr(td,"colSpan",_1148-_1149);
td.className="lotusFormError";
td.setAttribute("role","alert");
tr.appendChild(td);
row.parentNode.insertBefore(tr,row);
_1140=td;
}
_1140.errorId=id;
if(dojo.isArray(_113d)){
for(var i=0;i<_113d.length;i++){
_1140.appendChild(_113d[i]);
}
}else{
if(typeof _113d=="string"){
_1140.appendChild(d.createTextNode(_113d));
}else{
_1140.appendChild(_113d);
}
}
};
quickr.share.validation.removeInlineErrorRow=function(row,field,id){
if(dojo.hasClass(field,"lotusFormErrorField")){
if(id){
var _114f=row.previousSibling;
var items=_114f.getElementsByTagName("LI");
for(var i=0;i<items.length;i++){
var li=items[i];
if(li.errorId==id){
li.parentNode.removeChild(li);
break;
}
}
var td=dojo.query("TD.lotusFormError",_114f)[0];
if(items.length==1){
var li=items[0];
while(td.firstChild){
td.removeChild(td.firstChild);
}
while(li.firstChild){
var el=li.firstChild;
li.removeChild(el);
td.appendChild(el);
}
}else{
if(items.length==0&&td.errorId==id){
dojo.removeClass(field,"lotusFormErrorField");
row.parentNode.removeChild(row.previousSibling);
}
}
}else{
dojo.removeClass(field,"lotusFormErrorField");
row.parentNode.removeChild(row.previousSibling);
}
}else{
if(row.previousSibling&&dojo.hasClass(row.previousSibling,"_qkrErrorRow")){
row.parentNode.removeChild(row.previousSibling);
}
}
};
quickr.share.validation.countCells=function(tr,td){
var count=0;
for(var i=0;i<tr.cells.length;i++){
if(td==tr.cells[i]){
break;
}
count+=Math.max(parseInt(dojo.attr(tr.cells[i],"colSpan")),1);
}
return count;
};
quickr.share.validation.setFormError=function(form,_115a){
var tbody=dojo.query("table.lotusFormTable:first-child > tbody",form)[0];
if(tbody){
var d=document;
var div=dojo.query("tr.lotusFormErrorSummary:first-child > div",tbody)[0];
if(!div){
var _115e=tbody.getElementsByTagName("tr")[0];
var _115f=(_115e?quickr.share.validation.countCells(_115e):1);
var tr=d.createElement("tr");
tr.className="lotusFormErrorSummary";
var td=d.createElement("td");
dojo.attr(td,"colSpan",_115f);
div=d.createElement("div");
div.className="lotusFormRequired";
td.appendChild(div);
tr.appendChild(td);
if(_115e){
tbody.insertBefore(tr,_115e);
}else{
tbody.appendChild(tr);
}
}else{
quickr.share.util.removeChildren(div);
}
if(dojo.isArray(_115a)){
for(var i=0;i<_115a.length;i++){
div.appendChild(_115a[i]);
}
}else{
if(typeof _115a=="string"){
div.appendChild(d.createTextNode(_115a));
}else{
div.appendChild(_115a);
}
}
div.appendChild(d.createElement("ul"));
}
};
quickr.share.validation.removeFormErrors=function(form){
dojo.forEach(dojo.query("tr.lotusFormErrorSummary",form),function(el){
el.parentNode.removeChild(el);
});
dojo.forEach(dojo.query("td.lotusFormError",form),function(el){
el.parentNode.parentNode.removeChild(el.parentNode);
});
dojo.forEach(dojo.query(".lotusFormErrorField",form),function(el){
dojo.removeClass(el,"lotusFormErrorField");
});
};
quickr.share.validation.splitTags=function(_1167){
_1167=(_1167.toLowerCase()||"").replace(/["']/g,"");
var tags=_1167.split(quickr.share.validation.SPLIT_TAGS);
var _1169={};
return dojo.filter(tags,function(s){
if(s.length>0&&!_1169[s]){
_1169[s]=1;
return true;
}else{
return false;
}
});
};
}
if(!dojo._hasResource["quickr.widget.TagTypeAhead"]){
dojo._hasResource["quickr.widget.TagTypeAhead"]=true;
dojo.provide("quickr.widget.TagTypeAhead");
dojo.declare("quickr.widget.TagTypeAhead",[lconn.core.TypeAhead],{size:"",pageSize:15,autoReplace:/[\s,]+/g,autoSelectChars:[" ",","],libraryId:null,userLibrary:null,templateString:null,templateString:"<input type=\"text\" autocomplete=\"off\" name=\"${name}\" id=\"widget_${id}\" size=\"${size}\"\n\tdojoAttachEvent=\"onkeydown:_onKeyDown, onkeypress:_onKeyPress, onfocus:_update, compositionend,onKeyUp\"\n\tdojoAttachPoint=\"domNode,textbox,focusNode,comboNode\" waiRole=\"combobox\"/>\n",formatItem:function(item){
if(item.name){
return item.name;
}else{
return item;
}
},decorateItem:function(el,item){
},_startSearch:function(key,opt){
opt=opt||{};
opt.userLibrary=opt.userLibrary||this.userLibrary;
opt.libraryId=opt.libraryId||this.libraryId;
if(!this._popupWidget){
var _1170=this.id+"_popup";
this._popupWidget=new quickr.widget.TagTypeAheadMenu({_strings:this._strings,onChange:dojo.hitch(this,this._selectOption),decorateItem:dojo.hitch(this,this.decorateItem),id:_1170});
dijit.removeWaiState(this.focusNode,"activedescendant");
dijit.setWaiState(this.textbox,"owns",_1170);
}
this.item=null;
var query=dojo.clone(this.query);
this._lastQuery=query=key;
this.searchTimer=setTimeout(dojo.hitch(this,function(query,_this){
var _1174=this.store.fetch({queryOptions:dojo.mixin({ignoreCase:this.ignoreCase,deep:true},opt),query:query,onComplete:dojo.hitch(this,"_openResultList"),onError:function(_1175){
dojo.hitch(_this,"_hideResultList")();
},start:0,count:this.pageSize});
var _1176=function(_1177,_1178){
_1177.start+=_1177.count*_1178;
_1177.direction=_1178;
this.store.fetch(_1177);
};
this._nextSearch=this._popupWidget.onPage=dojo.hitch(this,_1176,_1174);
},query,this),opt.searchImmediately?1:this.searchDelay);
}});
dojo.declare("quickr.widget.TagTypeAheadMenu",[dijit.form._ComboBoxMenu],{templateString:"<ul class='dijitMenu' dojoAttachEvent='onmousedown:_onMouseDown,onmouseup:_onMouseUp,onmouseover:_onMouseOver,onmouseout:_onMouseOut' tabIndex='-1' style='overflow:\"auto\";'>"+"<li class='dijitMenuItem dijitMenuPreviousButton' dojoAttachPoint='previousButton'></li>"+"<li class='dijitMenuItem resultsNode' dojoAttachPoint='resultsNode'></li>"+"<li class='dijitMenuItem dijitMenuNextButton' dojoAttachPoint='nextButton'></li>"+"</ul>",_messages:null,postCreate:function(){
this.resultsNode.selectHandler=dojo.hitch(this,function(evt){
dojo.stopEvent(evt);
return true;
});
this.inherited("postCreate",arguments);
},setValue:function(value){
if(value.target.item){
this.value=value;
this.onChange(value);
}
},_onMouseUp:function(evt){
if(evt.target!=this.resultsNode){
this.inherited("_onMouseUp",arguments);
}
},_onMouseOver:function(evt){
if(evt.target===this.domNode){
return;
}
var tgt=evt.target;
if(!(tgt==this.previousButton||tgt==this.nextButton||tgt==this.resultsNode)){
while(!tgt.item){
tgt=tgt.parentNode;
}
}
this._focusOptionNode(tgt);
},createOptions:function(_117e,_117f,_1180){
this.clearResultList();
this.previousButton.style.display=(!_117f.start||_117f.start==0)?"none":"";
dojo.attr(this.previousButton,"id",this.id+"_prev");
dojo.forEach(_117e,function(item,i){
if(_117f.count&&i>=_117f.count){
return;
}
var _1183=this._createOption(item,_1180);
_1183.className="dijitMenuItem";
dojo.attr(_1183,"id",this.id+i);
if(this.decorateItem){
this.decorateItem(_1183,item);
}
this.domNode.insertBefore(_1183,this.nextButton);
},this);
this.nextButton.style.display=(_117f.count&&_117f.count<_117e.length)?"":"none";
dojo.attr(this.nextButton,"id",this.id+"_next");
var el=this.resultsNode;
if(_117e.length==0){
var _1185=dojo.string.substitute(this._strings.NO_RESULTS,[_117f.query]);
while(el.firstChild){
el.removeChild(el.firstChild);
}
el.appendChild(document.createTextNode(_1185));
el.item=_1185;
this.domNode.insertBefore(el,this.nextButton);
}
},clearResultList:function(){
var first=this.previousButton;
var last=this.nextButton;
while(first.nextSibling&&first.nextSibling!=last){
this.domNode.removeChild(first.nextSibling);
}
},getListLength:function(){
return this.domNode.childNodes.length-2-(this.resultsNode.parentNode?1:0);
}});
quickr.widget.TagTypeAhead.getTagTypeAheadArguments=function(store,opt){
var args={nameAttr:"name",minChars:1,searchDelay:400,multipleValues:false,store:store,hasDownArrow:false,"class":"",formatItem:function(item,_118c){
if(item.name){
return item.name;
}else{
return item;
}
},decorateItem:function(el,item){
if(item.weight>=1){
dojo.addClass(el,"lotusAlignRight");
var span=document.createElement("span");
span.className="lotusLeft";
while(el.firstChild){
span.appendChild(el.firstChild);
}
el.appendChild(span);
var span=document.createElement("span");
span.className="lotusMeta";
span.appendChild(document.createTextNode(" "));
span.appendChild(document.createTextNode(item.weight));
el.appendChild(span);
}
}};
if(opt){
dojo.mixin(args,opt);
}
return args;
};
}
if(!dojo._hasResource["quickr.widget.Tagger"]){
dojo._hasResource["quickr.widget.Tagger"]=true;
dojo.provide("quickr.widget.Tagger");
dojo.declare("quickr.widget.Tagger",[dijit._Widget],{inline:false,editable:true,_strings:{},_astrings:{},addLinkClass:"qkrAdd",removeLinkClass:"qkrRemove",highlightNew:"#FFFF75",tags:null,highlightTags:{},labelText:null,docId:null,libraryId:null,userLibrary:null,uninitialize:function(){
this.addNode=null;
this.errNode=null;
this.labelNode=null;
this.formNode=null;
this.inputField=null;
this.tagCombo=null;
},buildRendering:function(){
var d=document;
var el=this.domNode=this.srcNodeRef;
while(el.firstChild){
el.removeChild(el.firstChild);
}
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
if(this.editable){
var div=this.errNode=d.createElement("DIV");
div.className="lotusFormError";
div.style.display="none";
div.setAttribute("role","alert");
el.appendChild(div);
}
if(this.labelText){
var label=this.labelNode=d.createElement("span");
label.appendChild(d.createTextNode(this.labelText));
label.appendChild(d.createTextNode(" "));
el.appendChild(label);
}
if(this.editable){
var a=this.addNode=d.createElement("a");
a.className=this.addLinkClass;
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.editTags));
a.appendChild(d.createTextNode(this.getLinkText()));
a.title=this._strings.ADD_REMOVE_TAGS_TOOLTIP;
el.appendChild(a);
}
if(!this.tags){
this.loadTags();
}
this.update();
},update:function(_1195){
var d=document;
var el=this.domNode;
var _1198=this.addNode;
if(this.labelNode===undefined){
this.labelNode=this.errNode;
}
if(this.errNode){
quickr.share.util.removeChildren(this.errNode);
}
if(this.inputField){
this.tagCombo.staticClass="lotusText";
dojo.removeClass(this.inputField,"lotusFormErrorField");
}
if(_1198){
var _1199=_1198.previousSibling;
while(_1198.previousSibling&&_1198.previousSibling!=this.labelNode){
el.removeChild(_1198.previousSibling);
}
}else{
while(el.lastChild&&el.lastChild!=this.labelNode){
el.removeChild(el.lastChild);
}
}
if(this.tags){
if(this.tags.length==0){
var span=d.createElement("span");
span.className="qkrEmpty";
span.appendChild(d.createTextNode(this._strings.NONE));
quickr.share.util.insertBefore(el,span,_1198);
quickr.share.util.insertBefore(el,d.createTextNode(" "),_1198);
}
var _119b=this.tags.length;
for(var i=0;i<_119b;i++){
var tag=this.tags[i];
if(i>0){
quickr.share.util.insertBefore(el,d.createTextNode(", "),_1198);
}
var a=d.createElement("a");
this.generateTagLink(tag,a);
a.appendChild(d.createTextNode(tag));
quickr.share.util.insertBefore(el,a,_1198);
if(i==_119b-1){
quickr.share.util.insertBefore(el,d.createTextNode(" "),_1198);
}
if(_1195){
var a=d.createElement("a");
a.className=this.removeLinkClass;
a.href="javascript:;";
var img=d.createElement("img");
img.alt=this._strings.REMOVE;
img.title=this._strings.REMOVE;
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconRemove.gif";
a.appendChild(img);
dojo.connect(a,"onclick",dojo.hitch(this,this.deleteTag,tag));
quickr.share.util.insertBefore(el,a,_1198);
}
if(this.highlightTags[tag]&&this.highlightNew){
dojo.animateProperty({duration:2000,rate:100,node:a,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
}
if(this.addNode){
while(this.addNode.lastChild){
this.addNode.removeChild(this.addNode.lastChild);
}
this.addNode.appendChild(d.createTextNode(this.getLinkText()));
}
}else{
quickr.share.util.insertBefore(el,d.createTextNode(this._strings.ERROR_LOADING),_1198);
}
this.highlightTags={};
},ontagchange:function(){
},loadTags:function(){
this.net.getXml({url:quickr.share.util.rewriteUri(this.url,{includeTags:true}),timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,handle:dojo.hitch(this,this.handleLoad)});
},handleLoad:function(_11a0,_11a1){
if(_11a0 instanceof Error){
this.onLoadError(quickr.share.util.getAtomErrorCode(_11a0,_11a1));
}else{
var doc=_11a0.documentElement;
var _11a3=doc.getElementsByTagName("entry");
var tags=[];
for(var i=0,entry;entry=_11a3[i];i++){
tags.push(quickr.share.util.getChildElementTextContent(entry,"title"));
}
this.tags=tags;
}
this.update();
},onLoadError:function(code){
var d=document;
this.tags=[];
var error;
if(code=="cancel"){
error=this._strings.LOADERROR_CANCEL;
}else{
if(code=="timeout"){
error=this._strings.LOADERROR_TIMEOUT;
}else{
error=this._strings.ERROR_LOADING;
}
}
quickr.share.util.insertBefore(this.domNode,d.createTextNode(error),this.addNode);
},editTags:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
if(!this.formNode){
var d=document;
var el=this.domNode;
var form=this.formNode=d.createElement("FORM");
var input=d.createElement("input");
input.type="text";
input.className="lotusText";
input.name="_tags";
form.appendChild(input);
var args=quickr.widget.TagTypeAhead.getTagTypeAheadArguments(this.tagStore,{id:this.id+"_selectTag",name:"_shareTaggerTypeAhead",size:"30",multipleValues:true,token:" ",_strings:this._strings,hideEmptyResults:true,autoSelectChars:[],libraryId:this.libraryId,userLibrary:this.userLibrary});
var combo=this.tagCombo=new quickr.widget.TagTypeAhead(args,input);
this.inputField=combo.textbox;
dojo.connect(form.firstChild,"onkeydown",this,function(e){
if(e&&!e.cancelBubble&&e.keyCode==dojo.keys.ESCAPE){
dojo.stopEvent(e);
this.cancelEdit();
if(this.addNode){
this.addNode.focus();
}
}
});
var input=d.createElement("input");
input.type="submit";
input.value=this._strings.OK;
form.appendChild(input);
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.cancelEdit));
a.appendChild(d.createTextNode(this._strings.CANCEL));
a.title=this._strings.CANCEL_TOOLTIP;
form.appendChild(a);
dojo.connect(form,"onsubmit",dojo.hitch(this,this.createTags));
el.appendChild(form);
}else{
this.formNode.firstChild.value="";
}
this.update(true);
this.formNode.style.display="";
this.addNode.style.display="none";
this.errNode.style.display="none";
this.formNode.firstChild.focus();
},cancelEdit:function(e){
if(e){
dojo.stopEvent(e);
}
this.update();
if(this.errNode){
this.errNode.style.display="none";
}
if(this.formNode){
this.formNode.style.display="none";
}
if(this.inputField){
this.inputField.value="";
}
this.addNode.style.display="";
},createTags:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
this.errNode.style.display="none";
quickr.share.util.removeChildren(this.errNode);
this.tagCombo.staticClass="lotusText";
dojo.removeClass(this.inputField,"lotusFormErrorField");
var _11b5=this.inputField.value;
var tags=this.validateTags(_11b5);
if(!this.validateTagLength(tags)){
return;
}
if(tags&&tags.length>0){
var _11b7=quickr.share.util.rewriteUri(this.url,{tag:tags});
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _11ba=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_11ba.setAttribute("term","document");
_11ba.setAttribute("label","document");
_11ba.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_11ba);
var _11bb=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
_11bb.appendChild(doc.createTextNode(this.docId));
entry.appendChild(_11bb);
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.net.putXml({url:_11b7,postData:text,contentType:"application/atom+xml; charset=utf-8",handle:dojo.hitch(this,this.handleCreate,tags),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000});
}else{
this.cancelEdit();
}
},validateTagLength:function(tags){
var valid=true;
var d=document;
var el=this.inputField;
var _11c1=[];
var _11c2=this._strings.WARN_LONG_TAG;
dojo.forEach(tags,function(tag,i){
if(!quickr.share.validation.validateTextLength(tag,quickr.share.validation.TAG_LENGTH)){
_11c1.push(d.createTextNode(dojo.string.substitute(_11c2,[quickr.share.util.trimToLength(tag,30)])));
valid=false;
}
});
if(!valid){
var _11c5=_11c1.length>1;
if(_11c5){
_11c1=[d.createTextNode(this._strings.WARN_LONG_TAGS)];
}
_11c1.push(d.createTextNode(" "));
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimTags");
a.appendChild(d.createTextNode(_11c5?this._strings.TRIM_TAGS:this._strings.TRIM_TAG));
_11c1.push(a);
var _11c7=this.errNode;
this.tagCombo.staticClass="lotusText lotusFormErrorField";
dojo.addClass(el,"lotusFormErrorField");
dojo.forEach(_11c1,function(node){
_11c7.appendChild(node);
});
this.errNode.style.display="";
}
return valid;
},trimTags:function(){
var el=this.inputField;
var tags=quickr.share.validation.splitTags(el.value);
tags=dojo.map(tags,function(tag){
var i=quickr.share.util.getCharIndexForUtf8Index(tag,quickr.share.validation.TAG_LENGTH);
if(i!=-1){
tag=tag.substring(0,i);
}
return tag;
});
el.value=tags.join(" ");
this.errNode.display="";
quickr.share.util.removeChildren(this.errNode);
this.tagCombo.staticClass="lotusText";
dojo.removeClass(el,"lotusFormErrorField");
},handleCreate:function(_11cd,_11ce,_11cf){
var error=quickr.share.util.getAtomError(_11ce,_11cf);
if(error&&error.code){
this.onCreateError(error);
return;
}
var _11d1=this.tags||[];
var _11d2=this.tags=new quickr.share.bean.File(_11ce.documentElement).getTags().sort();
var _11d3=[];
var _11d4=[];
var i=0;
var j=0;
var _11d7=_11d1[i];
var _11d8=_11d2[j];
while(_11d7||_11d8){
if(_11d7&&(!_11d8||_11d8>_11d7)){
_11d4.push(_11d7);
i++;
}else{
if(_11d8&&(!_11d7||_11d7>_11d8)){
_11d3.push(_11d8);
j++;
}else{
i++;
j++;
}
}
_11d7=_11d1[i];
_11d8=_11d2[j];
}
var _11d9=this.highlightTags={};
dojo.forEach(_11d3,function(tag){
_11d9[tag]=1;
});
dojo.forEach(_11cd,function(tag){
_11d9[tag]=1;
});
if(this.tagStore){
this.tagStore.clear();
}
this.ontagchange(_11d3,_11d4);
this.cancelEdit();
},onCreateError:function(error){
if(error.code=="cancel"){
alert(this._strings.CREATEERROR_CANCEL);
}else{
if(error.code=="timeout"){
alert(this._strings.CREATEERROR_TIMEOUT);
}else{
if(error.code=="ItemNotFound"){
alert(this._strings.CREATEERROR_NOT_FOUND);
}else{
if(error.code=="AccessDenied"){
alert(this._strings.CREATEERROR_ACCESS_DENIED);
}else{
if(error.code=="unauthenticated"){
}else{
if(error.code=="ItemExists"){
}else{
if(error.code=="InvalidTagCharacters"){
this.setInvalidCharError(error.message);
}else{
alert(this._strings.CREATEERROR);
}
}
}
}
}
}
}
},deleteTag:function(tag,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
var _11df=new quickr.share.wiki.action.ConfirmDialogAction();
var nls=this._astrings;
var _11e1={CANCEL:nls.CANCEL,HEADING:this._strings.REMOVE,MESSAGE:dojo.string.substitute(this._strings.REMOVECONFIRM,[tag]),OK:nls.REMOVE_MEMBER.ACTION,BUSY:nls.EDIT_FILE.BUSY};
this.confirmDialog=_11df;
_11df.execute(null,{onSubmit:dojo.hitch(this,function(tag){
this.tags=dojo.filter(this.tags,function(a){
return a!=tag;
});
this.update(true);
var _11e4=quickr.share.util.rewriteUri(this.urlFeed,{category:"tag",tag:tag});
this.net.deleteXml({url:_11e4,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,handle:dojo.hitch(this,function(tag){
this.handleDelete(tag);
this.confirmDialog.cancelDialog();
delete this.confirmDialog;
},tag)});
},tag),strings:_11e1});
},handleDelete:function(tag,_11e7,_11e8){
if(_11e7 instanceof Error){
var error=quickr.share.util.getAtomErrorCode(_11e7,_11e8);
if(error=="ItemNotFound"){
}else{
this.onDeleteError(error);
this.tags.push(tag);
this.tags=this.tags.sort();
this.update(true);
return;
}
}
if(this.tagStore){
this.tagStore.clear();
}
this.ontagchange(null,[tag]);
},onDeleteError:function(code){
if(code=="cancel"){
alert(this._strings.REMOVEERROR_CANCEL);
}else{
if(code=="timeout"){
alert(this._strings.REMOVEERROR_TIMEOUT);
}else{
if(error.code=="AccessDenied"){
alert(this._strings.REMOVEERROR_ACCESS_DENIED);
}else{
if(code=="unauthenticated"){
}else{
alert(this._strings.REMOVEERROR);
}
}
}
}
},generateTagLink:function(tag,a){
a.href="javascript:;";
a.onclick=function(){
return false;
};
},getLinkText:function(){
var _11ed=0;
if(this.tags){
_11ed=this.tags.length;
}
return ((_11ed>0)?this._strings.ADD_REMOVE_TAGS:this._strings.ADD_TAGS);
},validateTags:function(_11ee){
return quickr.share.validation.splitTags(_11ee);
},setInvalidCharError:function(_11ef){
this.tagCombo.staticClass="lotusText lotusFormErrorField";
dojo.addClass(this.inputField,"lotusFormErrorField");
if(this.errNode){
quickr.share.util.removeChildren(this.errNode);
this.errNode.appendChild(document.createTextNode(_11ef));
this.errNode.style.display="";
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.MyWikiStreamRenderer"]){
dojo._hasResource["quickr.share.wiki.widget.MyWikiStreamRenderer"]=true;
dojo.provide("quickr.share.wiki.widget.MyWikiStreamRenderer");
dojo.declare("quickr.share.wiki.widget.MyWikiStreamRenderer",[quickr.widget.StreamRenderer],{permissions:new quickr.share.bean.StreamPermissions(),methods:{},actions:[],_strings:{},getDelegate:function(type,def,_11f2){
var view=this.view||"details";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_11f2){
var _11f5=name+_11f2.substring(0,1).toUpperCase()+_11f2.substring(1);
if(typeof this[_11f5]=="function"){
return this[_11f5];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_11f8){
return typeof this.getDelegate(type,null,null,_11f8)=="function";
},delegate:function(type,args,def,_11fc){
var f=this.getDelegate(type,def,_11fc);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_11fe){
return this.delegate("allowMultipleExpand",arguments,quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.actions=[];
quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.destroy.apply(this,arguments);
},cleanup:function(){
this.delegate("cleanup",arguments);
quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.cleanup.apply(this,arguments);
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.getSorts);
},renderItemExpand:function(_11ff,data,item,_1202){
this.delegate("renderItemExpand",arguments,null,item._qualifier);
},collapseItem:function(_1203,data,item,_1206){
this.delegate("collapseItem",arguments,null,item._qualifier);
},expandItem:function(_1207,data,item,_120a){
this.delegate("expandItem",arguments,null,item._qualifier);
},renderActionList:function(){
},render:function(_120b,el,data,item){
this.cleanup();
data.itemById={};
this.baseUrl=_120b.baseUrl;
this.delegate("render",arguments);
delete this.highlightItems;
},renderSorting:function(_120f,el,data){
this.delegate("renderSorting",arguments,quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.renderSorting);
},renderEmpty:function(_1212,el,data){
this.delegate("renderEmpty",arguments,quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.renderEmpty);
},renderItem:function(_1215,el,data,item,_1219){
item=new quickr.share.wiki.bean.Wiki(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_1219;
var _121a="wiki";
item._qualifier=_121a;
var date=item.getPublished();
this.delegate("renderItem",arguments,null,_121a);
},renderDetails:function(_121c,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
var max=(data.paging)?data.paging.size:size;
var table=el.lastChild;
if(table&&(table._view!="details"||table.nodeName!="TABLE"||table.firstChild.childNodes.length!=max*2)){
quickr.share.util.removeChildren(el);
table=null;
}
if(!table){
var a=[];
a.push("<tr style=\"display: none;\"><td class=\"lotusFirstCell\" style=\"width:");
a.push(dojo.isSafari?"38px":"28px");
a.push("\"><img alt=\"\"></td>");
a.push("<td>");
a.push("<h4><a class=\"entry-title\" rel=\"bookmark\"></a></h4><div class=\"lotusMeta\">");
a.push("<a class=\"lotusPerson\"></a><span class=\"lotusDivider\">|</span>");
a.push("<span></span><span class=\"lotusDivider\">|</span><span></span></div></td>");
a.push("<td class=\"lotusAlignRight lotusLastCell lotusTiny\"><a href=\"javascript:;\"></a></td>");
a.push("</tr>");
a.push("<tr class=\"lotusDetails\" style=\"display: none;\"><td class=\"lotusFirstCell\"><!-- IE --></td><td colspan=\"2\"><div class=\"qkrWide entry-summary\"><div class=\"qkrWideInner\"></div></div></td></tr>");
var t=a.join("");
a=["<table cellpadding=\"0\" cellspacing=\"0\" style=\"display:none;\" class=\"lotusTable lotusClear wikiFixedTable\"><tbody>"];
for(var i=0;i<max;i++){
a.push(t);
}
a.push("</tbody></table>");
var t=a.join("");
el.innerHTML=t;
table=el.firstChild;
table._view="details";
var tbody=table.firstChild;
dojo.addClass(tbody.firstChild,"lotusFirst");
for(var i=0;i<max;i++){
var td=tbody.childNodes[i*2].lastChild;
if(i==0){
td.style.width="80px";
}
var a=td.firstChild;
a.title=this._strings.VIEW_EXTRA;
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(this._strings.MORE));
dojo.connect(a,"onclick",dojo.hitch(this,this.toggleItem,_121c,i));
}
}
if(size>0){
var _122a=d.createDocumentFragment();
var _122b=dojo._toArray(arguments);
_122b[1]=_122a;
quickr.share.wiki.widget.MyWikiStreamRenderer.superclass.renderSorting.apply(this,_122b);
if(el.firstChild!=table){
var old=el.replaceChild(_122a,el.firstChild);
quickr.share.util.destroyWidgets(old);
}else{
el.insertBefore(_122a,el.firstChild);
}
table.style.display="";
var tbody=table.firstChild;
for(var i=0;i<size;i++){
var tr=tbody.childNodes[i*2];
var _122e=tr.nextSibling;
this.renderItem(_121c,tbody,data,items[i],i,i==0,(i==size-1),tr,_122e);
tr.style.display="";
}
for(var i=size;i<max;i++){
var tr=tbody.childNodes[i*2];
var _122e=tr.nextSibling;
tr.style.display=_122e.style.display="none";
}
this.updatePaging(_121c,el,data);
}else{
this.renderEmpty(_121c,el,data);
}
},renderItemDetails:function(_122f,el,data,doc,_1233,_1234,_1235,_1236,_1237){
var d=document;
var _1239=(doc.getSystemLastModified().getTime()!=doc.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var line={};
line.tags=doc.getTags();
line.wikiLabel=doc.getLabel();
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _123d=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=_1236;
var trd=_1237;
tr.itemPosition=_1233;
var td=tr.firstChild;
var img=td.firstChild;
img.src=this.getWikiImage(24);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_WIKI);
td=td.nextSibling;
var a=td.firstChild.firstChild;
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(doc.getTitle()));
a.title=doc.getTitle();
if(a._onclick){
dojo.disconnect(a._onclick);
}
a._onclick=this.generateLinkToWiki({title:doc.getLabel()},a);
if(a.nextSibling){
a.parentNode.removeChild(a.nextSibling);
}
if(doc.isCommunityWiki()){
this.generateLinkToCommunity(d,_122f,a.parentNode,a,doc);
}
var div=td.firstChild.nextSibling;
var span=div.firstChild;
var a=span;
quickr.share.util.removeChildren(a);
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
span=span.nextSibling.nextSibling;
var df=new quickr.share.util.DateFormat(doc.getSystemLastModified());
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(df.formatByAge(_1239)));
span.title=(_1239&&_1239.FULL)?df.format(_1239.FULL):df.format(df.nls().DATE.RELATIVE_TIME.FULL);
span=span.nextSibling.nextSibling;
this.renderTags(d,span,line);
var td=trd.lastChild;
var div=td.firstChild.firstChild;
quickr.share.util.removeChildren(div);
trd.style.display=(div.firstChild)?"":"none";
trd.style.display=td.firstChild.style.display=(div.firstChild)?"":"none";
var old=td.firstChild.nextSibling;
while(old){
var next=old.nextSibling;
quickr.share.util.destroyWidgets(old);
old.parentNode.removeChild(old);
old=next;
}
this.renderShowLink(tr);
doc.element=tr;
doc.elementDetails=trd;
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:tr,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
dojo.animateProperty({duration:2000,rate:100,node:trd,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
},renderTags:function(d,span,line){
span.className="lotusTags";
quickr.share.util.removeChildren(span);
span.appendChild(d.createTextNode(this._appstrings.WIKI_CREATE.TAGS_LABEL));
span.appendChild(d.createTextNode(" "));
if(line.tags.length>0){
for(var i=0;i<line.tags.length;i++){
var an=d.createElement("a");
an.className="lotusTag";
this.generateLinkToTag(line.tags[i],an);
an.appendChild(d.createTextNode(line.tags[i]));
span.appendChild(an);
if(i<line.tags.length-1){
span.appendChild(d.createTextNode(", "));
}
}
}else{
var sp=d.createElement("span");
sp.style.fontStyle="italic";
sp.appendChild(d.createTextNode(this._appstrings.TAGGER.NONE));
span.appendChild(sp);
}
span.style.display="";
},renderItemExpandDetails:function(_1250,data,item,_1253){
var d=document;
var app=this.app;
var doc=item;
var el=doc.element;
var _1258=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
var _125b=item.getDescription();
if(!_125b||_125b==""){
_125b=this._appstrings.MYWIKIS.NODESCRIPTION;
}
var div=div_t.cloneNode(true);
div.style.fontStyle="italic";
div.className="lotusChunk qkrWide entry-summary";
var _125d=div_t.cloneNode(true);
_125d.className="qkrWideInner";
quickr.share.util.createTextNode(d,_125d,_125b);
div.appendChild(_125d);
if(_125d.firstChild){
extra.appendChild(div);
}
var tags=el.childNodes[1].childNodes[1].lastChild;
var _125f=d.createElement("span");
quickr.share.util.insertBefore(tags.parentNode,_125f,tags);
tags.style.display="none";
var _1260=item.tagger=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags",editable:item.getPermissions().GrantAccess,docId:doc.getAtomId(),url:doc.getUrlEntry(),deleteTag:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.deleteTag,this),createTags:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.createTags,this),createPostBody:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.createPostBody,item),urlAllTags:this.urlAllTags,tags:doc.getTags(),tagStore:this.tagStore,generateTagLink:this.generateTagLink(),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:app.net},_125f);
this.widgets.push(_1260);
dojo.connect(_1260,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_1250,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},expandItemDetails:function(_1261,data,item,_1264){
var el=item.element;
this.renderHideLink(el);
el.nextSibling.style.display="";
var _1266=el.childNodes[1].childNodes[1].lastChild;
_1266.previousSibling.style.display="";
_1266.style.display="none";
},collapseItemDetails:function(_1267,data,item,_126a){
var el=item.element;
var a=el.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
var extra=el.nextSibling;
extra.style.display="none";
var tags=el.childNodes[1].childNodes[1].lastChild;
var _126f=tags.previousSibling;
_126f.style.display="none";
var d=this.app.document;
var line={tags:item.tagger.tags};
this.renderTags(d,tags,line);
},renderItemExpand:function(_1272,data,item,_1275){
var d=document;
var tr=item.element;
var trd=item.elementDetails||item.elementExtra;
var td=trd.lastChild;
var div=d.createElement("div");
div.className="_qkrMessage";
div.appendChild(d.createTextNode(this._strings.LOADING));
td.appendChild(div);
var url=quickr.share.util.rewriteUri(item.getUrlEntry(),{acls:true,includeTags:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.completeItemExpand,_1272,data,item,_1275,arguments),timeout:_1272.timeoutRetrieve*1000,preventLoginRefresh:true,retry:dojo.hitch(this,this.renderItemExpand,_1272,data,item,_1275)});
},completeItemExpand:function(_127c,data,item,_127f,_1280,_1281,_1282){
var d=document;
var tr=item.element;
var trd=item.elementDetails||item.elementExtra;
var td=trd.lastChild;
for(var next,el=trd.lastChild.firstChild;el;){
next=el.nextSibling;
if(dojo.hasClass(el,"_qkrMessage")){
el.parentNode.removeChild(el);
}
el=next;
}
if(!_1281||_1281 instanceof Error||!_1281.documentElement){
var _1289=(item.getCategory()=="page")?this._appstrings.PAGE.EXPAND_ERROR:this._appstrings.FILE.EXPAND_ERROR;
var _128a=quickr.share.util.getAtomErrorCode(_1281,_1282);
var _128b;
if(_128a=="cancel"){
_128b=_1289.CANCEL;
}else{
if(_128a=="timeout"){
_128b=_1289.TIMEOUT;
}else{
if(_128a=="ItemNotFound"){
_128b=_1289.NOT_FOUND;
}else{
_128b=_1289.GENERIC;
}
}
}
var _128c=d.createElement("div");
_128c.className="lotusFormError _qkrMessage";
_128c.appendChild(d.createTextNode(_128b));
td.appendChild(_128c);
this.renderHideLink(tr,trd);
}else{
item=_1280[2]=this.replaceItem(data,item,_1281.documentElement);
this.delegate("renderItemExpand",_1280,null,item._qualifier);
}
},replaceItem:function(data,item,_128f){
var _1290;
_1290=new quickr.share.wiki.bean.Wiki(_128f);
data.itemByPosition[item._position]=_1290;
data.itemById[item.getId()]=_1290;
_1290.element=item.element;
_1290.elementExtra=item.elementExtra;
_1290.elementDetails=item.elementDetails;
_1290._isExpanded=item._isExpanded;
_1290._isRendered=item._isRendered;
_1290._position=item._position;
_1290._qualifier=item._qualifier;
_1290._ratingImage=item._ratingImage;
_1290._ratingText=item._ratingText;
return _1290;
},collapseItem:function(_1291,data,item,_1294){
this.delegate("collapseItem",arguments,null,item._qualifier);
},expandItem:function(_1295,data,item,_1298){
this.delegate("expandItem",arguments,null,item._qualifier);
},renderSummary:function(_1299,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
if(size>0){
var _12a0=d.createDocumentFragment();
var _12a1=dojo._toArray(arguments);
_12a1[1]=_12a0;
var table=d.createElement("TABLE");
table.className="lotusTable wikiFixedTable";
table.cellSpacing=table.cellPadding=0;
var _12a3=this.getSortInfo();
if(_12a3){
var sorts=_12a3.list;
var _12a5=_12a3.active;
var _12a6=_12a3.reversed;
var a_t=d.createElement("a");
var th_t=d.createElement("th");
var thead=d.createElement("THEAD");
var tr=d.createElement("TR");
tr.className="lotusSort";
var th=th_t.cloneNode(true);
th.style.width="20px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
for(var i=0,sort;sort=sorts[i];i++){
var th=th_t.cloneNode(true);
if(sort.className){
th.className=sort.className;
}
if(sort.width){
th.style.width=sort.width;
}
if(sort.isSortable!=false){
var a=a_t.cloneNode(true);
if(sort==_12a5){
var asc=(sort.lowToHigh)?!_12a6:_12a6;
dojo.addClass(a,asc?"lotusAscending":"lotusDescending");
}
this.generateSortLink(_1299,sort,(_12a5.id!=sort.id||_12a6)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
if(sort==_12a5){
var _12b0=d.createElement("span");
_12b0.className="lotusAltText";
_12b0.appendChild(d.createTextNode(asc?" ▴ ":" ▾ "));
a.appendChild(_12b0);
}
th.appendChild(a);
}else{
th.appendChild(d.createTextNode(sort.name));
}
tr.appendChild(th);
}
var th=d.createElement("TH");
th.appendChild(d.createTextNode(" "));
th.style.width="80px";
tr.appendChild(th);
thead.appendChild(tr);
table.appendChild(thead);
}
var tbody=d.createElement("TBODY");
for(var i=0;i<size;i++){
this.renderItem(_1299,tbody,data,items[i],i,i==0,(i==size-1));
}
table.appendChild(tbody);
_12a0.appendChild(table);
this.updatePaging(_1299,el,data);
var _12b2=dojo._toArray(el.childNodes);
for(var child,i=0;child=_12b2[i];i++){
child.style.display="none";
}
el.replaceChild(_12a0,_12b2[0]);
for(var child,i=0;child=_12b2[i];i++){
quickr.share.util.destroyWidgets(child);
if(child.parentNode){
child.parentNode.removeChild(child);
}
}
}else{
this.renderEmpty(_1299,el,data);
}
},renderSortingSummary:function(_12b4,el,data){
},renderItemSummaryPage:function(_12b7,el,data,doc,_12bb,_12bc,_12bd,_12be,_12bf){
var d=document;
var aMore;
var _12c2=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _12c5=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_12be)?_12be:d.createElement("TR");
tr.className="hentry";
if(_12bc){
dojo.addClass(tr,"lotusFirst");
}
if(_12bb%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _12ca=div_t.cloneNode(true);
_12ca.style.display="none";
var span=_12c5.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_12ca.appendChild(span);
var span=_12c5.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_12ca.appendChild(span);
var span=_12c5.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_12ca.appendChild(span);
td.appendChild(_12ca);
var a=a_t.cloneNode(true);
this.generateLinkToWiki({title:doc.getLabel()},a);
var img=img_t.cloneNode(true);
img.src=this.getPageImage(16);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_PAGE);
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getTitle()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getTitle();
this.generateLinkToWiki({title:doc.getLabel()},adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
if(doc.isCommunityWiki()){
this.generateLinkToCommunity(d,_12b7,h4,adoc,doc);
}
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="added";
td.appendChild(new quickr.share.util.DateFormat(doc.getPublished()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
tr.appendChild(td);
var _12d0=(doc.getPublished().getTime()!=doc.getSystemLastModified().getTime());
var td=td_t.cloneNode(true);
td.className="updated";
if(_12d0){
td.appendChild(new quickr.share.util.DateFormat(doc.getSystemLastModified()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="modifier";
if(_12d0){
var a=a_t.cloneNode(true);
a.className="lotusPerson";
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
var a=aMore=a_t.cloneNode(true);
a.appendChild(d.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
a.href="javascript:;";
td.appendChild(a);
tr.appendChild(td);
if(!_12be){
el.appendChild(tr);
}
doc.element=tr;
var _12d1=tr.childNodes.length;
var tr=(_12bf)?_12bf:d.createElement("TR");
tr.className="lotusDetails";
if(_12bb%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_12d1-1;
tr.appendChild(td);
if(!_12bf){
el.appendChild(tr);
}
doc.elementExtra=tr;
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_12b7,_12bb));
},renderItemSummary:function(_12d2,el,data,doc,_12d6,_12d7,_12d8,_12d9,_12da){
var d=document;
var aMore;
var _12dd=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _12e0=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_12d9)?_12d9:d.createElement("TR");
tr.className="hentry";
tr.itemPosition=_12d6;
if(_12d7){
dojo.addClass(tr,"lotusFirst");
}
if(_12d6%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _12e5=div_t.cloneNode(true);
_12e5.style.display="none";
var span=_12e0.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_12e5.appendChild(span);
var span=_12e0.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_12e5.appendChild(span);
var span=_12e0.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_12e5.appendChild(span);
td.appendChild(_12e5);
var a=a_t.cloneNode(true);
var img=img_t.cloneNode(true);
img.src=this.getWikiImage(16);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_WIKI);
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
if(dojo.isIE&&(dojo.isIE<7)){
h4.style.overflow="hidden";
}
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getTitle()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getTitle();
this.generateLinkToWiki({title:doc.getLabel()},adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
if(doc.isCommunityWiki()){
this.generateLinkToCommunity(d,_12d2,h4,adoc,doc);
}
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="added";
td.appendChild(new quickr.share.util.DateFormat(doc.getPublished()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
tr.appendChild(td);
var _12eb=(doc.getPublished().getTime()!=doc.getSystemLastModified().getTime());
var td=td_t.cloneNode(true);
td.className="updated";
if(_12eb){
td.appendChild(new quickr.share.util.DateFormat(doc.getSystemLastModified()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="modifier";
if(_12eb){
var a=a_t.cloneNode(true);
a.className="lotusPerson";
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
var a=aMore=a_t.cloneNode(true);
a.appendChild(d.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
a.href="javascript:;";
td.appendChild(a);
tr.appendChild(td);
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_12d2,_12d6));
if(!_12d9){
el.appendChild(tr);
}
doc.element=tr;
var _12ec=tr.childNodes.length;
var tr=(_12da)?_12da:d.createElement("TR");
tr.className="lotusDetails";
if(_12d6%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_12ec-1;
tr.appendChild(td);
if(!_12da){
el.appendChild(tr);
}
doc.elementExtra=tr;
},renderItemExpandSummaryPage:function(_12ed,data,item,_12f0){
var d=document;
var app=this.app;
var doc=item;
var el=doc.element;
var _12f5=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
var tags=div_t.cloneNode(true);
extra.appendChild(tags);
var _12f9=item.tagger=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:item.getPermissions().GrantAccess,docId:doc.getAtomId(),url:doc.getUrlEntry(),deleteTag:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.deleteTag,this),createTags:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.createTags,this),createPostBody:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.createPostBody,item),urlAllTags:this.urlAllTags,tags:doc.getTags(),tagStore:this.tagStore,generateTagLink:this.generateTagLink(),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:app.net},tags);
this.widgets.push(_12f9);
dojo.connect(_12f9,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_12ed,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},renderItemExpandSummary:function(_12fa,data,item,_12fd){
var d=document;
var app=this.app;
var doc=item;
var el=doc.element;
var _1302=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
var _1305=item.getDescription();
if(!_1305||_1305==""){
_1305=this._appstrings.MYWIKIS.NODESCRIPTION;
}
var div=div_t.cloneNode(true);
div.style.fontStyle="italic";
div.className="lotusChunk qkrWide entry-summary";
var _1307=div_t.cloneNode(true);
_1307.className="qkrWideInner";
quickr.share.util.createTextNode(d,_1307,_1305);
div.appendChild(_1307);
if(_1307.firstChild){
extra.appendChild(div);
}
var tags=div_t.cloneNode(true);
extra.appendChild(tags);
var _1309=item.tagger=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:item.getPermissions().GrantAccess,docId:doc.getAtomId(),url:doc.getUrlEntry(),deleteTag:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.deleteTag,this),createTags:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.createTags,this),createPostBody:dojo.hitch(null,quickr.share.wiki.widget.MyWikiStreamRenderer.createPostBody,item),urlAllTags:this.urlAllTags,tags:doc.getTags(),tagStore:this.tagStore,generateTagLink:this.generateTagLink(),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:app.net},tags);
this.widgets.push(_1309);
dojo.connect(_1309,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_12fa,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},expandItemSummary:function(_130a,data,item,_130d){
var el=item.element;
this.renderHideLink(el);
el.nextSibling.style.display="";
},collapseItemSummary:function(_130f,data,item,_1312){
var el=item.element;
var a=el.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
var extra=el.nextSibling;
extra.style.display="none";
},getSortsSummary:function(_1316,_1317){
var arr=[{id:"name",name:this._strings.COLUMN_NAME,lowToHigh:true,isDefault:true,width:"50%",tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"added",name:this._strings.COLUMN_ADDED,tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._strings.COLUMN_LAST_MODIFIED,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}},{id:"modifier",name:this._strings.COLUMN_LAST_MODIFIED_BY,isSortable:false}];
return arr;
},getSortsDetails:function(_1319,_131a){
if(!this.activeTagFiltersEnabled){
return [{id:"name",name:this._appstrings.SORTS.TITLE,lowToHigh:true,tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"added",name:this._strings.COLUMN_ADDED,tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._appstrings.SORTS.MOSTRECENT,isDefault:true,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}}];
}else{
return [{id:"name",name:this._appstrings.SORTS.TITLE,lowToHigh:true,tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"added",name:this._strings.COLUMN_ADDED,tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._appstrings.SORTS.MOSTRECENT,isDefault:true,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}}];
}
},renderHideLink:function(tr){
var a=tr.lastChild.firstChild;
dojo.addClass(a,"qkrMoreLinkOpen");
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(document.createTextNode(this._strings.HIDE));
a.title=this._appstrings.CONTENT.HIDE_EXTRA;
},renderShowLink:function(tr,trd){
var a=tr.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
},renderDivider:function(d,el){
var span=d.createElement("span");
span.className="lotusDivider";
span.appendChild(d.createTextNode("|"));
el.appendChild(span);
},getActions:function(item){
if(item&&item._qualifier=="page"){
return this.pageActions;
}
return this.actions;
},generateLinkToPerson:function(user,a){
var id=(typeof user=="object")?user.id:user;
a.href=this.baseUrl+"public/people/"+encodeURIComponent(id);
},generateLinkToTag:function(tag,a){
a.href=this.baseUrl+"public/tag/"+encodeURIComponent(tag);
},getWikiImage:function(size){
return this.baseUrl+"images/wiki_16.gif";
},renderShareLink:function(el,_132b,_132c,_132d,_132e,_132f){
var d=document;
if(_132c){
el.appendChild(d.createTextNode(dojo.string.substitute(_132b,[_132c])));
}else{
el.appendChild(d.createTextNode(_132b));
}
},ontagchange:function(){
},getFileTypeImage:function(ext,size){
return this.baseUrl+"images/filetypes/default_"+size+".gif";
},onrecommend:function(data,_1334,_1335,_1336,_1337){
if(data&&data.itemByPosition&&data.itemByPosition[_1334]){
var item=data.itemByPosition[_1334];
if(item._ratingImage){
item._ratingImage.src=_1335+"nav/common/styles/images/"+(_1337>0?"iconRating1.gif":"iconRating0.gif");
}
if(item._ratingText){
quickr.share.util.removeChildren(item._ratingText);
item._ratingText.appendChild(document.createTextNode(" "));
item._ratingText.appendChild(document.createTextNode(_1337));
item._ratingText.parentNode.title=dojo.string.substitute(((_1337!=1)?this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY:this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE),[dojo.number.format(_1337)]);
}
}
},generateTagLink:function(){
var app=this.app;
var opts={};
return dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,app.authenticatedUser?app.authenticatedUser.id:null,opts,true,true,true);
},generateLinkToCommunity:function(d,_133c,el,a,doc){
var span=d.createElement("span");
span.className="cnxnsType lotusMeta";
var img=d.createElement("img");
img.alt="";
img.src=this.baseUrl+"/nav/common/styles/images/blank.gif";
img.className="lconnSprite lconnSprite-iconCommunities16";
span.appendChild(img);
span.appendChild(d.createTextNode(this._appstrings.COMMUNITIES.COMMUNITY_WIKI));
quickr.share.util.insertAfter(el,span,a);
}});
quickr.share.wiki.widget.MyWikiStreamRenderer.deleteTag=function(_1342,tag,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
var _1345=this.createPostBody();
var _1346=new quickr.share.wiki.action.ConfirmDialogAction();
var nls=this._astrings;
var _1348={CANCEL:nls.CANCEL,HEADING:this._strings.REMOVE,MESSAGE:dojo.string.substitute(this._strings.REMOVECONFIRM,[tag]),OK:nls.REMOVE_MEMBER.ACTION,BUSY:nls.EDIT_FILE.BUSY};
this.confirmDialog=_1346;
_1346.execute(null,{onSubmit:dojo.hitch(this,function(tag){
this.tags=dojo.filter(this.tags,function(a){
return a!=tag;
});
this.update(true);
var _134b=quickr.share.util.rewriteUri(this.url,{removeTag:tag});
this.net.putXml({url:_134b,postData:_1345,contentType:"application/atom+xml",timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,handle:dojo.hitch(this,function(tag){
this.handleDelete(tag);
this.confirmDialog.cancelDialog();
delete this.confirmDialog;
},tag)});
},tag),strings:_1348});
};
quickr.share.wiki.widget.MyWikiStreamRenderer.createTags=function(_134d,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
this.errNode.style.display="none";
quickr.util.html.removeChildren(this.errNode);
this.tagCombo.staticClass="lotusText";
dojo.removeClass(this.inputField,"lotusFormErrorField");
var _134f=this.formNode.firstChild.value;
var tags=this.validateTags(_134f);
if(!this.validateTagLength(tags)){
return;
}
if(tags&&tags.length>0){
var _1351=quickr.util.uri.rewriteUri(this.url,{tag:tags,includeTags:true});
var _1352=this.createPostBody();
this.net.putXml({url:_1351,postData:_1352,contentType:"application/atom+xml",handle:dojo.hitch(this,this.handleCreate,tags)});
}else{
this.cancelEdit();
}
};
quickr.share.wiki.widget.MyWikiStreamRenderer.createPostBody=function(item){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE,quickr.share.util.SNX_NAMESPACE]);
var entry=doc.documentElement;
var id=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
id.appendChild(doc.createTextNode(item.getId()));
entry.appendChild(id);
var _1357=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_1357.setAttribute("term","wiki");
_1357.setAttribute("label","wiki");
_1357.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_1357);
var label=quickr.share.util.createElementNS(doc,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
label.appendChild(doc.createTextNode(item.getLabel()));
entry.appendChild(label);
return quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
};
}
if(!dojo._hasResource["quickr.share.pageutil"]){
dojo._hasResource["quickr.share.pageutil"]=true;
dojo.provide("quickr.share.pageutil");
quickr.share.pageutil.getPagePostBody=function(id,HTML,title,_135c,_135d,_135e,_135f,_1360,_1361,_1362){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _1365=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_1365.setAttribute("term",_1361?"draft":"page");
_1365.setAttribute("label",_1361?"draft":"page");
_1365.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_1365);
if(_1362){
var draft=quickr.share.util.createElementNS(doc,"draftUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
draft.appendChild(doc.createTextNode(_1362));
entry.appendChild(draft);
}
var _1367=quickr.share.util.createElementNS(doc,"title",quickr.share.util.ATOM_NAMESPACE);
_1367.appendChild(doc.createTextNode(title));
entry.appendChild(_1367);
var label=quickr.share.util.createElementNS(doc,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
label.appendChild(doc.createTextNode(title));
entry.appendChild(label);
var _1369=quickr.share.util.createElementNS(doc,"visibility",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_1369.appendChild(doc.createTextNode((_135e)?"public":"private"));
entry.appendChild(_1369);
if(_135f==true||_135f==false){
var _136a=quickr.share.util.createElementNS(doc,"propagation",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_136a.appendChild(doc.createTextNode(_135f?"true":"false"));
entry.appendChild(_136a);
}
var _136b=quickr.share.util.createElementNS(doc,"summary",quickr.share.util.ATOM_NAMESPACE);
_136b.appendChild(doc.createTextNode(_135c));
entry.appendChild(_136b);
if(_135d){
var _136c=quickr.share.util.createElementNS(doc,"changeSummary",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_136c.appendChild(doc.createTextNode(_135d));
entry.appendChild(_136c);
}
var _136d=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_136d.setAttribute("type",_1360);
_136d.appendChild(doc.createTextNode(HTML));
entry.appendChild(_136d);
var _136e=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
return _136e;
};
quickr.share.pageutil.parsePreviewContent=function(div,app){
var links=div.getElementsByTagName("a");
for(var i=0;i<links.length;i++){
var a=links[i];
var href=a.getAttribute("href",2);
if(href){
var _1375=false;
if(dojo.isIE&&a.childNodes.length==1&&a.childNodes[0].nodeType==3){
_1375=true;
var _1376=a.innerText;
}
if(!quickr.share.util.isAnchorForm(href,[quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.ROOT])){
quickr.share.scenes.setOnClick(a,app,href);
}
if(dojo.isIE&&_1375){
a.innerText=_1376;
}
}
}
var _1377=div.getElementsByTagName("table");
for(var i=0;i<_1377.length;i++){
var table=_1377[i];
var align=table.getAttribute("align");
if(align){
if(align==="center"){
table.style.marginLeft="auto";
table.style.marginRight="auto";
}else{
if(align==="right"){
table.style.marginLeft="auto";
}
}
}
}
if(window["SemTagSvc"]){
window.SemTagSvc.parseDom(null,div);
}
};
quickr.share.pageutil.applyWikiTextReference=function(d,el,scene,user,opt){
var _137f=scene.app.nls.WIKI.REFERENCE;
var div=scene.wikiTextReference=d.createElement("div");
div.style.display=scene.compare?"":"none";
div.className="lotusInfoBox";
div.id="wikiReference";
var h3=d.createElement("h3");
h3.appendChild(d.createTextNode(_137f.MARKUP_REFERENCE));
div.appendChild(h3);
var _1382=d.createElement("div");
_1382.className="lotusReferenceBox";
_1382.appendChild(d.createTextNode(_137f.H1));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.H2));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.BOLD));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.ITALICS));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.UNDERLINE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.STRIKE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.BULLETED.FIRST));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.BULLETED.SECOND));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.BULLETED.SUB));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.NUMBERED.FIRST));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.NUMBERED.SECOND));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.NUMBERED.SUB));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.LINK.CURRENT_PLACE_PAGE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.LINK.CURRENT_PLACE_FILE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.LINK.ANOTHER_PLACE_PAGE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.LINK.ANOTHER_PLACE_FILE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.LINK.URL));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.LINK.IMAGE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.HORIZONTAL));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.INDENT_ONCE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.INDENT_TWICE));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.TABLE.HEADER));
_1382.appendChild(d.createElement("br"));
_1382.appendChild(d.createTextNode(_137f.TABLE.CELL));
_1382.appendChild(d.createElement("br"));
div.appendChild(_1382);
var a=d.createElement("a");
a.href="templates/help/"+opt.app.language+"/wikitextreference.html";
a.target="qkr_wikitextreference";
a.appendChild(d.createTextNode(_137f.FULL_GUIDE));
div.appendChild(a);
el.appendChild(div);
};
}
if(!dojo._hasResource["quickr.share.wiki.validation"]){
dojo._hasResource["quickr.share.wiki.validation"]=true;
dojo.provide("quickr.share.wiki.validation");
quickr.share.wiki.validation.addRequiredIndicator=function(el){
var d=document;
var _1386=d.createElement("span");
_1386.className="lotusFormRequired";
_1386.appendChild(d.createTextNode("*"));
el.parentNode.insertBefore(_1386,el);
};
quickr.share.wiki.validation.addWikiTitleErrorMessage=function(field,id,_1389){
var _138a=false;
var _138b=field.previousSibling;
while(!_138a){
if(_138b==null){
break;
}else{
if(_138b.errorId==id){
_138a=true;
break;
}else{
_138b=_138b.previousSibling;
}
}
}
if(!_138a){
var d=document;
var div=d.createElement("div");
div.className="lotusFormError";
div.errorId=id;
field.parentNode.insertBefore(div,field);
if(dojo.isArray(_1389)){
for(var i=0;i<_1389.length;i++){
div.appendChild(_1389[i]);
}
}else{
if(typeof _1389=="string"){
div.appendChild(d.createTextNode(_1389));
}else{
div.appendChild(_1389);
}
}
}
};
quickr.share.wiki.validation.removeWikiTitleErrorMessage=function(field,id){
var _1391=false;
var _1392=field.previousSibling;
while(!_1391){
if(_1392==null){
break;
}else{
if(_1392.errorId==id){
_1391=true;
break;
}else{
_1392=_1392.previousSibling;
}
}
}
if(_1391){
field.parentNode.removeChild(_1392);
}
};
quickr.share.wiki.validation.removeAllWikiTitleErrorMessages=function(field,ids){
var _1395=field.previousSibling;
while(_1395!=null){
var _1396=null;
for(var i=0;i<ids.length;i++){
if(_1395.errorId==ids[i]){
_1396=_1395;
break;
}
}
_1395=_1395.previousSibling;
if(_1396!=null){
field.parentNode.removeChild(_1396);
}
}
};
quickr.share.wiki.validation.setFormError=function(form,_1399){
var tbody=dojo.query("table.wikiPageTable:first-child > tbody",form)[0];
if(tbody){
var d=document;
var div=dojo.query("tr.lotusFormErrorSummary:first-child > div",tbody)[0];
if(!div){
var _139d=tbody.getElementsByTagName("tr")[0];
var _139e=(_139d?quickr.share.validation.countCells(_139d):1);
var tr=d.createElement("tr");
tr.className="lotusFormErrorSummary";
var td=d.createElement("td");
dojo.attr(td,"colSpan",_139e);
div=d.createElement("div");
div.className="lotusFormRequired";
td.appendChild(div);
tr.appendChild(td);
if(_139d){
tbody.insertBefore(tr,_139d);
}else{
tbody.appendChild(tr);
}
}else{
quickr.share.util.removeChildren(div);
}
if(dojo.isArray(_1399)){
for(var i=0;i<_1399.length;i++){
div.appendChild(_1399[i]);
}
}else{
if(typeof _1399=="string"){
div.appendChild(d.createTextNode(_1399));
}else{
div.appendChild(_1399);
}
}
div.appendChild(d.createElement("ul"));
}
};
}
if(!dojo._hasResource["quickr.widget.ShareOptions"]){
dojo._hasResource["quickr.widget.ShareOptions"]=true;
dojo.provide("quickr.widget.ShareOptions");
dojo.declare("quickr.widget.ShareOptions",[dijit._Widget],{canShareWithEdit:false,canChangeVisibility:false,canPropagate:false,isPublic:false,ownerId:null,authenticatedUser:null,startCollapsed:false,showFavorites:false,users:null,availableUsers:null,_strings:{},stylesImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/",postMixInProperties:function(){
this.users={};
this.availableUsers={};
this.isCollapsed=this.startCollapsed;
},buildRendering:function(){
var _13a2=this.canShareWithEdit;
var _13a3=this.canChangeVisibility;
var _13a4=this.canPropagate;
var _13a5=this.isCollapsed;
var _13a6=this.isPublic;
this.trLast=this.trFirst=this.userNode=this.canContributeNode=this.canPropagateNode=this.summaryNode=this.displayPropagateNode=null;
var d=document;
var _13a8=this.domNode=this.trFirst=this.srcNodeRef;
var el=_13a8.parentNode;
while(_13a8.firstChild){
_13a8.removeChild(_13a8.firstChild);
}
_13a8.style.display=(_13a5)?"":"none";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="15%";
_13a8.appendChild(td);
var td=d.createElement("td");
var a=d.createElement("a");
a.href="javascript:;";
a.appendChild(d.createTextNode(this._strings.EXPAND_SECTION));
dojo.connect(a,"onclick",this,this.toggleShareSection);
td.appendChild(a);
_13a8.appendChild(td);
var tr=d.createElement("tr");
tr.style.display=(_13a5)?"none":"";
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="18%";
td.className="lotusFormLabel";
var label=d.createElement("label");
if(!this.startCollapsed){
quickr.share.validation.addRequiredIndicator(label);
}
label.appendChild(d.createTextNode(this._strings.SELECT_USER));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var ul=this.userNode=d.createElement("ul");
ul.style.display="none";
ul.className="qkrInlineSelection lotusInlinelist";
if(this.wInput){
ul.style.width=this.wInput;
}
td.appendChild(ul);
var input=d.createElement("input");
var _13b0=quickr.share.util.createTable(d,input);
_13b0.style.width="97%";
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(this.peopleStore,{_strings:(this._appstrings)?this._appstrings.USERSEARCH:this._userstrings,id:this.id+"_selectUser",name:"_shareFileActionDialogSelectUser",size:"30","class":"lotusText",multipleValues:false});
var combo=this.peopleCombo=new lconn.core.PeopleTypeAhead(args,input);
if(dojo.isIE&&this.wInputUser){
combo.textbox.style.width=this.wInputUser;
}
dojo.connect(combo,"onSelect",this,"selectUser");
if(this.showFavorites){
var _13b3=_13b0.firstChild.firstChild;
var _13b4=d.createElement("td");
_13b4.style.verticalAlign="top";
var a=d.createElement("a");
a.href="javascript:;";
a.title=this._strings.ADD_FROM_FAVORITES;
var img=d.createElement("img");
img.src=this.stylesImageUri+"iconGroup.gif";
a.appendChild(img);
dojo.connect(a,"onclick",this,"toggleFavorites");
_13b4.appendChild(a);
_13b3.appendChild(_13b4);
}
td.appendChild(_13b0);
tr.appendChild(td);
if(this.showFavorites&&this.topicShareWith&&this.renderTip){
var td=d.createElement("td");
this.renderTip(td,this.topicShareWith);
tr.appendChild(td);
}
el.appendChild(tr);
if(_13a2){
var tr=d.createElement("tr");
tr.style.display=(_13a5)?"none":"";
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
tr.appendChild(td);
var td=d.createElement("td");
var input=this.canContributeNode=d.createElement("input");
input.type="checkbox";
input.checked=input.defaultChecked=false;
input.className="lotusCheckbox";
input.id=this.id+"_canContribute";
input.name="_canContribute";
td.appendChild(input);
var label=d.createElement("label");
label.className="lotusCheckbox";
label.appendChild(d.createTextNode(this._strings.SHARE_PERMISSION));
label.setAttribute("for",input.id);
td.appendChild(label);
tr.appendChild(td);
if(this.topicPermission&&this.renderTip){
var td=d.createElement("td");
this.renderTip(td,this.topicPermission);
tr.appendChild(td);
}
el.appendChild(tr);
}
var tr=this.trLast=d.createElement("tr");
tr.style.display=(_13a5)?"none":"";
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this._strings.MESSAGE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var _13b6=this.summaryNode=d.createElement("textarea");
_13b6.className="lotusText";
if(dojo.isIE&&this.wInput){
_13b6.style.width=this.wInput;
}
td.appendChild(_13b6);
tr.appendChild(td);
el.appendChild(tr);
var tr=this.trLast=d.createElement("tr");
tr.style.display=(_13a5)?"none":"";
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
tr.appendChild(td);
var td=d.createElement("td");
if(_13a3){
var div=this.changePropagateNode=d.createElement("div");
div.style.display=(!_13a6)?"":"none";
var input=this.canPropagateNode=d.createElement("input");
input.type="checkbox";
input.checked=input.defaultChecked=_13a4;
input.className="lotusCheckbox";
input.id=this.id+"_canPropagate";
input.name="_canPropagate";
div.appendChild(input);
var label=d.createElement("label");
label.className="lotusCheckbox";
label.appendChild(d.createTextNode(this._strings.PROPAGATE));
label.setAttribute("for",input.id);
div.appendChild(label);
td.appendChild(div);
}
var div=this.displayPropagateNode=d.createElement("div");
if(_13a3){
div.style.display=(_13a3)?"none":"";
}
var span=d.createElement("span");
var text=this._strings.PROPAGATE_OWNER;
if(_13a6){
text=this._strings.PROPAGATE_PUBLIC;
}else{
if(_13a4){
text=this._strings.PROPAGATE_SHARED;
}
}
span.appendChild(d.createTextNode(text));
div.appendChild(span);
td.appendChild(div);
tr.appendChild(td);
if(this.changePropagate&&this.topicPropagation&&this.renderTip){
var td=d.createElement("td");
this.renderTip(td,this.topicPropagation);
tr.appendChild(td);
}
el.appendChild(tr);
},hasUsers:function(){
var _13ba=false;
for(var key in this.users){
_13ba=true;
break;
}
return _13ba;
},getUsers:function(){
return dojo.clone(this.users);
},getUserList:function(){
var a=[];
for(var key in this.users){
a.push(this.users[key]);
}
return a;
},getDescription:function(){
return (this.summaryNode)?this.summaryNode.value:"";
},isContributionAllowed:function(){
return (this.canContributeNode)?this.canContributeNode.checked:this.canShareWithEdit;
},isPropagationAllowed:function(){
return (this.canPropagateNode)?this.canPropagateNode.checked:this.canPropagate;
},hasUserChangedFields:function(){
if(this.canContributeNode&&this.canContributeNode.checked!=false){
return true;
}
if(this.summaryNode&&this.summaryNode.value!=""){
return true;
}
if(this.canPropagateNode&&this.canPropagateNode.checked!=this.canPropagate){
return true;
}
if(this.hasUsers()){
return true;
}
return false;
},reset:function(opts,force){
var _13c0={canShareWithEdit:this.canShareWithEdit,canChangeVisibility:this.canChangeVisibility,isPublic:this.isPublic,showPropagate:this.showPropagate,owner:this.owner,canPropagate:this.canPropagate};
for(var key in _13c0){
if(opts[key]!=_13c0[key]){
_13c0[key]=opts[key];
}
}
quickr.share.util.destroy(this.peopleCombo);
this.peopleCombo=null;
var tr=this.trFirst.nextSibling;
while(tr){
var next=tr.nextSibling;
tr.parentNode.removeChild(tr);
if(tr==this.trLast){
break;
}
tr=next;
}
dojo.mixin(this,_13c0);
this.isCollapsed=this.startCollapsed;
this.users={};
this.buildRendering();
},changeVisibility:function(_13c4){
this.isPublic=_13c4;
var _13c5=this.canChangeVisibility;
var text=this._strings.PROPAGATE_OWNER;
if(_13c4){
text=this._strings.PROPAGATE_PUBLIC;
}else{
if(_13c5){
text=this._strings.PROPAGATE_SHARED;
}
}
var d=document;
var span=this.displayPropagateNode.firstChild;
span.removeChild(span.firstChild);
span.appendChild(d.createTextNode(text));
if(this.changePropagateNode){
this.changePropagateNode.style.display=(_13c5&&!_13c4)?"":"none";
}
this.displayPropagateNode.style.display=(_13c5&&!_13c4)?"none":"";
this.onResize();
},toggleShareSection:function(){
this.isCollapsed=false;
this.updateShareType();
},updateShareType:function(){
var d=document;
var el=this.domNode;
var form=this.formNode;
this.userNode.style.display="none";
var tr=this.trFirst;
tr.style.display=(this.isCollapsed)?"":"none";
tr=tr.nextSibling;
while(tr){
tr.style.display=(this.isCollapsed)?"none":"";
if(tr==this.trLast){
break;
}
tr=tr.nextSibling;
}
this.onResize();
},onResize:function(){
},selectUser:function(item,e){
if(e){
dojo.stopEvent(e);
}
var id=item.id;
var value=item.name;
var d=document;
var span=dojo.query(".lotusFormError",this.trFirst)[0];
if(span){
span.parentNode.removeChild(span);
}
if(this.authenticatedUser&&id==this.authenticatedUser.id){
span=d.createElement("span");
span.className="lotusFormError";
span.setAttribute("style","padding-left: 10px; padding-right: 10px;");
span.appendChild(d.createTextNode(this._strings.SELF_REFERENCE_ERROR));
this.trFirst.getElementsByTagName("label")[0].appendChild(span);
}else{
if(this.ownerId&&id==this.ownerId){
span=d.createElement("span");
span.className="lotusFormError";
span.setAttribute("style","padding-left: 10px; padding-right: 10px;");
span.appendChild(d.createTextNode(this._strings.OWNER_REFERENCE_ERROR));
this.trFirst.getElementsByTagName("label")[0].appendChild(span);
}else{
if(!this.users[id]){
this.users[id]=value;
var ul=this.userNode;
ul.style.display="";
var li=d.createElement("li");
li.userId=id;
if(!ul.firstChild){
li.className="lotusFirst";
}
var a=d.createElement("a");
a.appendChild(d.createTextNode(value));
a.href="javascript:;";
a.title=this._strings.REMOVE_USER_TOOLTIP;
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconRemove.gif";
a.appendChild(img);
dojo.connect(a,"onclick",dojo.hitch(this,this.removeUser,id));
li.appendChild(a);
ul.appendChild(li);
ul.appendChild(d.createTextNode(" "));
}
}
}
this.peopleCombo.setValue("");
},removeUser:function(user,e){
if(e){
dojo.stopEvent(e);
}
var id=(typeof user=="string")?user:((typeof user=="object")?user.id:null);
var _13da=this.userNode;
for(var i=0,child;child=_13da.childNodes[i];i++){
if(child.nodeType==1&&child.userId==id){
_13da.removeChild(child);
delete this.users[id];
break;
}
}
if(_13da.childNodes.length==0){
_13da.style.display="none";
}
},toggleFavorites:function(){
},showFavorites:function(){
},hideFavorites:function(){
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.MembershipOptions"]){
dojo._hasResource["quickr.share.wiki.widget.MembershipOptions"]=true;
dojo.provide("quickr.share.wiki.widget.MembershipOptions");
dojo.declare("quickr.share.wiki.widget.MembershipOptions",[quickr.widget.ShareOptions],{includeMessage:false,groups:null,postMixInProperties:function(){
this.inherited(arguments);
this._initUsersAndGroups();
},_initUsersAndGroups:function(){
this.groups=this.defaultGroups||{};
this.users=this.defaultUsers||{};
},buildRendering:function(){
var _13dd=this.canShareWithEdit;
var _13de=this.canChangeVisibility;
var _13df=this.canPropagate;
var _13e0=this.isCollapsed;
var _13e1=this.isPublic;
var _13e2=this.groups;
var users=this.users;
this.trLast=this.trFirst=this.canContributeNode=this.canPropagateNode=this.summaryNode=this.displayPropagateNode=null;
this.userNodes=[];
var d=document;
var _13e5=this.domNode=this.trFirst=this.srcNodeRef;
var el=_13e5.parentNode;
while(_13e5.firstChild){
_13e5.removeChild(_13e5.firstChild);
}
var tr=this.trFirst;
tr.className="qkrFormLabelAtop";
var td=d.createElement("td");
td.colSpan=2;
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.app.nls.WIKI_CREATE.ADD_MEMBERS));
label.setAttribute("for",this.id+"_userTextbox");
td.appendChild(label);
tr.appendChild(td);
if(this.showFavorites&&this.topicShareWith&&this.renderTip){
var td=d.createElement("td");
td.className="wikiMembersTD";
td.rowSpan=2;
this.renderTip(td,this.topicShareWith);
tr.appendChild(td);
var a=td.getElementsByTagName("a")[0];
var img=td.lastChild.firstChild;
img.className="membersTooltip";
}
var tr=this.trUserPicker=d.createElement("tr");
tr.className="qkrFormHasLabelAtop";
var td=d.createElement("td");
td.colSpan=2;
td.style.padding="0px";
var _13ec=this.userRoleSel=d.createElement("select");
_13ec.className="wikiRoles";
_13ec.style.display="inline";
var roles={"manager":this._strings.MANAGER,"editor":this._strings.EDITOR,"reader":this._strings.READER};
var index=0;
for(var role in roles){
_13ec.options[index]=new Option(roles[role],role);
if(role==this.defaultRole){
_13ec.selectedIndex=index;
}
index++;
}
var _13f0=quickr.share.util.createTable(d,_13ec);
_13f0.style.width="100%";
var _13f1=_13f0.firstChild.firstChild;
var _13f2=d.createElement("td");
_13f2.setAttribute("width","97%");
var _13f3=d.createElement("input");
_13f2.appendChild(_13f3);
_13f1.appendChild(_13f2);
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(this.peopleStore,{_strings:(this._appstrings)?this._appstrings.USERSEARCH:this._userstrings,id:this.id+"_selectUser",name:"_membersDialogSelectUser",size:"30","class":"lotusText wikiMembers",multipleValues:false});
var combo=this.peopleCombo=new lconn.core.PeopleTypeAhead(args,_13f3);
if(dojo.isIE&&this.wInputUser){
combo.textbox.style.width=this.wInputUser;
}
combo.textbox.id=this.id+"_userTextbox";
dojo.connect(combo,"onSelect",this,"selectUser");
td.appendChild(_13f0);
tr.appendChild(td);
quickr.share.util.insertAfter(el,tr,this.trFirst);
var tr=this.trShowGroupPicker=d.createElement("tr");
var td2=d.createElement("td");
td2.colSpan=2;
quickr.share.wiki.widget.MembershipOptions.applyGroupToggler(d,this.app,this,td2);
tr.appendChild(td2);
quickr.share.util.insertAfter(el,tr,this.trUserPicker);
var tr=this.trGroupLabel=d.createElement("tr");
tr.className="qkrFormLabelAtop";
tr.style.display="none";
var td=d.createElement("td");
td.colSpan=2;
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.app.nls.WIKI_CREATE.ADD_GROUPS));
label.setAttribute("for",this.id+"_groupTextbox");
td.appendChild(label);
tr.appendChild(td);
quickr.share.util.insertAfter(el,tr,this.trShowGroupPicker);
if(this.showFavorites&&this.topicShareWith&&this.renderTip){
var td=d.createElement("td");
td.className="wikiMembersTD";
td.rowSpan=2;
this.renderTip(td,this.topicShareWith);
tr.appendChild(td);
var a=td.getElementsByTagName("a")[0];
var img=td.lastChild.firstChild;
img.className="membersTooltip";
}
quickr.share.util.insertAfter(el,tr,this.trGroupLabel);
var tr=this.trGroupPicker=d.createElement("tr");
tr.className="qkrFormHasLabelAtop";
tr.style.display="none";
var td=d.createElement("td");
td.colSpan=2;
td.style.padding="0px";
var _13f7=this.groupRoleSel=d.createElement("select");
_13f7.className="wikiRoles";
_13f7.style.display="inline";
var roles={"manager":this._strings.MANAGER,"editor":this._strings.EDITOR,"reader":this._strings.READER};
var index=0;
for(var role in roles){
_13f7.options[index]=new Option(roles[role],role);
if(role==this.defaultRole){
_13f7.selectedIndex=index;
}
index++;
}
var _13f0=quickr.share.util.createTable(d,_13f7);
_13f0.style.width="100%";
var _13f1=_13f0.firstChild.firstChild;
var _13f2=d.createElement("td");
_13f2.setAttribute("width","97%");
var _13f8=d.createElement("input");
_13f2.appendChild(_13f8);
_13f1.appendChild(_13f2);
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(this.groupStore,{_strings:(this._appstrings)?this._appstrings.USERSEARCH:this._userstrings,id:this.id+"_selectGroup",name:"_membersDialogSelectGroup",size:"30","class":"lotusText wikiMembers",multipleValues:false});
var combo=this.groupCombo=new lconn.core.PeopleTypeAhead(args,_13f8);
if(dojo.isIE&&this.wInputUser){
combo.textbox.style.width=this.wInputUser;
}
combo.textbox.id=this.id+"_groupTextbox";
dojo.connect(combo,"onSelect",this,"selectGroup");
td.appendChild(_13f0);
tr.appendChild(td);
quickr.share.util.insertAfter(el,tr,this.trGroupLabel);
var tr=this.trManagers=d.createElement("tr");
tr.style.display="none";
var td=d.createElement("td");
td.colSpan=2;
var lbl=d.createElement("label");
lbl.appendChild(d.createTextNode(this.app.nls.ADD_MEMBERS.MANAGERS));
td.appendChild(lbl);
var ul=this.userNodes["manager"]=d.createElement("ul");
ul.className="qkrInlineSelection lotusInlinelist";
ul.setAttribute("id","managers_list");
lbl.setAttribute("for",ul.getAttribute("id"));
if(dojo.isIE&&this.wInput){
ul.style.width=this.wInput;
}
td.appendChild(ul);
tr.appendChild(td);
quickr.share.util.insertAfter(el,tr,this.trGroupPicker);
var tr=this.trEditors=d.createElement("tr");
tr.style.display="none";
var td=d.createElement("td");
td.colSpan=2;
var lbl=d.createElement("label");
lbl.appendChild(d.createTextNode(this.app.nls.ADD_MEMBERS.EDITORS));
td.appendChild(lbl);
var ul=this.userNodes["editor"]=d.createElement("ul");
ul.className="qkrInlineSelection lotusInlinelist";
ul.setAttribute("id","editors_list");
lbl.setAttribute("for",ul.getAttribute("id"));
if(dojo.isIE&&this.wInput){
ul.style.width=this.wInput;
}
td.appendChild(ul);
tr.appendChild(td);
quickr.share.util.insertAfter(el,tr,this.trManagers);
var tr=this.trLast=this.trReaders=d.createElement("tr");
tr.style.display="none";
var td=d.createElement("td");
td.colSpan=2;
var lbl=d.createElement("label");
lbl.appendChild(d.createTextNode(this.app.nls.ADD_MEMBERS.READERS));
td.appendChild(lbl);
var ul=this.userNodes["reader"]=d.createElement("ul");
ul.className="qkrInlineSelection lotusInlinelist";
ul.setAttribute("id","readers_list");
lbl.setAttribute("for",ul.getAttribute("id"));
if(dojo.isIE&&this.wInput){
ul.style.width=this.wInput;
}
td.appendChild(ul);
tr.appendChild(td);
quickr.share.util.insertAfter(el,tr,this.trEditors);
for(var id in _13e2){
var item=_13e2[id];
var id=item.id;
quickr.share.wiki.scenes.createGroupAvatar(ul,item,{strings:this._strings,app:this.app,onremove:dojo.hitch(this,this.removeGroup,id)});
}
for(var id in users){
var item=users[id];
var id=item.id;
quickr.share.wiki.scenes.createUserAvatar(ul,item,{strings:this._strings,app:this.app,onremove:dojo.hitch(this,this.removeGroup,id)});
}
},reset:function(opts,force){
var _13ff={canShareWithEdit:this.canShareWithEdit,canChangeVisibility:this.canChangeVisibility,isPublic:this.isPublic,showPropagate:this.showPropagate,owner:this.owner,canPropagate:this.canPropagate};
for(var key in _13ff){
if(opts[key]!=_13ff[key]){
_13ff[key]=opts[key];
}
}
quickr.share.util.destroy(this.peopleCombo);
this.peopleCombo=null;
quickr.share.util.destroy(this.groupCombo);
this.groupCombo=null;
var tr=this.trFirst.nextSibling;
while(tr){
var next=tr.nextSibling;
tr.parentNode.removeChild(tr);
if(tr==this.trLast){
break;
}
tr=next;
}
dojo.mixin(this,_13ff);
this.isCollapsed=this.startCollapsed;
this._initUsersAndGroups();
this.buildRendering();
},selectUser:function(item,e){
if(e){
dojo.stopEvent(e);
}
var id=item.id;
var value=item.name;
var d=document;
var span=dojo.query(".lotusFormError",this.trFirst)[0];
if(span){
span.parentNode.removeChild(span);
}
if(this.authenticatedUser&&id==this.authenticatedUser.id){
span=d.createElement("span");
span.className="lotusFormError";
span.setAttribute("style","padding-left: 10px; padding-right: 10px;");
span.appendChild(d.createTextNode(this._strings.SELF_REFERENCE_ERROR));
this.trFirst.getElementsByTagName("label")[0].appendChild(span);
}else{
if(this.ownerId&&id==this.ownerId){
span=d.createElement("span");
span.className="lotusFormError";
span.setAttribute("style","padding-left: 10px; padding-right: 10px;");
span.appendChild(d.createTextNode(this._strings.OWNER_REFERENCE_ERROR));
this.trFirst.getElementsByTagName("label")[0].appendChild(span);
}else{
var role=this.userRoleSel.options[this.userRoleSel.selectedIndex].value;
if(!(this.users[id]&&this.users[id][1]==role)){
if(this.users[id]&&this.users[id][1]!=role){
this.removeUser(id);
}
this.users[id]=[value,role];
var ul=this.userNodes[role];
ul.parentNode.parentNode.style.display="";
quickr.share.wiki.scenes.createUserAvatar(ul,item,{strings:this._strings,app:this.app,onremove:dojo.hitch(this,this.removeUser,id)});
}
}
}
this.peopleCombo.setValue("");
this.onresize();
},selectGroup:function(item,e){
if(e){
dojo.stopEvent(e);
}
var id=item.id;
if(dojo.indexOf(["anonymous-user","all-authenticated-users"],id)!=-1){
this.groupCombo.setValue("");
return;
}
var value=item.name;
var d=document;
var role=this.groupRoleSel.options[this.groupRoleSel.selectedIndex].value;
if(this.groups[id]&&this.groups[id][1]!=role){
this.removeGroup(id);
}
this.groups[id]=[value,role,item.type=="virtual"];
var ul=this.userNodes[role];
ul.parentNode.parentNode.style.display="";
quickr.share.wiki.scenes.createGroupAvatar(ul,item,{strings:this._strings,app:this.app,onremove:dojo.hitch(this,this.removeGroup,id)});
this.groupCombo.setValue("");
this.onresize();
},removeUser:function(user,e){
if(e){
dojo.stopEvent(e);
}
var id=(typeof user=="string")?user:((typeof user=="object")?user.id:null);
var _1415=this.userNodes;
for(var role in _1415){
var _1417=_1415[role];
for(var i=0,child;child=_1417.childNodes[i];i++){
if(child.nodeType==1&&child.userId==id){
_1417.removeChild(child);
delete this.users[id];
break;
}
}
if(_1417.childNodes.length==0){
_1417.parentNode.parentNode.style.display="none";
}
}
this.onresize();
},removeGroup:function(group,e){
if(e){
dojo.stopEvent(e);
}
var id=(typeof group=="string")?group:((typeof group=="object")?group.id:null);
var _141d=this.userNodes;
for(var role in _141d){
var _141f=_141d[role];
for(var i=0,child;child=_141f.childNodes[i];i++){
if(child.nodeType==1&&child.groupId==id){
_141f.removeChild(child);
delete this.groups[id];
break;
}
}
if(_141f.childNodes.length==0){
_141f.parentNode.parentNode.style.display="none";
}
}
this.onresize();
},getGroups:function(){
return dojo.clone(this.groups);
},_showGroupPicker:function(e){
this.trGroupLabel.style.display=this.trGroupPicker.style.display="";
this.trShowGroupPicker.style.display="none";
this.onresize();
},onresize:function(){
}});
quickr.share.wiki.widget.MembershipOptions.applyGroupToggler=function(d,app,_1425,td){
var span=d.createElement("span");
span.className="lotusMeta";
var a=d.createElement("a");
a.href="javascript:;";
a.appendChild(d.createTextNode(app.nls.WIKI_CREATE.ADD_GROUPS_LINK));
span.appendChild(a);
dojo.connect(a,"onclick",_1425,"_showGroupPicker");
td.appendChild(span);
};
}
if(!dojo._hasResource["quickr.share.wiki.widget.WikiAccessOptions"]){
dojo._hasResource["quickr.share.wiki.widget.WikiAccessOptions"]=true;
dojo.provide("quickr.share.wiki.widget.WikiAccessOptions");
dojo.declare("quickr.share.wiki.widget.WikiAccessOptions",[dijit._Widget],{_strings:{},defaultPublicViewingAllowed:false,defaultAuthenticatedEditingAllowed:false,postMixInProperties:function(){
},buildRendering:function(){
this.trLast=this.trFirst=null;
var d=document;
var _142a=this.domNode=this.trFirst=this.srcNodeRef;
var el=_142a.parentNode;
dojo.addClass(_142a,"qkrFormHasLabelAtop");
quickr.share.util.removeChildren(_142a);
quickr.share.wiki.widget.WikiAccessOptions.applyRadioControlGroup(d,this,{name:"publicViewing",strings:{allowed:this._strings.READERS_SETTINGS.ALL_USERS,disabled:this._strings.READERS_SETTINGS.MEMBERS_ONLY},title:this._strings.READERS_SETTINGS.TITLE,helpTopic:"wikiaccess.reading",app:this.app,enabled:this.defaultPublicViewingAllowed,clickHandler:"_handlePublicViewingConstraint"},_142a);
var _142c=d.createElement("tr");
_142c.className="lotusFormFieldRow qkrFormHasLabelAtop";
el.appendChild(_142c);
quickr.share.wiki.widget.WikiAccessOptions.applyRadioControlGroup(d,this,{name:"authenticatedEditing",strings:{allowed:this._strings.EDITORS_SETTINGS.ALL_LOGGED_IN,disabled:this._strings.EDITORS_SETTINGS.EDITORS_AND_OWNERS},title:this._strings.EDITORS_SETTINGS.TITLE,helpTopic:"wikiaccess.editing",app:this.app,enabled:this.defaultAuthenticatedEditingAllowed,clickHandler:"_handleAuthenticatedEditingConstraint"},_142c);
},_handlePublicViewingConstraint:function(){
if(!this.isPublicViewingAllowed()){
this.setAuthenticatedEditingAllowed(false);
}
},_handleAuthenticatedEditingConstraint:function(){
if(this.isAuthenticatedEditingAllowed()){
this.setPublicViewingAllowed(true);
}
},setPublicViewingAllowed:function(yorn){
this.publicViewingAllowed.checked=yorn;
this.publicViewingDisabled.checked=!yorn;
if(!yorn){
this.setAuthenticatedEditingAllowed(false);
}
},setAuthenticatedEditingAllowed:function(yorn){
this.authenticatedEditingAllowed.checked=yorn;
this.authenticatedEditingDisabled.checked=!yorn;
if(yorn){
this.setPublicViewingAllowed(true);
}
},isPublicViewingAllowed:function(){
return this.publicViewingAllowed.checked;
},isAuthenticatedEditingAllowed:function(){
return this.authenticatedEditingAllowed.checked;
}});
quickr.share.wiki.widget.WikiAccessOptions.applyRadioControlGroup=function(d,_1430,opt,tr){
var name=opt.name;
var _1434=opt.strings;
var title=opt.title;
var _1436=opt.helpTopic;
var app=opt.app;
var _1438=opt.clickHandler;
var _1439=opt.enabled;
var _143a={allowed:name+"Allowed",disabled:name+"Disabled"};
var _143b=d.createElement("tr");
_143b.className="qkrFormLabelAtop";
quickr.share.util.insertBefore(tr.parentNode,_143b,tr);
var td1=d.createElement("td");
td1.colSpan=2;
var _143d=d.createElement("strong");
_143d.appendChild(d.createTextNode(title));
td1.appendChild(_143d);
_143b.appendChild(td1);
var td2=d.createElement("td");
td2.colSpan=2;
var div=d.createElement("div");
var inp=null;
try{
var rhtml="<input id=\""+_1430.id+"_"+_143a.allowed+"\" type=\"radio\" name=\""+_1430.id+name+"\""+(_1439?" checked=\"checked\"":"")+">";
inp=d.createElement(rhtml);
}
catch(e){
}
if(!inp||inp.nodeName!="INPUT"){
inp=d.createElement("input");
inp.setAttribute("type","radio");
inp.setAttribute("name",_1430.id+name);
inp.className="lotusCheckbox";
inp.checked=_1439;
inp.id=_1430.id+"_"+_143a.allowed;
}
_1430[_143a.allowed]=inp;
div.appendChild(inp);
dojo.connect(inp,"onclick",_1430,_1438);
var label=d.createElement("label");
label.className="lotusCheckbox";
label.setAttribute("for",_1430.id+"_"+_143a.allowed);
label.appendChild(d.createTextNode(_1434.allowed));
div.appendChild(label);
td2.appendChild(div);
var div=d.createElement("div");
var inp=null;
try{
var rhtml="<input id=\""+_1430.id+"_"+_143a.disabled+"\" type=\"radio\" name=\""+_1430.id+name+"\""+(!_1439?" checked=\"checked\"":"")+">";
inp=d.createElement(rhtml);
}
catch(e){
}
if(!inp||inp.nodeName!="INPUT"){
inp=d.createElement("input");
inp.setAttribute("type","radio");
inp.setAttribute("name",_1430.id+name);
inp.className="lotusCheckbox";
inp.checked=!_1439;
inp.id=_1430.id+"_"+_143a.disabled;
}
_1430[_143a.disabled]=inp;
div.appendChild(inp);
dojo.connect(inp,"onclick",_1430,_1438);
var label=d.createElement("label");
label.className="lotusCheckbox";
label.setAttribute("for",_1430.id+"_"+_143a.disabled);
label.appendChild(d.createTextNode(_1434.disabled));
div.appendChild(label);
td2.appendChild(div);
tr.appendChild(td2);
var td3=d.createElement("td");
tr.appendChild(td3);
};
}
if(!dojo._hasResource["quickr.share.wiki.action.CreateWiki"]){
dojo._hasResource["quickr.share.wiki.action.CreateWiki"]=true;
dojo.provide("quickr.share.wiki.action.CreateWiki");
dojo.declare("quickr.share.wiki.action.CreateWiki",[quickr.share.action.DialogAction],{wDialog:"540px",wInput:"470px",_stringsPrefix:"WIKI_CREATE",constructor:function(app,scene){
this.listeners=[];
this.app=app;
this.scene=scene;
this.nls=app.nls[this._stringsPrefix];
this.name=app.nls.HEADER.WIKICREATE;
this.tooltip=app.nls.HEADER.WIKICREATE_TITLE;
this.tagStore=app.getTagTypeAheadStore();
this.peopleStore=app.getUserTypeAheadStore();
this.titleSet=false;
this.descriptionSet=false;
this.tagsSet=false;
this.saveCompleted=false;
this.groupStore=app.getGroupTypeAheadStore();
this.titleMaxLength=252;
},destroy:function(){
this.inherited(arguments);
},isValid:function(){
return (this.app.authenticatedUser);
},createDialog:function(item,opt,_1448){
var d=document;
var _144a=d.createElement("div");
_144a.className="lotusDialogBorder";
_144a.style.width=this.wDialog;
var el=_1448.formNode=d.createElement("form");
dojo.connect(el,"onsubmit",dojo.hitch(this,function(e){
dojo.stopEvent(e);
}));
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=this.cancelButton=d.createElement("a");
a.title=this.app.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.TITLE));
el.appendChild(h1);
var _1451=d.createElement("div");
_1451.className="_qkrWikiCreate lotusDialogContent";
var _1452=d.createElement("fieldset");
var tbl2=d.createElement("table");
tbl2.setAttribute("cellspacing",0);
tbl2.setAttribute("cellpadding",0);
tbl2.setAttribute("border",0);
tbl2.setAttribute("summary","");
tbl2.setAttribute("id","find");
tbl2.className="lotusTable lotusClear lotusFormTable";
var _1454=d.createElement("tbody");
var tr2=d.createElement("tr");
tr2.className="lotusFormFieldRow qkrFormLabelAtop";
var td2=d.createElement("td");
td2.colSpan=2;
var lbl=d.createElement("label");
lbl.setAttribute("for","title");
lbl.appendChild(d.createTextNode(this.nls.NAME_THIS_WIKI));
td2.appendChild(lbl);
tr2.appendChild(td2);
_1454.appendChild(tr2);
quickr.share.wiki.validation.addRequiredIndicator(lbl);
var tr2=d.createElement("tr");
tr2.className="lotusFormFieldRow qkrFormHasLabelAtop";
var td2=d.createElement("td");
td2.colSpan=2;
var inp=d.createElement("input");
inp.className="lotusText qkrFormFieldBig";
if(dojo.isIE){
inp.style.width=this.wInput;
}
inp.setAttribute("id","title");
inp.setAttribute("name","title");
inp.setAttribute("type","text");
dojo.connect(inp,"onchange",this,"validateTitle");
dojo.connect(inp,"onkeypress",this,"_titleChanged");
td2.appendChild(inp);
this.title=inp;
tr2.appendChild(td2);
var td2=d.createElement("td");
quickr.share.scenes.createHelpLink(this.app,td2,"wikicreate.title");
tr2.appendChild(td2);
var a=td2.getElementsByTagName("a")[0];
_1454.appendChild(tr2);
var tr2=d.createElement("tr");
_1454.appendChild(tr2);
var _1459=this.accessOptions=new quickr.share.wiki.widget.WikiAccessOptions({_strings:this.app.nls.WIKI_ACCESS,app:this.app,defaultPublicViewingAllowed:true,defaultAuthenticatedEditingAllowed:true},tr2);
var tr2=d.createElement("tr");
_1454.appendChild(tr2);
var _145a=this.membershipOptions=new quickr.share.wiki.widget.MembershipOptions(this.getMembershipOptions(),tr2);
dojo.connect(_145a,"onresize",dojo.hitch(this.dialog,this.dialog._position));
quickr.share.wiki.action.CreateWiki.applyTagsSection(_1454,this,this.app,this.wInput);
var tr2=this.showDescriptionRow=d.createElement("tr");
var td2=d.createElement("td");
td2.colSpan=2;
quickr.share.wiki.action.CreateWiki.applyDescriptionToggler(d,this.app,this,td2);
tr2.appendChild(td2);
_1454.appendChild(tr2);
var tr2=this.descriptionLabelRow=d.createElement("tr");
tr2.className="qkrFormLabelAtop";
tr2.style.display="none";
var td2=d.createElement("td");
td2.colSpan=2;
var lbl=d.createElement("label");
lbl.setAttribute("for","desc");
lbl.appendChild(d.createTextNode(this.nls.ADD_DESCRIPTION));
td2.appendChild(lbl);
tr2.appendChild(td2);
_1454.appendChild(tr2);
var tr2=this.descriptionRow=d.createElement("tr");
tr2.className="lotusFormFieldRow qkrFormHasLabelAtop";
tr2.style.display="none";
var td2=d.createElement("td");
td2.colSpan=2;
var inp=d.createElement("textarea");
inp.className="lotusText";
inp.setAttribute("id","desc");
td2.appendChild(inp);
dojo.connect(inp,"onchange",this,"validateDescription");
dojo.connect(inp,"onkeypress",this,"_descriptionChanged");
this.description=inp;
tr2.appendChild(td2);
var td2=d.createElement("td");
quickr.share.scenes.createHelpLink(this.app,td2,"wikicreate.description");
tr2.appendChild(td2);
var a=td2.getElementsByTagName("a")[0];
_1454.appendChild(tr2);
tbl2.appendChild(_1454);
_1452.appendChild(tbl2);
_1451.appendChild(_1452);
el.appendChild(_1451);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_1448.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(this.nls.BUSY));
div.appendChild(span);
var input=_1448.saveNode=this.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.CREATE_BTN_LABEL;
div.appendChild(input);
var a=this.cancelNode=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.app.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_144a.appendChild(el);
dojo.connect(_1448.saveNode,"onclick",dojo.hitch(this,this._saveWiki));
_1448.setContent(_144a);
dojo.connect(_1448,"show",dojo.hitch(this,this.focusTitle));
},cancelDialog:function(){
this.inherited(arguments);
},updateDialog:function(file,opt,_145f){
quickr.share.validation.removeFormErrors(this.form);
this.membershipOptions.reset({});
this.descriptionSet=false;
this.titleSet=false;
this.tagsSet=false;
this.title.value="";
this.description.value="";
this.tagLoc.value="";
},onerror:function(code){
var d=document;
if(code=="ItemExists"||code=="AccessDenied"){
quickr.share.validation.addInlineErrorRow(this.title.parentNode.parentNode,this.title,"duplicate",[d.createTextNode(this.nls.ERROR_TITLE_EXISTS)]);
}else{
if(code=="Unknown"){
quickr.share.validation.addInlineErrorRow(this.title.parentNode.parentNode,this.title,"unknown",[d.createTextNode(this.nls.ERROR_SERVER_ERROR)]);
}
}
},onsuccess:function(wiki){
if(this.tagsSet){
this.app.tagsChanged=true;
}
this.app.navigate(this.app.routes.getWikiPageUrl(wiki.getLabel(),null,null));
},_saveWiki:function(opt){
this.disableInput();
if(this.namerow){
quickr.share.validation.removeInlineErrorRow(this.title.parentNode.parentNode,this.title,"name2");
this.namerow=false;
}
var _1464=opt?opt.makeDraft:null;
var sync=opt?opt.sync:null;
quickr.share.validation.removeFormErrors(this.form);
var _1466=null;
var _1467=null;
if(!this.validateTitle()){
window.scrollTo(0,0);
this.enableInput();
this.title.focus();
return;
}
_1466=this.trimTitle(false);
if(!this.validateDescription()){
window.scrollTo(0,0);
this.enableInput();
this.description.focus();
return;
}
_1467=this.trimDescription(false);
if(!this.validateTags()){
this.enableInput();
this.tagLoc.focus();
return;
}
var tags=quickr.share.validation.splitTags(this.tagCombo.textbox.value);
var _1469=this.membershipOptions.getUsers();
var users=[];
for(var id in _1469){
users.push([id,_1469[id][1]]);
}
var _146c=this.membershipOptions.getGroups();
var _146d=[];
for(var id in _146c){
_146d.push([id,_146c[id][1],_146c[id][2]]);
}
var _146e=this.accessOptions;
if(_146e.isPublicViewingAllowed()){
_146d.push(["anonymous-user","reader",true]);
}
if(_146e.isAuthenticatedEditingAllowed()){
_146d.push(["all-authenticated-users","editor",true]);
}
this.title.value=quickr.share.util.trim(this.title.value);
var _146f=quickr.share.wiki.util.getWikiPostBody(null,_1466?_1466:this.title.value,_1467?_1467:this.description.value,users,_146d,tags);
this.app.net.postXml({url:this.app.routes.getWikisFeedServiceUrl(),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:_146f,detectHtmlLogin:quickr.share.util.detectLoginForMultipartAtomResponse,headers:{"Content-Type":"application/atom+xml: charset=\"UTF-8\""},handle:dojo.hitch(this,this._saveComplete),sync:sync});
},fixTitleCharacters:function(){
var el=this.title;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
},_saveComplete:function(_1471,_1472){
if(_1471 instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_1471,_1472));
this.enableInput();
}else{
this.saveCompleted=true;
this.destroy();
var wiki=new quickr.share.wiki.bean.Wiki(_1471.documentElement);
this.onsuccess(wiki);
}
},focusTitle:function(_1474){
if(_1474){
quickr.share.validation.removeInlineErrorRow(this.title.parentNode.parentNode,this.title,"empty");
}
this.title.focus();
},_showDescription:function(){
this.descriptionRow.style.display=this.descriptionLabelRow.style.display="";
this.showDescriptionRow.style.display="none";
},_titleChanged:function(){
this.titleSet=true;
},_descriptionChanged:function(){
this.descriptionSet=true;
},_tagsChanged:function(){
this.tagsSet=true;
},trimTitle:function(_1475){
var el=this.title;
var _1477;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,this.titleMaxLength);
if(i!=-1){
_1477=el.value.substring(0,i);
if(_1475){
el.value=_1477;
}
}
if(_1475){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
return _1477;
},validateTitle:function(){
var el=this.title;
var d=document;
var valid=true;
var _147c=dojo.query("label",el.parentNode.parentNode.parentNode)[0];
var _147d=dojo.query("span.lotusFormError",_147c)[0];
if(_147d){
_147d.parentNode.removeChild(_147d);
}
if(quickr.share.util.trim(el.value).length==0){
var _147e=d.createElement("span");
_147e.appendChild(d.createTextNode(this.nls.ERROR_EMPTY_TITLE));
_147e.appendChild(d.createTextNode(this.nls.ERROR_PROVIDE_TITLE));
_147e.className="lotusFormError";
_147e.style.paddingLeft=_147e.style.paddingRight="5px";
_147c.appendChild(_147e);
valid=false;
}else{
var _147d=dojo.query("span.lotusFormError",_147c)[0];
if(_147d){
_147d.parentNode.removeChild(_147d);
}
}
if(!quickr.share.validation.validateTextLength(el.value,this.titleMaxLength)){
var _147f=[d.createTextNode(this.nls.ERROR_TITLE_TOO_LONG)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.trimTitle,true));
a.appendChild(d.createTextNode(this.nls.ERROR_SHORTEN_TITLE));
_147f.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_147f);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
quickr.share.validation.INVALID_FILENAME_CHARS.lastIndex=0;
var _147f=[d.createTextNode(this.nls.WARN_INVALID_CHARS_IN_TITLE)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixTitleCharacters");
a.appendChild(d.createTextNode(this.nls.FIX_INVALID_CHARS_IN_TITLE));
_147f.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_147f);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
return valid;
},trimDescription:function(_1481){
var el=this.description;
var _1483;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.DESCRIPTION_LENGTH);
if(i!=-1){
_1483=el.value.substring(0,i);
if(_1481){
el.value=_1483;
}
}
if(_1481){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
return _1483;
},validateDescription:function(){
var el=this.description;
var d=document;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.DESCRIPTION_LENGTH)){
var _1487=[d.createTextNode(this.nls.ERROR_DESCRIPTION_TOO_LONG)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.trimDescription,true));
a.appendChild(d.createTextNode(this.nls.ERROR_SHORTEN_DESCRIPTION));
_1487.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_1487);
return false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
return true;
},validateMembers:function(){
},validateTags:function(){
var valid=true;
if(this.tagCombo){
var d=document;
var el=this.tagCombo.textbox;
var tags=quickr.share.validation.splitTags(el.value);
var _148d=[];
var _148e=this.nls.WARN_LONG_TAG;
dojo.forEach(tags,function(tag,i){
if(!quickr.share.validation.validateTextLength(tag,quickr.share.validation.TAG_LENGTH)){
_148d.push(d.createTextNode(dojo.string.substitute(_148e,[quickr.share.util.trimToLength(tag,10)])));
valid=false;
}
});
this.tagCombo.staticClass="lotusText";
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
if(!valid){
var _1491=_148d.length>1;
if(_1491){
_148d=[d.createTextNode(this.nls.WARN_LONG_TAGS)];
}
_148d.push(d.createTextNode(" "));
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimTags");
a.appendChild(d.createTextNode(_1491?this.nls.TRIM_TAGS:this.nls.TRIM_TAG));
_148d.push(a);
this.tagCombo.staticClass="lotusText lotusFormErrorField";
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_148d);
}
}
return valid;
},trimTags:function(){
if(this.tagCombo){
var el=this.tagCombo.textbox;
var tags=quickr.share.validation.splitTags(el.value);
tags=dojo.map(tags,function(tag){
var i=quickr.share.util.getCharIndexForUtf8Index(tag,quickr.share.validation.TAG_LENGTH);
if(i!=-1){
tag=tag.substring(0,i);
}
return tag;
});
el.value=tags.join(" ");
this.tagCombo.staticClass="lotusText";
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},getMembershipOptions:function(){
return {canChangeVisibility:false,canShareWithEdit:false,canPropagate:false,ownerId:this.userId,authenticatedUser:this.app.authenticatedUser,startCollapsed:false,renderTip:dojo.partial(quickr.share.scenes.createHelpLink,this.app),topicShareWith:"wiki.addmembers",wInput:this.wInput,wInputUser:this.wInputUser,_strings:this.app.nls.WIKI_MEMBERSHIP,_userstrings:this.app.nls.USERSEARCH,peopleStore:this.peopleStore,groupStore:this.groupStore,defaultUsers:{},defaultGroups:{},defaultRole:"editor",app:this.app};
}});
quickr.share.wiki.action.CreateWiki.applyTagsSection=function(tbody,_1498,app,width){
var d=app.document;
var tr2=d.createElement("tr");
tr2.className="qkrFormLabelAtop";
var td2=d.createElement("td");
td2.colSpan=2;
var _149e=d.createElement("label");
_149e.appendChild(d.createTextNode(_1498.nls.ADD_TAGS));
td2.appendChild(_149e);
tr2.appendChild(td2);
tbody.appendChild(tr2);
var tr2=d.createElement("tr");
tr2.className="lotusFormFieldRow qkrFormHasLabelAtop";
var td2=d.createElement("td");
td2.colSpan=2;
var _149f=d.createElement("input");
_149f.className="lotusText";
_149f.setAttribute("name","tags");
_149f.setAttribute("type","text");
td2.appendChild(_149f);
var args=quickr.widget.TagTypeAhead.getTagTypeAheadArguments(_1498.tagStore,{name:"createWikiTaggerTypeAhead",multipleValues:true,token:" ",hideEmptyResults:true,"class":"lotusText",_strings:app.nls.TAGGER,autoSelectChars:[]});
var _14a1=_1498.tagCombo=new quickr.widget.TagTypeAhead(args,_149f);
_149f=_14a1.textbox;
dojo.connect(_149f,"onchange",_1498,"validateTags");
dojo.connect(_149f,"onkeypress",_1498,"_tagsChanged");
_1498.tagLoc=_149f;
if(dojo.isIE){
_14a1.textbox.style.width=width;
}
tr2.appendChild(td2);
_149e.setAttribute("for",_149f.getAttribute("id"));
var td2=d.createElement("td");
quickr.share.scenes.createHelpLink(app,td2,"wikicreate.tags");
tr2.appendChild(td2);
var a=td2.getElementsByTagName("a")[0];
tbody.appendChild(tr2);
};
quickr.share.wiki.action.CreateWiki.applyDescriptionToggler=function(d,app,_14a5,td){
var span=d.createElement("span");
span.className="lotusMeta";
var a=d.createElement("a");
a.href="javascript:;";
a.appendChild(d.createTextNode(_14a5.nls.ADD_DESCRIPTION_LINK));
span.appendChild(a);
span.innerHTML=dojo.string.substitute(_14a5.nls.ADD_DESCRIPTION_TAGS_DOITLATER,[span.innerHTML]);
td.appendChild(span);
a=span.getElementsByTagName("a")[0];
dojo.connect(a,"onclick",_14a5,"_showDescription");
dojo.connect(_14a5,"_showDescription",dojo.hitch(_14a5.dialog,_14a5.dialog._position));
};
}
if(!dojo._hasResource["quickr.share.wiki.action.EditDraft"]){
dojo._hasResource["quickr.share.wiki.action.EditDraft"]=true;
dojo.provide("quickr.share.wiki.action.EditDraft");
dojo.declare("quickr.share.wiki.action.EditDraft",[quickr.share.action.Action],{constructor:function(app,scene){
this.app=app;
this.scene=scene;
this.name=this.app.nls.CONTENT.EDIT;
this.tooltip=this.app.nls.CONTENT.EDIT_DRAFT_TOOLTIP;
},isValid:function(item,opt){
return true;
},execute:function(item,opt,e){
if(e){
dojo.stopEvent(e);
}
var _14b0;
var docId=null;
if(item.getDraftId){
_14b0=item.getDraftId();
docId=true;
}else{
_14b0=item.getId();
docId=item.getDocumentId();
}
if(docId){
this.app.navigate(this.app.routes.getWikiPageEditDraftSummaryUrl(_14b0));
}else{
this.app.navigate(this.app.routes.getWikiPageCreateDraftSummaryUrl(_14b0));
}
},complete:function(_14b2,_14b3){
if(_14b2 instanceof Error){
this.onerror("unknown");
}else{
this.onsuccess();
}
},onsuccess:function(){
},ondelete:function(){
},onerror:function(code){
alert(this.app.nls.CONTENT.EDIT_PAGE_ERROR);
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.SidebarPage"]){
dojo._hasResource["quickr.share.wiki.scenes.SidebarPage"]=true;
dojo.provide("quickr.share.wiki.scenes.SidebarPage");
dojo.declare("quickr.share.wiki.scenes.SidebarPage",null,{onSelectTypeAheadWiki:function(){
var app=this.app;
var _14b6=app.routes;
var _14b7=this.wikiSearchCombo.value;
if(_14b7&&_14b7!=this.wikiSearchCombo.textbox.defaultValue){
app.navigate(_14b6.getWikiUrl(_14b7));
}
},onFocusTypeAheadWiki:function(args){
if(this.wikiSearchCombo.textbox.value==this.wikiSearchCombo.textbox.defaultValue){
this.wikiSearchCombo.textbox.value="";
this.wikiSearchCombo.textbox.style.color="";
}
},onBlurTypeAheadWiki:function(args){
if(this.wikiSearchCombo.textbox.value==""){
this.wikiSearchCombo.textbox.value=this.wikiSearchCombo.textbox.defaultValue;
this.wikiSearchCombo.textbox.style.color="#aaa";
}
},onFocusTypeAheadPageName:function(args){
if(this.allPagesCombo.textbox.value==this.allPagesCombo.textbox.defaultValue){
this.allPagesCombo.textbox.value="";
this.allPagesCombo.textbox.style.color="";
}
},onBlurTypeAheadPageName:function(args){
if(this.allPagesCombo.textbox.value==""){
this.allPagesCombo.textbox.value=this.allPagesCombo.textbox.defaultValue;
this.allPagesCombo.textbox.style.color="#aaa";
}
},onSelectTypeAheadPageName:function(args){
var app=this.app;
var _14be=app.routes;
var _14bf=this.allPagesCombo.value;
if(_14bf&&_14bf!=this.allPagesCombo.textbox.defaultValue){
_14bf=_14bf.replace(/\+/g,"_");
app.navigate(_14be.getWikiPageUrl(this.wikiLabel,_14bf));
}
},onFocusTypeAheadTag:function(args){
if(this.tagSearchCombo.textbox.value==this.tagSearchCombo.textbox.defaultValue){
this.tagSearchCombo.textbox.value="";
this.tagSearchCombo.textbox.style.color="";
}
},onBlurTypeAheadTag:function(args){
if(this.tagSearchCombo.textbox.value==""){
this.tagSearchCombo.textbox.value=this.tagSearchCombo.textbox.defaultValue;
this.tagSearchCombo.textbox.style.color="#aaa";
}
},onSelectTypeAheadTag:function(){
var app=this.app;
var _14c3=app.routes;
var tag=quickr.util.text.trim(this.tagSearchCombo.value);
if(tag&&tag!=this.tagSearchCombo.textbox.defaultValue){
app.navigate(_14c3.getPageIndexUrl(this.wikiLabel,{tag:tag}));
}
},updateSidebarHeight:function(){
var d=this.app.document;
var ch=0,sh=0,lh=0;
var main=dojo.byId("lotusMain");
if(main){
main.style.padding=0;
}
var _14ca=dojo.byId("lotusContent");
if(_14ca){
ch=Math.round(dojo.style(_14ca,"height"));
}
var _14cb=dojo.byId("lotusColLeft");
if(_14cb){
sh=Math.round(dojo.style(_14cb,"height"));
lh=Math.max(ch,sh);
_14cb.style.minHeight=lh+"px";
}
var _14cc=dojo.byId("lotusCollapseBar");
if(_14cc){
_14cc.style.height=lh+"px";
}
}});
}
if(!dojo._hasResource["quickr.share.bean.Event"]){
dojo._hasResource["quickr.share.bean.Event"]=true;
dojo.provide("quickr.share.bean.Event");
dojo.declare("quickr.share.bean.Event",null,{constructor:function(entry){
this.e=entry;
},getEntry:function(){
return this.e;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentId",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getTitle:function(){
return quickr.share.util.getChildElementTextContent(this.e,"title");
},getAuthor:function(){
if(!this.author){
var node=this.e.getElementsByTagName("author")[0];
this.author={id:decodeURIComponent(quickr.share.util.getChildElementTextContent(node,"uri")),name:quickr.share.util.getChildElementTextContent(node,"name"),email:quickr.share.util.getChildElementTextContent(node,"email")};
}
return this.author;
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.updated=this.updated||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.published=this.published||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.published;
},getDescription:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getContents:function(){
return quickr.share.util.getChildElementTextContent(this.e,"content");
},getUrlEntry:function(){
return quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href");
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.MyWikis"]){
dojo._hasResource["quickr.share.wiki.scenes.MyWikis"]=true;
dojo.provide("quickr.share.wiki.scenes.MyWikis");
dojo.declare("quickr.share.wiki.scenes.MyWikis",[quickr.share.scenes.AbstractList,quickr.share.wiki.scenes.SidebarPage],{defaultSearchScope:"mywikis",isGlobal:true,views:quickr.share.wiki.scenes.WIKI_VIEWS,dateFilters:quickr.share.scenes.CHANNEL_FILTERS.DATE,sorts:[{id:"updated",sK:"updated"},{id:"added",sK:"published"},{id:"name",sK:"title",lowToHigh:true}],constructor:function(app,_14d0){
this.app=app;
this.sceneInfo=_14d0;
this.params=_14d0.parameters;
this.init(app,_14d0);
},begin:function(_14d1){
var _14d2=this.app.authenticatedUser;
if(!_14d2){
quickr.share.wiki.scenes.showUnauthenticatedWarning(this.app);
return;
}
this.show();
},end:function(_14d3){
},initFilters:function(p){
p=p||{};
if(p.tag){
var tags=dojo.isArray(p.tag)?p.tag:[p.tag];
var _14d6=this.activeTags={};
var _14d7=this.activeFilters;
dojo.forEach(tags,function(tag){
_14d7.push({id:"tags",longName:tag,setServiceOptions:function(_14d9){
(_14d9.tag=_14d9.tag||[]).push(tag);
},removeAppParams:function(_14da){
if(_14da.tag){
var index=dojo.indexOf(_14da.tag,tag);
if(index!=-1){
delete _14da.tag[index];
}
}
}});
_14d6[tag]=1;
});
this.params.tag=tags;
}
if(p.date){
var _14dc=this._byId(this.dateFilters,p.date);
if(_14dc){
this.activeFilters.push(_14dc);
}
this.params.date=p.date;
}
},getListUrl:function(_14dd,opts){
var p={pageSize:10,includeTags:true};
opts=opts||{};
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _14e0=!this.activeSort.lowToHigh;
if(this.sortReversed){
_14e0=!_14e0;
}
p.sortDescending=_14e0;
}
for(var i=0;i<this.activeFilters.length;i++){
var _14e2=this.activeFilters[i];
if(_14e2.setServiceOptions){
_14e2.setServiceOptions(p);
}
}
var url=p.tag&&p.tag.length>0?this.app.routes.getMyTaggedWikisFeedServiceUrl(p):this.app.routes.getMyWikisFeedServiceUrl(p);
return url;
},show:function(){
var d=this.app.document;
var app=this.app;
d.title=this.app.nls.WINDOWTITLE.MYWIKIS;
var _14e6=this.app.authenticatedUser;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_14e6?_14e6.id:null)});
var _14e7=dojo.getObject("quickr.share.config.actions.myWikis");
var _14e8=this.wikiActions=(_14e7)?_14e7(app,this,{}):[];
for(var i=0;i<_14e8.length;i++){
if(_14e8[i].onupload){
dojo.connect(_14e8[i],"onupload",this,"onupload");
}
}
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"mywikis",defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,null,this.app.authenticatedUser,null,dojo.string.substitute(this.app.nls.MYWIKIS.USERS_WIKIS,[this.app.authenticatedUser.name]),this.app,this.app.routes,this);
quickr.share.wiki.scenes.MyWikis.render(d,this.app,this);
var _14ea={_strings:app.nls.CONTENT,_appstrings:app.nls,permissions:this.permissions,activeTagFiltersEnabled:this.activeFilters.length>0?true:false,tagStore:app.getTagTypeAheadStore(),urlAllTags:app.routes.getTagServiceUrl(),generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),generateLinkToPage:dojo.hitch(null,function(app,_14ec,_14ed,doc,link,_14f0){
var _14f0=_14f0||{};
quickr.share.scenes.setOnClick(link,app,_14ec.getWikiPageUrl(_14ed,doc.getModifiedItem()));
},app,app.routes),generateLinkToWiki:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.generateLinkToWiki,app,app.routes),generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,this.app,this.app.routes,this.authenticatedUser?this.authenticatedUser.id:null,this.params,true,true,true),getUserRecommendationUrl:dojo.hitch(app.routes,app.routes.getRecommendServiceUrl),generateSortLink:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.generateSortLink,app,app.routes,this.app.authenticatedUser.id,this.params),generateLinkToTaggedPages:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.applyTaggedPagesPopup,this.app),getUnsavedChangesList:dojo.hitch(app,app.getUnsavedChangesList),sortId:this.sortId,sortReversed:this.sortReversed,app:app,routes:app.routes,view:this.activeView.id};
var _14f1=new quickr.share.wiki.widget.MyWikiStreamRenderer(_14ea);
var list=this.list=new quickr.widget.Stream({id:"list",baseClass:"lotusStream",renderer:_14f1,msgNoData:app.nls.WIKI_HOME.SIDEBAR.NO_ITEMS,_strings:app.nls.CONTENT,url:this.getListUrl(this.app.authenticatedUser),net:app.net},d.getElementById("scene-list"));
dojo.connect(_14f1,"ontagchange",this,"ontagchange");
list.update();
d.body.style.visibility="visible";
},ontagchange:function(){
if(this.taglist){
this.taglist.reload();
}
},onSelectTypeAheadTag:function(){
var app=this.app;
var _14f4=app.routes;
var tag=quickr.util.text.trim(this.tagSearchCombo.value);
if(tag&&tag!=this.tagSearchCombo.textbox.defaultValue){
app.navigate(_14f4.getMyWikisUrl(app.authenticatedUser.id,{tag:tag}));
}
}});
quickr.share.wiki.scenes.MyWikis.generateSortLink=function(app,_14f7,_14f8,_14f9,_14fa,sort,_14fc,a){
var p=dojo.clone(_14f9);
p.sort=sort.id;
p.sortReversed=!_14fc;
delete p.page;
var url=_14f7.getMyWikisUrl(_14f8,p);
quickr.share.scenes.setOnClick(a,app,url);
if(sort.tooltips){
a.title=(_14fc)?sort.tooltips.normalOrder:a.title=sort.tooltips.reverseOrder;
}
};
quickr.share.wiki.scenes.MyWikis.render=function(d,app,scene){
var _1503=app.routes;
var _1504=app.authenticatedUser;
var _1505=scene.activeFilters;
var _1506=scene.wikiActions;
var _1507=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="myWikis"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var _150a=(dojo.getObject("quickr.share.config.actions.draftList")||function(){
return [];
})(app,scene);
quickr.share.scenes.applyUnsavedChangesAlert(app,el,_150a);
var _150b=d.createElement("div");
_150b.className="lotusHeader";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(app.nls.HEADER.MYWIKIS));
_150b.appendChild(h1);
var div=d.createElement("div");
if(_1505.length>0){
div.className="lotusFilters";
div.appendChild(d.createTextNode(app.nls.WIKI_TAGS.WHATTAGS));
for(var i=0;i<_1505.length;i++){
var args;
if(_1505[i]&&_1505[i].removeAppParams){
args=dojo.clone(_1507);
_1505[i].removeAppParams(args);
}else{
args={};
}
div.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.className="lotusFilter";
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
a.appendChild(d.createTextNode(_1505[i].longName));
quickr.share.scenes.setOnClick(a,app,_1503.getMyWikisUrl(app.authenticatedUser.id,args));
var span=d.createElement("span");
span.className="lotusClose";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
div.appendChild(a);
}
}
_150b.appendChild(div);
el.appendChild(_150b);
var div=d.createElement("div");
div.className="lotusBtnContainer lotusActionBar";
scene.renderView(d,div);
var opt={permissions:scene.permissions};
for(var i=0;i<_1506.length;i++){
var _1513=_1506[i];
if(_1513.isValid()){
var span=d.createElement("SPAN");
span.id="newButton";
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("A");
a.href=_1513.getUrlResource(_1504,opt)||"javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_1513,_1513.execute));
a.appendChild(d.createTextNode(_1513.getName(_1504,opt)));
span.appendChild(a);
div.appendChild(span);
}
}
var clear=d.createElement("div");
clear.className="lotusClear";
clear.innerHTML="<!-- IE -->";
div.appendChild(clear);
el.appendChild(div);
var div=d.createElement("div");
div.id="scene-list";
el.appendChild(div);
c.appendChild(el);
c.activeTemplate="myWikis";
}
};
quickr.share.wiki.scenes.MyWikis.generateLinkToWiki=function(app,_1516,_1517,link){
return quickr.share.scenes.setOnClick(link,app,_1516.getWikiUrl(_1517.title));
};
quickr.share.wiki.scenes.MyWikis.applySideNav=function(d,el,app,scene,_151d){
var div=d.createElement("div");
div.className="lotusSection lotusFirst";
var h2=d.createElement("h2");
var _1520=dojo.string.substitute(app.nls.TOGGLE_SECTION_NAMED,[app.nls.WIKI_HOME.SIDEBAR.POPULARTAGS]);
var a=d.createElement("a");
a.title=_1520;
var _1522=scene.tagsSectionOpen||false;
if(!_1522){
a.className="lotusSprite lotusArrow lotusTwistyOpen";
scene.tagsLoaded=true;
}else{
a.className="lotusSprite lotusArrow lotusTwistyClosed";
}
a.href="javascript:;";
dojo.connect(a,"onclick",a,quickr.share.scenes.toggleSection);
var _1523=d.createElement("span");
_1523.className="lotusHidden";
_1523.appendChild(d.createTextNode(_1520));
a.appendChild(_1523);
var _1524=d.createElement("span");
_1524.className="lotusAltText";
_1524.appendChild(d.createTextNode(_1522?(dojo._isBodyLtr()?"▶":"◀"):"▼"));
a.appendChild(_1524);
h2.appendChild(a);
var span=d.createElement("span");
span.style.cursor="pointer";
span.title=app.nls.TOGGLE_SECTION;
dojo.connect(span,"onclick",a,quickr.share.scenes.toggleSection);
span.appendChild(d.createTextNode(app.nls.WIKI_HOME.SIDEBAR.POPULARTAGS));
span.className="lotusLeft";
h2.appendChild(span);
var tip=quickr.share.scenes.createHelpLink(app,h2,"tags.globalcloud");
dojo.addClass(tip,"lotusRight");
div.appendChild(h2);
var cdiv=d.createElement("div");
var sdiv=d.createElement("div");
sdiv.className="lotusSectionBody lotusChunk lotusSearch";
var form=scene.form=d.createElement("form");
form.onsubmit=function(e){
dojo.stopEvent(e);
};
var _152b=d.createElement("input");
_152b.type="text";
_152b.className="lotusText";
_152b.value=app.nls.WIKI_HOME.SIDEBAR.SEARCHBOX;
form.appendChild(_152b);
var _152c=d.createElement("label");
_152c.appendChild(d.createTextNode(app.nls.WIKI_HOME.SIDEBAR.SEARCHBOX));
_152c.className="lotusHidden";
form.appendChild(_152c);
var args=quickr.widget.TagTypeAhead.getTagTypeAheadArguments(app.getTagTypeAheadStore(),{id:"tagSearchBox",name:"tagsearch",multipleValues:true,token:" ",hideEmptyResults:true,"class":"lotusText",hideEmptyResults:true,_strings:scene.app.nls.TAGGER,autoSelectChars:[]});
var combo=scene.tagSearchCombo=new quickr.widget.TagTypeAhead(args,_152b);
dojo.connect(combo,"onSelect",scene,"onSelectTypeAheadTag");
dojo.connect(form,"onsubmit",scene,"onSelectTypeAheadTag");
dojo.connect(combo.textbox,"onfocus",scene,"onFocusTypeAheadTag");
dojo.connect(combo.textbox,"onblur",scene,"onBlurTypeAheadTag");
_152c.setAttribute("for",args.id);
combo.textbox.value=combo.textbox.defaultValue=app.nls.WIKI_HOME.SIDEBAR.SEARCHBOX;
combo.textbox.style.color="#aaa";
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",app.nls.SEARCH.SEARCH);
var input=d.createElement("input");
input.className="lotusSearchButton";
input.type="image";
input.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
input.name="submit";
input.setAttribute("alt",app.nls.SEARCH.SEARCH_ALT);
span.appendChild(input);
var aspan=d.createElement("a");
aspan.className="lotusAltText";
aspan.appendChild(d.createTextNode(app.nls.SEARCH.SEARCH_ALT));
aspan.href="javascript:;";
dojo.connect(aspan,"onclick",function(){
try{
input.click();
}
catch(e){
}
});
span.appendChild(aspan);
form.appendChild(span);
sdiv.appendChild(form);
cdiv.appendChild(sdiv);
var _1531=d.createElement("div");
_1531.id="tagCloudContainer";
cdiv.appendChild(_1531);
div.appendChild(cdiv);
el.appendChild(div);
};
quickr.share.wiki.scenes.MyWikis.generateTagLink=function(app,_1533,_1534,opts,_1536,tag,a){
var p=(opts)?dojo.clone(opts):[];
p.tag=p.tag||[];
var index=dojo.indexOf(p.tag,tag);
if(_1536&&index==-1){
p.tag.push(tag);
}else{
if(!_1536&&index!=-1){
delete p.tag[index];
}
}
quickr.share.scenes.setOnClick(a,app,"javascript:;");
};
quickr.share.wiki.scenes.MyWikis.applyTaggedPagesPopup=function(app,el,a,_153e,tag){
var d=app.d;
quickr.share.scenes.setOnClick(a,app,app.routes.getPageIndexUrl(_153e,{tag:tag}));
var _1541=d.createElement("span");
el.appendChild(_1541);
};
}
if(!dojo._hasResource["quickr.share.wiki.widget.AllWikisStreamRenderer"]){
dojo._hasResource["quickr.share.wiki.widget.AllWikisStreamRenderer"]=true;
dojo.provide("quickr.share.wiki.widget.AllWikisStreamRenderer");
dojo.declare("quickr.share.wiki.widget.AllWikisStreamRenderer",[quickr.share.wiki.widget.MyWikiStreamRenderer],{getSortsSummary:function(_1542,_1543){
var arr=[{id:"name",name:this._strings.COLUMN_NAME,lowToHigh:true,isDefault:true,width:"50%",tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"added",name:this._strings.COLUMN_ADDED,width:"110px",tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._strings.COLUMN_LAST_MODIFIED,width:"110px",tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}},{id:"modifier",name:this._strings.COLUMN_LAST_MODIFIED_BY,width:"100px",isSortable:false}];
return arr;
},getSortsDetails:function(_1545,_1546){
return [{id:"name",name:this._appstrings.SORTS.TITLE,lowToHigh:true,tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"added",name:this._strings.COLUMN_ADDED,tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._appstrings.SORTS.MOSTRECENT,isDefault:true,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}}];
},generateTagLink:function(){
var app=this.app;
var opts={};
return dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,app.authenticatedUser?app.authenticatedUser.id:null,opts,true,true,false);
}});
}
if(!dojo._hasResource["quickr.share.bean.Page"]){
dojo._hasResource["quickr.share.bean.Page"]=true;
dojo.provide("quickr.share.bean.Page");
dojo.declare("quickr.share.bean.Page",quickr.share.bean.File,{getCategory:function(){
return "page";
},getContent:function(){
if(!this.content){
var _1549=quickr.share.util.getChildElementTextContent(this.e,"content");
var _154a=_1549.replace(/<br><\/br>/g,"<br />");
this.content=_154a;
}
return this.content;
},getUrlDownloadAsHTML:function(){
return quickr.share.util.rewriteUri(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href")+".html",{errorPage:true,convertTo:"html"});
},getUrlDownloadAsPDF:function(){
return quickr.share.util.rewriteUri(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href")+".pdf",{errorPage:true,convertTo:"pdf"});
},getUrlDownloadAsRTF:function(){
return quickr.share.util.rewriteUri(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href")+".rtf",{errorPage:true,convertTo:"rtf"});
},getDraftId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"draftUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDraftCreated:function(){
return quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"draftCreated",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
},getDraftModified:function(){
return quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"draftModified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
},getCommunityId:function(){
if(!this.communityId){
var l=quickr.share.util.getElementsByTagNameNS(this.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
var _154c=l?l:this.e;
this.communityId=quickr.share.util.getChildElementTextContentNS(_154c,"libraryCommunity",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
}
return this.communityId;
},isCommunityWiki:function(){
return !!this.getCommunityId();
},getUrlRelated:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","related","href"));
}});
}
if(!dojo._hasResource["quickr.widget.FileStream"]){
dojo._hasResource["quickr.widget.FileStream"]=true;
dojo.provide("quickr.widget.FileStream");
dojo.declare("quickr.widget.FileStreamRenderer",[quickr.widget.StreamRenderer],{permissions:new quickr.share.bean.StreamPermissions(),methods:{},actions:[],_strings:{},times:{},getDelegate:function(type,def,_154f){
var view=this.view||"summary";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_154f){
var _1552=name+_154f.substring(0,1).toUpperCase()+_154f.substring(1);
if(typeof this[_1552]=="function"){
return this[_1552];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_1555){
return typeof this.getDelegate(type,null,null,_1555)=="function";
},delegate:function(type,args,def,_1559){
var f=this.getDelegate(type,def,_1559);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_155b){
return this.delegate("allowMultipleExpand",arguments,quickr.widget.FileStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.actions=[];
quickr.widget.FileStreamRenderer.superclass.destroy.apply(this,arguments);
},cleanup:function(){
this.delegate("cleanup",arguments);
quickr.widget.FileStreamRenderer.superclass.cleanup.apply(this,arguments);
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.widget.FileStreamRenderer.superclass.getSorts);
},render:function(_155c,el,data,item){
this.cleanup();
data.itemById={};
this.baseUrl=_155c.baseUrl;
this.delegate("render",arguments);
delete this.highlightItems;
},renderSorting:function(_1560,el,data){
this.delegate("renderSorting",arguments,quickr.widget.FileStreamRenderer.superclass.renderSorting);
},renderEmpty:function(_1563,el,data){
this.delegate("renderEmpty",arguments,quickr.widget.FileStreamRenderer.superclass.renderEmpty);
},renderItem:function(_1566,el,data,item,_156a){
var _156b;
var _156c=quickr.share.util.getChildElementAttribute(item,"category","term");
if(_156c=="page"){
item=new quickr.share.bean.Page(item);
_156b="page";
}else{
item=new quickr.share.bean.File(item);
_156b="file";
}
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_156a;
item._qualifier=_156b;
this.delegate("renderItem",arguments,null,_156b);
},renderItemExpand:function(_156d,data,item,_1570){
var d=document;
var tr=item.element;
var trd=item.elementDetails||item.elementExtra;
var td=trd.lastChild;
var div=d.createElement("div");
div.className="_qkrMessage";
div.appendChild(d.createTextNode(this._strings.LOADING));
td.appendChild(div);
var url=quickr.share.util.rewriteUri(item.getUrlEntry(),{acls:true,includeRecommendation:true,includeTags:true});
this.net.getXml({url:url,handle:dojo.hitch(this,this.completeItemExpand,_156d,data,item,_1570,arguments),timeout:_156d.timeoutRetrieve*1000,preventLoginRefresh:true,retry:dojo.hitch(this,this.renderItemExpand,_156d,data,item,_1570)});
},completeItemExpand:function(_1577,data,item,_157a,_157b,_157c,_157d){
var d=document;
var tr=item.element;
var trd=item.elementDetails||item.elementExtra;
var td=trd.lastChild;
for(var next,el=trd.lastChild.firstChild;el;){
next=el.nextSibling;
if(dojo.hasClass(el,"_qkrMessage")){
el.parentNode.removeChild(el);
}
el=next;
}
if(!_157c||_157c instanceof Error||!_157c.documentElement){
var _1584=(item.getCategory()=="page")?this._appstrings.PAGE.EXPAND_ERROR:this._appstrings.FILE.EXPAND_ERROR;
var _1585=quickr.share.util.getAtomErrorCode(_157c,_157d);
var _1586;
if(_1585=="cancel"){
_1586=_1584.CANCEL;
}else{
if(_1585=="timeout"){
_1586=_1584.TIMEOUT;
}else{
if(_1585=="ItemNotFound"){
_1586=_1584.NOT_FOUND;
}else{
_1586=_1584.GENERIC;
}
}
}
var _1587=d.createElement("div");
_1587.className="lotusFormError _qkrMessage";
_1587.appendChild(d.createTextNode(_1586));
td.appendChild(_1587);
this.renderHideLink(tr,trd);
}else{
item=_157b[2]=this.replaceItem(data,item,_157c.documentElement);
this.delegate("renderItemExpand",_157b,null,item._qualifier);
}
},replaceItem:function(data,item,_158a){
var _158b;
if(item.getCategory()=="page"){
_158b=new quickr.share.bean.Page(_158a);
}else{
_158b=new quickr.share.bean.File(_158a);
}
data.itemByPosition[item._position]=_158b;
data.itemById[item.getId()]=_158b;
_158b.element=item.element;
_158b.elementExtra=item.elementExtra;
_158b.elementDetails=item.elementDetails;
_158b._isExpanded=item._isExpanded;
_158b._isRendered=item._isRendered;
_158b._position=item._position;
_158b._qualifier=item._qualifier;
_158b._ratingImage=item._ratingImage;
_158b._ratingText=item._ratingText;
return _158b;
},expandItem:function(_158c,data,item,_158f){
this.delegate("expandItem",arguments);
},collapseItem:function(_1590,data,item,_1593){
this.delegate("collapseItem",arguments);
},updateItem:function(_1594,data,el,item){
if(this.hasDelegate("updateItem")){
if(data.itemByPosition&&typeof item=="number"){
item=data.itemByPosition[item];
}
if(item&&item.getUrlEntry){
this.net.getXml({url:item.getUrlEntry(),handle:dojo.hitch(this,this.updateItemComplete,_1594,data,el,item),timeout:_1594.timeoutRetrieve*1000});
}
}
},updateItemComplete:function(_1598,data,el,_159b,_159c,_159d){
if(_159c instanceof Error){
}else{
if(_159c.documentElement&&quickr.util.dom.isNamedNS(_159c.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _159e;
var item=_159c.documentElement;
var _15a0=quickr.share.util.getChildElementAttribute(item,"category","term");
if(_15a0=="page"){
item=new quickr.share.bean.Page(item);
_159e="page";
}else{
item=new quickr.share.bean.File(item);
_159e="file";
}
var _15a1=_159b._position;
data.itemByPosition[_15a1]=item;
data.itemById[item.getId()]=item;
item._position=_15a1;
item._qualifier=_159e;
this.delegate("updateItem",[_1598,data,el,item,_159b,_15a1],null,_159e);
delete this.highlightItems;
}
}
},renderSummary:function(_15a2,el,data){
var _15a5=new Date().getTime();
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
if(size>0){
var _15aa=d.createDocumentFragment();
var _15ab=dojo._toArray(arguments);
_15ab[1]=_15aa;
quickr.widget.FileStreamRenderer.superclass.renderSorting.apply(this,_15ab);
var table=d.createElement("TABLE");
table.className="lotusTable lotusClear wikiFixedTable";
table.cellSpacing=table.cellPadding=0;
var tbody=d.createElement("TBODY");
for(var i=0;i<size;i++){
this.renderItem(_15a2,tbody,data,items[i],i,i==0,(i==size-1));
}
table.appendChild(tbody);
_15aa.appendChild(table);
this.updatePaging(_15a2,el,data);
var _15af=dojo._toArray(el.childNodes);
for(var child,i=0;child=_15af[i];i++){
child.style.display="none";
}
el.replaceChild(_15aa,_15af[0]);
for(var child,i=0;child=_15af[i];i++){
quickr.share.util.destroyWidgets(child);
if(child.parentNode){
child.parentNode.removeChild(child);
}
}
}else{
this.renderEmpty(_15a2,el,data);
}
var after=new Date().getTime();
var time=after-_15a5;
if(time>0&&(!this.times.renderSummary||time<this.times.renderSummary)){
this.times.renderSummary=time;
}
},renderItemSummaryPage:function(_15b3,el,data,doc,_15b7,_15b8,_15b9,_15ba,_15bb){
var d=document;
var _15bd=(doc.getUpdated().getTime()!=doc.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var aMore;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _15c1=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var c=this._template;
if(!c){
c=this._template=div_t.cloneNode(true);
}
var t=this._summaryTemplate;
if(!t){
var a=[];
a.push("<table><tbody><tr><td class=\"lotusFirstCell\" style=\"width:");
a.push(dojo.isSafari?"38px":"28px");
a.push("\"><a><img></a></td>");
a.push("<td><h4><a class=\"entry-title\" rel=\"bookmark\"></a></h4><div class=\"lotusMeta\">");
if(this.displayOwner){
a.push("<a class=\"lotusPerson\"></a><span class=\"lotusDivider\">|</span>");
}
a.push("<span></span><span class=\"lotusDivider\">|</span><span></span></div></td>");
a.push("<td class=\"lotusNowrap\"><a class=\"entry-content\"><img><span class=\"lotusMeta\"></span></a></td>");
a.push("<td><a href=\"javascript:;\"><img><span class=\"lotusMeta\"></span></a></td>");
a.push("<td><span><img><span class=\"lotusMeta\"></span></span></td>");
a.push("<td class=\"lotusAlignRight lotusLastCell lotusTiny\"><a href=\"javascript:;\"></a></td>");
a.push("</tr>");
a.push("<tr class=\"lotusDetails\" style=\"display: none;\"><td class=\"lotusFirstCell\"><!-- IE --></td><td colspan=\"5\"><div class=\"qkrWide entry-summary\"><div class=\"qkrWideInner\"></div></div></td></tr></tbody></table>");
t=this._summaryTemplate=a.join("");
}
c.innerHTML=t;
var tbody=c.firstChild.firstChild;
var tr=tbody.firstChild;
var trd=tbody.lastChild;
tr.itemPosition=_15b7;
if(_15b8){
dojo.addClass(tr,"lotusFirst");
}
var td=tr.firstChild;
var a=td.firstChild;
a.href=doc.getUrlDownload();
a.firstChild.src=this.getPageImage(24);
a.firstChild.setAttribute("alt",this._appstrings.CONTENT.OPEN_PAGE);
td=td.nextSibling;
var a=td.firstChild.firstChild;
a.appendChild(d.createTextNode(doc.getName()));
a.title=doc.getName();
this.generateLinkToPage(doc,a);
var div=td.firstChild.nextSibling;
var span=div.firstChild;
if(this.displayOwner){
var a=span;
this.generateLinkToPerson(doc.getAuthor(),a);
a.appendChild(d.createTextNode(doc.getAuthor().name));
span=span.nextSibling.nextSibling;
}
var df=new quickr.share.util.DateFormat(doc.getUpdated());
span.appendChild(d.createTextNode(df.formatByAge(_15bd)));
span.title=(_15bd&&_15bd.FULL)?df.format(_15bd.FULL):df.format(df.nls().DATE.RELATIVE_TIME.FULL);
span=span.nextSibling.nextSibling;
var _15ce=doc.getShareCount();
var _15cf=this.permissions.isOwner(doc);
var _15d0=this.permissions.canEdit(doc);
var _15d1=doc.getVisibility();
var nls=this._strings;
var _15d3,_15d4;
if(_15d1=="private"&&_15ce==0){
_15d3=nls.PRIVATE;
_15d0=false;
}else{
if(_15d1=="public"){
nls=nls.PUBLIC;
image="publicSmall.gif";
}else{
nls=nls.SHARED;
image="sharedSmall.gif";
}
if(_15ce>1){
_15d3=nls.MANY;
_15d4=dojo.string.substitute(nls.MANY_1,[dojo.number.format(_15ce)]);
}else{
if(_15ce==1){
_15d3=nls.ONE;
_15d4=nls.ONE_1;
}else{
_15d3=nls.BASE;
}
}
}
this.renderShareLink(span,_15d3,_15d4,doc,this.generateLinkToPerson,_15d0,_15cf);
td=td.nextSibling;
if(_15b8){
td.style.width="40px";
}
td.title=dojo.string.substitute(this._appstrings.PAGECONTENT.DOWNLOAD_PAGE_AS_HTML_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
var a=td.firstChild;
a.href=doc.getUrlDownloadAsHTML();
a.className="entry-content";
var img=a.firstChild;
img.src=_15b3.baseUrl+"images/download-icon.gif";
img.alt=td.title;
var span=img.nextSibling;
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(doc.getTimesDownloaded()!=1?dojo.string.substitute(this._strings.DOWNLOADS,[dojo.number.format(doc.getTimesDownloaded())]):this._strings.ONE_DOWNLOAD));
if(this.renderPopup&&quickr.share.bean.File.isFilenameTooLong(doc.getLabel())){
var span=_15c1.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.PAGECONTENT.DOWNLOAD_WARN));
var _15d6=this.renderPopup(span,span,this._appstrings.PAGECONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_15d6);
td.appendChild(span);
}
td=td.nextSibling;
if(_15b8){
td.style.width="40px";
}
var top=td.firstChild;
if(this.permissions.canRate(doc)){
top.title=this._appstrings.RECOMMEND.ADD_REMOVE;
dojo.connect(top,"onclick",this,dojo.hitch(this,this.forceExpandItem,_15b3,_15b7));
}
var img=doc._ratingImage=top.firstChild;
img.src=_15b3.baseUrl+"nav/common/styles/images/"+((doc.getRatingCount()>0)?"iconRating1.gif":"iconRating0.gif");
img.alt=this._appstrings.RECOMMEND.ADD_REMOVE;
var span=doc._ratingText=img.nextSibling;
var _15d8=doc.getRatingCount();
span.title=(_15d8!=1)?dojo.string.substitute(this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY,[dojo.number.format(_15d8)]):this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE;
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_15d8)));
td=td.nextSibling;
if(_15b8){
td.style.width="40px";
}
var a=td.firstChild;
this.generateLinkToFile(doc,a,{section:"comments"});
a.title=this._appstrings.COMMENTS.VIEW_COMMENTS_PAGE;
var _15d9=doc.getCommentCount();
var img=a.firstChild;
img.src=_15b3.baseUrl+"nav/common/styles/images/"+(_15d9==0?"iconNoComments.gif":"iconComments.gif");
img.alt=this._appstrings.COMMENTS.VIEW_COMMENTS_PAGE;
var span=img.nextSibling;
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_15d9)));
span.title=(_15d9!=1)?dojo.string.substitute(this._appstrings.COMMENTS.COMMENT_COUNT_MANY,[dojo.number.format(_15d9)]):this._appstrings.COMMENTS.COMMENT_COUNT_ONE;
td=td.nextSibling;
if(_15b8){
td.style.width="40px";
}
var a=aMore=td.firstChild;
a.title=this._strings.VIEW_EXTRA;
a.appendChild(d.createTextNode(this._strings.MORE));
var td=trd.lastChild;
var div=td.firstChild.firstChild;
quickr.share.util.createTextNode(d,div,doc.getDescription());
if(!div.firstChild){
td.removeChild(td.firstChild);
}else{
trd.style.display="";
}
if(_15ba){
el.replaceChild(tr,_15ba);
el.replaceChild(trd,_15bb);
}else{
el.appendChild(tbody.removeChild(tr));
el.appendChild(tbody.removeChild(trd));
}
doc.element=tr;
doc.elementDetails=trd;
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_15b3,_15b7));
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:tr,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
dojo.animateProperty({duration:2000,rate:100,node:trd,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
},renderItemSummary:function(_15da,el,data,doc,_15de,_15df,_15e0,_15e1,_15e2){
var _15e3=new Date().getTime();
var d=document;
var _15e5=(doc.getUpdated().getTime()!=doc.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var aMore;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _15e9=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var c=this._template;
if(!c){
c=this._template=div_t.cloneNode(true);
}
var t=this._summaryTemplate;
if(!t){
var a=[];
a.push("<table><tbody><tr><td class=\"lotusFirstCell\" style=\"width:");
a.push(dojo.isSafari?"38px":"28px");
a.push("\"><a><img alt=\"\"></a></td>");
a.push("<td><h4><a class=\"entry-title\" rel=\"bookmark\"></a></h4><div class=\"lotusMeta\">");
if(this.displayOwner){
a.push("<a class=\"lotusPerson\"></a><span class=\"lotusDivider\">|</span>");
}
a.push("<span></span><span class=\"lotusDivider\">|</span><span></span></div></td>");
a.push("<td class=\"lotusNowrap\"><a class=\"entry-content\"><img alt=\"\"><span class=\"lotusMeta\"></span></a></td>");
a.push("<td><a href=\"javascript:;\"><img alt=\"\"><span class=\"lotusMeta\"></span></a></td>");
a.push("<td><span><img><span class=\"lotusMeta\"></span></span></td>");
a.push("<td class=\"lotusAlignRight lotusLastCell lotusTiny\"><a href=\"javascript:;\"></a></td>");
a.push("</tr>");
a.push("<tr class=\"lotusDetails\" style=\"display: none;\"><td class=\"lotusFirstCell\"><!-- IE --></td><td colspan=\"5\"><div class=\"qkrWide entry-summary\"><div class=\"qkrWideInner\"></div></div></td></tr></tbody></table>");
t=this._summaryTemplate=a.join("");
}
c.innerHTML=t;
var tbody=c.firstChild.firstChild;
var tr=tbody.firstChild;
var trd=tbody.lastChild;
tr.itemPosition=_15de;
if(_15df){
dojo.addClass(tr,"lotusFirst");
}
var td=tr.firstChild;
var a=td.firstChild;
a.href=doc.getUrlDownload();
a.firstChild.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),24);
a.firstChild.setAttribute("alt",quickr.share.util.getExtension(doc.getName()));
td=td.nextSibling;
var a=td.firstChild.firstChild;
a.appendChild(d.createTextNode(doc.getName()));
a.title=doc.getName();
this.generateLinkToFile(doc,a);
var div=td.firstChild.nextSibling;
var span=div.firstChild;
if(this.displayOwner){
var a=span;
this.generateLinkToPerson(doc.getAuthor(),a);
a.appendChild(d.createTextNode(doc.getAuthor().name));
span=span.nextSibling.nextSibling;
}
var df=new quickr.share.util.DateFormat(doc.getUpdated());
span.appendChild(d.createTextNode(df.formatByAge(_15e5)));
span.title=(_15e5&&_15e5.FULL)?df.format(_15e5.FULL):df.format(df.nls().DATE.RELATIVE_TIME.FULL);
span=span.nextSibling.nextSibling;
var _15f6=doc.getShareCount();
var _15f7=this.permissions.isOwner(doc);
var _15f8=this.permissions.canEdit(doc);
var _15f9=doc.getVisibility();
var nls=this._strings;
var _15fb,_15fc;
if(_15f9=="private"&&_15f6==0){
_15fb=nls.PRIVATE;
_15f8=false;
}else{
if(_15f9=="public"){
nls=nls.PUBLIC;
image="publicSmall.gif";
}else{
nls=nls.SHARED;
image="sharedSmall.gif";
}
if(_15f6>1){
_15fb=nls.MANY;
_15fc=dojo.string.substitute(nls.MANY_1,[dojo.number.format(_15f6)]);
}else{
if(_15f6==1){
_15fb=nls.ONE;
_15fc=nls.ONE_1;
}else{
_15fb=nls.BASE;
}
}
}
this.renderShareLink(span,_15fb,_15fc,doc,this.generateLinkToPerson,_15f8,_15f7);
td=td.nextSibling;
if(_15df){
td.style.width="40px";
}
td.title=dojo.string.substitute(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
var a=td.firstChild;
a.href=doc.getUrlDownload();
a.className="entry-content";
var img=a.firstChild;
img.src=_15da.baseUrl+"images/download-icon.gif";
img.alt=td.title;
var span=img.nextSibling;
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(doc.getTimesDownloaded()!=1?dojo.string.substitute(this._strings.DOWNLOADS,[dojo.number.format(doc.getTimesDownloaded())]):this._strings.ONE_DOWNLOAD));
if(this.renderPopup&&quickr.share.bean.File.isFilenameTooLong(doc.getLabel())){
var span=_15e9.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN));
var _15fe=this.renderPopup(span,span,this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_15fe);
td.appendChild(span);
}
td=td.nextSibling;
if(_15df){
td.style.width="40px";
}
var top=td.firstChild;
if(this.permissions.canRate(doc)){
top.title=this._appstrings.RECOMMEND.ADD_REMOVE;
dojo.connect(top,"onclick",this,dojo.hitch(this,this.forceExpandItem,_15da,_15de));
}
var img=doc._ratingImage=top.firstChild;
img.src=_15da.baseUrl+"nav/common/styles/images/"+((doc.getRatingCount()>0)?"iconRating1.gif":"iconRating0.gif");
img.alt=this._appstrings.RECOMMEND.ADD_REMOVE;
var span=doc._ratingText=img.nextSibling;
var _1600=doc.getRatingCount();
span.title=(_1600!=1)?dojo.string.substitute(this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY,[dojo.number.format(_1600)]):this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE;
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_1600)));
td=td.nextSibling;
if(_15df){
td.style.width="40px";
}
var a=td.firstChild;
this.generateLinkToFile(doc,a,{section:"comments"});
a.title=this._appstrings.COMMENTS.VIEW_COMMENTS_FILE;
var _1601=doc.getCommentCount();
var img=a.firstChild;
img.src=_15da.baseUrl+"nav/common/styles/images/"+(_1601==0?"iconNoComments.gif":"iconComments.gif");
img.alt=this._appstrings.COMMENTS.VIEW_COMMENTS_FILE;
var span=img.nextSibling;
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_1601)));
span.title=(_1601!=1)?dojo.string.substitute(this._appstrings.COMMENTS.COMMENT_COUNT_MANY,[dojo.number.format(_1601)]):this._appstrings.COMMENTS.COMMENT_COUNT_ONE;
td=td.nextSibling;
if(_15df){
td.style.width="40px";
}
var a=aMore=td.firstChild;
a.title=this._strings.VIEW_EXTRA;
a.appendChild(d.createTextNode(this._strings.MORE));
var td=trd.lastChild;
var div=td.firstChild.firstChild;
quickr.share.util.createTextNode(d,div,doc.getDescription());
if(!div.firstChild){
td.removeChild(td.firstChild);
}else{
trd.style.display="";
}
if(_15e1){
el.replaceChild(tr,_15e1);
el.replaceChild(trd,_15e2);
}else{
el.appendChild(tbody.removeChild(tr));
el.appendChild(tbody.removeChild(trd));
}
doc.element=tr;
doc.elementDetails=trd;
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_15da,_15de));
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:tr,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
dojo.animateProperty({duration:2000,rate:100,node:trd,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
var after=new Date().getTime();
var time=after-_15e3;
if(time>0&&(!this.times.renderItemSummary||time<this.times.renderItemSummary)){
this.times.renderItemSummary=time;
}
},renderItemExpandSummary:function(_1604,data,item,_1607){
var d=document;
var doc=item;
var tr=doc.element;
var trd=doc.elementDetails;
var div_t=d.createElement("div");
var td=trd.lastChild;
if(this.getUserRecommendationUrl){
var _160e=div_t.cloneNode(true);
var rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny",editable:this.permissions.canRate(doc),timesRated:doc.getRatingCount(),userRecommended:doc.isUserRecommended(),urlRecommendation:this.getUserRecommendationUrl(doc.getAuthor().id,doc.getId()),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),_strings:doc.getCategory()=="page"?this._appstrings.RECOMMEND.PAGE:this._appstrings.RECOMMEND,net:this.net},_160e);
this.widgets.push(rater);
dojo.connect(rater,"onrecommend",null,dojo.hitch(this,this.onrecommend,data,_1607,_1604.baseUrl));
td.appendChild(_160e);
}
var tags=div_t.cloneNode(true);
td.appendChild(tags);
var _1611=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:this.permissions.canTag(item),docId:doc.getAtomId(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlAllTags:this.urlAllTags,tagStore:this.tagStore,tags:doc.getTags(),generateTagLink:dojo.hitch(this,this.generateLinkToTag),renderPopup:this.renderPopup,_strings:this._appstrings.TAGGER,net:this.net},tags);
this.widgets.push(_1611);
dojo.connect(_1611,"ontagchange",this,"ontagchange");
this.renderActionList(td,_1604,data,item);
this.renderHideLink(tr,trd);
},expandItemSummary:function(_1612,data,item,_1615){
var el=item.element;
var trd=item.elementDetails;
this.renderHideLink(el,trd);
var extra=trd.lastChild;
for(var i=0,child;child=extra.childNodes[i];i++){
if(!dojo.hasClass(child,"entry-summary")){
child.style.display="";
}
}
},collapseItemSummary:function(_161b,data,item,_161e){
var el=item.element;
var trd=item.elementDetails;
var a=el.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
a.removeChild(a.firstChild);
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
var extra=trd.lastChild;
for(var i=0,child;child=extra.childNodes[i];i++){
if(!dojo.hasClass(child,"entry-summary")){
child.style.display="none";
}
}
},updateItemSummary:function(_1625,data,el,item,_1629,_162a){
var d=document;
var div=_1629.element;
quickr.share.util.removeChildren(div);
var div2=_1629.elementDetails;
quickr.share.util.removeChildren(div2);
_1629.element=null;
this.delegate("renderItem",[_1625,el,data,item,_162a,_162a==0,_162a==data.itemByPosition.length-1,div,div2],null,item._qualifier);
if(_1629._isExpanded){
this.toggleItem(_1625,_162a);
}
},getSortsSummary:function(_162e,_162f){
return [{id:"name",name:this._appstrings.SORTS.TITLE,lowToHigh:true,tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"updated",name:this._appstrings.SORTS.MOSTRECENT,isDefault:true,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}},{id:"mostpopular",name:this._appstrings.SORTS.MOSTDOWNLOADED,tooltips:{normalOrder:this._appstrings.SORTS.MOSTDOWNLOADED_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTDOWNLOADED_TOOLTIP_REVERSE}},{id:"highestrated",name:this._appstrings.SORTS.HIGHESTRECOMMENDED,tooltips:{normalOrder:this._appstrings.SORTS.HIGHESTRECOMMENDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.HIGHESTRECOMMENDED_TOOLTIP_REVERSE}},{id:"mostcommented",name:this._appstrings.SORTS.MOSTCOMMENTED,tooltips:{normalOrder:this._appstrings.SORTS.MOSTCOMMENTED_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTCOMMENTED_TOOLTIP_REVERSE}}];
},renderDetails:function(_1630,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
if(size>0){
var _1637=d.createDocumentFragment();
var _1638=dojo._toArray(arguments);
_1638[1]=_1637;
var table=d.createElement("TABLE");
table.className="lotusTable wikiFixedTable";
table.cellSpacing=table.cellPadding=0;
var _163a=this.getSortInfo();
if(_163a){
var sorts=_163a.list;
var _163c=_163a.active;
var _163d=_163a.reversed;
var a_t=d.createElement("a");
var th_t=d.createElement("th");
var thead=d.createElement("THEAD");
var tr=d.createElement("TR");
tr.className="lotusSort";
var th=th_t.cloneNode(true);
th.style.width="20px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
for(var i=0,sort;sort=sorts[i];i++){
var th=th_t.cloneNode(true);
if(sort.className){
th.className=sort.className;
}
if(sort.width){
th.style.width=sort.width;
}
if(sort.isSortable!=false){
var a=a_t.cloneNode(true);
if(sort==_163c){
var asc=(sort.lowToHigh)?!_163d:_163d;
dojo.addClass(a,asc?"lotusAscending":"lotusDescending");
}
this.generateSortLink(_1630,sort,(sort!=_163c||_163d)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
if(sort==_163c){
var _1647=d.createElement("span");
_1647.className="lotusAltText";
_1647.appendChild(d.createTextNode(asc?" ▴ ":" ▾ "));
a.appendChild(_1647);
}
th.appendChild(a);
}else{
th.appendChild(d.createTextNode(sort.name));
}
tr.appendChild(th);
}
var th=d.createElement("TH");
th.style.width="40px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
thead.appendChild(tr);
table.appendChild(thead);
}
var tbody=d.createElement("TBODY");
for(var i=0;i<size;i++){
this.renderItem(_1630,tbody,data,items[i],i,i==0,(i==size-1));
}
table.appendChild(tbody);
_1637.appendChild(table);
this.updatePaging(_1630,el,data);
var _1649=dojo._toArray(el.childNodes);
for(var child,i=0;child=_1649[i];i++){
child.style.display="none";
}
el.replaceChild(_1637,_1649[0]);
for(var child,i=0;child=_1649[i];i++){
quickr.share.util.destroyWidgets(child);
if(child.parentNode){
child.parentNode.removeChild(child);
}
}
}else{
this.renderEmpty(_1630,el,data);
}
},renderSortingDetails:function(_164b,el,data){
},renderItemDetailsPage:function(_164e,el,data,doc,_1652,_1653,_1654,_1655,_1656){
var d=document;
var aMore;
var _1659=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _165c=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_1655)?_1655:d.createElement("TR");
tr.className="hentry";
if(_1653){
dojo.addClass(tr,"lotusFirst");
}
if(_1652%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _1661=div_t.cloneNode(true);
_1661.style.display="none";
var span=_165c.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_1661.appendChild(span);
var span=_165c.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_1661.appendChild(span);
var span=_165c.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_1661.appendChild(span);
td.appendChild(_1661);
var a=a_t.cloneNode(true);
this.generateLinkToPage(doc,a);
var img=img_t.cloneNode(true);
img.src=this.getPageImage(16);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_PAGE);
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getName()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getName();
this.generateLinkToPage(doc,adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _1667=doc.getShareCount();
var _1668=_1659.isOwner(doc);
var _1669=_1659.canEdit(doc);
var _166a=doc.getVisibility();
var nls=this._appstrings.PAGECONTENT;
var image,_166d,_166e;
if(_166a=="private"&&_1667==0){
_166d=nls.PRIVATE;
image="privateSmall.gif";
_1669=false;
}else{
if(_166a=="public"){
nls=nls.PUBLIC;
image="publicSmall.gif";
}else{
nls=nls.SHARED;
image="sharedSmall.gif";
}
if(_1667>1){
nls=(_1668?nls.BY:nls.WITH);
_166d=nls.MANY;
_166e=dojo.string.substitute(nls.MANY_1,[_1667]);
}else{
if(_1667==1){
nls=(_1668?nls.BY:nls.WITH);
_166d=nls.ONE;
_166e=nls.ONE_1;
}else{
_166d=nls.BASE;
}
}
}
var img=img_t.cloneNode(true);
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/"+image;
img.title=img.alt=dojo.string.substitute(_166d,[_166e]);
img.style.marginTop="1px";
img.style.height="16px";
td.appendChild(img);
tr.appendChild(td);
var count=doc.getTimesDownloaded();
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
td.title=dojo.string.substitute(this._appstrings.PAGECONTENT.DOWNLOAD_PAGE_AS_HTML_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
var a=a_t.cloneNode(true);
a.href=doc.getUrlDownload();
a.className="entry-content";
var img=img_t.cloneNode(true);
img.src=_164e.baseUrl+"/images/download-icon.gif";
img.alt=dojo.string.substitute(this._appstrings.PAGECONTENT.DOWNLOAD_PAGE_AS_HTML_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
a.appendChild(img);
var span=_165c.cloneNode(true);
span.className="lotusMeta";
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(count!=1?dojo.string.substitute(this._appstrings.CONTENT.DOWNLOADS,[dojo.number.format(count)]):this._appstrings.CONTENT.ONE_DOWNLOAD));
a.appendChild(span);
td.appendChild(a);
if(quickr.share.bean.File.isFilenameTooLong(doc.getName())){
var span=_165c.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.PAGECONTENT.DOWNLOAD_WARN));
if(this.renderPopup){
var _1670=this.renderPopup(span,span,this._appstrings.PAGECONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_1670);
}
td.appendChild(span);
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="added";
td.appendChild(new quickr.share.util.DateFormat(doc.getPublished()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
tr.appendChild(td);
var _1671=(doc.getPublished().getTime()!=doc.getUpdated().getTime());
var td=td_t.cloneNode(true);
td.className="updated";
if(_1671){
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="modifier";
if(_1671){
var a=a_t.cloneNode(true);
a.className="lotusPerson";
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="size lotusNowrap lotusAlignRight";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getSize())));
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
var a=aMore=a_t.cloneNode(true);
a.appendChild(d.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
a.href="javascript:;";
td.appendChild(a);
tr.appendChild(td);
if(!_1655){
el.appendChild(tr);
}
doc.element=tr;
var _1672=tr.childNodes.length;
var tr=(_1656)?_1656:d.createElement("TR");
tr.className="lotusDetails";
if(_1652%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_1672-1;
tr.appendChild(td);
if(!_1656){
el.appendChild(tr);
}
doc.elementExtra=tr;
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_164e,_1652));
},renderItemDetails:function(_1673,el,data,doc,_1677,_1678,_1679,_167a,_167b){
var d=document;
var aMore;
var _167e=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _1681=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_167a)?_167a:d.createElement("TR");
tr.className="hentry";
tr.itemPosition=_1677;
if(_1678){
dojo.addClass(tr,"lotusFirst");
}
if(_1677%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _1686=div_t.cloneNode(true);
_1686.style.display="none";
var span=_1681.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_1686.appendChild(span);
var span=_1681.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_1686.appendChild(span);
var span=_1681.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_1686.appendChild(span);
td.appendChild(_1686);
var a=a_t.cloneNode(true);
a.href=doc.getUrlDownload();
var img=img_t.cloneNode(true);
img.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),16);
img.setAttribute("alt",quickr.share.util.getExtension(doc.getName()));
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getName()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getName();
this.generateLinkToFile(doc,adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _168c=doc.getShareCount();
var _168d=_167e.isOwner(doc);
var _168e=_167e.canEdit(doc);
var _168f=doc.getVisibility();
var nls=this._appstrings.DOCUMENTCONTENT;
var image,_1692,_1693;
if(_168f=="private"&&_168c==0){
_1692=nls.PRIVATE;
image="privateSmall.gif";
_168e=false;
}else{
if(_168f=="public"){
nls=nls.PUBLIC;
image="publicSmall.gif";
}else{
nls=nls.SHARED;
image="sharedSmall.gif";
}
if(_168c>1){
nls=(_168d?nls.BY:nls.WITH);
_1692=nls.MANY;
_1693=dojo.string.substitute(nls.MANY_1,[_168c]);
}else{
if(_168c==1){
nls=(_168d?nls.BY:nls.WITH);
_1692=nls.ONE;
_1693=nls.ONE_1;
}else{
_1692=nls.BASE;
}
}
}
var img=img_t.cloneNode(true);
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/"+image;
img.title=img.alt=dojo.string.substitute(_1692,[_1693]);
img.style.marginTop="1px";
img.style.height="16px";
td.appendChild(img);
tr.appendChild(td);
var count=doc.getTimesDownloaded();
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
td.title=dojo.string.substitute(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
var a=a_t.cloneNode(true);
a.href=doc.getUrlDownload();
a.className="entry-content";
var img=img_t.cloneNode(true);
img.src=_1673.baseUrl+"/images/download-icon.gif";
img.alt=dojo.string.substitute(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
a.appendChild(img);
var span=_1681.cloneNode(true);
span.className="lotusMeta";
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(count!=1?dojo.string.substitute(this._appstrings.CONTENT.DOWNLOADS,[dojo.number.format(count)]):this._appstrings.CONTENT.ONE_DOWNLOAD));
a.appendChild(span);
td.appendChild(a);
if(quickr.share.bean.File.isFilenameTooLong(doc.getName())){
var span=_1681.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN));
if(this.renderPopup){
var _1695=this.renderPopup(span,span,this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_1695);
}
td.appendChild(span);
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="added";
td.appendChild(new quickr.share.util.DateFormat(doc.getPublished()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
tr.appendChild(td);
var _1696=(doc.getPublished().getTime()!=doc.getUpdated().getTime());
var td=td_t.cloneNode(true);
td.className="updated";
if(_1696){
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="modifier";
if(_1696){
var a=a_t.cloneNode(true);
a.className="lotusPerson";
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="size lotusNowrap lotusAlignRight";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getSize())));
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
var a=aMore=a_t.cloneNode(true);
a.appendChild(d.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
a.href="javascript:;";
td.appendChild(a);
tr.appendChild(td);
if(!_167a){
el.appendChild(tr);
}
doc.element=tr;
var _1697=tr.childNodes.length;
var tr=(_167b)?_167b:d.createElement("TR");
tr.className="lotusDetails";
if(_1677%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_1697-1;
tr.appendChild(td);
if(!_167b){
el.appendChild(tr);
}
doc.elementExtra=tr;
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:doc.element,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_1673,_1677));
},renderItemExpandDetailsPage:function(_1698,data,item,_169b){
var d=document;
var doc=item;
var el=doc.element;
var _169f=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
var div=div_t.cloneNode(true);
div.className="lotusChunk qkrWide entry-summary";
var _16a3=div_t.cloneNode(true);
_16a3.className="qkrWideInner";
quickr.share.util.createTextNode(d,_16a3,doc.getDescription());
div.appendChild(_16a3);
if(_16a3.firstChild){
extra.appendChild(div);
}
if(this.getUserRecommendationUrl){
var _16a4=div_t.cloneNode(true);
var rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny",editable:this.permissions.canRate(doc),timesRated:doc.getRatingCount(),userRecommended:doc.isUserRecommended(),urlRecommendation:this.getUserRecommendationUrl(doc.getAuthor().id,doc.getId()),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),_strings:this._appstrings.RECOMMEND.PAGE,net:this.net},_16a4);
this.widgets.push(rater);
dojo.connect(rater,"onrecommend",null,dojo.hitch(this,this.onrecommend,data,_169b,_1698.baseUrl));
extra.appendChild(_16a4);
}
var tags=div_t.cloneNode(true);
extra.appendChild(tags);
var _16a7=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:this.permissions.canTag(item),docId:doc.getAtomId(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlAllTags:this.urlAllTags,tags:doc.getTags(),tagStore:this.tagStore,generateTagLink:dojo.hitch(this,this.generateLinkToTag),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:this.net},tags);
this.widgets.push(_16a7);
dojo.connect(_16a7,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_1698,data,item);
this.renderHideLink(el,el.nextSibling);
},renderItemExpandDetails:function(_16a8,data,item,_16ab){
var d=document;
var doc=item;
var el=doc.element;
var _16af=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
var div=div_t.cloneNode(true);
div.className="lotusChunk qkrWide entry-summary";
var _16b3=div_t.cloneNode(true);
_16b3.className="qkrWideInner";
quickr.share.util.createTextNode(d,_16b3,doc.getDescription());
div.appendChild(_16b3);
if(_16b3.firstChild){
extra.appendChild(div);
}
if(this.getUserRecommendationUrl){
var _16b4=div_t.cloneNode(true);
var rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny",editable:this.permissions.canRate(doc),timesRated:doc.getRatingCount(),userRecommended:doc.isUserRecommended(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlRecommendation:this.getUserRecommendationUrl(doc.getAuthor().id,doc.getId()),_strings:this._appstrings.RECOMMEND,net:this.net},_16b4);
dojo.connect(rater,"onrecommend",null,dojo.hitch(this,this.onrecommend,data,_16ab,_16a8.baseUrl));
this.widgets.push(rater);
extra.appendChild(_16b4);
}
var tags=div_t.cloneNode(true);
extra.appendChild(tags);
var _16b7=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:this.permissions.canTag(item),docId:doc.getAtomId(),tags:doc.getTags(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlAllTags:this.urlAllTags,tagStore:this.tagStore,generateTagLink:dojo.hitch(this,this.generateLinkToTag),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:this.net},tags);
this.widgets.push(_16b7);
dojo.connect(_16b7,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_16a8,data,item);
this.renderHideLink(el,el.nextSibling);
},expandItemDetails:function(_16b8,data,item,_16bb){
var el=item.element;
this.renderHideLink(el,el.nextSibling);
},collapseItemDetails:function(_16bd,data,item,_16c0){
var el=item.element;
var a=el.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
a.removeChild(a.firstChild);
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
var extra=el.nextSibling;
extra.style.display="none";
},updateItemDetails:function(_16c4,data,el,item,_16c8,_16c9){
var d=document;
var tr=_16c8.element;
quickr.share.util.removeChildren(tr);
var extra=_16c8.elementExtra;
extra.style.display="none";
quickr.share.util.removeChildren(extra);
_16c8.element=null;
_16c8.elementExtra=null;
this.delegate("renderItem",[_16c4,el,data,item,_16c9,_16c9==0,_16c9==data.itemByPosition.length-1,tr,extra],null,item._qualifier);
if(_16c8._isExpanded){
this.toggleItem(_16c4,_16c9);
}
},getSortsDetails:function(_16cd,_16ce){
return [{id:"name",name:this._strings.COLUMN_NAME,lowToHigh:true,isDefault:true,width:"36%",tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"sharing",name:" ",isSortable:false,width:"25px"},{id:"downloads",name:" ",isSortable:false,width:"40px"},{id:"added",name:this._strings.COLUMN_ADDED,tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._strings.COLUMN_LAST_MODIFIED,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}},{id:"modifier",name:this._strings.COLUMN_LAST_MODIFIED_BY,isSortable:false},{id:"size",name:this._strings.COLUMN_SIZE,width:"60px",tooltips:{normalOrder:this._appstrings.SORTS.SIZE_TOOLTIP,reverseOrder:this._appstrings.SORTS.SIZE_TOOLTIP_REVERSE},className:"lotusCenter"},];
},renderActionList:function(el,_16d0,data,item){
var d=document;
var opt={permissions:this.permissions,getUnsavedChangesList:this.getUnsavedChangesList};
var _16d5=this.getActions(item)||[];
var li_t=d.createElement("li");
var a_t=d.createElement("a");
var ul=d.createElement("ul");
ul.className="lotusActions lotusInlinelist";
for(var i=0;i<_16d5.length;i++){
var _16da=_16d5[i];
if(_16da.isValid(item,opt)){
if(_16da.getSubActions){
var _16db=_16da;
var _16dc=_16da.getSubActions(item,opt);
var li=_16db.li=li_t.cloneNode(true);
if(!ul.firstChild){
li.className="lotusFirst";
}
li.appendChild(d.createTextNode(_16da.getLabel(item,opt)));
li.appendChild(d.createTextNode(" "));
for(var j=0;j<_16dc.length;j++){
var _16da=_16dc[j];
var a=a_t.cloneNode(true);
var url=_16da.getUrlResource(item,opt);
a.href=url||"javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_16da,_16da.execute,item,opt));
a.appendChild(d.createTextNode(_16da.getName(item,opt)));
a.title=_16da.getTooltip(item,opt);
li.appendChild(a);
li.appendChild(d.createTextNode(" "));
}
if(_16db.requiresExtra()){
_16db.addExtra(item,_16db.li);
}
ul.appendChild(li);
}else{
var li=li_t.cloneNode(true);
if(!ul.firstChild){
li.className="lotusFirst";
}
var a=a_t.cloneNode(true);
var url=_16da.getUrlResource(item,opt);
a.href=url||"javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_16da,_16da.execute,item,opt));
a.appendChild(d.createTextNode(_16da.getName(item,opt)));
a.title=_16da.getTooltip(item,opt);
li.appendChild(a);
if(_16da.requiresExtra()){
_16da.addExtra(item,li);
}
ul.appendChild(li);
}
}
}
if(ul.firstChild){
el.appendChild(ul);
}
},renderHideLink:function(tr,trd){
var a=tr.lastChild.firstChild;
dojo.addClass(a,"qkrMoreLinkOpen");
a.removeChild(a.firstChild);
a.appendChild(document.createTextNode(this._strings.HIDE));
a.title=this._appstrings.CONTENT.HIDE_EXTRA;
trd.style.display="";
},renderDivider:function(d,el){
var span=d.createElement("span");
span.className="lotusDivider";
span.appendChild(d.createTextNode("|"));
el.appendChild(span);
},getActions:function(item){
if(item&&item._qualifier=="page"){
return this.pageActions;
}
return this.actions;
},generateLinkToFile:function(doc,a){
a.href=doc.getUrlDownload();
},generateLinkToPage:function(doc,a){
a.href=doc.getUrlDownload();
},generateLinkToPerson:function(user,a){
var id=(typeof user=="object")?user.id:user;
a.href=this.baseUrl+"/public/people/"+encodeURIComponent(id);
},generateLinkToTag:function(tag,a){
a.href=this.baseUrl+"/public/tag/"+encodeURIComponent(tag);
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
},getPageImage:function(size){
return this.baseUrl+"/images/filetypes/page_"+size+".gif";
},renderShareLink:function(el,_16f5,_16f6,_16f7,_16f8,_16f9){
var d=document;
if(_16f6){
el.appendChild(d.createTextNode(dojo.string.substitute(_16f5,[_16f6])));
}else{
el.appendChild(d.createTextNode(_16f5));
}
},ontagchange:function(){
},onrecommend:function(data,_16fc,_16fd,_16fe,_16ff){
if(data&&data.itemByPosition&&data.itemByPosition[_16fc]){
var item=data.itemByPosition[_16fc];
if(item._ratingImage){
item._ratingImage.src=_16fd+"nav/common/styles/images/"+((_16ff>0)?"iconRating1.gif":"iconRating0.gif");
}
if(item._ratingText){
quickr.share.util.removeChildren(item._ratingText);
item._ratingText.appendChild(document.createTextNode(" "));
item._ratingText.appendChild(document.createTextNode(_16ff));
item._ratingText.title=dojo.string.substitute(((_16ff!=1)?this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY:this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE),[dojo.number.format(_16ff)]);
}
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.WikiStatsStreamRenderer"]){
dojo._hasResource["quickr.share.wiki.widget.WikiStatsStreamRenderer"]=true;
dojo.provide("quickr.share.wiki.widget.WikiStatsStreamRenderer");
dojo.declare("quickr.share.wiki.widget.WikiStatsStreamRenderer",[quickr.widget.StreamRenderer],{compact:false,templateString:"<div class=\"${baseClass}\">\n\t<div dojoAttachPoint=\"streamNode\"></div>\n</div>\n",_strings:{},render:function(_1701,el,data,item){
this.cleanup();
data.itemById={};
data._previousElement=null;
this.baseUrl=_1701.baseUrl;
quickr.widget.FileStreamRenderer.superclass.render.apply(this,arguments);
},renderItem:function(_1705,el,data,item,_1709,_170a,_170b){
item=new quickr.share.bean.Event(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
item._position=_1709;
var date=item.getPublished();
var _170d=data._previousElement;
if(!_170d){
_170d=this.renderItemsContainer(_1705,el,date);
data._previousElement=_170d;
}
this.renderItemLine(_1705,_170d,data,item,_1709,_170a,_170b);
if(_1709==data.paging.items-1){
this.renderPager(_1705,_170d,data);
}
},renderPager:function(_170e,el,data){
},renderItemsContainer:function(_1711,el,date){
var d=document;
var h2=d.createElement("h2");
h2.appendChild(d.createTextNode(this.listTitle));
el.appendChild(h2);
var chunk=d.createElement("div");
chunk.className="lotusChunk";
var ul=d.createElement("ul");
ul.className="wikiFullWidth lotusList lotusEditable lotusMeta";
chunk.appendChild(ul);
el.appendChild(chunk);
return ul;
},renderItemLine:function(_1718,el,data,item,_171c,_171d,_171e){
var d=document;
var _1720=item.e.getElementsByTagName("author")[0];
var line={title:item.getTitle(),authorName:quickr.share.util.getChildElementTextContent(_1720,"name"),authorId:decodeURIComponent(quickr.share.util.getChildElementTextContent(_1720,"uri")),authorEmail:decodeURIComponent(quickr.share.util.getChildElementTextContent(_1720,"email")),rank:quickr.share.util.getChildElementTextContentNS(item.e,"rank",quickr.share.util.SNX_NAMESPACE),label:quickr.share.util.getChildElementTextContentNS(item.e,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),node:item.e};
var li=d.createElement("li");
var a=d.createElement("a");
a.className="lotusLeft";
var title;
if(line.title.length>25){
title=line.title.substring(0,21)+"...";
}else{
title=line.title;
}
a.appendChild(d.createTextNode(title));
this.generateLinkToWiki({title:line.label},a);
li.appendChild(a);
if(this.listIcon){
var img=d.createElement("img");
img.src=this.listIcon;
img.setAttribute("alt",this._strings.CONTENT.HITS);
li.appendChild(img);
}
var sp=d.createElement("span");
sp.appendChild(d.createTextNode(line.rank));
li.appendChild(sp);
el.appendChild(li);
},renderEmpty:function(_1727,el,data){
var d=document;
quickr.share.util.removeChildren(el);
var _172b=this.renderItemsContainer(_1727,el,data);
var li=d.createElement("li");
li.className="qkrEmpty";
li.appendChild(d.createTextNode(this._strings.WIKI_HOME.SIDEBAR.NO_ITEMS));
_172b.appendChild(li);
},updatePaging:function(s,el,data){
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.AllWikis"]){
dojo._hasResource["quickr.share.wiki.scenes.AllWikis"]=true;
dojo.provide("quickr.share.wiki.scenes.AllWikis");
dojo.declare("quickr.share.wiki.scenes.AllWikis",[quickr.share.wiki.scenes.MyWikis],{defaultSearchScope:"allwikis",views:quickr.share.wiki.scenes.WIKI_VIEWS,dateFilters:quickr.share.scenes.CHANNEL_FILTERS.DATE,sorts:[{id:"updated",sK:"updated"},{id:"added",sK:"published"},{id:"name",sK:"title",lowToHigh:true}],begin:function(_1732){
this.show();
},end:function(_1733){
},hideWelcome:function(){
this.app.prefs.put("nww",1);
var el=this.app.d.getElementById("welcome");
if(el){
el.style.display="none";
if(el.nextSibling){
dojo.removeClass(el.nextSibling,"lotusSection");
}
}
},initFilters:function(p){
},getListUrl:function(_1736,opts){
var p={pageSize:10,includeTags:true};
opts=opts||{};
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _1739=!this.activeSort.lowToHigh;
if(this.sortReversed){
_1739=!_1739;
}
p.sortDescending=_1739;
}
for(var i=0;i<this.activeFilters.length;i++){
var _173b=this.activeFilters[i];
if(_173b.setServiceOptions){
_173b.setServiceOptions(p);
}
}
return this.app.routes.getAllWikisFeedServiceUrl(p);
},show:function(){
var d=this.app.document;
var app=this.app;
var user=app.authenticatedUser;
d.title=this.app.nls.WINDOWTITLE.PUBLICWIKIS;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(user?user.id:null)});
var _173f=dojo.getObject("quickr.share.config.actions.allWikis");
var _1740=this.wikiActions=(_173f)?_173f(app,this,{}):[];
for(var i=0;i<_1740.length;i++){
if(_1740[i].onupload){
dojo.connect(_1740[i],"onupload",this,"onupload");
}
}
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"allWikis",defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.AllWikis.render(d,this.app,this);
var _1742=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_1742,this.app,this,this.app.authenticatedUser,true,false);
var _1743={_strings:app.nls.CONTENT,_appstrings:app.nls,permissions:this.permissions,activeTagFiltersEnabled:this.activeFilters.length>0?true:false,tagStore:app.getTagTypeAheadStore(),urlAllTags:app.routes.getTagServiceUrl(),generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),generateLinkToPage:dojo.hitch(null,function(app,_1745,_1746,doc,link,_1749){
var _1749=_1749||{};
quickr.share.scenes.setOnClick(link,app,_1745.getWikiPageUrl(_1746,doc.getModifiedItem()));
},app,app.routes),generateLinkToWiki:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.generateLinkToWiki,app,app.routes),generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,this.app,this.app.routes,this.authenticatedUser?this.authenticatedUser.id:null,{},true,true,false),getUserRecommendationUrl:dojo.hitch(app.routes,app.routes.getRecommendServiceUrl),generateSortLink:dojo.hitch(null,quickr.share.wiki.scenes.AllWikis.generateSortLink,app,app.routes,this.params),generateLinkToTaggedPages:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.applyTaggedPagesPopup,this.app),getUnsavedChangesList:dojo.hitch(app,app.getUnsavedChangesList),sortId:this.sortId,sortReversed:this.sortReversed,app:app,routes:app.routes,view:this.activeView.id};
var _174a=new quickr.share.wiki.widget.AllWikisStreamRenderer(_1743);
var list=this.list=new quickr.widget.Stream({id:"list",baseClass:"lotusStream",renderer:_174a,msgNoData:app.nls.WIKI_HOME.SIDEBAR.NO_ITEMS,_strings:app.nls.CONTENT,url:this.getListUrl(this.app.authenticatedUser),net:app.net},d.getElementById("scene-list"));
dojo.connect(_174a,"ontagchange",this,"ontagchange");
list.update();
var _174c=new quickr.share.wiki.widget.WikiStatsStreamRenderer({_strings:this.app.nls,listIcon:(dojo.getObject("quickr.share.config.baseUri")||"")+"images/page_hits.gif",generateLinkToWiki:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.generateLinkToWiki,app,app.routes),listTitle:this.app.nls.WIKI_HOME.SIDEBAR.MOSTVISITS});
var list=this.wikiVisitsList=new quickr.widget.Stream({id:"mostVisitedWikis",baseClass:"lotusStream lotusSection",_strings:this.app.nls.CONTENT,url:this.app.routes.getMostVisitedWikisFeedServiceUrl({pageSize:5}),renderer:_174c,net:this.app.net},d.getElementById("mostvisited-wikis-list"));
this.wikiVisitsList.update();
var _174d=new quickr.share.wiki.widget.WikiStatsStreamRenderer({_strings:this.app.nls,listIcon:(dojo.getObject("quickr.share.config.baseUri")||"")+"nav/common/styles/images/iconRating1.gif",generateLinkToWiki:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.generateLinkToWiki,app,app.routes),listTitle:this.app.nls.WIKI_HOME.SIDEBAR.MOSTRECOMMENDED});
var list=this.wikiVisitsList=new quickr.widget.Stream({id:"mostRecommendedWikis",baseClass:"lotusStream lotusSection lotusFirst",_strings:this.app.nls.CONTENT,url:this.app.routes.getMostRecommendedWikisFeedServiceUrl({pageSize:5}),renderer:_174d,net:this.app.net},d.getElementById("mostrecommended-wikis-list"));
this.wikiVisitsList.update();
d.body.style.visibility="visible";
},ontagchange:function(){
if(this.taglist){
this.taglist.reload();
}
},onSelectTypeAheadTag:function(){
var app=this.app;
var _174f=app.routes;
var tag=quickr.util.text.trim(this.tagSearchCombo.value);
if(tag&&tag!=this.tagSearchCombo.textbox.defaultValue){
app.navigate(_174f.getTaggedWikisUrl({tag:tag}));
}
}});
quickr.share.wiki.scenes.AllWikis.generateSortLink=function(app,_1752,_1753,_1754,sort,_1756,a){
var p=dojo.clone(_1753);
p.sort=sort.id;
p.sortReversed=!_1756;
delete p.page;
var url=_1752.getAllWikisUrl(p);
quickr.share.scenes.setOnClick(a,app,url);
if(sort.tooltips){
a.title=(_1756)?sort.tooltips.normalOrder:a.title=sort.tooltips.reverseOrder;
}
};
quickr.share.wiki.scenes.AllWikis.render=function(d,app,scene){
var _175d=app.routes;
var _175e=app.authenticatedUser;
var _175f=scene.activeFilters;
var _1760=scene.wikiActions;
var _1761=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="allWikis"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
quickr.share.wiki.scenes.MyWikis.applySideNav(d,el,app,scene,_175e);
c.appendChild(el);
var el=quickr.share.scenes.applySidebar(d,c,scene,app,true);
quickr.share.wiki.scenes.AllWikis.applySidebar(d,el,app,scene,_175e);
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var _1764=(dojo.getObject("quickr.share.config.actions.draftList")||function(){
return [];
})(app,scene);
quickr.share.scenes.applyUnsavedChangesAlert(app,el,_1764);
var _1765=app.prefs.get("nww");
if(!_1765){
quickr.share.wiki.scenes.applyWelcome(app,el,scene);
}
var _1766=d.createElement("div");
_1766.className="lotusHeader";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(app.nls.HEADER.PUBLICWIKIS));
_1766.appendChild(h1);
var div=d.createElement("div");
if(_175f.length>0){
div.className="lotusFilters";
div.appendChild(d.createTextNode(app.nls.WIKI_TAGS.WHATTAGS));
for(var i=0;i<_175f.length;i++){
var args;
if(_175f[i]&&_175f[i].removeAppParams){
args=dojo.clone(_1761);
_175f[i].removeAppParams(args);
}else{
args={};
}
div.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.className="lotusFilter";
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
a.appendChild(d.createTextNode(_175f[i].longName));
quickr.share.scenes.setOnClick(a,app,_175d.getMyWikisUrl(app.authenticatedUser.id,args));
var span=d.createElement("span");
span.className="lotusClose";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
div.appendChild(a);
}
}
_1766.appendChild(div);
el.appendChild(_1766);
var div=d.createElement("div");
div.className="lotusBtnContainer lotusActionBar";
scene.renderView(d,div);
var opt={permissions:scene.permissions};
for(var i=0;i<_1760.length;i++){
var _176e=_1760[i];
if(_176e.isValid()){
var span=d.createElement("SPAN");
span.id="newButton";
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("A");
a.href=_176e.getUrlResource(_175e,opt)||"javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_176e,_176e.execute));
a.appendChild(d.createTextNode(_176e.getName(_175e,opt)));
span.appendChild(a);
div.appendChild(span);
}
}
var clear=d.createElement("div");
clear.className="lotusClear";
clear.innerHTML="<!-- IE -->";
div.appendChild(clear);
el.appendChild(div);
var div=d.createElement("div");
div.id="scene-list";
el.appendChild(div);
c.appendChild(el);
c.activeTemplate="allWikis";
}
};
quickr.share.wiki.scenes.AllWikis.applySidebar=function(d,el,app,scene,_1774){
var div=d.createElement("div");
div.id="mostrecommended-wikis-list";
el.appendChild(div);
var div=d.createElement("div");
div.id="mostvisited-wikis-list";
el.appendChild(div);
};
}
if(!dojo._hasResource["quickr.share.wiki.widget.TaggedWikisStreamRenderer"]){
dojo._hasResource["quickr.share.wiki.widget.TaggedWikisStreamRenderer"]=true;
dojo.provide("quickr.share.wiki.widget.TaggedWikisStreamRenderer");
dojo.declare("quickr.share.wiki.widget.TaggedWikisStreamRenderer",[quickr.share.wiki.widget.MyWikiStreamRenderer],{renderItemDetails:function(_1776,el,data,doc,_177a,_177b,_177c,_177d,_177e){
var d=document;
var _1780=(doc.getSystemLastModified().getTime()!=doc.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var line={};
line.tags=doc.getTags();
line.wikiLabel=doc.getLabel();
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _1784=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=_177d;
var trd=_177e;
tr.itemPosition=_177a;
var td=tr.firstChild;
var img=td.firstChild;
img.src=this.getWikiImage(24);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_WIKI);
td=td.nextSibling;
var a=td.firstChild.firstChild;
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(doc.getTitle()));
a.title=doc.getTitle();
this.generateLinkToWiki({label:doc.getLabel()},a);
if(a.nextSibling){
a.parentNode.removeChild(a.nextSibling);
}
if(doc.isCommunityWiki()){
this.generateLinkToCommunity(d,_1776,a.parentNode,a,doc);
}
var div=td.firstChild.nextSibling;
var span=div.firstChild;
var a=span;
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
span=span.nextSibling.nextSibling;
var df=new quickr.share.util.DateFormat(doc.getSystemLastModified());
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(df.formatByAge(_1780)));
span.title=(_1780&&_1780.FULL)?df.format(_1780.FULL):df.format(df.nls().DATE.RELATIVE_TIME.FULL);
span=span.nextSibling.nextSibling;
quickr.share.util.removeChildren(span);
span.className="lotusTags";
span.appendChild(d.createTextNode(this._appstrings.WIKI_CREATE.TAGS_LABEL));
span.appendChild(d.createTextNode(" "));
if(line.tags.length>0){
for(var i=0;i<line.tags.length;i++){
var an=d.createElement("a");
an.className="lotusTag";
this.generateLinkToTag(line.tags[i],an);
an.appendChild(d.createTextNode(line.tags[i]));
span.appendChild(an);
if(i<line.tags.length-1){
span.appendChild(d.createTextNode(", "));
}
}
}else{
var sp=d.createElement("span");
sp.style.fontStyle="italic";
sp.appendChild(d.createTextNode(this._appstrings.TAGGER.NONE));
span.appendChild(sp);
}
td=td.nextSibling;
quickr.share.util.removeChildren(td.firstChild);
var td=trd.lastChild;
var div=td.firstChild.firstChild;
quickr.share.util.removeChildren(div);
trd.style.display="none";
var old=td.firstChild.nextSibling;
while(old){
var next=old.nextSibling;
quickr.share.util.destroyWidgets(old);
old.parentNode.removeChild(old);
old=next;
}
this.renderShowLink(tr);
doc.element=tr;
doc.elementDetails=trd;
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:tr,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
dojo.animateProperty({duration:2000,rate:100,node:trd,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.TaggedWikis"]){
dojo._hasResource["quickr.share.wiki.scenes.TaggedWikis"]=true;
dojo.provide("quickr.share.wiki.scenes.TaggedWikis");
dojo.declare("quickr.share.wiki.scenes.TaggedWikis",[quickr.share.wiki.scenes.MyWikis],{begin:function(_1794){
if(!this.params.tag){
this.app.load(this.app.routes.getGlobalHomeUrl());
}else{
this.show();
}
},getListUrl:function(_1795,opts){
var p={pageSize:10,includeTags:true};
opts=opts||{};
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _1798=!this.activeSort.lowToHigh;
if(this.sortReversed){
_1798=!_1798;
}
p.sortDescending=_1798;
}
for(var i=0;i<this.activeFilters.length;i++){
var _179a=this.activeFilters[i];
if(_179a.setServiceOptions){
_179a.setServiceOptions(p);
}
}
var url=this.app.routes.getTaggedWikisFeedServiceUrl(p);
return url;
},show:function(){
var d=this.app.document;
var app=this.app;
d.title=this.app.nls.WINDOWTITLE.WHATSNEW;
var _179e=app.authenticatedUser;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_179e?_179e.id:null),canTag:function(){
return false;
}});
var _179f=dojo.getObject("quickr.share.config.actions.myWikiAction");
var _17a0=this.wikiActions=(_179f)?_179f(app,this,{}):[];
for(var i=0;i<_17a0.length;i++){
if(_17a0[i].onupload){
dojo.connect(_17a0[i],"onupload",this,"onupload");
}
}
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"home"});
quickr.share.wiki.scenes.TaggedWikis.render(d,this.app,this);
var _17a2=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_17a2,this.app,this,this.app.authenticatedUser,true,false);
var _17a3={_strings:app.nls.CONTENT,_appstrings:app.nls,permissions:this.permissions,activeTagFiltersEnabled:this.activeFilters.length>0?true:false,tagStore:app.getTagTypeAheadStore(),urlAllTags:app.routes.getTagServiceUrl(),sortId:this.sortId,sortReversed:this.sortReversed,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),generateLinkToWiki:dojo.hitch(null,function(app,_17a5,_17a6,link){
quickr.share.scenes.setOnClick(link,app,_17a5.getWikiUrl(_17a6.label));
},this.app,this.app.routes),generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,this.app,this.app.routes,this.authenticatedUser?this.authenticatedUser.id:null,{},true,true,false),getUserRecommendationUrl:dojo.hitch(app.routes,app.routes.getRecommendServiceUrl),generateLinkToTaggedPages:dojo.hitch(null,quickr.share.wiki.scenes.MyWikis.applyTaggedPagesPopup,this.app),generateSortLink:dojo.hitch(null,quickr.share.wiki.scenes.TaggedWikis.generateSortLink,app,app.routes,null,this.params),getUnsavedChangesList:dojo.hitch(app,app.getUnsavedChangesList),app:app,routes:app.routes};
var _17a8=new quickr.share.wiki.widget.TaggedWikisStreamRenderer(_17a3);
var list=this.list=new quickr.widget.Stream({id:"list",baseClass:"lotusStream",renderer:_17a8,msgNoData:app.nls.WIKI_HOME.SIDEBAR.NO_ITEMS,_strings:app.nls.CONTENT,url:this.getListUrl(this.app.authenticatedUser),net:app.net},d.getElementById("scene-list"));
dojo.connect(_17a8,"ontagchange",this,"ontagchange");
list.update();
d.body.style.visibility="visible";
},ontagchange:function(){
if(this.taglist){
this.taglist.reload();
}
},onSelectTypeAheadTag:function(){
var app=this.app;
var _17ab=app.routes;
var tag=quickr.util.text.trim(this.tagSearchCombo.value);
if(tag&&tag!=this.tagSearchCombo.textbox.defaultValue){
app.navigate(_17ab.getTaggedWikisUrl({tag:tag}));
}
}});
quickr.share.wiki.scenes.TaggedWikis.generateSortLink=function(app,_17ae,_17af,_17b0,_17b1,sort,_17b3,a){
var p=dojo.clone(_17b0);
p.sort=sort.id;
p.sortReversed=!_17b3;
delete p.page;
var url=_17ae.getTaggedWikisUrl(p);
quickr.share.scenes.setOnClick(a,app,url);
if(sort.tooltips){
a.title=(_17b3)?sort.tooltips.normalOrder:a.title=sort.tooltips.reverseOrder;
}
};
quickr.share.wiki.scenes.TaggedWikis.render=function(d,app,scene){
var _17ba=app.routes;
var _17bb=app.authenticatedUser;
var _17bc=scene.activeFilters;
var _17bd=scene.wikiActions;
var _17be=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="myWikis"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
quickr.share.wiki.scenes.MyWikis.applySideNav(d,el,app,scene,_17bb);
c.appendChild(el);
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var _17c1=(dojo.getObject("quickr.share.config.actions.draftList")||function(){
return [];
})(app,scene);
quickr.share.scenes.applyUnsavedChangesAlert(app,el,_17c1);
var _17c2=d.createElement("div");
_17c2.className="lotusHeader";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(app.nls.HEADER.TAGGEDWIKIS));
_17c2.appendChild(h1);
var div=d.createElement("div");
if(_17bc.length>0){
div.className="lotusFilters";
div.appendChild(d.createTextNode(app.nls.WIKI_TAGS.WITHTAGS));
for(var i=0;i<_17bc.length;i++){
var args;
var _17c7=false;
if(_17bc[i]&&_17bc[i].removeAppParams){
args=dojo.clone(_17be);
_17bc[i].removeAppParams(args);
}else{
_17c7=true;
args={};
}
div.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.className="lotusFilter";
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
a.appendChild(d.createTextNode(_17bc[i].longName));
quickr.share.scenes.setOnClick(a,app,_17c7?_17ba.getGlobalHomeUrl():_17ba.getTaggedWikisUrl(args));
var span=d.createElement("span");
span.className="lotusClose";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
div.appendChild(a);
}
}
_17c2.appendChild(div);
el.appendChild(_17c2);
var div=d.createElement("div");
div.id="scene-list";
el.appendChild(div);
c.appendChild(el);
c.activeTemplate="myWikis";
}
};
}
if(!dojo._hasResource["lconn.core.Res"]){
dojo._hasResource["lconn.core.Res"]=true;
dojo.provide("lconn.core.Res");
dojo.declare("lconn.core.Res",[],{bundleFor:"lconn.core",resBundle:null,loadDefaultBundle:function(){
this.resBundle=dojo.i18n.getLocalization(this.bundleFor,"strings");
},loadBundle:function(pkg){
this.resBundle=dojo.i18n.getLocalization(pkg,"strings");
},getDefaultBundle:function(){
return dojo.i18n.getLocalization(this.bundleFor,"strings");
},getBundle:function(pkg){
return dojo.i18n.getLocalization(pkg,"strings");
},getStringFrom:function(pkg,key,_17ce){
var _17cf=dojo.i18n.getLocalization(pkg,"strings")[key];
if(_17ce==undefined){
return _17cf;
}else{
return dojo.string.substitute(_17cf,_17ce);
}
},getString:function(key,_17d1){
var _17d2=dojo.i18n.getLocalization(this.bundleFor,"strings")[key];
if(_17d1==undefined){
return _17d2;
}else{
return dojo.string.substitute(_17d2,_17d1);
}
}});
}
if(!dojo._hasResource["lconn.core.DateUtil"]){
dojo._hasResource["lconn.core.DateUtil"]=true;
dojo.provide("lconn.core.DateUtil");
var w={};
w.MILLS_IN_DAY=86400000;
w.inited=null;
w.Today="Error: not inited";
w.Yesterday="Error: not inited";
w.Tomorrow="Error: not inited";
w.initResStrings=function(){
var res=new lconn.core.Res();
res.loadDefaultBundle();
var b=res.resBundle;
this.Today=b.rs_today;
this.Yesterday=b.rs_yesterday;
this.Tomorrow=b.rs_tomorrow;
this.inited=true;
};
w.delta=function(_17d5,date){
var diff=_17d5.getTime()-date;
var _17d8=Math.ceil(diff/(this.MILLS_IN_DAY));
return _17d8;
};
w.toString=function(date,_17da){
var _17db;
if(!date||!(_17db=Date.parse(date))){
console.log("Invalid date passed to DateUtil.toString(): "+date);
return;
}
if(this.Days==null){
this.Days=dojo.i18n.getLocalization("dojo.cldr","gregorian")["days-format-wide"];
}
if(this.Month==null){
this.Month=dojo.i18n.getLocalization("dojo.cldr","gregorian")["months-format-abbr"];
}
if(this.inited==null){
this.initResStrings();
}
var _17dc=new Date();
_17dc.setHours(0,0,0,0);
var _17dd=new Date();
_17dd.setTime(_17db);
var _17de=this.delta(_17dc,_17db);
var _17df="";
if(_17de<=2&&_17de>=-2){
if(_17de==2){
if(_17da===undefined){
_17df=this.Days[_17dd.getDay()]+" "+this.getLocalizedTime(_17dd);
}else{
_17df=this.Days[_17dd.getDay()];
}
}else{
if(_17de==1){
if(_17da===undefined){
_17df=this.Yesterday+" "+this.getLocalizedTime(_17dd);
}else{
_17df=this.Yesterday;
}
}else{
if(_17de==0){
if(_17da===undefined){
_17df=this.Today+" "+this.getLocalizedTime(_17dd);
}else{
_17df=this.Today;
}
}else{
if(_17de==-1){
_17df=this.Tomorrow;
}else{
if(_17de==-2){
_17df=this.Days[_17dd.getDay()];
}
}
}
}
}
}else{
if(_17dc.getFullYear()==_17dd.getFullYear()){
var _17e0=djConfig.locale.substring(0,2).toLowerCase();
var _17e1="";
if(djConfig.locale.length>2){
_17e1=djConfig.locale.substring(3,5).toLowerCase();
}
if(_17e0=="en"&&(_17e1==""||_17e1=="us")){
_17df=this.Month[_17dd.getMonth()]+" "+_17dd.getDate();
}else{
_17df=this.getLocalizedDate(_17dd);
}
}else{
var _17e0=djConfig.locale.substring(0,2).toLowerCase();
var _17e1="";
if(djConfig.locale.length>2){
_17e1=djConfig.locale.substring(3,5).toLowerCase();
}
if(_17e0=="en"&&(_17e1==""||_17e1=="us")){
_17df=this.Month[_17dd.getMonth()]+" "+_17dd.getDate()+" "+_17dd.getFullYear();
}else{
_17df=this.getLocalizedDate(_17dd);
}
}
}
return _17df;
};
w.getLocalizedTime=function(date){
return dojo.date.locale.format(date,{selector:"time",formatLength:"short",locale:djConfig.locale});
};
w.getLocalizedDate=function(date){
return dojo.date.locale.format(date,{selector:"date",formatLength:"medium",locale:djConfig.locale});
};
w.getLocaleString=function(date){
var _17e5=new Date();
_17e5.setTime(date);
return _17e5.toLocaleString();
};
lconn.core.DateUtil=w;
lconn.core.DateUtil.AtomDateToString=function(_17e6){
var _17e7=_17e6;
var s=_17e6;
var _17e9=(s.charAt(s.length-1)=="Z");
var _17ea=s.indexOf("-");
if(s.length>="yyyy-mm-ddThh:mm".length){
s=s.substring(_17ea-4);
var y=parseInt(s.substr(0,4));
var m=parseInt(s.substr(5,2),10)-1;
var d=parseInt(s.substr(8,2),10);
var h=parseInt(s.substr(11,2),10);
var mi=parseInt(s.substr(14,2),10);
var utc=0;
if(_17e9){
var _17f1=s.substring(17,s.length-1);
var _17f2=parseFloat(_17f1);
utc=Date.UTC(y,m,d,h,mi)+_17f2*1000;
}else{
var zh=0;
var zm=0;
var _17f5=s.length-6;
var _17f6=s.charAt(_17f5);
if((_17f6=="+"||_17f6=="-")&&s.indexOf("T")<s.length-5){
var se=parseInt(s.substr(17,2),10);
var zh=parseInt(s.substr(_17f5,3),10);
var zm=parseInt(s.substr(_17f5+4,2),10);
}
utc=Date.UTC(y,m,d,h,mi,se)-(zh*60*60*1000+zm*60*1000);
}
var _17f8=new Date(utc);
_17e7=lconn.core.DateUtil.toString(_17f8);
}
return _17e7;
};
}
if(!dojo._hasResource["lconn.dboard.utils.DateFormater"]){
dojo._hasResource["lconn.dboard.utils.DateFormater"]=true;
dojo.provide("lconn.dboard.utils.DateFormater");
djConfig=dojo.config;
dojo.declare("lconn.dboard.utils.DateFormater",null,{formatDateTime:function(date){
var d=date instanceof Date?date:dojo.date.stamp.fromISOString(date);
var _17fb=null;
try{
_17fb=lconn.core.DateUtil.toString(d);
}
catch(ignoreException){
}
return _17fb;
}});
}
if(!dojo._hasResource["lconn.dboard.Menu"]){
dojo._hasResource["lconn.dboard.Menu"]=true;
dojo.provide("lconn.dboard.Menu");
dojo.declare("lconn.dboard.PopupClass",null,{open:{},returnFocusElement:false,numOpenPopups:0,passedState:{},toggler:null,HIGH_CONTRAST:false,CONTAINER:"oa-popup-container",constructor:function(){
},show:function(id,event,_17fe){
_17fe=_17fe||{};
if(this.isOpen(id)){
this.hide(id);
}else{
if(_17fe.focus){
this.returnFocusElement=_17fe.focus;
}
event=dojo.fixEvent(event);
var _17ff=event.target;
var _1800=dojo.byId(id);
var _1801={element:_1800,state:_17fe.state||{},placement:_17fe.placement||"",callFunction:_17fe.closeFunction||""};
this._placePopup(_1800,_17ff,_1801.placement);
this.open[id]=_1801;
this.numOpenPopups++;
if(!this.isHighContrast()){
var _1802=this.calculatePosition(_1800,_17ff,event,_1801.placement);
new Popup.Effect.Appear(id,_1802.left,_1802.top);
}else{
_1800.style.position="static";
_1800.style.display="block";
}
dojo.stopEvent(event);
}
},_placePopup:function(_1803,_1804,_1805){
if(!this.isHighContrast()){
var _1806=this.getPopupContainer();
_1806.appendChild(_1803);
}else{
var _1807=_1804;
while(Element.getStyle(_1807,"display")!="block"){
_1807=_1807.parentNode;
}
if(_1807.nextSibling){
_1807.parentNode.insertBefore(_1803,_1807.nextSibling);
}else{
_1807.parentNode.appendChild(_1803);
}
}
},hide:function(id,_1809){
var _180a=dojo.byId(id);
new Popup.Effect.Fade(_180a);
var popup=this.open[id];
this.numOpenPopups--;
if(this.numOpenPopups==0&&this.returnFocusElement){
dojo.byId(this.returnFocusElement).focus();
this.returnFocusElement=false;
}
this.open[id]=false;
if(dojo.isString(popup.callFunction)){
eval(popup.callFunction);
}else{
if(dojo.isFunction(popup.callFunction)){
popup.callFunction();
}
}
},isOpen:function(id){
var popup=this.open[id];
return popup!=false&&popup!==null&&popup!==undefined;
},getState:function(id){
return this.open[id].state;
},getReturnFocus:function(){
return this.returnFocusElement;
},clearReturnFocus:function(){
var _180f=this.returnFocusElement;
this.returnFocusElement=false;
return _180f;
},getPopupContainer:function(){
var _1810=dojo.byId(this.CONTAINER);
if(_1810==null){
var _1810=document.createElement("div");
_1810.setAttribute("id",this.CONTAINER);
_1810.setAttribute("style","position: absolute; left: 0px; top: 0px; z-index: 900;");
document.body.appendChild(_1810);
}
return _1810;
},menuGetOffsetTop:function(pElem,pOTOP){
var _1813=0;
var _1814=pElem;
while(_1814){
_1813+=_1814.offsetTop;
_1814=_1814.offsetParent;
if(_1814){
_1813-=_1814.scrollTop;
}
}
return _1813;
},menuGetOffsetLeft:function(pElem,_1816){
var _1817=0;
var _1818=pElem;
while(_1818){
_1817+=_1818.offsetLeft;
_1818=_1818.offsetParent;
if(_1818){
_1817-=_1818.scrollLeft;
}
}
return _1817;
},calculatePosition:function(_1819,_181a,event,_181c){
var _181d;
if(_181c==""){
if(typeof (bidir)!="undefined"&&bidir!=null&&bidir=="rtl"){
_181d=(_1819.offsetWidth>0)?_1819.offsetWidth:175;
_181d=24-_181d;
}else{
_181d=_181a.offsetWidth-24;
}
var _181e=(this.menuGetOffsetTop(_181a,0)+_181a.offsetHeight-10);
var _181f=(this.menuGetOffsetLeft(_181a,0)+_181d);
}else{
_181d=0;
var _1820=_181c.split(",");
switch(_1820[0]){
case "left":
_181f=this.menuGetOffsetLeft(_181a,0);
break;
case "right":
_181f=this.menuGetOffsetLeft(_181a,0)+_181a.offsetWidth;
break;
default:
_181f=parseInt(_1820[0]);
}
switch(_1820[1]){
case "above":
_181e=this.menuGetOffsetTop(_181a,0)-_1819.offsetHeight;
break;
case "top":
_181e=this.menuGetOffsetTop(_181a,0);
break;
case "bottom":
_181e=this.menuGetOffsetTop(_181a,0)+_181a.offsetHeight;
break;
default:
_181e=parseInt(_1820[1]);
}
}
var body=document.documentElement?document.documentElement:document.body;
var _1822=window.innerHeight?window.innerHeight:body.clientHeight;
var _1823=window.innerWidth?window.innerWidth:body.clientWidth;
var _1824=document.all?document.body.scrollLeft:window.pageXOffset;
var _1825=document.all?document.body.scrollTop:window.pageYOffset;
if((_181e+_1819.offsetHeight)>(_1822+_1825)){
_181e-=_1819.offsetHeight;
}
if((_181f+_1819.offsetWidth)>(_1823+_1824)){
_181f-=_1819.offsetWidth;
}
if(_181e<_1825){
_181e=_1825;
}
if(_181f<_1824){
_181f=_1824;
}
if(dojo.isSafari){
_181f+=_1824;
_181e+=_1825;
}
return {left:_181f+"px",top:_181e+"px"};
},isHighContrast:function(){
return lconn.dboard.PopupClass.HIGH_CONTRAST;
},setHighContrast:function(_1826){
lconn.dboard.PopupClass.HIGH_CONTRAST=_1826===undefined?true:_1826;
}});
dojo.declare("lconn.dboard.MenuPopupClass",lconn.dboard.PopupClass,{currentMenu:false,hideMenu:function(_1827){
if(this.currentMenu){
this.hide(this.currentMenu);
this.currentMenu=false;
}
},showMenu:function(id,event,_182a){
var _182b=this.currentMenu;
this.hideMenu();
if(id!=_182b){
this.currentMenu=id;
this.show(id,event,_182a);
}
},hideOnKeypress:function(event){
if(typeof (event)!="undefined"&&event!==null&&event.keyCode==Event.KEY_ESC){
MenuPopup.hideMenu();
}
},isMenuOpen:function(){
if(this.currentMenu){
return true;
}
return false;
},getState:function(){
if(this.currentMenu){
return this.open[this.currentMenu].state;
}
}});
Popup=new lconn.dboard.PopupClass();
MenuPopup=new lconn.dboard.MenuPopupClass();
Popup.Effect={};
Popup.Effect.DURATION=250;
Popup.Effect.Fade=function(_182d){
_182d=dojo.byId(_182d);
var _182e=dojo.style(_182d,"opacity");
var anim=dojo.fadeOut({node:_182d,duration:Popup.Effect.DURATION});
dojo.connect(anim,"onEnd",function(){
dojo.style(_182d,"opacity",_182e);
dojo.style(_182d,"left","-9999px");
_182d.style.display="";
});
anim.play();
};
Popup.Effect.Appear=function(_1830,x,y){
_1830=dojo.byId(_1830);
dojo.style(_1830,"opacity",0);
dojo.style(_1830,"left",x);
dojo.style(_1830,"top",y);
var anim=dojo.fadeIn({node:_1830,duration:Popup.Effect.DURATION});
dojo.connect(anim,"onBegin",function(){
_1830.style.display="";
});
anim.play();
};
}
if(!dojo._hasResource["lconn.search.utils.DateFormater"]){
dojo._hasResource["lconn.search.utils.DateFormater"]=true;
dojo.provide("lconn.search.utils.DateFormater");
djConfig=dojo.config;
dojo.declare("lconn.search.utils.DateFormater",null,{formatDateTime:function(date){
var d=date instanceof Date?date:dojo.date.stamp.fromISOString(date);
var _1836=null;
try{
_1836=lconn.core.DateUtil.toString(d);
}
catch(ignoreException){
}
return _1836;
}});
}
if(!dojo._hasResource["lconn.search.searchAPI"]){
dojo._hasResource["lconn.search.searchAPI"]=true;
dojo.provide("lconn.search.searchAPI");
dojo.declare("lconn.search.searchAPI",null,{queryString:null,contextRoot:null,apiUrl:"/atom/search/results",tagApiUrl:"/atom/search/facets/tags",page:1,ps:10,sortorder:null,sortkey:null,componentFilter:"",personApiUrl:"/atom/search/facets/people",dateApiUrl:"/atom/search/facets/date",privateApiUrl:"/atom/mysearch/results",privateTagApiUrl:"/atom/mysearch/facets/tags",privatePersonApiUrl:"/atom/mysearch/facets/people",privateDateApiUrl:"/atom/mysearch/facets/date",setup:function(cr,qs){
this.queryString=qs;
this.queryString=this.queryString.replace("?tag=&","?","g");
this.queryString=this.queryString.replace("&tag=&","&","g");
this.queryString=this.queryString.replace("&&","&","g");
this.queryString=this.queryString.replace("&=&","&","g");
this.queryString=this.queryString.replace("?=&","?","g");
if((this.queryString.indexOf("?sortkey")==-1)&&(this.queryString.indexOf("&sortkey")==-1)){
this.sortkey=null;
}else{
var regex=new RegExp("[\\?&]sortkey=([^&#]*)");
var _183a=regex.exec(this.queryString);
if(_183a!=null){
if(_183a.length>1){
this.sortkey=_183a[1];
this.queryString=this.queryString.replace("?sortkey="+_183a[1]+"&","?");
this.queryString=this.queryString.replace("&sortkey="+_183a[1]+"&","&");
}
}
}
if((this.queryString.indexOf("?sortorder")==-1)&&(this.queryString.indexOf("&sortorder")==-1)){
this.sortorder=null;
}else{
var regex=new RegExp("[\\?&]sortorder=([^&#]*)");
var _183a=regex.exec(this.queryString);
if(_183a!=null){
if(_183a.length>1){
this.sortorder=_183a[1];
this.queryString=this.queryString.replace("?sortorder="+_183a[1]+"&","?");
this.queryString=this.queryString.replace("&sortorder="+_183a[1]+"&","&");
}
}
}
if((this.queryString.indexOf("?component")==-1)&&(this.queryString.indexOf("&component")==-1)){
this.componentFilter="";
}else{
var regex=new RegExp("[\\?&]component=([^&#]*)");
var _183a=regex.exec(this.queryString);
if(_183a.length>1){
this.componentFilter=_183a[1];
}
}
this.contextRoot=cr;
},getDateFacetAPI:function(_183b){
if(_183b){
return this.contextRoot+this.dateApiUrl+this.queryString;
}else{
return this.contextRoot+this.privateDateApiUrl+this.queryString;
}
},getPersonFacetAPI:function(_183c){
if(_183c){
return this.contextRoot+this.personApiUrl+this.queryString;
}else{
return this.contextRoot+this.privatePersonApiUrl+this.queryString;
}
},getTagFacetAPI:function(_183d){
if(_183d){
return this.contextRoot+this.tagApiUrl+this.queryString+"&tagcloud=true";
}else{
return this.contextRoot+this.privateTagApiUrl+this.queryString+"&tagcloud=true";
}
},getSearchResultsAPI:function(_183e){
if(_183e){
return this.contextRoot+this.apiUrl+this.queryString+"&page="+this.page+"&ps="+this.ps;
}else{
return this.contextRoot+this.privateApiUrl+this.queryString+"&page="+this.page+"&ps="+this.ps;
}
},getCombinedAPI:function(_183f){
if(_183f){
if(this.sortkey!=null){
return this.contextRoot+"/atom/search"+this.queryString+"&page="+this.page+"&ps="+this.ps+"&sortkey="+this.sortkey+"&sortorder="+this.sortorder;
}else{
return this.contextRoot+"/atom/search"+this.queryString+"&page="+this.page+"&ps="+this.ps;
}
}else{
if(this.sortkey!=null){
return this.contextRoot+"/atom/mysearch"+this.queryString+"&page="+this.page+"&ps="+this.ps+"&sortkey="+this.sortkey+"&sortorder="+this.sortorder;
}else{
return this.contextRoot+"/atom/mysearch"+this.queryString+"&page="+this.page+"&ps="+this.ps;
}
}
},getParameterString:function(){
return this.queryString;
},getTagParameters:function(){
var regex=new RegExp("[\\?&]tag=([^&#]*)","g");
var tags=new Array();
var _1842;
tags.push(this.queryString);
do{
_1842=regex.exec(this.queryString);
if(_1842!=null){
tags.push(decodeURIComponent(_1842[1]));
}
}while(_1842!=null);
return tags;
},getDateParameters:function(){
var regex=new RegExp("[\\?&]Date=([^&#]*)");
return regex.exec(this.queryString);
},getPersonParameters:function(){
var regex=new RegExp("[\\?&]person=([^&#]*)","g");
var peeps=new Array();
var _1846;
peeps.push(this.queryString);
do{
_1846=regex.exec(this.queryString);
if(_1846!=null){
peeps.push(decodeURIComponent(_1846[1]));
}
}while(_1846!=null);
return peeps;
},addTag:function(tag){
var _1848=false;
var tags=this.getTagParameters();
if(tags!=null&&tags.length>1){
for(var i=1;i<tags.length;i++){
if(tags[i]==tag){
_1848=true;
}
}
}
if(!_1848){
if(this.queryString.indexOf("?")==-1){
this.queryString=this.queryString+"?tag="+encodeURIComponent(tag);
}else{
this.queryString=this.queryString+"&tag="+encodeURIComponent(tag);
}
this.page=1;
return true;
}else{
return false;
}
},removeTag:function(tag){
tag=tag.replace("\\\"","\"","g");
tag=tag.replace("\\'","'","g");
tag=encodeURIComponent(tag);
if(this.queryString.indexOf("?tag="+tag+"&")>=0){
this.queryString=this.queryString.replace("?tag="+tag,"?");
}else{
if(this.queryString.indexOf("&tag="+tag+"&")>=0){
this.queryString=this.queryString.replace("&tag="+tag,"&");
}else{
if(this.queryString.indexOf("?tag="+tag)>=0){
this.queryString=this.queryString.replace("?tag="+tag,"");
}else{
if(this.queryString.indexOf("&tag="+tag)>=0){
this.queryString=this.queryString.replace("&tag="+tag,"");
}
}
}
}
this.page=1;
},addDate:function(date){
var dates=this.getDateParameters();
if(dates!=null&&dates.length>1){
for(var i=1;i<dates.length;i++){
this.removeDate(dates[i]);
}
}
if(this.queryString.indexOf("?")==-1){
this.queryString=this.queryString+"?Date="+date;
}else{
this.queryString=this.queryString+"&Date="+date;
}
this.page=1;
},removeDate:function(date){
if(this.queryString.indexOf("?Date="+date+"&")>=0){
this.queryString=this.queryString.replace("?Date="+date,"?");
}else{
if(this.queryString.indexOf("&Date="+date+"&")>=0){
this.queryString=this.queryString.replace("&Date="+date,"&");
}else{
if(this.queryString.indexOf("?Date="+date)>=0){
this.queryString=this.queryString.replace("?Date="+date,"");
}else{
if(this.queryString.indexOf("&Date="+date)>=0){
this.queryString=this.queryString.replace("&Date="+date,"");
}
}
}
}
this.page=1;
},addPerson:function(_1850){
var _1851=false;
_1850=encodeURIComponent(_1850);
var _1852=this.getPersonParameters();
if(_1852!=null&&_1852.length>1){
for(var i=1;i<_1852.length;i++){
if(_1852[i]==_1850){
_1851=true;
}
}
}
if(!_1851){
if(this.queryString.indexOf("?")==-1){
this.queryString=this.queryString+"?person="+_1850;
}else{
this.queryString=this.queryString+"&person="+_1850;
}
this.page=1;
return true;
}else{
return false;
}
},removePerson:function(_1854){
_1854=encodeURIComponent(_1854);
if(this.queryString.indexOf("?person="+_1854+"&")>=0){
this.queryString=this.queryString.replace("?person="+_1854,"?");
}else{
if(this.queryString.indexOf("&person="+_1854+"&")>=0){
this.queryString=this.queryString.replace("&person="+_1854,"&");
}else{
if(this.queryString.indexOf("?person="+_1854)>=0){
this.queryString=this.queryString.replace("?person="+_1854,"");
}else{
if(this.queryString.indexOf("&person="+_1854)>=0){
this.queryString=this.queryString.replace("&person="+_1854,"");
}
}
}
}
this.page=1;
},changeComponent:function(_1855){
if((this.queryString.indexOf("&component")==-1)&&(this.queryString.indexOf("?component")==-1)){
}else{
var regex=new RegExp("[\\?&]component=([^&#]*)");
var _1857=regex.exec(this.queryString);
if(_1857!=null){
if(_1857.length>1){
for(var i=1;i<_1857.length;i++){
this.queryString=this.queryString.replace("&component="+_1857[i]+"&","&");
this.queryString=this.queryString.replace("?component="+_1857[i]+"&","?");
this.queryString=this.queryString.replace("&component="+_1857[i],"");
this.queryString=this.queryString.replace("?component="+_1857[i],"");
}
}
}
}
if(_1855!="none"){
if(this.queryString.indexOf("?")==-1){
this.queryString=this.queryString+"?component="+_1855;
}else{
this.queryString=this.queryString+"&component="+_1855;
}
}
this.page=1;
},removeComponent:function(_1859){
if(this.queryString.indexOf("?component="+_1859)>0){
this.queryString=this.queryString.replace("?component="+_1859,"");
}else{
if(this.queryString.indexOf("&component="+_1859)>0){
this.queryString=this.queryString.replace("&component="+_1859,"");
}
}
this.page=1;
},changePage:function(page){
this.page=page;
},changePs:function(_185b){
this.ps=_185b;
this.page=1;
},changeQuery:function(_185c){
if((this.queryString.indexOf("?query")==-1)&&(this.queryString.indexOf("&query")==-1)){
}else{
var regex=new RegExp("[\\?&]query=([^&#]*)");
var _185e=regex.exec(this.queryString);
if(_185e!=null){
if(_185e.length>1){
this.queryString=this.queryString.replace("&query="+_185e[1],"&query="+encodeURIComponent(encQueryRes));
this.queryString=this.queryString.replace("?query="+_185e[1],"?query="+encodeURIComponent(encQueryRes));
}
}
}
},clearQueryString:function(){
this.queryString="";
},sortResults:function(key,order){
this.sortkey=key;
this.sortorder=order;
},getComponentFilter:function(){
return this.componentFilter;
}});
}
if(!dojo._hasResource["dojox.collections._base"]){
dojo._hasResource["dojox.collections._base"]=true;
dojo.provide("dojox.collections._base");
dojox.collections.DictionaryEntry=function(k,v){
this.key=k;
this.value=v;
this.valueOf=function(){
return this.value;
};
this.toString=function(){
return String(this.value);
};
};
dojox.collections.Iterator=function(arr){
var a=arr;
var _1865=0;
this.element=a[_1865]||null;
this.atEnd=function(){
return (_1865>=a.length);
};
this.get=function(){
if(this.atEnd()){
return null;
}
this.element=a[_1865++];
return this.element;
};
this.map=function(fn,scope){
return dojo.map(a,fn,scope);
};
this.reset=function(){
_1865=0;
this.element=a[_1865];
};
};
dojox.collections.DictionaryIterator=function(obj){
var a=[];
var _186a={};
for(var p in obj){
if(!_186a[p]){
a.push(obj[p]);
}
}
var _186c=0;
this.element=a[_186c]||null;
this.atEnd=function(){
return (_186c>=a.length);
};
this.get=function(){
if(this.atEnd()){
return null;
}
this.element=a[_186c++];
return this.element;
};
this.map=function(fn,scope){
return dojo.map(a,fn,scope);
};
this.reset=function(){
_186c=0;
this.element=a[_186c];
};
};
}
if(!dojo._hasResource["dojox.collections.Dictionary"]){
dojo._hasResource["dojox.collections.Dictionary"]=true;
dojo.provide("dojox.collections.Dictionary");
dojox.collections.Dictionary=function(_186f){
var items={};
this.count=0;
var _1871={};
this.add=function(k,v){
var b=(k in items);
items[k]=new dojox.collections.DictionaryEntry(k,v);
if(!b){
this.count++;
}
};
this.clear=function(){
items={};
this.count=0;
};
this.clone=function(){
return new dojox.collections.Dictionary(this);
};
this.contains=this.containsKey=function(k){
if(_1871[k]){
return false;
}
return (items[k]!=null);
};
this.containsValue=function(v){
var e=this.getIterator();
while(e.get()){
if(e.element.value==v){
return true;
}
}
return false;
};
this.entry=function(k){
return items[k];
};
this.forEach=function(fn,scope){
var a=[];
for(var p in items){
if(!_1871[p]){
a.push(items[p]);
}
}
dojo.forEach(a,fn,scope);
};
this.getKeyList=function(){
return (this.getIterator()).map(function(entry){
return entry.key;
});
};
this.getValueList=function(){
return (this.getIterator()).map(function(entry){
return entry.value;
});
};
this.item=function(k){
if(k in items){
return items[k].valueOf();
}
return undefined;
};
this.getIterator=function(){
return new dojox.collections.DictionaryIterator(items);
};
this.remove=function(k){
if(k in items&&!_1871[k]){
delete items[k];
this.count--;
return true;
}
return false;
};
if(_186f){
var e=_186f.getIterator();
while(e.get()){
this.add(e.element.key,e.element.value);
}
}
};
}
if(!dojo._hasResource["lconn.search.utils.xslt"]){
dojo._hasResource["lconn.search.utils.xslt"]=true;
dojo.provide("lconn.search.utils.xslt");
lconn.search.utils.xslt.ie={};
lconn.search.utils.xslt.gecko={};
lconn.search.utils.xslt.cache=new dojox.collections.Dictionary();
lconn.search.utils.xslt.getXmlHttpRequest=function(){
var oXml=null;
if(typeof ActiveXObject!="undefined"){
oXml=new ActiveXObject("Microsoft.XMLHTTP");
}else{
oXml=new XMLHttpRequest();
}
return oXml;
};
lconn.search.utils.xslt.loadXml=function(sUrl){
if(typeof ActiveXObject!="undefined"){
return lconn.search.utils.xslt.ie.loadXml(sUrl);
}else{
return lconn.search.utils.xslt.gecko.loadXml(sUrl);
}
};
lconn.search.utils.xslt.loadXmlString=function(sXml){
if(typeof ActiveXObject!="undefined"){
return lconn.search.utils.xslt.ie.loadXmlString(sXml);
}else{
return lconn.search.utils.xslt.gecko.loadXmlString(sXml);
}
};
lconn.search.utils.xslt.loadXsl=function(sUrl){
var cache=lconn.search.utils.xslt.cache;
var _1887=null;
if(cache.contains(sUrl)){
_1887=cache.item(sUrl);
}else{
if(typeof ActiveXObject!="undefined"){
_1887=lconn.search.utils.xslt.ie.loadXsl(sUrl);
}else{
_1887=lconn.search.utils.xslt.gecko.loadXsl(sUrl);
}
cache.add(sUrl,_1887);
}
return _1887;
};
lconn.search.utils.xslt.transform=function(xml,xsl,_188a,_188b,_188c){
if(typeof ActiveXObject!="undefined"){
return lconn.search.utils.xslt.ie.transform(xml,xsl,_188a,_188b,_188c);
}else{
return lconn.search.utils.xslt.gecko.transform(xml,xsl,_188a,_188b,_188c);
}
};
lconn.search.utils.xslt.transformDocument=function(_188d,_188e,_188f){
var _1890=lconn.search.utils.xslt.loadXsl(_188e);
if(_1890.documentElement==null){
return null;
}
var _1891=lconn.search.utils.xslt.transform(_188d,_1890,null,_188f,true);
return _1891;
};
lconn.search.utils.xslt.transformAndUpdate=function(_1892,xml,xsl,_1895,_1896){
if(typeof ActiveXObject!="undefined"){
var _1897=lconn.search.utils.xslt.ie.transform(xml,xsl,_1895,_1896,true);
_1892.innerHTML+=_1897;
}else{
_1897=lconn.search.utils.xslt.gecko.transform(xml,xsl,_1895,_1896,false);
var _1898=_1897.documentElement;
if(_1897.documentElement.tagName=="transformiix:result"){
_1898=_1897.documentElement.childNodes;
dojomum.dom.copyChildren(_1897.documentElement,_1892,true);
}else{
_1892.appendChild(_1898);
}
}
};
lconn.search.utils.xslt.ie.loadXml=function(sUrl){
var _189a=new ActiveXObject("MSXML2.DOMDocument");
_189a.async=0;
_189a.resolveExternals=0;
if(!_189a.load(sUrl)){
throw new Error("Error loading xml file "+sUrl);
}
return _189a;
};
lconn.search.utils.xslt.ie.loadXmlString=function(sXml){
var _189c=new ActiveXObject("MSXML2.DOMDocument");
_189c.async=0;
_189c.resolveExternals=0;
if(!_189c.loadXML(sXml)){
throw new Error("Error loading xml string "+sXml);
}
return _189c;
};
lconn.search.utils.xslt.ie.loadXsl=function(sUrl){
var _189e=new ActiveXObject("MSXML2.FreeThreadedDOMDocument");
_189e.async=0;
_189e.resolveExternals=0;
dojo.xhrGet({sync:true,url:sUrl,handleAs:"text",load:function(_189f,_18a0){
_189e.loadXML(_189f);
},error:function(_18a1,_18a2){
throw new Error("Error loading xsl file "+_18a2.url);
}});
return _189e;
};
lconn.search.utils.xslt.ie.transform=function(_18a3,xsl,_18a5,_18a6,_18a7){
var oXml=_18a3;
var oXsl=xsl;
try{
if(!oXsl.documentElement){
oXsl=this.loadXsl(xsl);
}
}
catch(e){
var sMsg=e.message;
throw new Error(""+sMsg,""+sMsg);
}
var oXslt=new ActiveXObject("Msxml2.XSLTemplate");
oXslt.stylesheet=oXsl;
var _18ac=oXslt.createProcessor();
_18ac.input=oXml;
if(_18a6){
for(var p=0; p < _18a6.length; p++){
_18ac.addParameter(_18a6[p][0],_18a6[p][1]);
}
}
if(_18a5){
_18ac.addParameter("mode",_18a5);
}
if(_18a7){
if(!_18ac.transform()){
throw new Error("Error transforming xml doc "+oXml);
}
return _18ac.output;
}else{
var _18ae=new ActiveXObject("MSXML2.DOMDocument");
_18ae.async=0;
_18ae.validateOnParse=1;
oXml.transformNodeToObject(oXsl,_18ae);
return _18ae;
}
};
lconn.search.utils.xslt.gecko.loadXml=function(sUrl){
};
lconn.search.utils.xslt.gecko.loadXmlString=function(sXml){
var _18b1=new DOMParser();
try{
oXmlDoc=_18b1.parseFromString(sXml,"text/xml");
}
catch(exc){
throw new Error("Error loading xml string "+sXml);
}
return oXmlDoc;
};
lconn.search.utils.xslt.gecko.loadXsl=function(sUrl){
var _18b3=document.implementation.createDocument("","",null);
_18b3.async=false;
if(dojo.isSafari){
_18b3.load=function(url){
var req=dojo.xhrGet({sync:true,url:url,handleAs:"xml",load:function(data,_18b7){
_18b3=data;
}});
};
}
_18b3.load(sUrl);
return _18b3;
};
lconn.search.utils.xslt.gecko.transform=function(_18b8,xsl,_18ba,_18bb,_18bc){
try{
var _18bd=xsl;
if(!_18bd.documentElement){
console.log("xslDoc is not a Document, loading it...");
_18bd=this.loadXsl(xsl);
}
var proc=new XSLTProcessor();
proc.importStylesheet(_18bd);
if(_18bb){
for(var p=0; p<_18bb.length;p++){
proc.setParameter(null,_18bb[p][0],_18bb[p][1]);
}
}
if(_18ba){
proc.setParameter(null,"mode",_18ba);
}
var _18c0=proc.transformToFragment(_18b8,document);
if(!_18bc){
return _18c0;
}
var _18c1=new XMLSerializer();
resultStr=_18c1.serializeToString(_18c0);
}
catch(exc){
throw new Error("Error transforming xml doc "+exc);
}
return resultStr;
};
lconn.search.utils.xslt.setLayerContentByXml=function(layer,xml,xsl,_18c5,_18c6){
var _18c7=lconn.search.utils.xslt.transform(xml,xsl,null,_18c5,_18c6);
if(layer.innerHTML){
layer.innerHTML=_18c7;
}else{
var obj=document.getElementById(layer);
obj.innerHTML=_18c7;
}
};
}
if(!dojo._hasResource["lconn.search.tagCloud"]){
dojo._hasResource["lconn.search.tagCloud"]=true;
dojo.provide("lconn.search.tagCloud");
dojo.declare("lconn.search.tagCloud",null,{containerReference:null,xslTemplate:dojo.moduleUrl("lconn.search","xslt/search.xsl").toString(),_dataStore:null,setup:function(_18c9,_18ca,_18cb,ds){
this.containerReference=_18c9;
if(_18cb){
this.xslTemplate=_18cb;
}
this._dataStore=ds;
},update:function(url){
if(this.containerReference!=null){
if(url){
var _18ce={url:url,handleAs:"text",timeout:this.timeout,load:dojo.hitch(this,"transformTags")};
var req=dojo.xhrGet(_18ce);
}else{
var _18d0=this._dataStore.tagTransform(null,null);
this.containerReference.innerHTML=_18d0;
this.finished();
}
}
},transformTags:function(data,evt){
var _18d3=null;
if(this._dataStore!=null){
_18d3=this._dataStore.tagTransform(data,this.xslTemplate);
}else{
var _18d4=dojox.data.dom.createDocument(data);
_18d3=lconn.search.utils.xslt.transformDocument(_18d4,this.xslTemplate,[["action","tags"]]);
}
this.containerReference.innerHTML=_18d3;
this.finished();
},finished:function(){
}});
}
if(!dojo._hasResource["lconn.search.personCloud"]){
dojo._hasResource["lconn.search.personCloud"]=true;
dojo.provide("lconn.search.personCloud");
dojo.declare("lconn.search.personCloud",null,{containerReference:null,xslTemplate:dojo.moduleUrl("lconn.search","xslt/search.xsl").toString(),_dataStore:null,setup:function(_18d5,_18d6,_18d7,ds){
this.containerReference=_18d5;
if(_18d7){
this.xslTemplate=_18d7;
}
this._dataStore=ds;
},update:function(url){
if(this.containerReference!=null){
if(url){
var _18da={url:url,handleAs:"text",timeout:this.timeout,load:dojo.hitch(this,"transformPeople")};
var req=dojo.xhrGet(_18da);
}else{
var _18dc=this._dataStore.peopleTransform(null,null);
this.containerReference.innerHTML=_18dc;
try{
SemTagSvc.parseDom(null,this.containerReference);
}
catch(e){
}
this.finished();
}
}
},transformPeople:function(data,evt){
var _18df=null;
if(this._dataStore!=null){
_18df=this._dataStore.peopleTransform(data,this.xslTemplate);
}else{
var _18e0=dojox.data.dom.createDocument(data);
_18df=lconn.search.utils.xslt.transformDocument(_18e0,this.xslTemplate,[["action","people"]]);
}
this.containerReference.innerHTML=_18df;
this.finished();
},finished:function(){
}});
}
if(!dojo._hasResource["lconn.search.dateCloud"]){
dojo._hasResource["lconn.search.dateCloud"]=true;
dojo.provide("lconn.search.dateCloud");
dojo.declare("lconn.search.dateCloud",null,{containerReference:null,xslTemplate:dojo.moduleUrl("lconn.search","xslt/search.xsl").toString(),_dataStore:null,setup:function(_18e1,_18e2,_18e3,ds){
this.containerReference=_18e1;
if(_18e3){
this.xslTemplate=_18e3;
}
this._dataStore=ds;
},update:function(url){
if(this.containerReference!=null){
if(url){
var _18e6={url:url,handleAs:"text",timeout:this.timeout,load:dojo.hitch(this,"transformDates")};
var req=dojo.xhrGet(_18e6);
}else{
var _18e8=this._dataStore.dateTransform(null,null);
this.containerReference.innerHTML=_18e8;
this.finished();
}
}
},transformDates:function(data,evt){
var _18eb=null;
if(this._dataStore!=null){
_18eb=this._dataStore.dateTransform(data,this.xslTemplate);
}else{
var _18ec=dojox.data.dom.createDocument(data);
_18eb=lconn.search.utils.xslt.transformDocument(_18ec,this.xslTemplate,null);
}
this.containerReference.innerHTML=_18eb;
this.finished();
},finished:function(){
}});
}
if(!dojo._hasResource["lconn.search.searchData"]){
dojo._hasResource["lconn.search.searchData"]=true;
dojo.provide("lconn.search.searchData");
dojo.declare("lconn.search.searchData",null,{_Trans:null,_dataCache:null,_errorMessage:null,XSLTemplate:null,filter:"none",hasError:false,timeout:12000,setup:function(_18ed){
this.XSLTemplate=_18ed;
this._Trans=dojo.i18n.getLocalization("lconn.search","searchData");
},performQuery:function(_18ee,URL,scope,_18f1){
var _18f2={url:URL,handleAs:"text",timeout:this.timeout,sync:false,load:dojo.hitch(this,"cacheData"),error:dojo.hitch(this,"createErrorMessage"),handle:dojo.hitch(scope,_18f1)};
if(!_18ee&&(typeof dojo.getObject("com.ibm.ajax.auth.prepareSecure")=="function")){
_18f2=com.ibm.ajax.auth.prepareSecure(_18f2,dojo.hitch(this,"isLogin"));
}
var req=dojo.xhrGet(_18f2);
},isLogin:function(_18f4,_18f5){
var login=true;
if(_18f4.substring(0,5)=="<?xml"){
login=false;
}
return login;
},cacheData:function(data,evt){
this.hasError=false;
if(data.substring(0,5)=="<?xml"){
this._dataCache=data;
}else{
this._dataCache="<?xml version=\"1.0\" encoding=\"UTF-8\"?><ResultSet xmlns=\"http://www.ibm.com/xmlns/ass\" />";
this._errorMessage=this._Trans.NO_CONTACT;
this.hasError=true;
}
},createErrorMessage:function(data,evt){
var xml=null;
var xslt=null;
var _18fd=null;
this.hasError=true;
xslt=this.XSLTemplate;
if(data.status==404){
this._errorMessage=this._Trans.NO_CONTACT;
}else{
if(data.status==500){
this._errorMessage=this._Trans.SERVER_ERROR;
}else{
if(data.status==403){
this._errorMessage=this._Trans.NO_CONTACT;
}else{
this._errorMessage=this._Trans.NO_CONTACT;
}
}
}
},getError:function(){
return this._errorMessage;
},resultsTransform:function(data,_18ff){
var xml=null;
var xslt=null;
var _1902=null;
if(data!=null){
xml=dojox.data.dom.createDocument(data);
}else{
xml=dojox.data.dom.createDocument(this._dataCache);
}
if(_18ff!=null){
xslt=_18ff;
}else{
xslt=this.XSLTemplate;
}
if((xml!=null)||(xslt!=null)){
if(this.filter=="activities"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["activitiesIcon",dojo.moduleUrl("lconn.search","images/iconActivity.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["smallCommunityIcon",dojo.moduleUrl("lconn.search","images/small_communities_icon.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Activities",this._Trans.ACTIVITIES],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortLastUpdated",this._Trans.SORT_LAST_UPDATED],["sortDueDate",this._Trans.SORT_DUE_DATE],["private",this._Trans.PRIVATE],["communityActivity",this._Trans.COMMUNITY_ACTIVITY],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["updatedAlt",this._Trans.SORT_UPDATED_LABEL],["duedateAlt",this._Trans.SORT_DUE_LABEL],["commentOn",this._Trans.COMMENT_ON]]);
}else{
if(this.filter=="blogs"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["blogsIcon",dojo.moduleUrl("lconn.search","images/iconBlog.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["rec0",dojo.moduleUrl("lconn.search","images/iconRecommend0.gif").toString()],["rec1",dojo.moduleUrl("lconn.search","images/iconRecommend1.gif").toString()],["rec2",dojo.moduleUrl("lconn.search","images/iconRecommend2.gif").toString()],["rec3",dojo.moduleUrl("lconn.search","images/iconRecommend3.gif").toString()],["smallCommunityIcon",dojo.moduleUrl("lconn.search","images/small_communities_icon.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Blogs",this._Trans.BLOGS],["Comments",this._Trans.COMMENTS],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortDate",this._Trans.SORT_DATE],["sortVisits",this._Trans.SORT_VISITS],["sortComments",this._Trans.SORT_COMMENTS],["sortRecommendations",this._Trans.SORT_RECOMMENDATION],["private",this._Trans.PRIVATE],["communityBlog",this._Trans.COMMUNITY_BLOG],["ratingAlt",this._Trans.RATING],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["dateAlt",this._Trans.SORT_DATE_LABEL],["visitsAlt",this._Trans.SORT_VISITS_LABEL],["commentsAlt",this._Trans.SORT_COMMENTS_LABEL],["recommendAlt",this._Trans.SORT_RECOMMENDATIONS_LABEL]]);
}else{
if(this.filter=="communities"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["activitiesIcon",dojo.moduleUrl("lconn.search","images/iconActivity.gif").toString()],["blogsIcon",dojo.moduleUrl("lconn.search","images/iconBlog.gif").toString()],["communitiesIcon",dojo.moduleUrl("lconn.search","images/iconCommunities.gif").toString()],["wikiIcon",dojo.moduleUrl("lconn.search","images/iconWikis.gif").toString()],["forumIcon",dojo.moduleUrl("lconn.search","images/iconForums.png").toString()],["filesIcon",dojo.moduleUrl("lconn.search","images/iconFiles.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["cbookmarkIcon",dojo.moduleUrl("lconn.search","images/iconDogear.gif").toString()],["smallCommunityIcon",dojo.moduleUrl("lconn.search","images/small_communities_icon.gif").toString()],["feedIcon",dojo.moduleUrl("lconn.search","images/icon_feed.gif").toString()],["rec0",dojo.moduleUrl("lconn.search","images/iconRecommend0.gif").toString()],["rec1",dojo.moduleUrl("lconn.search","images/iconRecommend1.gif").toString()],["rec2",dojo.moduleUrl("lconn.search","images/iconRecommend2.gif").toString()],["rec3",dojo.moduleUrl("lconn.search","images/iconRecommend3.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Activities",this._Trans.ACTIVITIES],["Blogs",this._Trans.BLOGS],["Communities",this._Trans.COMMUNITIES],["Files",this._Trans.FILES],["Wikis",this._Trans.WIKI],["Comments",this._Trans.COMMENTS],["Members",this._Trans.MEMBERS],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortDate",this._Trans.SORT_DATE],["private",this._Trans.PRIVATE],["communityActivity",this._Trans.COMMUNITY_ACTIVITY],["communityBlog",this._Trans.COMMUNITY_BLOG],["communityFile",this._Trans.COMMUNITY_FILE],["communityWiki",this._Trans.COMMUNITY_WIKI],["communityFeed",this._Trans.COMMUNITY_FEED],["communityBookmark",this._Trans.COMMUNITY_BOOKMARK],["ratingAlt",this._Trans.RATING],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["dateAlt",this._Trans.SORT_DATE_LABEL],["commentOn",this._Trans.COMMENT_ON]]);
}else{
if(this.filter=="dogear"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["dogearIcon",dojo.moduleUrl("lconn.search","images/iconDogear.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Dogear",this._Trans.DOGEAR],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["People",this._Trans.PEOPLE],["filter",this.filter],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortDate",this._Trans.SORT_DATE],["sortPopularity",this._Trans.SORT_POPULARITY],["private",this._Trans.PRIVATE],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["dateAlt",this._Trans.SORT_DATE_LABEL],["popularityAlt",this._Trans.SORT_POPULARITY_LABEL]]);
}else{
if(this.filter=="files"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["filesIcon",dojo.moduleUrl("lconn.search","images/iconFiles.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["rec0",dojo.moduleUrl("lconn.search","images/iconRecommend0.gif").toString()],["rec1",dojo.moduleUrl("lconn.search","images/iconRecommend1.gif").toString()],["rec2",dojo.moduleUrl("lconn.search","images/iconRecommend2.gif").toString()],["rec3",dojo.moduleUrl("lconn.search","images/iconRecommend3.gif").toString()],["smallCommunityIcon",dojo.moduleUrl("lconn.search","images/small_communities_icon.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Files",this._Trans.FILES],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortDate",this._Trans.SORT_DATE],["sortDownloads",this._Trans.SORT_DOWNLOADS],["sortType",this._Trans.SORT_TYPE],["sortSize",this._Trans.SORT_SIZE],["sortTitle",this._Trans.SORT_TITLE],["private",this._Trans.PRIVATE],["communityFile",this._Trans.COMMUNITY_FILE],["ratingAlt",this._Trans.RATING],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["dateAlt",this._Trans.SORT_DATE_LABEL],["popularityAlt",this._Trans.SORT_POPULARITY_LABEL]]);
}else{
if(this.filter=="profiles"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Profiles",this._Trans.PROFILES],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortFirstName",this._Trans.SORT_FIRSTNAME],["sortLastName",this._Trans.SORT_LASTNAME],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["firstnameAlt",this._Trans.SORT_FIRST_NAME_LABEL],["lastnameAlt",this._Trans.SORT_LAST_NAME_LABEL]]);
}else{
if(this.filter=="wikis"){
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["wikiIcon",dojo.moduleUrl("lconn.search","images/iconWikis.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["rec0",dojo.moduleUrl("lconn.search","images/iconRecommend0.gif").toString()],["rec1",dojo.moduleUrl("lconn.search","images/iconRecommend1.gif").toString()],["rec2",dojo.moduleUrl("lconn.search","images/iconRecommend2.gif").toString()],["rec3",dojo.moduleUrl("lconn.search","images/iconRecommend3.gif").toString()],["smallCommunityIcon",dojo.moduleUrl("lconn.search","images/small_communities_icon.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Wiki",this._Trans.WIKI],["Comments",this._Trans.COMMENTS],["Members",this._Trans.MEMBERS],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["People",this._Trans.PEOPLE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortDate",this._Trans.SORT_DATE],["sortVisits",this._Trans.SORT_VISITS],["sortComments",this._Trans.SORT_COMMENTS],["sortRecommendations",this._Trans.SORT_RECOMMENDATION],["private",this._Trans.PRIVATE],["communityWiki",this._Trans.COMMUNITY_WIKI],["ratingAlt",this._Trans.RATING],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["dateAlt",this._Trans.SORT_DATE_LABEL]]);
}else{
_1902=lconn.search.utils.xslt.transformDocument(xml,xslt,[["activitiesIcon",dojo.moduleUrl("lconn.search","images/iconActivity.gif").toString()],["blogsIcon",dojo.moduleUrl("lconn.search","images/iconBlog.gif").toString()],["communitiesIcon",dojo.moduleUrl("lconn.search","images/iconCommunities.gif").toString()],["dogearIcon",dojo.moduleUrl("lconn.search","images/iconDogear.gif").toString()],["profilesIcon",dojo.moduleUrl("lconn.search","images/iconProfiles.gif").toString()],["wikiIcon",dojo.moduleUrl("lconn.search","images/iconWikis.gif").toString()],["forumIcon",dojo.moduleUrl("lconn.search","images/iconForums.png").toString()],["filesIcon",dojo.moduleUrl("lconn.search","images/iconFiles.gif").toString()],["privateIcon",dojo.moduleUrl("lconn.search","images/small_private_key.gif").toString()],["feedIcon",dojo.moduleUrl("lconn.search","images/icon_feed.gif").toString()],["cbookmarkIcon",dojo.moduleUrl("lconn.search","images/iconDogear.gif").toString()],["smallCommunityIcon",dojo.moduleUrl("lconn.search","images/small_communities_icon.gif").toString()],["rec0",dojo.moduleUrl("lconn.search","images/iconRecommend0.gif").toString()],["rec1",dojo.moduleUrl("lconn.search","images/iconRecommend1.gif").toString()],["rec2",dojo.moduleUrl("lconn.search","images/iconRecommend2.gif").toString()],["rec3",dojo.moduleUrl("lconn.search","images/iconRecommend3.gif").toString()],["MsgShow",this._Trans.SHOW],["MsgPrevious",this._Trans.PREVIOUS],["MsgNext",this._Trans.NEXT],["MsgResults",this._Trans.RESULTS],["MsgPage",this._Trans.PAGE],["Activities",this._Trans.ACTIVITIES],["Blogs",this._Trans.BLOGS],["Communities",this._Trans.COMMUNITIES],["Dogear",this._Trans.DOGEAR],["Files",this._Trans.FILES],["Profiles",this._Trans.PROFILES],["Wiki",this._Trans.WIKI],["private",this._Trans.PRIVATE],["communityActivity",this._Trans.COMMUNITY_ACTIVITY],["communityBlog",this._Trans.COMMUNITY_BLOG],["communityFile",this._Trans.COMMUNITY_FILE],["communityWiki",this._Trans.COMMUNITY_WIKI],["communityFeed",this._Trans.COMMUNITY_FEED],["Comments",this._Trans.COMMENTS],["Members",this._Trans.MEMBERS],["Tags",this._Trans.TAGS],["NoResultsMessage",this._Trans.NORESULTSMESSAGE],["People",this._Trans.PEOPLE],["sortBy",this._Trans.SORT_BY],["sortRelevance",this._Trans.SORT_RELEVANCE],["sortDate",this._Trans.SORT_DATE],["communityBookmark",this._Trans.COMMUNITY_BOOKMARK],["ratingAlt",this._Trans.RATING],["relevanceAlt",this._Trans.SORT_RELEVANCE_LABEL],["dateAlt",this._Trans.SORT_DATE_LABEL],["commentOn",this._Trans.COMMENT_ON]]);
}
}
}
}
}
}
}
}
return _1902;
},tagTransform:function(data,_1904){
var xml=null;
var xslt=null;
var _1907=null;
if(data){
xml=dojox.data.dom.createDocument(data);
}else{
xml=dojox.data.dom.createDocument(this._dataCache);
}
if(_1904){
xslt=_1904;
}else{
xslt=this.XSLTemplate;
}
if((xml!=null)||(xslt!=null)){
_1907=lconn.search.utils.xslt.transformDocument(xml,xslt,[["action","tags"],["noTag",this._Trans.NO_TAG]]);
}
return _1907;
},dateTransform:function(data,_1909){
var xml=null;
var xslt=null;
var _190c=null;
if(data){
xml=dojox.data.dom.createDocument(data);
}else{
xml=dojox.data.dom.createDocument(this._dataCache);
}
if(_1909){
xlst=_1909;
}else{
xslt=this.XSLTemplate;
}
if((xml!=null)||(xslt!=null)){
_190c=lconn.search.utils.xslt.transformDocument(xml,xslt,[["action","date"],["Jan",this._Trans.JAN],["Feb",this._Trans.FEB],["Mar",this._Trans.MAR],["Apr",this._Trans.APR],["May",this._Trans.MAY],["Jun",this._Trans.JUN],["Jul",this._Trans.JUL],["Aug",this._Trans.AUG],["Sep",this._Trans.SEP],["Oct",this._Trans.OCT],["Nov",this._Trans.NOV],["Dec",this._Trans.DEC],["noDate",this._Trans.NO_DATE],["twistyAlt",this._Trans.EXPAND_COLLAPSE]]);
}
return _190c;
},peopleTransform:function(data,_190e){
var xml=null;
var xslt=null;
var _1911=null;
if(data){
xml=dojox.data.dom.createDocument(data);
}else{
xml=dojox.data.dom.createDocument(this._dataCache);
}
if(_190e){
xslt=_190e;
}else{
xslt=this.XSLTemplate;
}
if((xml!=null)||(xslt!=null)){
_1911=lconn.search.utils.xslt.transformDocument(xml,xslt,[["action","people"],["noPeople",this._Trans.NO_PEOPLE]]);
}
return _1911;
},setFilter:function(_1912){
if(_1912=="activities"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchActivities.xsl").toString();
}else{
if(_1912=="blogs"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchBlogs.xsl").toString();
}else{
if(_1912=="communities"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchCommunities.xsl").toString();
}else{
if(_1912=="dogear"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchDogear.xsl").toString();
}else{
if(_1912=="files"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchFiles.xsl").toString();
}else{
if(_1912=="profiles"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchProfiles.xsl").toString();
}else{
if(_1912=="wikis"){
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchWikis.xsl").toString();
}else{
this.XSLTemplate=dojo.moduleUrl("lconn.search","xslt/searchAll.xsl").toString();
}
}
}
}
}
}
}
this.filter=_1912;
}});
}
if(!dojo._hasResource["lconn.search.searchResults"]){
dojo._hasResource["lconn.search.searchResults"]=true;
dojo.provide("lconn.search.searchResults");
dojo.declare("lconn.search.searchResults",null,{TAGCLOUD:null,DATECLOUD:null,PERSONCLOUD:null,APIHandler:null,DATASTORE:null,_Trans:null,contextRoot:null,profilesApi:"/profiles",timeout:15000,xslTemplate:dojo.moduleUrl("lconn.search","xslt/searchAll.xsl").toString(),publicSearch:true,resultContainer:null,dateContainer:null,tagContainer:null,personContainer:null,loadingDiv:null,setup:function(cr,cq,_1915,_1916,_1917,_1918,_1919){
this._Trans=dojo.i18n.getLocalization("lconn.search","searchResults");
if(_1916){
this.resultContainer=_1916;
}
this.contextRoot=cr;
this.publicSearch=_1915;
this.APIHandler=new lconn.search.searchAPI();
this.APIHandler.setup(cr,cq);
var _191a=this.APIHandler.getComponentFilter();
this.DATASTORE=new lconn.search.searchData();
this.DATASTORE.setup(this.xslTemplate);
this.DATASTORE.setFilter(_191a);
if(_1916){
if(_1916!=null){
if(typeof (_1916)=="string"){
this.resultContainer=dojo.byId(_1916);
}else{
this.resultContainer=_1916;
}
}
}
if(_1917){
if(_1917!=null){
if(typeof (_1917)=="string"){
this.dateContainer=dojo.byId(_1917);
}else{
this.dateContainer=_1917;
}
this.DATECLOUD=new lconn.search.dateCloud();
this.DATECLOUD.setup(this.dateContainer,null,null,this.DATASTORE);
}
}
if(_1918){
if(_1918!=null){
if(typeof (_1918)=="string"){
this.tagContainer=dojo.byId(_1918);
}else{
this.tagContainer=_1918;
}
this.TAGCLOUD=new lconn.search.tagCloud();
this.TAGCLOUD.setup(this.tagContainer,null,null,this.DATASTORE);
}
}
if(_1919){
if(_1919!=null){
if(typeof (_1919)=="string"){
this.personContainer=dojo.byId(_1919);
}else{
this.personContainer=_1919;
}
this.PERSONCLOUD=new lconn.search.personCloud();
this.PERSONCLOUD.setup(this.personContainer,null,null,this.DATASTORE);
}
}
var ppl=this.APIHandler.getPersonParameters();
if(ppl&&ppl.length>1){
this.addPersonFilter(ppl[1]);
}
},updatePage:function(){
this.updateResults(this.APIHandler.getCombinedAPI(this.publicSearch));
},updateQuery:function(_191c){
this.APIHandler.changeQuery(_191c);
this.updatePage();
},performFilter:function(_191d){
var tags=this.APIHandler.getTagParameters();
if(tags!=null){
if(tags.length>1){
var _191f=document.getElementById("searchFilter");
if(_191f!=null){
_191f.innerHTML="";
}
for(var j=1;j<tags.length;j++){
this.addTagFilter(tags[j]);
}
}
}
this.APIHandler.changeComponent(_191d);
this.APIHandler.sortResults(null,null);
this.DATASTORE.setFilter(_191d);
this.updatePage();
},removeFilter:function(){
this.APIHandler.changeComponent("none");
this.APIHandler.changePage(1);
this.updatePage();
},performTagFilter:function(tag){
if(this.APIHandler.addTag(tag)){
this.addTagFilter(tag);
this.APIHandler.changePage(1);
this.updatePage();
}
},performPersonFilter:function(_1922){
if(this.APIHandler.addPerson(_1922)){
this.addPersonFilter(_1922);
this.APIHandler.changePage(1);
this.updatePage();
}
},performDateFilter:function(date){
this.filterdate=date;
this.addDateFilter(date);
this.APIHandler.changePage(1);
this.APIHandler.addDate(date);
this.updatePage();
},performPagination:function(page){
this.APIHandler.changePage(page);
this.updateResults(this.APIHandler.getSearchResultsAPI(this.publicSearch));
},updateResults:function(_1925){
this.loadingDiv=document.createElement("DIV");
this.loadingDiv.style.position="absolute";
this.loadingDiv.style.width=this.resultContainer.offsetWidth+"px";
this.loadingDiv.style.height=this.resultContainer.offsetHeight+"px";
this.loadingDiv.style.backgroundColor="#fff";
this.loadingDiv.style.opacity=".80";
this.loadingDiv.style.filter="alpha(opacity=80)";
this.loadingDiv.innerHTML="<div style=\"width:150px;height:70px;padding:10px;position:relative;margin-top:100px;margin-left:auto;margin-right:auto;border:1px solid #000;background: #cfecff url("+dojo.moduleUrl("lconn.search","images/loading.gif")+") no-repeat center 10px;opacity:1.0;filter:none;\"><br /><br /><strong style=\"text-align:center;width:100%;\">"+this._Trans.LOADING+"</strong></div>";
if(this.resultContainer.childNodes!=null&&this.resultContainer.childNodes.length>0){
this.resultContainer.insertBefore(this.loadingDiv,this.resultContainer.childNodes[0]);
}else{
this.resultContainer.appendChild(this.loadingDiv);
}
this.DATASTORE.performQuery(this.publicSearch,this.APIHandler.getCombinedAPI(this.publicSearch),this,"handleResults");
},updateTags:function(){
if(this.tagContainer!=null){
this.TAGCLOUD.update();
this.setVisible(25,this.tagContainer);
}
},updatePeople:function(){
if(this.personContainer!=null){
this.PERSONCLOUD.update();
this.setPVisible(4,this.personContainer);
}
},updateDate:function(){
if(this.dateContainer!=null){
this.DATECLOUD.update();
}
},handleResults:function(data,evt){
if(this.DATASTORE.hasError){
var _1928=document.createElement("DIV");
dojo.addClass(_1928,"lotusMessage");
var _1929=document.createElement("IMG");
_1929.src=dojo.moduleUrl("lconn.search","images/iconError.gif");
_1928.appendChild(_1929);
var _192a=document.createElement("SPAN");
_192a.innerHTML=this.DATASTORE.getError();
_1928.appendChild(_192a);
this.resultContainer.innerHTML="";
this.resultContainer.appendChild(_1928);
}else{
this.updateTags();
this.updatePeople();
this.updateDate();
if(this.resultContainer!=null){
var _192b=this.DATASTORE.resultsTransform(null,null);
this.resultContainer.innerHTML=_192b;
var _192c=dojo.query(".searchSummaryHighlight",this.resultContainer);
for(var i=0;i<_192c.length;i++){
_192c[i].innerHTML=this.highlightXSLHack(_192c[i].innerHTML);
}
this.dateHandler();
try{
SemTagSvc.parseDom(null,this.resultContainer);
}
catch(e){
}
}
if(this.tagContainer!=null){
this.updateTags(this.APIHandler.getTagFacetAPI(this.publicSearch));
this.setVisible(25,this.tagContainer);
}
if(this.personContainer!=null){
this.updatePeople(this.APIHandler.getPersonFacetAPI(this.publicSearch));
this.setPVisible(4,this.personContainer);
}
if(this.dateContainer!=null){
this.updateDate(this.APIHandler.getDateFacetAPI(this.publicSearch));
}
}
},highlightXSLHack:function(html){
var dn=document.createElement("DIV");
dn.innerHTML=html;
if(dn.innerText){
return dn.innerText;
}
return dn.textContent;
},addTagFilter:function(tag){
var _1931=document.getElementById("searchFilter");
if(_1931!=null){
var _1932=document.createElement("A");
var _1933=tag.replace("'","\\'","g");
_1933=_1933.replace("\"","\\\"","g");
dojo.addClass(_1932,"lotusFilter");
_1932.setAttribute("href","javascript:void(0);");
_1932.setAttribute("name",_1933);
if(typeof (_1932.textContent)=="undefined"){
_1932.innerText=tag+" [X] ";
}else{
_1932.textContent=tag+" [X] ";
}
dojo.connect(_1932,"onclick",this,"removeTagFilter");
_1931.appendChild(_1932);
}
},addPersonFilter:function(_1934){
_1934=_1934.replace("","%02");
var _1935=document.getElementById("searchFilter");
if(_1935!=null){
var _1936=document.createElement("A");
var _1937=_1934.replace("'","\\'","g");
var _1937=_1937.replace("\"","\\\"","g");
dojo.addClass(_1936,"lotusFilter");
_1936.setAttribute("href","javascript:void(0);");
_1936.setAttribute("name",_1937);
var _1938=_1934.split("");
if(_1938.length==1){
_1938=_1934.split("%02");
}
if(typeof (_1936.textContent)=="undefined"){
_1936.innerText=decodeURI(_1938[1])+" [X] ";
}else{
_1936.textContent=decodeURI(_1938[1])+" [X] ";
}
dojo.connect(_1936,"onclick",this,"removePersonFilter");
_1935.appendChild(_1936);
}
},addDateFilter:function(date){
var _193a=document.getElementById("searchFilter");
var dfs=dojo.query(".dateFilter",_193a);
if(dfs!=null&&dfs.length>0){
for(var i=0;i<dfs.length;i++){
_193a.removeChild(dfs[i]);
}
}
if(_193a!=null){
var _193d=document.createElement("A");
dojo.addClass(_193d,"lotusFilter");
dojo.addClass(_193d,"dateFilter");
_193d.setAttribute("href","javascript:void(0);");
_193d.setAttribute("name",date);
_193d.innerHTML=date+"&nbsp;[X]&nbsp;";
dojo.connect(_193d,"onclick",this,"removeDateFilter");
_193a.appendChild(_193d);
}
},removeTagFilter:function(evt){
var _193f=(typeof evt!=="undefined")?evt:event;
var elem=(typeof _193f.target!=="undefined")?_193f.target:_193f.srcElement;
this.APIHandler.removeTag(elem.getAttribute("name"));
var _1941=document.getElementById("searchFilter");
if(_1941!=null){
_1941.removeChild(elem);
}
this.updatePage();
},removePersonFilter:function(evt){
var _1943=(typeof evt!=="undefined")?evt:event;
var elem=(typeof _1943.target!=="undefined")?_1943.target:_1943.srcElement;
this.APIHandler.removePerson(elem.getAttribute("name"));
var _1945=document.getElementById("searchFilter");
if(_1945!=null){
_1945.removeChild(elem);
}
this.updatePage();
},removeDateFilter:function(evt){
var _1947=(typeof evt!=="undefined")?evt:event;
var elem=(typeof _1947.target!=="undefined")?_1947.target:_1947.srcElement;
this.APIHandler.removeDate(elem.getAttribute("name"));
var _1949=document.getElementById("searchFilter");
if(_1949!=null){
_1949.removeChild(elem);
}
this.updatePage();
},setVisible:function(_194a,_194b){
var tbref;
if(typeof (_194b)=="string"){
tbref=dojo.byId(_194b);
}else{
tbref=_194b;
}
if(tbref!=null){
var as=tbref.getElementsByTagName("span");
if(as!=null){
for(var i=0;i<as.length;i++){
var a=as[i];
var m=a.className.match(/^f\d+-(\d+)/);
if(m){
var p=m[1];
a.style.display=(p>=_194a)?"inline":"none";
}
}
}else{
return;
}
}else{
return;
}
},setPVisible:function(_1952,_1953){
var tbref;
if(typeof (_1953)=="string"){
tbref=dojo.byId(_1953);
}else{
tbref=_1953;
}
if(tbref!=null){
var as=tbref.getElementsByTagName("li");
for(var i=0;i<as.length;i++){
as[i].style.display=(i<_1952)?"":"none";
}
}
return;
},dateHandler:function(_1957){
var _1958=new lconn.search.utils.DateFormater();
var _1959=dojo.query(".searchDateClass",document.getElementById("lotusContent"));
for(var i=0;i<_1959.length;i++){
_1959[i].innerHTML=_1958.formatDateTime(_1959[i].innerHTML);
}
},toggleChildren:function(id,_195c){
var _195d=document.getElementById(id);
if(_195d){
if(_195d.style.display=="none"){
_195d.style.display="block";
if(_195c){
dojo.removeClass(_195c,"lotusTwistyClosed");
dojo.addClass(_195c,"lotusTwistyOpen");
}
}else{
_195d.style.display="none";
if(_195c){
dojo.removeClass(_195c,"lotusTwistyOpen");
dojo.addClass(_195c,"lotusTwistyClosed");
}
}
}
},setPageSize:function(_195e){
this.APIHandler.changePs(_195e);
this.updateResults();
},sortBy:function(_195f,_1960){
this.APIHandler.sortResults(_195f,_1960);
this.updateResults();
},toggleSort:function(evt){
var _1962=(typeof evt!=="undefined")?evt:event;
var elem=(typeof _1962.target!=="undefined")?_1962.target:_1962.srcElement;
if(elem!=null){
if(dojo.hasClass(elem,"lotusAscending")){
this.sortBy(elem.getAttribute("key"),"desc");
}else{
this.sortBy(elem.getAttribute("key"),"asc");
}
}
},sortDescending:function(evt){
var elem;
if(!evt){
evt=window.event;
}
if(evt.target){
elem=evt.target;
}else{
if(evt.srcElement){
elem=evt.srcElement;
}
}
if(elem.nodeType==3){
elem=elem.parentNode;
}
if(elem!=null){
this.sortBy(elem.getAttribute("key"),"desc");
}
},sortAscending:function(evt){
var elem;
if(!evt){
evt=window.event;
}
if(evt.target){
elem=evt.target;
}else{
if(evt.srcElement){
elem=evt.srcElement;
}
}
if(elem.nodeType==3){
elem=elem.parentNode;
}
if(elem!=null){
this.sortBy(elem.getAttribute("key"),"asc");
}
},clearSort:function(evt){
this.sortBy(null,null);
},tagOnlySearch:function(tag){
this.APIHandler.clearQueryString();
this.APIHandler.addTag(tag);
this.updatePage();
},navigate:function(_196a,event){
return true;
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.WikiSearch"]){
dojo._hasResource["quickr.share.wiki.scenes.WikiSearch"]=true;
dojo.provide("quickr.share.wiki.scenes.WikiSearch");
dojo.declare("quickr.share.wiki.scenes.WikiSearch",null,{constructor:function(app,_196d){
this.app=app;
this.sceneInfo=_196d;
this.query=_196d.parameters.query;
this.mode=_196d.parameters.mode;
this.wikiLabel=_196d.parameters.wikiLabel;
this.defaultSearchScope=this.getDefaultSearchScope();
this.uid=_196d.parameters.uid;
this.name=_196d.parameters.name;
this.urlFixRegex=/\+/g;
},begin:function(_196e){
if(this.mode=="this"){
if(_196e&&_196e.wiki){
this.wiki=_196e.wiki;
this.libraryId=this.wiki.getId();
this.wikiTitle=this.wiki.getTitle();
}else{
this.getWikiPermissions();
}
}
this.show();
},end:function(_196f){
},getWikiPermissions:function(){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.getWikiEntryComplete),sync:true});
},getWikiEntryComplete:function(_1971,_1972){
var error;
if(_1971 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_1971,_1972);
this.showPageError(error);
}else{
var _1974=this.app.authenticatedUser;
var _1975;
var e=_1971.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _1977=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_1977=="wiki"){
_1975=new quickr.share.wiki.bean.Wiki(e);
}
}
if(_1975){
this.wiki=_1975;
this.libraryId=_1975.getId();
this.wikiTitle=_1975.getTitle();
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_1974?_1974.id:null)});
}
}
},show:function(){
var d=this.app.document;
var app=this.app;
d.title=app.nls.SEARCH.SEARCH;
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"wikisearch",defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.wiki,this.app.authenticatedUser,this.wikiTitle,app.nls.SEARCH.SEARCH,this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.WikiSearch.render(d,this.app,this);
d.body.style.visibility="visible";
},getDefaultSearchScope:function(){
if(this.mode=="my"){
return "mywikis";
}else{
if(this.mode=="this"){
return "thiswiki";
}else{
return "allwikis";
}
}
},showUnauthenticatedWarning:function(){
var app=this.app;
quickr.share.scenes.applyGenericWarning(app,app.nls.APP.ERRORS.LOGIN.TITLE,app.nls.APP.ERRORS.LOGIN.MESSAGES,[[app.nls.APP.ERRORS.LOGIN.ACT,app.getUrl(),"login"]]);
}});
quickr.share.wiki.scenes.WikiSearch.setVisible=function(_197b,_197c){
if(!dojo.byId(_197c)){
return;
}
var as=dojo.byId(_197c).getElementsByTagName("span");
for(var i=0;i<as.length;i++){
var a=as[i];
var m=a.className.match(/^f\d+-(\d+)/);
if(m){
var p=m[1];
a.style.display=(p>=_197b)?"inline":"none";
}
}
};
quickr.share.wiki.scenes.WikiSearch.render=function(d,app,scene){
var _1985=app.routes;
var _1986=app.authenticatedUser;
var nls=app.nls;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="WikiSearch"){
quickr.share.util.removeChildren(c);
var _1989=window["searchObject"]=new lconn.search.searchResults();
var _198a=document.createElement("div");
_198a.className="lotusSection";
_198a.style.paddingLeft="20px";
var h1=document.createElement("h1");
var _198c;
if(!scene.mode){
_198c=nls.SEARCH.HEADING;
}else{
if(scene.mode=="my"){
_198c=nls.SEARCH.HEADING_MY;
}else{
if(scene.mode=="this"){
_198c=dojo.string.substitute(nls.SEARCH.HEADING_THIS,[scene.wikiTitle]);
}
}
}
h1.appendChild(document.createTextNode(_198c));
_198a.appendChild(h1);
var _198d=document.createElement("div");
_198d.id="searchFilter";
_198d.className="lotusFilters";
_198a.appendChild(_198d);
c.appendChild(_198a);
var rdiv=document.createElement("div");
rdiv.id="lotusColRight";
rdiv.className="lotusColRight";
rdiv.setAttribute("role","complementary");
rdiv.style.paddingTop="0px";
var div=document.createElement("div");
div.className="lotusSection";
var h2=document.createElement("h2");
var hspan=document.createElement("span");
hspan.appendChild(document.createTextNode(nls.SEARCH.DATES));
hspan.className="lotusLeft";
h2.appendChild(hspan);
div.appendChild(h2);
var cdiv=document.createElement("div");
cdiv.className="lotusSectionBody lotusChunk";
var h3=document.createElement("h3");
h3.appendChild(document.createTextNode(nls.SEARCH.REL_DATES));
cdiv.appendChild(h3);
var dates=document.createElement("div");
dates.id="datebin";
cdiv.appendChild(dates);
div.appendChild(cdiv);
rdiv.appendChild(div);
var div=document.createElement("div");
div.className="lotusSection";
var h2=document.createElement("h2");
var hspan=document.createElement("span");
hspan.appendChild(document.createTextNode(nls.SEARCH.TAGS));
hspan.className="lotusLeft";
h2.appendChild(hspan);
div.appendChild(h2);
var cdiv=document.createElement("div");
cdiv.className="lotusSectionBody lotusChunk";
var h3=document.createElement("h3");
h3.appendChild(document.createTextNode(nls.SEARCH.REL_TAGS));
cdiv.appendChild(h3);
div.appendChild(cdiv);
var cdiv=document.createElement("div");
cdiv.className="lotusSectionBody lotusChunk";
var sdiv=document.createElement("div");
cdiv.appendChild(sdiv);
var _1996=new dijit.form.HorizontalSlider({name:"tagslider",discretevalues:5,value:70,minimum:100,maximum:10,intermediateChanges:true,onChange:function(){
_1989.setVisible(arguments[0],"tagbin");
},showButtons:false},sdiv);
var tags=document.createElement("div");
tags.className="lotusTagCloud";
tags.id="tagbin";
cdiv.appendChild(tags);
div.appendChild(cdiv);
rdiv.appendChild(div);
var div=document.createElement("div");
div.className="lotusSection";
var h2=document.createElement("h2");
var hspan=document.createElement("span");
hspan.appendChild(document.createTextNode(nls.SEARCH.PEOPLE));
hspan.className="lotusLeft";
h2.appendChild(hspan);
div.appendChild(h2);
var cdiv=document.createElement("div");
cdiv.className="lotusSectionBody lotusChunk";
var h3=document.createElement("h3");
h3.appendChild(document.createTextNode(nls.SEARCH.REL_PEOPLE));
cdiv.appendChild(h3);
div.appendChild(cdiv);
var cdiv=document.createElement("div");
cdiv.className="lotusSectionBody lotusChunk";
var sdiv=document.createElement("div");
cdiv.appendChild(sdiv);
div.appendChild(cdiv);
var _1998=new dijit.form.HorizontalSlider({name:"peopleslider",discretevalues:25,value:4,minimum:4,maximum:100,intermediateChanges:true,onChange:function(){
_1989.setPVisible(arguments[0],"peoplebin");
},showButtons:false},sdiv);
rdiv.appendChild(div);
var _1999=document.createElement("div");
_1999.className="lotusSectionBody lotusChunk ";
_1999.id="peoplebin";
div.appendChild(_1999);
c.appendChild(rdiv);
var _199a=document.createElement("div");
_199a.className="lotusContent";
_199a.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
_199a.appendChild(accessibilityMainContentLink);
var _199b=document.createElement("div");
_199b.id="resultContainer";
_199a.appendChild(_199b);
c.appendChild(_199a);
var _199c=!(scene.mode=="my"||(scene.mode=="this"&&app.authenticatedUser));
var p={};
p.query=scene.query;
if(scene.mode=="my"){
p.personalOnly="ACLOnlyMatch";
}
if(scene.mode=="this"){
p.fieldvalue="libraryId:"+scene.libraryId;
}
if(scene.uid){
p.person=scene.uid+""+scene.name;
}
var query=quickr.share.util.writeParameters(p);
_1989.setup(_1985.getConnectionsSearchServiceUrl(),query,_199c,"resultContainer","datebin","tagbin","peoplebin");
_1989.performFilter("wikis");
c.activeTemplate="WikiSearch";
}
};
}
if(!dojo._hasResource["quickr.share.wiki.widget.WikiIndexStreamRenderer"]){
dojo._hasResource["quickr.share.wiki.widget.WikiIndexStreamRenderer"]=true;
dojo.provide("quickr.share.wiki.widget.WikiIndexStreamRenderer");
dojo.declare("quickr.share.wiki.widget.WikiIndexStreamRenderer",[quickr.widget.StreamRenderer],{permissions:new quickr.share.bean.StreamPermissions(),methods:{},actions:[],hitsIcon:"images/page_hits.gif",_strings:{},getDelegate:function(type,def,_19a1){
var view=this.view||"details";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_19a1){
var _19a4=name+_19a1.substring(0,1).toUpperCase()+_19a1.substring(1);
if(typeof this[_19a4]=="function"){
return this[_19a4];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_19a7){
return typeof this.getDelegate(type,null,null,_19a7)=="function";
},delegate:function(type,args,def,_19ab){
var f=this.getDelegate(type,def,_19ab);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_19ad){
return this.delegate("allowMultipleExpand",arguments,quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.actions=[];
quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.destroy.apply(this,arguments);
},cleanup:function(){
this.delegate("cleanup",arguments);
quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.cleanup.apply(this,arguments);
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.getSorts);
},collapseItem:function(_19ae,data,item,_19b1){
this.delegate("collapseItem",arguments,null,item._qualifier);
},replaceItem:function(data,item,_19b4){
var _19b5;
if(item.getCategory()=="page"){
_19b5=new quickr.share.bean.Page(_19b4);
}else{
_19b5=new quickr.share.bean.File(_19b4);
}
data.itemByPosition[item._position]=_19b5;
data.itemById[item.getId()]=_19b5;
_19b5.element=item.element;
_19b5.elementExtra=item.elementExtra;
_19b5.elementDetails=item.elementDetails;
_19b5._isExpanded=item._isExpanded;
_19b5._isRendered=item._isRendered;
_19b5._position=item._position;
_19b5._qualifier=item._qualifier;
_19b5._ratingImage=item._ratingImage;
_19b5._ratingText=item._ratingText;
return _19b5;
},expandItem:function(_19b6,data,item,_19b9){
this.delegate("expandItem",arguments,null,item._qualifier);
},renderActionList:function(){
},render:function(_19ba,el,data,item){
this.cleanup();
data.itemById={};
this.baseUrl=_19ba.baseUrl;
this.delegate("render",arguments);
delete this.highlightItems;
},renderSorting:function(_19be,el,data){
this.delegate("renderSorting",arguments,quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.renderSorting);
},renderEmpty:function(_19c1,el,data){
this.delegate("renderEmpty",arguments,quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.renderEmpty);
},renderItem:function(_19c4,el,data,item,_19c8){
var _19c9;
var _19ca=quickr.share.util.getChildElementAttribute(item,"category","term");
if(_19ca=="page"){
item=new quickr.share.bean.Page(item);
_19c9="page";
}else{
item=new quickr.share.bean.File(item);
_19c9="file";
}
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_19c8;
item._qualifier=_19c9;
this.delegate("renderItem",arguments,null,_19c9);
},renderDetails:function(_19cb,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
var max=(data.paging)?data.paging.size:size;
var table=el.lastChild;
if(table&&(table._view!="details"||table.nodeName!="TABLE"||table.firstChild.childNodes.length!=max*2)){
quickr.share.util.removeChildren(el);
table=null;
}
if(!table){
var a=[];
a.push("<tr style=\"display: none;\"><td class=\"lotusFirstCell\" style=\"width:");
a.push(dojo.isSafari?"38px":"28px");
a.push("\"><a><img alt=\"\"></a></td>");
a.push("<td>");
a.push("<h4><a class=\"entry-title\" rel=\"bookmark\"></a></h4><div class=\"lotusMeta\">");
a.push("<span></span><a class=\"lotusPerson\"></a><span class=\"lotusDivider\">|</span><span></span></div></td>");
a.push("<td class=\"lotusNowrap\"><a class=\"entry-content\"><img alt=\"\"><span class=\"lotusMeta\"></span></a></td>");
a.push("<td><span><img alt=\"\"><span class=\"lotusMeta\"></span></span></td>");
a.push("<td><a href=\"javascript:;\"><img alt=\"\"><span class=\"lotusMeta\"></span></a></td>");
a.push("<td class=\"lotusAlignRight lotusLastCell lotusTiny\"><a href=\"javascript:;\"></a></td>");
a.push("</tr>");
a.push("<tr class=\"lotusDetails\" style=\"display: none;\"><td class=\"lotusFirstCell\"><!-- IE --></td><td colspan=\"5\"><div class=\"qkrWide entry-summary\"><div class=\"qkrWideInner\"></div></div></td></tr>");
var t=a.join("");
a=["<table cellpadding=\"0\" cellspacing=\"0\" style=\"display:none;\" class=\"lotusTable lotusClear wikiFixedTable qkrFixedWidth\"><tbody>"];
for(var i=0;i<max;i++){
a.push(t);
}
a.push("</tbody></table>");
var t=a.join("");
el.innerHTML=t;
table=el.firstChild;
table._view="details";
var tbody=table.firstChild;
dojo.addClass(tbody.firstChild,"lotusFirst");
for(var i=0;i<max;i++){
var td=tbody.childNodes[i*2].lastChild;
if(i==0){
td.style.width="80px";
}
var a=td.firstChild;
a.title=this._strings.VIEW_EXTRA;
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(this._strings.MORE));
dojo.connect(a,"onclick",dojo.hitch(this,this.toggleItem,_19cb,i));
td=td.previousSibling;
td.style.width="40px";
td=td.previousSibling;
td.style.width="40px";
td=td.previousSibling;
td.style.width="40px";
}
}
if(size>0){
var _19d9=d.createDocumentFragment();
var _19da=dojo._toArray(arguments);
_19da[1]=_19d9;
quickr.share.wiki.widget.WikiIndexStreamRenderer.superclass.renderSorting.apply(this,_19da);
if(el.firstChild!=table){
var old=el.replaceChild(_19d9,el.firstChild);
quickr.share.util.destroyWidgets(old);
}else{
el.insertBefore(_19d9,el.firstChild);
}
table.style.display="";
var tbody=table.firstChild;
for(var i=0;i<size;i++){
var tr=tbody.childNodes[i*2];
var _19dd=tr.nextSibling;
this.renderItem(_19cb,tbody,data,items[i],i,i==0,(i==size-1),tr,_19dd);
tr.style.display="";
}
for(var i=size;i<max;i++){
var tr=tbody.childNodes[i*2];
var _19dd=tr.nextSibling;
tr.style.display=_19dd.style.display="none";
}
this.updatePaging(_19cb,el,data);
}else{
this.renderEmpty(_19cb,el,data);
}
},renderItemDetailsPage:function(_19de,el,data,doc,_19e2,_19e3,_19e4,_19e5,_19e6){
var d=document;
var _19e8=(doc.getUpdated().getTime()!=doc.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _19eb=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var line={};
line.tags=doc.getTags();
line.wikiLabel=doc.getLabel();
var tr=_19e5;
var trd=_19e6;
tr.itemPosition=_19e2;
var td=tr.firstChild;
var a=td.firstChild;
a.firstChild.src=this.getPageImage(24);
a.firstChild.setAttribute("alt",this._appstrings.CONTENT.OPEN_PAGE);
this.generateLinkToPage(doc,a);
td=td.nextSibling;
var a=td.firstChild.firstChild;
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(doc.getTitle()));
a.title=doc.getTitle();
this.generateLinkToPage(doc,a);
var div=td.firstChild.nextSibling;
var span=div.firstChild;
var df=new quickr.share.util.DateFormat(doc.getUpdated());
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(df.formatByAge(_19e8)+" "+this._appstrings.VERSIONS.BY+" "));
span.title=(_19e8&&_19e8.FULL)?df.format(_19e8.FULL):df.format(df.nls().DATE.RELATIVE_TIME.FULL);
span=a=span.nextSibling;
if(a.lastChild){
a.removeChild(a.lastChild);
}
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
span=span.nextSibling.nextSibling;
this.renderTags(d,span,line);
td=td.nextSibling;
var count=doc.getTimesDownloaded();
td.title=dojo.string.substitute(this._appstrings.PAGECONTENT.DOWNLOAD_PAGE_AS_HTML_TOOLTIP,[quickr.share.util.trimToLength(doc.getTitle(),quickr.share.util.TRIMMED_FILENAME_LENGTH),(count!=1?dojo.string.substitute(this._strings.DOWNLOADS,[dojo.number.format(doc.getTimesDownloaded())]):this._strings.ONE_DOWNLOAD)]);
var a=td.firstChild;
a.href=doc.getUrlDownloadAsHTML();
a.className="entry-content";
var img=a.firstChild;
img.src=_19de.baseUrl+this.hitsIcon;
img.alt=td.title;
var span=img.nextSibling;
if(span.lastChild){
span.removeChild(span.lastChild);
}
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(doc.getTimesDownloaded()!=1?dojo.string.substitute(this._strings.DOWNLOADS,[dojo.number.format(doc.getTimesDownloaded())]):this._strings.ONE_DOWNLOAD));
if(td.lastChild.className=="qkrInlineWarning"){
var old=td.removeChild(td.lastChild);
quickr.share.util.destroyWidgets(old);
}
if(this.renderPopup&&quickr.share.bean.File.isFilenameTooLong(doc.getLabel())){
var span=_19eb.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.PAGECONTENT.DOWNLOAD_WARN));
var _19f9=this.renderPopup(span,span,this._appstrings.PAGECONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_19f9);
td.appendChild(span);
}
var _19fa=doc.getRatingCount();
td=td.nextSibling;
var top=td.firstChild;
top.title=(_19fa!=1)?dojo.string.substitute(this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY,[dojo.number.format(_19fa)]):this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE;
var img=doc._ratingImage=top.firstChild;
img.src=_19de.baseUrl+"images/rated-"+((doc.getRatingCount()>0)?"full":"empty")+"-med.gif";
img.alt=top.title;
var span=doc._ratingText=img.nextSibling;
if(span.lastChild){
span.removeChild(span.lastChild);
}
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_19fa)));
td=td.nextSibling;
var a=td.firstChild;
this.generateLinkToPage(doc,a,{section:"comments"});
a.title=this._appstrings.COMMENTS.VIEW_COMMENTS_PAGE;
var _19fc=doc.getCommentCount();
var img=a.firstChild;
img.src=_19de.baseUrl+"nav/common/styles/images/"+(_19fc==0?"iconNoComments.gif":"iconComments.gif");
img.alt=this._appstrings.COMMENTS.VIEW_COMMENTS_PAGE;
var span=img.nextSibling;
if(span.lastChild){
span.removeChild(span.lastChild);
}
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_19fc)));
span.title=dojo.string.substitute((_19fc!=1)?this._appstrings.COMMENTS.COMMENT_COUNT_MANY:this._appstrings.COMMENTS.COMMENT_COUNT_ONE,[dojo.number.format(_19fc)]);
var td=trd.lastChild;
var old=td.firstChild.nextSibling;
while(old){
var next=old.nextSibling;
quickr.share.util.destroyWidgets(old);
old.parentNode.removeChild(old);
old=next;
}
this.renderShowLink(tr);
doc.element=tr;
doc.elementDetails=trd;
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:tr,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
dojo.animateProperty({duration:2000,rate:100,node:trd,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
},renderTags:function(d,span,line){
span.className="lotusTags";
quickr.share.util.removeChildren(span);
span.appendChild(d.createTextNode(this._appstrings.WIKI_CREATE.TAGS_LABEL));
span.appendChild(d.createTextNode(" "));
if(line.tags.length>0){
for(var i=0;i<line.tags.length;i++){
var an=d.createElement("a");
an.className="lotusTag";
this.generateLinkToTag(line.tags[i],an);
an.appendChild(d.createTextNode(line.tags[i]));
span.appendChild(an);
if(i<line.tags.length-1){
span.appendChild(d.createTextNode(", "));
}
}
}else{
var sp=d.createElement("span");
sp.style.fontStyle="italic";
sp.appendChild(d.createTextNode(this._appstrings.TAGGER.NONE));
sp.appendChild(d.createTextNode(" "));
span.appendChild(sp);
}
span.style.display="";
},renderItemDetails:function(_1a04,el,data,doc,_1a08,_1a09,_1a0a,_1a0b,_1a0c){
var d=document;
var _1a0e=(doc.getUpdated().getTime()!=doc.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _1a11=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=_1a0b;
var trd=_1a0c;
tr.itemPosition=_1a08;
var td=tr.firstChild;
var a=td.firstChild;
a.href=doc.getUrlDownload();
a.firstChild.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),24);
a.firstChild.setAttribute("alt",quickr.share.util.getExtension(doc.getName()));
td=td.nextSibling;
var a=td.firstChild.firstChild;
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(doc.getName()));
a.title=doc.getName();
this.generateLinkToFile(doc,a);
var div=td.firstChild.nextSibling;
var span=div.firstChild;
if(this.displayOwner){
var a=span;
this.generateLinkToPerson(doc.getAuthor(),a);
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(d.createTextNode(doc.getAuthor().name));
span=span.nextSibling.nextSibling;
}
var df=new quickr.share.util.DateFormat(doc.getUpdated());
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(df.formatByAge(_1a0e)));
span.title=(_1a0e&&_1a0e.FULL)?df.format(_1a0e.FULL):df.format(df.nls().DATE.RELATIVE_TIME.FULL);
span=span.nextSibling.nextSibling;
var _1a1b=_1a11.cloneNode(true);
var _1a1c=doc.getShareCount();
var _1a1d=false;
var _1a1e=true;
var _1a1f=doc.getVisibility();
var nls=this._strings;
var _1a21,_1a22;
if(_1a1f=="private"&&_1a1c==0){
_1a21=nls.PRIVATE;
_1a1e=false;
}else{
if(_1a1f=="public"){
nls=nls.PUBLIC;
image="publicSmall.gif";
}else{
nls=nls.SHARED;
image="sharedSmall.gif";
}
if(_1a1c>1){
_1a21=nls.MANY;
_1a22=dojo.string.substitute(nls.MANY_1,[dojo.number.format(_1a1c)]);
}else{
if(_1a1c==1){
_1a21=nls.ONE;
_1a22=nls.ONE_1;
}else{
_1a21=nls.BASE;
}
}
}
this.renderShareLink(_1a1b,_1a21,_1a22,doc,this.generateLinkToPerson,_1a1e,_1a1d);
span.parentNode.replaceChild(_1a1b,span);
quickr.share.util.destroyWidgets(span);
td=td.nextSibling;
td.title=dojo.string.substitute(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),doc.getTimesDownloaded()!=1?dojo.string.substitute(this._strings.DOWNLOADS,[dojo.number.format(doc.getTimesDownloaded())]):this._strings.ONE_DOWNLOAD]);
var a=td.firstChild;
a.href=doc.getUrlDownload();
a.className="entry-content";
var img=a.firstChild;
img.src=_1a04.baseUrl+this.hitsIcon;
img.alt=td.title;
var span=img.nextSibling;
if(span.lastChild){
span.removeChild(span.lastChild);
}
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(doc.getTimesDownloaded()!=1?dojo.string.substitute(this._strings.DOWNLOADS,[dojo.number.format(doc.getTimesDownloaded())]):this._strings.ONE_DOWNLOAD));
if(td.lastChild.className=="qkrInlineWarning"){
var old=td.removeChild(td.lastChild);
quickr.share.util.destroyWidgets(old);
}
if(this.renderPopup&&quickr.share.bean.File.isFilenameTooLong(doc.getLabel())){
var span=_1a11.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN));
var _1a25=this.renderPopup(span,span,this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN_LONG);
td.appendChild(span);
}
var _1a26=doc.getRatingCount();
td=td.nextSibling;
var top=td.firstChild;
top.title=(_1a26!=1)?dojo.string.substitute(this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY,[dojo.number.format(_1a26)]):this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE;
var img=doc._ratingImage=top.firstChild;
img.src=_1a04.baseUrl+"images/rated-"+((doc.getRatingCount()>0)?"full":"empty")+"-med.gif";
img.alt=top.title;
var span=doc._ratingText=img.nextSibling;
if(span.lastChild){
span.removeChild(span.lastChild);
}
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_1a26)));
td=td.nextSibling;
var a=td.firstChild;
this.generateLinkToFile(doc,a,{section:"comments"});
a.title=this._appstrings.COMMENTS.VIEW_COMMENTS_FILE;
var _1a28=doc.getCommentCount();
var img=a.firstChild;
img.src=_1a04.baseUrl+"nav/common/styles/images/"+(_1a28==0?"iconNoComments.gif":"iconComments.gif");
img.alt=this._appstrings.COMMENTS.VIEW_COMMENTS_FILE;
var span=img.nextSibling;
if(span.lastChild){
span.removeChild(span.lastChild);
}
if(span.lastChild){
span.removeChild(span.lastChild);
}
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(dojo.number.format(_1a28)));
span.title=dojo.string.substitute((_1a28!=1)?this._appstrings.COMMENTS.COMMENT_COUNT_MANY:this._appstrings.COMMENTS.COMMENT_COUNT_ONE,[dojo.number.format(_1a28)]);
var td=trd.lastChild;
var div=td.firstChild.firstChild;
quickr.share.util.removeChildren(div);
quickr.share.util.createTextNode(d,div,doc.getDescription());
trd.style.display=(div.firstChild)?"":"none";
trd.style.display=td.firstChild.style.display=(div.firstChild)?"":"none";
var old=td.firstChild.nextSibling;
while(old){
var next=old.nextSibling;
quickr.share.util.destroyWidgets(old);
old.parentNode.removeChild(old);
old=next;
}
this.renderShowLink(tr);
doc.element=tr;
doc.elementDetails=trd;
if(this.highlightNew&&this.highlightItems&&this.highlightItems[doc.getId()]){
dojo.animateProperty({duration:2000,rate:100,node:tr,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
dojo.animateProperty({duration:2000,rate:100,node:trd,properties:{backgroundColor:{start:this.highlightNew,end:"white"}}}).play();
}
},renderItemExpandDetails:function(_1a2a,data,item,_1a2d){
var d=document;
var app=this.app;
var doc=item;
var el=doc.element;
var _1a32=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
if(this.getUserRecommendationUrl){
var _1a35=div_t.cloneNode(true);
var rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny",editable:this.permissions.canRate(doc),timesRated:doc.getRatingCount(),userRecommended:doc.isUserRecommended(),urlRecommendation:this.getUserRecommendationUrl(doc.getAuthor().id,doc.getId()),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),_strings:this._appstrings.RECOMMEND.PAGE,net:app.net},_1a35);
this.widgets.push(rater);
dojo.connect(rater,"onrecommend",null,dojo.hitch(this,this.onrecommend,data,_1a2d,_1a2a.baseUrl));
extra.appendChild(_1a35);
}
var tags=el.childNodes[1].childNodes[1].lastChild;
var _1a38=d.createElement("span");
quickr.share.util.insertBefore(tags.parentNode,_1a38,tags);
tags.style.display="none";
var _1a39=item.tagger=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags",editable:app.scene.wiki&&app.scene.wiki.getPermissions().AddChild,docId:doc.getAtomId(),url:doc.getUrlEntry(),deleteTag:dojo.hitch(null,quickr.share.wiki.widget.WikiIndexStreamRenderer.deleteTag,this),createTags:dojo.hitch(null,quickr.share.wiki.widget.WikiIndexStreamRenderer.createTags,this),createPostBody:dojo.hitch(null,quickr.share.wiki.widget.WikiIndexStreamRenderer.createPostBody,item),urlAllTags:this.urlAllTags,tags:doc.getTags(),tagStore:this.tagStore,generateTagLink:this.generateTagLink(),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:app.net},_1a38);
this.widgets.push(_1a39);
dojo.connect(_1a39,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_1a2a,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},renderItemExpand:function(_1a3a,data,item,_1a3d){
var d=document;
var tr=item.element;
var trd=item.elementDetails||item.elementExtra;
var td=trd.lastChild;
var div=d.createElement("div");
div.className="_qkrMessage";
div.appendChild(d.createTextNode(this._strings.LOADING));
td.appendChild(div);
var url=quickr.share.util.rewriteUri(item.getUrlEntry(),{acls:true,includeRecommendation:true,includeTags:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.completeItemExpand,_1a3a,data,item,_1a3d,arguments),timeout:_1a3a.timeoutRetrieve*1000,preventLoginRefresh:true,retry:dojo.hitch(this,this.renderItemExpand,_1a3a,data,item,_1a3d)});
},completeItemExpand:function(_1a44,data,item,_1a47,_1a48,_1a49,_1a4a){
var d=document;
var tr=item.element;
var trd=item.elementDetails||item.elementExtra;
var td=trd.lastChild;
for(var next,el=trd.lastChild.firstChild;el;){
next=el.nextSibling;
if(dojo.hasClass(el,"_qkrMessage")){
el.parentNode.removeChild(el);
}
el=next;
}
if(!_1a49||_1a49 instanceof Error||!_1a49.documentElement){
var _1a51=(item.getCategory()=="page")?this._appstrings.PAGE.EXPAND_ERROR:this._appstrings.FILE.EXPAND_ERROR;
var _1a52=quickr.share.util.getAtomErrorCode(_1a49,_1a4a);
var _1a53;
if(_1a52=="cancel"){
_1a53=_1a51.CANCEL;
}else{
if(_1a52=="timeout"){
_1a53=_1a51.TIMEOUT;
}else{
if(_1a52=="ItemNotFound"){
_1a53=_1a51.NOT_FOUND;
}else{
_1a53=_1a51.GENERIC;
}
}
}
var _1a54=d.createElement("div");
_1a54.className="lotusFormError _qkrMessage";
_1a54.appendChild(d.createTextNode(_1a53));
td.appendChild(_1a54);
this.renderHideLink(tr,trd);
}else{
item=_1a48[2]=this.replaceItem(data,item,_1a49.documentElement);
this.delegate("renderItemExpand",_1a48,null,item._qualifier);
}
},expandItemDetails:function(_1a55,data,item,_1a58){
var el=item.element;
this.renderHideLink(el);
el.nextSibling.style.display="";
var _1a5a=el.childNodes[1].childNodes[1].lastChild;
_1a5a.previousSibling.style.display="";
_1a5a.style.display="none";
},collapseItemDetails:function(_1a5b,data,item,_1a5e){
var el=item.element;
var a=el.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
if(a.lastChild){
a.removeChild(a.lastChild);
}
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
var extra=el.nextSibling;
extra.style.display="none";
var tags=el.childNodes[1].childNodes[1].lastChild;
var _1a63=tags.previousSibling;
_1a63.style.display="none";
var d=this.app.document;
var line={tags:item.tagger.tags};
this.renderTags(d,tags,line);
},updateItemDetails:function(_1a66,data,el,item,_1a6a,_1a6b){
var d=document;
var div=_1a6a.element;
var div2=_1a6a.elementDetails;
_1a6a.element=null;
this.delegate("renderItem",[_1a66,el,data,item,_1a6b,_1a6b==0,_1a6b==data.itemByPosition.length-1,div,div2],null,item._qualifier);
if(_1a6a._isExpanded){
this.toggleItem(_1a66,_1a6b);
}
quickr.share.util.removeChildren(div);
quickr.share.util.removeChildren(div2);
},getSortsDetails:function(_1a6f,_1a70){
return [{id:"name",name:this._appstrings.SORTS.TITLE,lowToHigh:true,tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"updated",name:this._appstrings.SORTS.MOSTRECENT,isDefault:true,tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}},{id:"mostpopular",name:this._appstrings.SORTS.MOSTVISITED,tooltips:{normalOrder:this._appstrings.SORTS.MOSTVISITED_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTVISITED_TOOLTIP_REVERSE}},{id:"highestrated",name:this._appstrings.SORTS.HIGHESTRECOMMENDED,tooltips:{normalOrder:this._appstrings.SORTS.HIGHESTRECOMMENDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.HIGHESTRECOMMENDED_TOOLTIP_REVERSE}},{id:"mostcommented",name:this._appstrings.SORTS.MOSTCOMMENTED,tooltips:{normalOrder:this._appstrings.SORTS.MOSTCOMMENTED_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTCOMMENTED_TOOLTIP_REVERSE}}];
},renderSummary:function(_1a71,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
if(size>0){
var _1a78=d.createDocumentFragment();
var _1a79=dojo._toArray(arguments);
_1a79[1]=_1a78;
var table=d.createElement("TABLE");
table.className="lotusTable wikiFixedTable qkrFixedWidth";
table.cellSpacing=table.cellPadding=0;
var _1a7b=this.getSortInfo();
if(_1a7b){
var sorts=_1a7b.list;
var _1a7d=_1a7b.active;
var _1a7e=_1a7b.reversed;
var a_t=d.createElement("a");
var th_t=d.createElement("th");
var thead=d.createElement("THEAD");
var tr=d.createElement("TR");
tr.className="lotusSort";
var th=th_t.cloneNode(true);
th.style.width="20px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
for(var i=0,sort;sort=sorts[i];i++){
var th=th_t.cloneNode(true);
if(sort.className){
th.className=sort.className;
}
if(sort.width){
th.style.width=sort.width;
}
if(sort.isSortable!=false){
var a=a_t.cloneNode(true);
if(sort==_1a7d){
var asc=(sort.lowToHigh)?!_1a7e:_1a7e;
dojo.addClass(a,asc?"lotusAscending":"lotusDescending");
var _1a88=d.createElement("span");
_1a88.className="lotusAltText";
_1a88.appendChild(d.createTextNode(asc?" ▴ ":" ▾ "));
a.appendChild(_1a88);
}
this.generateSortLink(_1a71,sort,(_1a7d.id!=sort.id||_1a7e)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
th.appendChild(a);
}else{
th.appendChild(d.createTextNode(sort.name));
}
tr.appendChild(th);
}
var th=d.createElement("TH");
th.style.width="80px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
thead.appendChild(tr);
table.appendChild(thead);
}
var tbody=d.createElement("TBODY");
for(var i=0;i<size;i++){
this.renderItem(_1a71,tbody,data,items[i],i,i==0,(i==size-1));
}
table.appendChild(tbody);
_1a78.appendChild(table);
this.updatePaging(_1a71,el,data);
var _1a8a=dojo._toArray(el.childNodes);
for(var child,i=0;child=_1a8a[i];i++){
child.style.display="none";
}
el.replaceChild(_1a78,_1a8a[0]);
for(var child,i=0;child=_1a8a[i];i++){
quickr.share.util.destroyWidgets(child);
if(child.parentNode){
child.parentNode.removeChild(child);
}
}
}else{
this.renderEmpty(_1a71,el,data);
}
},renderSortingSummary:function(_1a8c,el,data){
},renderItemSummaryPage:function(_1a8f,el,data,doc,_1a93,_1a94,_1a95,_1a96,_1a97){
var d=document;
var aMore;
var _1a9a=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _1a9d=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_1a96)?_1a96:d.createElement("TR");
tr.className="hentry";
if(_1a94){
dojo.addClass(tr,"lotusFirst");
}
if(_1a93%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _1aa2=div_t.cloneNode(true);
_1aa2.style.display="none";
var span=_1a9d.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_1aa2.appendChild(span);
var span=_1a9d.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_1aa2.appendChild(span);
var span=_1a9d.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_1aa2.appendChild(span);
td.appendChild(_1aa2);
var a=a_t.cloneNode(true);
this.generateLinkToPage(doc,a);
var img=img_t.cloneNode(true);
img.src=this.getPageImage(16);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_PAGE);
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getTitle()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getTitle();
this.generateLinkToPage(doc,adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var count=doc.getTimesDownloaded();
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
td.title=dojo.string.substitute(this._appstrings.PAGECONTENT.DOWNLOAD_PAGE_AS_HTML_TOOLTIP,[quickr.share.util.trimToLength(doc.getTitle(),quickr.share.util.TRIMMED_FILENAME_LENGTH),count!=1?dojo.string.substitute(this._appstrings.CONTENT.DOWNLOADS,[dojo.number.format(count)]):this._appstrings.CONTENT.ONE_DOWNLOAD]);
var a=a_t.cloneNode(true);
a.href=doc.getUrlDownload();
a.className="entry-content";
var img=img_t.cloneNode(true);
img.src=_1a8f.baseUrl+this.hitsIcon;
img.alt=td.title;
a.appendChild(img);
var span=_1a9d.cloneNode(true);
span.className="lotusMeta";
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(count!=1?dojo.string.substitute(this._appstrings.CONTENT.DOWNLOADS,[dojo.number.format(count)]):this._appstrings.CONTENT.ONE_DOWNLOAD));
a.appendChild(span);
td.appendChild(a);
if(quickr.share.bean.File.isFilenameTooLong(doc.getName())){
var span=_1a9d.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.PAGECONTENT.DOWNLOAD_WARN));
if(this.renderPopup){
var _1aa9=this.renderPopup(span,span,this._appstrings.PAGECONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_1aa9);
}
td.appendChild(span);
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="added";
td.appendChild(new quickr.share.util.DateFormat(doc.getPublished()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
tr.appendChild(td);
var _1aaa=(doc.getPublished().getTime()!=doc.getUpdated().getTime());
var td=td_t.cloneNode(true);
td.className="updated";
if(_1aaa){
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="modifier";
if(_1aaa){
var a=a_t.cloneNode(true);
a.className="lotusPerson";
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="size lotusNowrap lotusAlignRight";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getSize())));
tr.appendChild(td);
var _1aab=this.getSortInfo();
if(_1aab&&_1aab.active&&_1aab.active.id=="totalSize"){
var td=td_t.cloneNode(true);
td.className="size lotusNowrap lotusAlignRight";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getTotalSize())));
tr.appendChild(td);
}
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
var a=aMore=a_t.cloneNode(true);
a.appendChild(d.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
a.href="javascript:;";
td.appendChild(a);
tr.appendChild(td);
if(!_1a96){
el.appendChild(tr);
}
doc.element=tr;
var _1aac=tr.childNodes.length;
var tr=(_1a97)?_1a97:d.createElement("TR");
tr.className="lotusDetails";
if(_1a93%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_1aac-1;
tr.appendChild(td);
if(!_1a97){
el.appendChild(tr);
}
doc.elementExtra=tr;
dojo.connect(aMore,"onclick",dojo.hitch(this,this.toggleItem,_1a8f,_1a93));
},renderItemSummary:function(_1aad,el,data,doc,_1ab1,_1ab2,_1ab3,_1ab4,_1ab5){
var d=document;
var aMore;
var _1ab8=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _1abb=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_1ab4)?_1ab4:d.createElement("TR");
tr.className="hentry";
tr.itemPosition=_1ab1;
if(_1ab2){
dojo.addClass(tr,"lotusFirst");
}
if(_1ab1%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _1ac0=div_t.cloneNode(true);
_1ac0.style.display="none";
var span=_1abb.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_1ac0.appendChild(span);
var span=_1abb.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_1ac0.appendChild(span);
var span=_1abb.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_1ac0.appendChild(span);
td.appendChild(_1ac0);
var a=a_t.cloneNode(true);
a.href=doc.getUrlDownload();
var img=img_t.cloneNode(true);
img.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),16);
img.setAttribute("alt",quickr.share.util.getExtension(doc.getName()));
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getTitle()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getTitle();
this.generateLinkToFile(doc,adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _1ac6=doc.getShareCount();
var _1ac7=true;
var _1ac8=true;
var _1ac9=doc.getVisibility();
var nls=this._appstrings.DOCUMENTCONTENT;
var image,_1acc,_1acd;
if(_1ac9=="private"&&_1ac6==0){
_1acc=nls.PRIVATE;
image="privateSmall.gif";
_1ac8=false;
}else{
if(_1ac9=="public"){
nls=nls.PUBLIC;
image="publicSmall.gif";
}else{
nls=nls.SHARED;
image="sharedSmall.gif";
}
if(_1ac6>1){
nls=(_1ac7?nls.BY:nls.WITH);
_1acc=nls.MANY;
_1acd=dojo.string.substitute(nls.MANY_1,[_1ac6]);
}else{
if(_1ac6==1){
nls=(_1ac7?nls.BY:nls.WITH);
_1acc=nls.ONE;
_1acd=nls.ONE_1;
}else{
_1acc=nls.BASE;
}
}
}
var img=img_t.cloneNode(true);
img.src=_1aad.baseUrl+"images/"+image;
img.title=img.alt=dojo.string.substitute(_1acc,[_1acd]);
img.style.marginTop="1px";
img.style.height="16px";
td.appendChild(img);
tr.appendChild(td);
var count=doc.getTimesDownloaded();
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
td.title=dojo.string.substitute(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),(count!=1?dojo.string.substitute(this._appstrings.CONTENT.DOWNLOADS,[dojo.number.format(count)]):this._appstrings.CONTENT.ONE_DOWNLOAD)]);
var a=a_t.cloneNode(true);
a.href=doc.getUrlDownload();
a.className="entry-content";
var img=img_t.cloneNode(true);
img.src=_1aad.baseUrl+this.hitsIcon;
img.alt=dojo.string.substitute(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_TOOLTIP,[quickr.share.util.trimToLength(doc.getName(),quickr.share.util.TRIMMED_FILENAME_LENGTH),quickr.share.util.formatSize(doc.getSize())]);
a.appendChild(img);
var span=_1abb.cloneNode(true);
span.className="lotusMeta";
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(count!=1?dojo.string.substitute(this._appstrings.CONTENT.DOWNLOADS,[dojo.number.format(count)]):this._appstrings.CONTENT.ONE_DOWNLOAD));
a.appendChild(span);
td.appendChild(a);
if(quickr.share.bean.File.isFilenameTooLong(doc.getName())){
var span=_1abb.cloneNode(true);
span.className="qkrInlineWarning";
span.appendChild(d.createTextNode(this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN));
if(this.renderPopup){
var _1acf=this.renderPopup(span,span,this._appstrings.DOCUMENTCONTENT.DOWNLOAD_WARN_LONG);
this.widgets.push(_1acf);
}
td.appendChild(span);
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="added";
td.appendChild(new quickr.share.util.DateFormat(doc.getPublished()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
tr.appendChild(td);
var _1ad0=(doc.getPublished().getTime()!=doc.getUpdated().getTime());
var td=td_t.cloneNode(true);
td.className="updated";
if(_1ad0){
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(this._appstrings.DATE.COMPACT,d));
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="modifier";
if(_1ad0){
var a=a_t.cloneNode(true);
a.className="lotusPerson";
this.generateLinkToPerson(doc.getModifier(),a);
a.appendChild(d.createTextNode(doc.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="size lotusNowrap lotusAlignRight";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getSize())));
tr.appendChild(td);
var _1ad1=this.getSortInfo();
if(_1ad1&&_1ad1.active&&_1ad1.active.id=="totalSize"){
var td=td_t.cloneNode(true);
td.className="size lotusNowrap lotusAlignRight";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getTotalSize())));
tr.appendChild(td);
}
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
var a=aMore=a_t.cloneNode(true);
a.appendChild(d.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
a.href="javascript:;";
td.appendChild(a);
tr.appendChild(td);
if(!_1ab4){
el.appendChild(tr);
}
doc.element=tr;
var _1ad2=tr.childNodes.length;
var tr=(_1ab5)?_1ab5:d.createElement("TR");
tr.className="lotusDetails";
if(_1ab1%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_1ad2-1;
tr.appendChild(td);
if(!_1ab5){
el.appendChild(tr);
}
doc.elementExtra=tr;
},renderItemExpandSummaryPage:function(_1ad3,data,item,_1ad6){
var d=document;
var doc=item;
var el=doc.element;
var _1ada=this.permissions;
var app=this.app;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
if(this.getUserRecommendationUrl){
var _1ade=div_t.cloneNode(true);
var rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny",editable:this.permissions.canRate(doc),timesRated:doc.getRatingCount(),userRecommended:doc.isUserRecommended(),urlRecommendation:this.getUserRecommendationUrl(doc.getAuthor().id,doc.getId()),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),_strings:this._appstrings.RECOMMEND.PAGE,net:app.net},_1ade);
this.widgets.push(rater);
dojo.connect(rater,"onrecommend",null,dojo.hitch(this,this.onrecommend,data,_1ad6,_1ad3.baseUrl));
extra.appendChild(_1ade);
}
var tags=div_t.cloneNode(true);
extra.appendChild(tags);
var _1ae1=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:app.scene.wiki&&app.scene.wiki.getPermissions().AddChild,docId:doc.getAtomId(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlAllTags:this.urlAllTags,tags:doc.getTags(),tagStore:this.tagStore,generateTagLink:dojo.hitch(this,this.generateLinkToTag),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:app.net},tags);
this.widgets.push(_1ae1);
dojo.connect(_1ae1,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_1ad3,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},renderItemExpandSummary:function(_1ae2,data,item,_1ae5){
var d=document;
var doc=item;
var el=doc.element;
var _1ae9=this.permissions;
var app=this.app;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
var div=div_t.cloneNode(true);
div.className="lotusChunk qkrWide entry-summary";
var _1aee=div_t.cloneNode(true);
_1aee.className="qkrWideInner";
quickr.share.util.createTextNode(d,_1aee,doc.getDescription());
div.appendChild(_1aee);
if(_1aee.firstChild){
extra.appendChild(div);
}
if(this.getUserRecommendationUrl){
var _1aef=div_t.cloneNode(true);
var rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny",editable:this.permissions.canRate(doc),timesRated:doc.getRatingCount(),userRecommended:doc.isUserRecommended(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlRecommendation:this.getUserRecommendationUrl(doc.getAuthor().id,doc.getId()),_strings:this._appstrings.RECOMMEND,net:app.net},_1aef);
dojo.connect(rater,"onrecommend",null,dojo.hitch(this,this.onrecommend,data,_1ae5,_1ae2.baseUrl));
this.widgets.push(rater);
extra.appendChild(_1aef);
}
var tags=div_t.cloneNode(true);
extra.appendChild(tags);
var _1af2=new quickr.widget.Tagger({labelText:this._strings.TAGS_LABEL,baseClass:"lotusTags lotusTiny",editable:app.scene.wiki&&app.scene.wiki.getPermissions().AddChild,docId:doc.getAtomId(),tags:doc.getTags(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlAllTags:this.urlAllTags,tagStore:this.tagStore,generateTagLink:dojo.hitch(this,this.generateLinkToTag),renderPopup:this.renderPopup,validateTags:dojo.hitch(null,quickr.share.validation.splitTags),_strings:this._appstrings.TAGGER,_astrings:this._appstrings,net:app.net},tags);
this.widgets.push(_1af2);
dojo.connect(_1af2,"ontagchange",this,"ontagchange");
this.renderActionList(extra,_1ae2,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},expandItemSummary:function(_1af3,data,item,_1af6){
var el=item.element;
this.renderHideLink(el);
el.nextSibling.style.display="";
},collapseItemSummary:function(_1af8,data,item,_1afb){
var el=item.element;
var a=el.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
a.removeChild(a.firstChild);
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
var extra=el.nextSibling;
extra.style.display="none";
},getSortsSummary:function(_1aff,_1b00){
var arr=[{id:"name",name:this._strings.COLUMN_NAME,lowToHigh:true,isDefault:true,width:"36%",tooltips:{normalOrder:this._appstrings.SORTS.TITLE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TITLE_TOOLTIP_REVERSE}},{id:"downloads",name:" ",isSortable:false,width:"40px"},{id:"added",name:this._strings.COLUMN_ADDED,width:"110px",tooltips:{normalOrder:this._appstrings.SORTS.ADDED_TOOLTIP,reverseOrder:this._appstrings.SORTS.ADDED_TOOLTIP_REVERSE}},{id:"updated",name:this._strings.COLUMN_LAST_MODIFIED,width:"110px",tooltips:{normalOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP,reverseOrder:this._appstrings.SORTS.MOSTRECENT_TOOLTIP_REVERSE}},{id:"modifier",name:this._strings.COLUMN_LAST_MODIFIED_BY,width:"90px",isSortable:false},{id:"size",name:this._strings.COLUMN_SIZE,width:"70px",tooltips:{normalOrder:this._appstrings.SORTS.SIZE_TOOLTIP,reverseOrder:this._appstrings.SORTS.SIZE_TOOLTIP_REVERSE},className:"lotusCenter"}];
if(_1aff=="totalSize"){
arr.push({id:"totalSize",name:this._strings.COLUMN_TOTAL_SIZE,width:"80px",tooltips:{normalOrder:this._appstrings.SORTS.TOTAL_SIZE_TOOLTIP,reverseOrder:this._appstrings.SORTS.TOTAL_SIZE_TOOLTIP_REVERSE},className:"lotusNowrap lotusCenter"});
}
return arr;
},renderHideLink:function(tr){
var a=tr.lastChild.firstChild;
dojo.addClass(a,"qkrMoreLinkOpen");
a.removeChild(a.firstChild);
a.appendChild(document.createTextNode(this._strings.HIDE));
a.title=this._appstrings.CONTENT.HIDE_EXTRA;
},renderShowLink:function(tr,trd){
var a=tr.lastChild.firstChild;
dojo.removeClass(a,"qkrMoreLinkOpen");
a.removeChild(a.firstChild);
a.appendChild(document.createTextNode(this._strings.MORE));
a.title=this._strings.VIEW_EXTRA;
},renderDivider:function(d,el){
var span=d.createElement("span");
span.className="lotusDivider";
span.appendChild(d.createTextNode("|"));
el.appendChild(span);
},getActions:function(item){
if(item&&item._qualifier=="page"){
return this.pageActions;
}
return this.actions;
},generateLinkToFile:function(doc,a){
a.href=doc.getUrlDownload();
},generateLinkToPage:function(doc,a){
a.href=doc.getUrlDownload();
},generateLinkToPerson:function(user,a){
var id=(typeof user=="object")?user.id:user;
a.href=this.baseUrl+"public/people/"+encodeURIComponent(id);
},generateLinkToTag:function(tag,a){
a.href="javascript:;";
},getFileTypeImage:function(ext,size){
return this.baseUrl+"images/filetypes/default_"+size+".gif";
},getPageImage:function(size){
return this.baseUrl+"images/filetypes/page_"+size+".gif";
},renderShareLink:function(el,_1b18,_1b19,_1b1a,_1b1b,_1b1c){
var d=document;
if(_1b19){
el.appendChild(d.createTextNode(dojo.string.substitute(_1b18,[_1b19])));
}else{
el.appendChild(d.createTextNode(_1b18));
}
},ontagchange:function(){
},onrecommend:function(data,_1b1f,_1b20,_1b21,_1b22){
if(data&&data.itemByPosition&&data.itemByPosition[_1b1f]){
var title=dojo.string.substitute(((_1b22!=1)?this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY:this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE),[dojo.number.format(_1b22)]);
var item=data.itemByPosition[_1b1f];
if(item._ratingImage){
item._ratingImage.src=_1b20+"images/rated-"+(_1b22>0?"full":"empty")+"-med.gif";
item._ratingImage.alt=title;
}
if(item._ratingText){
quickr.share.util.removeChildren(item._ratingText);
item._ratingText.appendChild(document.createTextNode(" "));
item._ratingText.appendChild(document.createTextNode(_1b22));
item._ratingText.parentNode.title=title;
}
}
},generateTagLink:function(){
var app=this.app;
var opts={};
return dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,app.authenticatedUser?app.authenticatedUser.id:null,opts,true,true,true);
}});
quickr.share.wiki.widget.WikiIndexStreamRenderer.deleteTag=function(_1b27,tag,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
var _1b2a=this.createPostBody();
var _1b2b=new quickr.share.wiki.action.ConfirmDialogAction();
var nls=this._astrings;
var _1b2d={CANCEL:nls.CANCEL,HEADING:this._strings.REMOVE,MESSAGE:dojo.string.substitute(this._strings.REMOVECONFIRM,[tag]),OK:nls.REMOVE_MEMBER.ACTION,BUSY:nls.EDIT_FILE.BUSY};
this.confirmDialog=_1b2b;
_1b2b.execute(null,{onSubmit:dojo.hitch(this,function(tag){
this.tags=dojo.filter(this.tags,function(a){
return a!=tag;
});
this.update(true);
var _1b30=quickr.share.util.rewriteUri(this.url,{removeTag:tag});
this.net.putXml({url:_1b30,postData:_1b2a,contentType:"application/atom+xml",timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,handle:dojo.hitch(this,function(tag){
this.handleDelete(tag);
this.confirmDialog.cancelDialog();
delete this.confirmDialog;
},tag)});
},tag),strings:_1b2d});
};
quickr.share.wiki.widget.WikiIndexStreamRenderer.createTags=function(_1b32,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
this.errNode.style.display="none";
quickr.util.html.removeChildren(this.errNode);
this.tagCombo.staticClass="lotusText";
dojo.removeClass(this.inputField,"lotusFormErrorField");
var _1b34=this.formNode.firstChild.value;
var tags=this.validateTags(_1b34);
if(!this.validateTagLength(tags)){
return;
}
if(tags&&tags.length>0){
var _1b36=quickr.util.uri.rewriteUri(this.url,{tag:tags,includeTags:true});
var _1b37=this.createPostBody();
this.net.putXml({url:_1b36,postData:_1b37,contentType:"application/atom+xml",handle:dojo.hitch(this,this.handleCreate,tags)});
}else{
this.cancelEdit();
}
};
quickr.share.wiki.widget.WikiIndexStreamRenderer.createPostBody=function(item){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE,quickr.share.util.SNX_NAMESPACE]);
var entry=doc.documentElement;
var id=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
id.appendChild(doc.createTextNode(item.getId()));
entry.appendChild(id);
var _1b3c=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_1b3c.setAttribute("term","document");
_1b3c.setAttribute("label","document");
_1b3c.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_1b3c);
var label=quickr.share.util.createElementNS(doc,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
label.appendChild(doc.createTextNode(item.getLabel()));
entry.appendChild(label);
return quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
};
}
if(!dojo._hasResource["dojo.data.ItemFileReadStore"]){
dojo._hasResource["dojo.data.ItemFileReadStore"]=true;
dojo.provide("dojo.data.ItemFileReadStore");
dojo.declare("dojo.data.ItemFileReadStore",null,{constructor:function(_1b3e){
this._arrayOfAllItems=[];
this._arrayOfTopLevelItems=[];
this._loadFinished=false;
this._jsonFileUrl=_1b3e.url;
this._jsonData=_1b3e.data;
this._datatypeMap=_1b3e.typeMap||{};
if(!this._datatypeMap["Date"]){
this._datatypeMap["Date"]={type:Date,deserialize:function(value){
return dojo.date.stamp.fromISOString(value);
}};
}
this._features={"dojo.data.api.Read":true,"dojo.data.api.Identity":true};
this._itemsByIdentity=null;
this._storeRefPropName="_S";
this._itemNumPropName="_0";
this._rootItemPropName="_RI";
this._reverseRefMap="_RRM";
this._loadInProgress=false;
this._queuedFetches=[];
if(_1b3e.urlPreventCache!==undefined){
this.urlPreventCache=_1b3e.urlPreventCache?true:false;
}
if(_1b3e.clearOnClose){
this.clearOnClose=true;
}
},url:"",data:null,typeMap:null,clearOnClose:false,urlPreventCache:false,_assertIsItem:function(item){
if(!this.isItem(item)){
throw new Error("dojo.data.ItemFileReadStore: Invalid item argument.");
}
},_assertIsAttribute:function(_1b41){
if(typeof _1b41!=="string"){
throw new Error("dojo.data.ItemFileReadStore: Invalid attribute argument.");
}
},getValue:function(item,_1b43,_1b44){
var _1b45=this.getValues(item,_1b43);
return (_1b45.length>0)?_1b45[0]:_1b44;
},getValues:function(item,_1b47){
this._assertIsItem(item);
this._assertIsAttribute(_1b47);
return item[_1b47]||[];
},getAttributes:function(item){
this._assertIsItem(item);
var _1b49=[];
for(var key in item){
if((key!==this._storeRefPropName)&&(key!==this._itemNumPropName)&&(key!==this._rootItemPropName)&&(key!==this._reverseRefMap)){
_1b49.push(key);
}
}
return _1b49;
},hasAttribute:function(item,_1b4c){
return this.getValues(item,_1b4c).length>0;
},containsValue:function(item,_1b4e,value){
var _1b50=undefined;
if(typeof value==="string"){
_1b50=dojo.data.util.filter.patternToRegExp(value,false);
}
return this._containsValue(item,_1b4e,value,_1b50);
},_containsValue:function(item,_1b52,value,_1b54){
return dojo.some(this.getValues(item,_1b52),function(_1b55){
if(_1b55!==null&&!dojo.isObject(_1b55)&&_1b54){
if(_1b55.toString().match(_1b54)){
return true;
}
}else{
if(value===_1b55){
return true;
}
}
});
},isItem:function(_1b56){
if(_1b56&&_1b56[this._storeRefPropName]===this){
if(this._arrayOfAllItems[_1b56[this._itemNumPropName]]===_1b56){
return true;
}
}
return false;
},isItemLoaded:function(_1b57){
return this.isItem(_1b57);
},loadItem:function(_1b58){
this._assertIsItem(_1b58.item);
},getFeatures:function(){
return this._features;
},getLabel:function(item){
if(this._labelAttr&&this.isItem(item)){
return this.getValue(item,this._labelAttr);
}
return undefined;
},getLabelAttributes:function(item){
if(this._labelAttr){
return [this._labelAttr];
}
return null;
},_fetchItems:function(_1b5b,_1b5c,_1b5d){
var self=this;
var _1b5f=function(_1b60,_1b61){
var items=[];
if(_1b60.query){
var _1b63=_1b60.queryOptions?_1b60.queryOptions.ignoreCase:false;
var _1b64={};
for(var key in _1b60.query){
var value=_1b60.query[key];
if(typeof value==="string"){
_1b64[key]=dojo.data.util.filter.patternToRegExp(value,_1b63);
}
}
for(var i=0;i<_1b61.length;++i){
var match=true;
var _1b69=_1b61[i];
if(_1b69===null){
match=false;
}else{
for(var key in _1b60.query){
var value=_1b60.query[key];
if(!self._containsValue(_1b69,key,value,_1b64[key])){
match=false;
}
}
}
if(match){
items.push(_1b69);
}
}
_1b5c(items,_1b60);
}else{
for(var i=0;i<_1b61.length;++i){
var item=_1b61[i];
if(item!==null){
items.push(item);
}
}
_1b5c(items,_1b60);
}
};
if(this._loadFinished){
_1b5f(_1b5b,this._getItemsArray(_1b5b.queryOptions));
}else{
if(this._jsonFileUrl){
if(this._loadInProgress){
this._queuedFetches.push({args:_1b5b,filter:_1b5f});
}else{
this._loadInProgress=true;
var _1b6b={url:self._jsonFileUrl,handleAs:"json-comment-optional",preventCache:this.urlPreventCache};
var _1b6c=dojo.xhrGet(_1b6b);
_1b6c.addCallback(function(data){
try{
self._getItemsFromLoadedData(data);
self._loadFinished=true;
self._loadInProgress=false;
_1b5f(_1b5b,self._getItemsArray(_1b5b.queryOptions));
self._handleQueuedFetches();
}
catch(e){
self._loadFinished=true;
self._loadInProgress=false;
_1b5d(e,_1b5b);
}
});
_1b6c.addErrback(function(error){
self._loadInProgress=false;
_1b5d(error,_1b5b);
});
}
}else{
if(this._jsonData){
try{
this._loadFinished=true;
this._getItemsFromLoadedData(this._jsonData);
this._jsonData=null;
_1b5f(_1b5b,this._getItemsArray(_1b5b.queryOptions));
}
catch(e){
_1b5d(e,_1b5b);
}
}else{
_1b5d(new Error("dojo.data.ItemFileReadStore: No JSON source data was provided as either URL or a nested Javascript object."),_1b5b);
}
}
}
},_handleQueuedFetches:function(){
if(this._queuedFetches.length>0){
for(var i=0;i<this._queuedFetches.length;i++){
var fData=this._queuedFetches[i];
var _1b71=fData.args;
var _1b72=fData.filter;
if(_1b72){
_1b72(_1b71,this._getItemsArray(_1b71.queryOptions));
}else{
this.fetchItemByIdentity(_1b71);
}
}
this._queuedFetches=[];
}
},_getItemsArray:function(_1b73){
if(_1b73&&_1b73.deep){
return this._arrayOfAllItems;
}
return this._arrayOfTopLevelItems;
},close:function(_1b74){
if(this.clearOnClose&&(this._jsonFileUrl!=="")){
this._arrayOfAllItems=[];
this._arrayOfTopLevelItems=[];
this._loadFinished=false;
this._itemsByIdentity=null;
this._loadInProgress=false;
this._queuedFetches=[];
}
},_getItemsFromLoadedData:function(_1b75){
var _1b76=false;
function valueIsAnItem(_1b77){
var _1b78=((_1b77!=null)&&(typeof _1b77=="object")&&(!dojo.isArray(_1b77)||_1b76)&&(!dojo.isFunction(_1b77))&&(_1b77.constructor==Object||dojo.isArray(_1b77))&&(typeof _1b77._reference=="undefined")&&(typeof _1b77._type=="undefined")&&(typeof _1b77._value=="undefined"));
return _1b78;
};
var self=this;
function addItemAndSubItemsToArrayOfAllItems(_1b7a){
self._arrayOfAllItems.push(_1b7a);
for(var _1b7b in _1b7a){
var _1b7c=_1b7a[_1b7b];
if(_1b7c){
if(dojo.isArray(_1b7c)){
var _1b7d=_1b7c;
for(var k=0;k<_1b7d.length;++k){
var _1b7f=_1b7d[k];
if(valueIsAnItem(_1b7f)){
addItemAndSubItemsToArrayOfAllItems(_1b7f);
}
}
}else{
if(valueIsAnItem(_1b7c)){
addItemAndSubItemsToArrayOfAllItems(_1b7c);
}
}
}
}
};
this._labelAttr=_1b75.label;
var i;
var item;
this._arrayOfAllItems=[];
this._arrayOfTopLevelItems=_1b75.items;
for(i=0;i<this._arrayOfTopLevelItems.length;++i){
item=this._arrayOfTopLevelItems[i];
if(dojo.isArray(item)){
_1b76=true;
}
addItemAndSubItemsToArrayOfAllItems(item);
item[this._rootItemPropName]=true;
}
var _1b82={};
var key;
for(i=0;i<this._arrayOfAllItems.length;++i){
item=this._arrayOfAllItems[i];
for(key in item){
if(key!==this._rootItemPropName){
var value=item[key];
if(value!==null){
if(!dojo.isArray(value)){
item[key]=[value];
}
}else{
item[key]=[null];
}
}
_1b82[key]=key;
}
}
while(_1b82[this._storeRefPropName]){
this._storeRefPropName+="_";
}
while(_1b82[this._itemNumPropName]){
this._itemNumPropName+="_";
}
while(_1b82[this._reverseRefMap]){
this._reverseRefMap+="_";
}
var _1b85;
var _1b86=_1b75.identifier;
if(_1b86){
this._itemsByIdentity={};
this._features["dojo.data.api.Identity"]=_1b86;
for(i=0;i<this._arrayOfAllItems.length;++i){
item=this._arrayOfAllItems[i];
_1b85=item[_1b86];
var _1b87=_1b85[0];
if(!this._itemsByIdentity[_1b87]){
this._itemsByIdentity[_1b87]=item;
}else{
if(this._jsonFileUrl){
throw new Error("dojo.data.ItemFileReadStore:  The json data as specified by: ["+this._jsonFileUrl+"] is malformed.  Items within the list have identifier: ["+_1b86+"].  Value collided: ["+_1b87+"]");
}else{
if(this._jsonData){
throw new Error("dojo.data.ItemFileReadStore:  The json data provided by the creation arguments is malformed.  Items within the list have identifier: ["+_1b86+"].  Value collided: ["+_1b87+"]");
}
}
}
}
}else{
this._features["dojo.data.api.Identity"]=Number;
}
for(i=0;i<this._arrayOfAllItems.length;++i){
item=this._arrayOfAllItems[i];
item[this._storeRefPropName]=this;
item[this._itemNumPropName]=i;
}
for(i=0;i<this._arrayOfAllItems.length;++i){
item=this._arrayOfAllItems[i];
for(key in item){
_1b85=item[key];
for(var j=0;j<_1b85.length;++j){
value=_1b85[j];
if(value!==null&&typeof value=="object"){
if(value._type&&value._value){
var type=value._type;
var _1b8a=this._datatypeMap[type];
if(!_1b8a){
throw new Error("dojo.data.ItemFileReadStore: in the typeMap constructor arg, no object class was specified for the datatype '"+type+"'");
}else{
if(dojo.isFunction(_1b8a)){
_1b85[j]=new _1b8a(value._value);
}else{
if(dojo.isFunction(_1b8a.deserialize)){
_1b85[j]=_1b8a.deserialize(value._value);
}else{
throw new Error("dojo.data.ItemFileReadStore: Value provided in typeMap was neither a constructor, nor a an object with a deserialize function");
}
}
}
}
if(value._reference){
var _1b8b=value._reference;
if(!dojo.isObject(_1b8b)){
_1b85[j]=this._itemsByIdentity[_1b8b];
}else{
for(var k=0;k<this._arrayOfAllItems.length;++k){
var _1b8d=this._arrayOfAllItems[k];
var found=true;
for(var _1b8f in _1b8b){
if(_1b8d[_1b8f]!=_1b8b[_1b8f]){
found=false;
}
}
if(found){
_1b85[j]=_1b8d;
}
}
}
if(this.referenceIntegrity){
var _1b90=_1b85[j];
if(this.isItem(_1b90)){
this._addReferenceToMap(_1b90,item,key);
}
}
}else{
if(this.isItem(value)){
if(this.referenceIntegrity){
this._addReferenceToMap(value,item,key);
}
}
}
}
}
}
}
},_addReferenceToMap:function(_1b91,_1b92,_1b93){
},getIdentity:function(item){
var _1b95=this._features["dojo.data.api.Identity"];
if(_1b95===Number){
return item[this._itemNumPropName];
}else{
var _1b96=item[_1b95];
if(_1b96){
return _1b96[0];
}
}
return null;
},fetchItemByIdentity:function(_1b97){
if(!this._loadFinished){
var self=this;
if(this._jsonFileUrl){
if(this._loadInProgress){
this._queuedFetches.push({args:_1b97});
}else{
this._loadInProgress=true;
var _1b99={url:self._jsonFileUrl,handleAs:"json-comment-optional",preventCache:this.urlPreventCache};
var _1b9a=dojo.xhrGet(_1b99);
_1b9a.addCallback(function(data){
var scope=_1b97.scope?_1b97.scope:dojo.global;
try{
self._getItemsFromLoadedData(data);
self._loadFinished=true;
self._loadInProgress=false;
var item=self._getItemByIdentity(_1b97.identity);
if(_1b97.onItem){
_1b97.onItem.call(scope,item);
}
self._handleQueuedFetches();
}
catch(error){
self._loadInProgress=false;
if(_1b97.onError){
_1b97.onError.call(scope,error);
}
}
});
_1b9a.addErrback(function(error){
self._loadInProgress=false;
if(_1b97.onError){
var scope=_1b97.scope?_1b97.scope:dojo.global;
_1b97.onError.call(scope,error);
}
});
}
}else{
if(this._jsonData){
self._getItemsFromLoadedData(self._jsonData);
self._jsonData=null;
self._loadFinished=true;
var item=self._getItemByIdentity(_1b97.identity);
if(_1b97.onItem){
var scope=_1b97.scope?_1b97.scope:dojo.global;
_1b97.onItem.call(scope,item);
}
}
}
}else{
var item=this._getItemByIdentity(_1b97.identity);
if(_1b97.onItem){
var scope=_1b97.scope?_1b97.scope:dojo.global;
_1b97.onItem.call(scope,item);
}
}
},_getItemByIdentity:function(_1ba2){
var item=null;
if(this._itemsByIdentity){
item=this._itemsByIdentity[_1ba2];
}else{
item=this._arrayOfAllItems[_1ba2];
}
if(item===undefined){
item=null;
}
return item;
},getIdentityAttributes:function(item){
var _1ba5=this._features["dojo.data.api.Identity"];
if(_1ba5===Number){
return null;
}else{
return [_1ba5];
}
},_forceLoad:function(){
var self=this;
if(this._jsonFileUrl){
var _1ba7={url:self._jsonFileUrl,handleAs:"json-comment-optional",preventCache:this.urlPreventCache,sync:true};
var _1ba8=dojo.xhrGet(_1ba7);
_1ba8.addCallback(function(data){
try{
if(self._loadInProgress!==true&&!self._loadFinished){
self._getItemsFromLoadedData(data);
self._loadFinished=true;
}else{
if(self._loadInProgress){
throw new Error("dojo.data.ItemFileReadStore:  Unable to perform a synchronous load, an async load is in progress.");
}
}
}
catch(e){
console.log(e);
throw e;
}
});
_1ba8.addErrback(function(error){
throw error;
});
}else{
if(this._jsonData){
self._getItemsFromLoadedData(self._jsonData);
self._jsonData=null;
self._loadFinished=true;
}
}
}});
dojo.extend(dojo.data.ItemFileReadStore,dojo.data.util.simpleFetch);
}
if(!dojo._hasResource["dojo.data.ItemFileWriteStore"]){
dojo._hasResource["dojo.data.ItemFileWriteStore"]=true;
dojo.provide("dojo.data.ItemFileWriteStore");
dojo.declare("dojo.data.ItemFileWriteStore",dojo.data.ItemFileReadStore,{constructor:function(_1bab){
this._features["dojo.data.api.Write"]=true;
this._features["dojo.data.api.Notification"]=true;
this._pending={_newItems:{},_modifiedItems:{},_deletedItems:{}};
if(!this._datatypeMap["Date"].serialize){
this._datatypeMap["Date"].serialize=function(obj){
return dojo.date.stamp.toISOString(obj,{zulu:true});
};
}
if(_1bab&&(_1bab.referenceIntegrity===false)){
this.referenceIntegrity=false;
}
this._saveInProgress=false;
},referenceIntegrity:true,_assert:function(_1bad){
if(!_1bad){
throw new Error("assertion failed in ItemFileWriteStore");
}
},_getIdentifierAttribute:function(){
var _1bae=this.getFeatures()["dojo.data.api.Identity"];
return _1bae;
},newItem:function(_1baf,_1bb0){
this._assert(!this._saveInProgress);
if(!this._loadFinished){
this._forceLoad();
}
if(typeof _1baf!="object"&&typeof _1baf!="undefined"){
throw new Error("newItem() was passed something other than an object");
}
var _1bb1=null;
var _1bb2=this._getIdentifierAttribute();
if(_1bb2===Number){
_1bb1=this._arrayOfAllItems.length;
}else{
_1bb1=_1baf[_1bb2];
if(typeof _1bb1==="undefined"){
throw new Error("newItem() was not passed an identity for the new item");
}
if(dojo.isArray(_1bb1)){
throw new Error("newItem() was not passed an single-valued identity");
}
}
if(this._itemsByIdentity){
this._assert(typeof this._itemsByIdentity[_1bb1]==="undefined");
}
this._assert(typeof this._pending._newItems[_1bb1]==="undefined");
this._assert(typeof this._pending._deletedItems[_1bb1]==="undefined");
var _1bb3={};
_1bb3[this._storeRefPropName]=this;
_1bb3[this._itemNumPropName]=this._arrayOfAllItems.length;
if(this._itemsByIdentity){
this._itemsByIdentity[_1bb1]=_1bb3;
_1bb3[_1bb2]=[_1bb1];
}
this._arrayOfAllItems.push(_1bb3);
var pInfo=null;
if(_1bb0&&_1bb0.parent&&_1bb0.attribute){
pInfo={item:_1bb0.parent,attribute:_1bb0.attribute,oldValue:undefined};
var _1bb5=this.getValues(_1bb0.parent,_1bb0.attribute);
if(_1bb5&&_1bb5.length>0){
var _1bb6=_1bb5.slice(0,_1bb5.length);
if(_1bb5.length===1){
pInfo.oldValue=_1bb5[0];
}else{
pInfo.oldValue=_1bb5.slice(0,_1bb5.length);
}
_1bb6.push(_1bb3);
this._setValueOrValues(_1bb0.parent,_1bb0.attribute,_1bb6,false);
pInfo.newValue=this.getValues(_1bb0.parent,_1bb0.attribute);
}else{
this._setValueOrValues(_1bb0.parent,_1bb0.attribute,_1bb3,false);
pInfo.newValue=_1bb3;
}
}else{
_1bb3[this._rootItemPropName]=true;
this._arrayOfTopLevelItems.push(_1bb3);
}
this._pending._newItems[_1bb1]=_1bb3;
for(var key in _1baf){
if(key===this._storeRefPropName||key===this._itemNumPropName){
throw new Error("encountered bug in ItemFileWriteStore.newItem");
}
var value=_1baf[key];
if(!dojo.isArray(value)){
value=[value];
}
_1bb3[key]=value;
if(this.referenceIntegrity){
for(var i=0;i<value.length;i++){
var val=value[i];
if(this.isItem(val)){
this._addReferenceToMap(val,_1bb3,key);
}
}
}
}
this.onNew(_1bb3,pInfo);
return _1bb3;
},_removeArrayElement:function(array,_1bbc){
var index=dojo.indexOf(array,_1bbc);
if(index!=-1){
array.splice(index,1);
return true;
}
return false;
},deleteItem:function(item){
this._assert(!this._saveInProgress);
this._assertIsItem(item);
var _1bbf=item[this._itemNumPropName];
var _1bc0=this.getIdentity(item);
if(this.referenceIntegrity){
var _1bc1=this.getAttributes(item);
if(item[this._reverseRefMap]){
item["backup_"+this._reverseRefMap]=dojo.clone(item[this._reverseRefMap]);
}
dojo.forEach(_1bc1,function(_1bc2){
dojo.forEach(this.getValues(item,_1bc2),function(value){
if(this.isItem(value)){
if(!item["backupRefs_"+this._reverseRefMap]){
item["backupRefs_"+this._reverseRefMap]=[];
}
item["backupRefs_"+this._reverseRefMap].push({id:this.getIdentity(value),attr:_1bc2});
this._removeReferenceFromMap(value,item,_1bc2);
}
},this);
},this);
var _1bc4=item[this._reverseRefMap];
if(_1bc4){
for(var _1bc5 in _1bc4){
var _1bc6=null;
if(this._itemsByIdentity){
_1bc6=this._itemsByIdentity[_1bc5];
}else{
_1bc6=this._arrayOfAllItems[_1bc5];
}
if(_1bc6){
for(var _1bc7 in _1bc4[_1bc5]){
var _1bc8=this.getValues(_1bc6,_1bc7)||[];
var _1bc9=dojo.filter(_1bc8,function(_1bca){
return !(this.isItem(_1bca)&&this.getIdentity(_1bca)==_1bc0);
},this);
this._removeReferenceFromMap(item,_1bc6,_1bc7);
if(_1bc9.length<_1bc8.length){
this._setValueOrValues(_1bc6,_1bc7,_1bc9,true);
}
}
}
}
}
}
this._arrayOfAllItems[_1bbf]=null;
item[this._storeRefPropName]=null;
if(this._itemsByIdentity){
delete this._itemsByIdentity[_1bc0];
}
this._pending._deletedItems[_1bc0]=item;
if(item[this._rootItemPropName]){
this._removeArrayElement(this._arrayOfTopLevelItems,item);
}
this.onDelete(item);
return true;
},setValue:function(item,_1bcc,value){
return this._setValueOrValues(item,_1bcc,value,true);
},setValues:function(item,_1bcf,_1bd0){
return this._setValueOrValues(item,_1bcf,_1bd0,true);
},unsetAttribute:function(item,_1bd2){
return this._setValueOrValues(item,_1bd2,[],true);
},_setValueOrValues:function(item,_1bd4,_1bd5,_1bd6){
this._assert(!this._saveInProgress);
this._assertIsItem(item);
this._assert(dojo.isString(_1bd4));
this._assert(typeof _1bd5!=="undefined");
var _1bd7=this._getIdentifierAttribute();
if(_1bd4==_1bd7){
throw new Error("ItemFileWriteStore does not have support for changing the value of an item's identifier.");
}
var _1bd8=this._getValueOrValues(item,_1bd4);
var _1bd9=this.getIdentity(item);
if(!this._pending._modifiedItems[_1bd9]){
var _1bda={};
for(var key in item){
if((key===this._storeRefPropName)||(key===this._itemNumPropName)||(key===this._rootItemPropName)){
_1bda[key]=item[key];
}else{
if(key===this._reverseRefMap){
_1bda[key]=dojo.clone(item[key]);
}else{
_1bda[key]=item[key].slice(0,item[key].length);
}
}
}
this._pending._modifiedItems[_1bd9]=_1bda;
}
var _1bdc=false;
if(dojo.isArray(_1bd5)&&_1bd5.length===0){
_1bdc=delete item[_1bd4];
_1bd5=undefined;
if(this.referenceIntegrity&&_1bd8){
var _1bdd=_1bd8;
if(!dojo.isArray(_1bdd)){
_1bdd=[_1bdd];
}
for(var i=0;i<_1bdd.length;i++){
var value=_1bdd[i];
if(this.isItem(value)){
this._removeReferenceFromMap(value,item,_1bd4);
}
}
}
}else{
var _1be0;
if(dojo.isArray(_1bd5)){
var _1be1=_1bd5;
_1be0=_1bd5.slice(0,_1bd5.length);
}else{
_1be0=[_1bd5];
}
if(this.referenceIntegrity){
if(_1bd8){
var _1bdd=_1bd8;
if(!dojo.isArray(_1bdd)){
_1bdd=[_1bdd];
}
var map={};
dojo.forEach(_1bdd,function(_1be3){
if(this.isItem(_1be3)){
var id=this.getIdentity(_1be3);
map[id.toString()]=true;
}
},this);
dojo.forEach(_1be0,function(_1be5){
if(this.isItem(_1be5)){
var id=this.getIdentity(_1be5);
if(map[id.toString()]){
delete map[id.toString()];
}else{
this._addReferenceToMap(_1be5,item,_1bd4);
}
}
},this);
for(var rId in map){
var _1be8;
if(this._itemsByIdentity){
_1be8=this._itemsByIdentity[rId];
}else{
_1be8=this._arrayOfAllItems[rId];
}
this._removeReferenceFromMap(_1be8,item,_1bd4);
}
}else{
for(var i=0;i<_1be0.length;i++){
var value=_1be0[i];
if(this.isItem(value)){
this._addReferenceToMap(value,item,_1bd4);
}
}
}
}
item[_1bd4]=_1be0;
_1bdc=true;
}
if(_1bd6){
this.onSet(item,_1bd4,_1bd8,_1bd5);
}
return _1bdc;
},_addReferenceToMap:function(_1be9,_1bea,_1beb){
var _1bec=this.getIdentity(_1bea);
var _1bed=_1be9[this._reverseRefMap];
if(!_1bed){
_1bed=_1be9[this._reverseRefMap]={};
}
var _1bee=_1bed[_1bec];
if(!_1bee){
_1bee=_1bed[_1bec]={};
}
_1bee[_1beb]=true;
},_removeReferenceFromMap:function(_1bef,_1bf0,_1bf1){
var _1bf2=this.getIdentity(_1bf0);
var _1bf3=_1bef[this._reverseRefMap];
var _1bf4;
if(_1bf3){
for(_1bf4 in _1bf3){
if(_1bf4==_1bf2){
delete _1bf3[_1bf4][_1bf1];
if(this._isEmpty(_1bf3[_1bf4])){
delete _1bf3[_1bf4];
}
}
}
if(this._isEmpty(_1bf3)){
delete _1bef[this._reverseRefMap];
}
}
},_dumpReferenceMap:function(){
var i;
for(i=0;i<this._arrayOfAllItems.length;i++){
var item=this._arrayOfAllItems[i];
if(item&&item[this._reverseRefMap]){
console.log("Item: ["+this.getIdentity(item)+"] is referenced by: "+dojo.toJson(item[this._reverseRefMap]));
}
}
},_getValueOrValues:function(item,_1bf8){
var _1bf9=undefined;
if(this.hasAttribute(item,_1bf8)){
var _1bfa=this.getValues(item,_1bf8);
if(_1bfa.length==1){
_1bf9=_1bfa[0];
}else{
_1bf9=_1bfa;
}
}
return _1bf9;
},_flatten:function(value){
if(this.isItem(value)){
var item=value;
var _1bfd=this.getIdentity(item);
var _1bfe={_reference:_1bfd};
return _1bfe;
}else{
if(typeof value==="object"){
for(var type in this._datatypeMap){
var _1c00=this._datatypeMap[type];
if(dojo.isObject(_1c00)&&!dojo.isFunction(_1c00)){
if(value instanceof _1c00.type){
if(!_1c00.serialize){
throw new Error("ItemFileWriteStore:  No serializer defined for type mapping: ["+type+"]");
}
return {_type:type,_value:_1c00.serialize(value)};
}
}else{
if(value instanceof _1c00){
return {_type:type,_value:value.toString()};
}
}
}
}
return value;
}
},_getNewFileContentString:function(){
var _1c01={};
var _1c02=this._getIdentifierAttribute();
if(_1c02!==Number){
_1c01.identifier=_1c02;
}
if(this._labelAttr){
_1c01.label=this._labelAttr;
}
_1c01.items=[];
for(var i=0;i<this._arrayOfAllItems.length;++i){
var item=this._arrayOfAllItems[i];
if(item!==null){
var _1c05={};
for(var key in item){
if(key!==this._storeRefPropName&&key!==this._itemNumPropName){
var _1c07=key;
var _1c08=this.getValues(item,_1c07);
if(_1c08.length==1){
_1c05[_1c07]=this._flatten(_1c08[0]);
}else{
var _1c09=[];
for(var j=0;j<_1c08.length;++j){
_1c09.push(this._flatten(_1c08[j]));
_1c05[_1c07]=_1c09;
}
}
}
}
_1c01.items.push(_1c05);
}
}
var _1c0b=true;
return dojo.toJson(_1c01,_1c0b);
},_isEmpty:function(_1c0c){
var empty=true;
if(dojo.isObject(_1c0c)){
var i;
for(i in _1c0c){
empty=false;
break;
}
}else{
if(dojo.isArray(_1c0c)){
if(_1c0c.length>0){
empty=false;
}
}
}
return empty;
},save:function(_1c0f){
this._assert(!this._saveInProgress);
this._saveInProgress=true;
var self=this;
var _1c11=function(){
self._pending={_newItems:{},_modifiedItems:{},_deletedItems:{}};
self._saveInProgress=false;
if(_1c0f&&_1c0f.onComplete){
var scope=_1c0f.scope||dojo.global;
_1c0f.onComplete.call(scope);
}
};
var _1c13=function(err){
self._saveInProgress=false;
if(_1c0f&&_1c0f.onError){
var scope=_1c0f.scope||dojo.global;
_1c0f.onError.call(scope,err);
}
};
if(this._saveEverything){
var _1c16=this._getNewFileContentString();
this._saveEverything(_1c11,_1c13,_1c16);
}
if(this._saveCustom){
this._saveCustom(_1c11,_1c13);
}
if(!this._saveEverything&&!this._saveCustom){
_1c11();
}
},revert:function(){
this._assert(!this._saveInProgress);
var _1c17;
for(_1c17 in this._pending._modifiedItems){
var _1c18=this._pending._modifiedItems[_1c17];
var _1c19=null;
if(this._itemsByIdentity){
_1c19=this._itemsByIdentity[_1c17];
}else{
_1c19=this._arrayOfAllItems[_1c17];
}
_1c18[this._storeRefPropName]=this;
_1c19[this._storeRefPropName]=null;
var _1c1a=_1c19[this._itemNumPropName];
this._arrayOfAllItems[_1c1a]=_1c18;
if(_1c19[this._rootItemPropName]){
var i;
for(i=0;i<this._arrayOfTopLevelItems.length;i++){
var _1c1c=this._arrayOfTopLevelItems[i];
if(this.getIdentity(_1c1c)==_1c17){
this._arrayOfTopLevelItems[i]=_1c18;
break;
}
}
}
if(this._itemsByIdentity){
this._itemsByIdentity[_1c17]=_1c18;
}
}
var _1c1d;
for(_1c17 in this._pending._deletedItems){
_1c1d=this._pending._deletedItems[_1c17];
_1c1d[this._storeRefPropName]=this;
var index=_1c1d[this._itemNumPropName];
if(_1c1d["backup_"+this._reverseRefMap]){
_1c1d[this._reverseRefMap]=_1c1d["backup_"+this._reverseRefMap];
delete _1c1d["backup_"+this._reverseRefMap];
}
this._arrayOfAllItems[index]=_1c1d;
if(this._itemsByIdentity){
this._itemsByIdentity[_1c17]=_1c1d;
}
if(_1c1d[this._rootItemPropName]){
this._arrayOfTopLevelItems.push(_1c1d);
}
}
for(_1c17 in this._pending._deletedItems){
_1c1d=this._pending._deletedItems[_1c17];
if(_1c1d["backupRefs_"+this._reverseRefMap]){
dojo.forEach(_1c1d["backupRefs_"+this._reverseRefMap],function(_1c1f){
var _1c20;
if(this._itemsByIdentity){
_1c20=this._itemsByIdentity[_1c1f.id];
}else{
_1c20=this._arrayOfAllItems[_1c1f.id];
}
this._addReferenceToMap(_1c20,_1c1d,_1c1f.attr);
},this);
delete _1c1d["backupRefs_"+this._reverseRefMap];
}
}
for(_1c17 in this._pending._newItems){
var _1c21=this._pending._newItems[_1c17];
_1c21[this._storeRefPropName]=null;
this._arrayOfAllItems[_1c21[this._itemNumPropName]]=null;
if(_1c21[this._rootItemPropName]){
this._removeArrayElement(this._arrayOfTopLevelItems,_1c21);
}
if(this._itemsByIdentity){
delete this._itemsByIdentity[_1c17];
}
}
this._pending={_newItems:{},_modifiedItems:{},_deletedItems:{}};
return true;
},isDirty:function(item){
if(item){
var _1c23=this.getIdentity(item);
return new Boolean(this._pending._newItems[_1c23]||this._pending._modifiedItems[_1c23]||this._pending._deletedItems[_1c23]).valueOf();
}else{
if(!this._isEmpty(this._pending._newItems)||!this._isEmpty(this._pending._modifiedItems)||!this._isEmpty(this._pending._deletedItems)){
return true;
}
return false;
}
},onSet:function(item,_1c25,_1c26,_1c27){
},onNew:function(_1c28,_1c29){
},onDelete:function(_1c2a){
},close:function(_1c2b){
if(this.clearOnClose){
if(!this.isDirty()){
this.inherited(arguments);
}else{
if(this._jsonFileUrl!==""){
throw new Error("dojo.data.ItemFileWriteStore: There are unsaved changes present in the store.  Please save or revert the changes before invoking close.");
}
}
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.util.NavigationStore"]){
dojo._hasResource["quickr.share.wiki.util.NavigationStore"]=true;
dojo.provide("quickr.share.wiki.util.NavigationStore");
dojo.declare("quickr.share.wiki.util.NavigationStore",[dojo.data.ItemFileWriteStore],{constructor:function(_1c2c){
this.app=_1c2c.curApp;
this.scene=_1c2c.curScene;
},getChildren:function(_1c2d){
if(this.scene.libraryid){
var url=this.app.routes.getPageNavigationUrl({page:this.scene.pageId,library:this.scene.libraryId});
}else{
var url=this.app.routes.getPageNavigationUrl({page:this.scene.pageId,library:this.scene.wikiLabel});
}
url=url+"/"+this.getValue(_1c2d,"id");
this.app.net.getJson({url:url,handle:dojo.hitch(this,this.addChildren,_1c2d)});
},addChildren:function(_1c2f,_1c30,_1c31){
var error;
if(_1c30 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_1c30,_1c31);
}else{
var _1c33=this;
var data={data:_1c30};
var _1c35=new dojo.data.ItemFileWriteStore(data);
var _1c36;
_1c35.fetchItemByIdentity({identity:_1c33.getValue(_1c2f,"id"),onItem:function(item,_1c38){
_1c36=item;
},onError:function(item,_1c3a){
console.log("error");
}});
var scene=this.scene;
var _1c3c=this.breadcrumbs;
if(_1c35.getValues(_1c36,"children")!=null){
var _1c3d=_1c35.getValues(_1c36,"children");
dojo.forEach(_1c3d,function(child){
var i=null;
_1c33.fetchItemByIdentity({identity:child.id,onItem:function(item,_1c41){
i=item;
}});
if(!i){
var store=_1c33;
var _1c43=_1c33.newItem({id:_1c35.getValue(child,"id"),name:_1c35.getValue(child,"name"),root:"false",type:_1c35.getValue(child,"type"),childSize:_1c35.getValue(child,"childSize")},{parent:_1c2f,attribute:"children"});
_1c33.save();
var count=_1c33.getValue(_1c2f,"childSize");
var count=count+1;
_1c33.setValue(_1c2f,"childSize",count);
_1c33.save();
}else{
var c=_1c35.getValues(child,"children");
if(c.length>0){
_1c33.setValues(i,"children",_1c35.getValues(child,"children"));
_1c33.save();
var count=_1c33.getValue(i,"childSize");
_1c33.setValue(i,"childSize",count);
_1c33.save();
}
}
});
}
_1c33.setValue(_1c2f,"type","item");
_1c33.save();
}
}});
}
if(!dojo._hasResource["dijit.Tree"]){
dojo._hasResource["dijit.Tree"]=true;
dojo.provide("dijit.Tree");
dojo.declare("dijit._TreeNode",[dijit._Widget,dijit._Templated,dijit._Container,dijit._Contained],{item:null,isTreeNode:true,label:"",isExpandable:null,isExpanded:false,state:"UNCHECKED",templateString:"<div class=\"dijitTreeNode\" waiRole=\"presentation\"\n\t><div dojoAttachPoint=\"rowNode\" class=\"dijitTreeRow\" waiRole=\"presentation\"\n\t\t><img src=\"${_blankGif}\" alt=\"\" dojoAttachPoint=\"expandoNode\" class=\"dijitTreeExpando\" waiRole=\"presentation\"\n\t\t><span dojoAttachPoint=\"expandoNodeText\" class=\"dijitExpandoText\" waiRole=\"presentation\"\n\t\t></span\n\t\t><span dojoAttachPoint=\"contentNode\" dojoAttachEvent=\"onmouseenter:_onMouseEnter, onmouseleave:_onMouseLeave\"\n\t\t\tclass=\"dijitTreeContent\" waiRole=\"presentation\">\n\t\t\t<img src=\"${_blankGif}\" alt=\"\" dojoAttachPoint=\"iconNode\" class=\"dijitTreeIcon\" waiRole=\"presentation\"\n\t\t\t><span dojoAttachPoint=\"labelNode\" class=\"dijitTreeLabel\" wairole=\"treeitem\" tabindex=\"-1\" waiState=\"selected-false\" dojoAttachEvent=\"onfocus:_onNodeFocus\"></span>\n\t\t</span\n\t></div>\n\t<div dojoAttachPoint=\"containerNode\" class=\"dijitTreeContainer\" waiRole=\"presentation\" style=\"display: none;\"></div>\n</div>\n",postCreate:function(){
this.setLabelNode(this.label);
this._setExpando();
this._updateItemClasses(this.item);
if(this.isExpandable){
dijit.setWaiState(this.labelNode,"expanded",this.isExpanded);
}
},markProcessing:function(){
this.state="LOADING";
this._setExpando(true);
},unmarkProcessing:function(){
this._setExpando(false);
},_updateItemClasses:function(item){
var tree=this.tree,model=tree.model;
if(tree._v10Compat&&item===model.root){
item=null;
}
this.iconNode.className="dijitTreeIcon "+tree.getIconClass(item,this.isExpanded);
this.labelNode.className="dijitTreeLabel "+tree.getLabelClass(item,this.isExpanded);
},_updateLayout:function(){
var _1c49=this.getParent();
if(!_1c49||_1c49.rowNode.style.display=="none"){
dojo.addClass(this.domNode,"dijitTreeIsRoot");
}else{
dojo.toggleClass(this.domNode,"dijitTreeIsLast",!this.getNextSibling());
}
},_setExpando:function(_1c4a){
var _1c4b=["dijitTreeExpandoLoading","dijitTreeExpandoOpened","dijitTreeExpandoClosed","dijitTreeExpandoLeaf"];
var _1c4c=["*","-","+","*"];
var idx=_1c4a?0:(this.isExpandable?(this.isExpanded?1:2):3);
dojo.forEach(_1c4b,function(s){
dojo.removeClass(this.expandoNode,s);
},this);
dojo.addClass(this.expandoNode,_1c4b[idx]);
this.expandoNodeText.innerHTML=_1c4c[idx];
},expand:function(){
if(this.isExpanded){
return;
}
this._wipeOut&&this._wipeOut.stop();
this.isExpanded=true;
dijit.setWaiState(this.labelNode,"expanded","true");
dijit.setWaiRole(this.containerNode,"group");
this.contentNode.className="dijitTreeContent dijitTreeContentExpanded";
this._setExpando();
this._updateItemClasses(this.item);
if(!this._wipeIn){
this._wipeIn=dojo.fx.wipeIn({node:this.containerNode,duration:dijit.defaultDuration});
}
this._wipeIn.play();
},collapse:function(){
if(!this.isExpanded){
return;
}
this._wipeIn&&this._wipeIn.stop();
this.isExpanded=false;
dijit.setWaiState(this.labelNode,"expanded","false");
this.contentNode.className="dijitTreeContent";
this._setExpando();
this._updateItemClasses(this.item);
if(!this._wipeOut){
this._wipeOut=dojo.fx.wipeOut({node:this.containerNode,duration:dijit.defaultDuration});
}
this._wipeOut.play();
},setLabelNode:function(label){
this.labelNode.innerHTML="";
this.labelNode.appendChild(dojo.doc.createTextNode(label));
},setChildItems:function(items){
var tree=this.tree,model=tree.model;
this.getChildren().forEach(function(child){
dijit._Container.prototype.removeChild.call(this,child);
},this);
this.state="LOADED";
if(items&&items.length>0){
this.isExpandable=true;
dojo.forEach(items,function(item){
var id=model.getIdentity(item),_1c56=tree._itemNodeMap[id],node=(_1c56&&!_1c56.getParent())?_1c56:this.tree._createTreeNode({item:item,tree:tree,isExpandable:model.mayHaveChildren(item),label:tree.getLabel(item)});
this.addChild(node);
tree._itemNodeMap[id]=node;
if(this.tree.persist){
if(tree._openedItemIds[id]){
tree._expandNode(node);
}
}
},this);
dojo.forEach(this.getChildren(),function(child,idx){
child._updateLayout();
});
}else{
this.isExpandable=false;
}
if(this._setExpando){
this._setExpando(false);
}
if(this==tree.rootNode){
var fc=this.tree.showRoot?this:this.getChildren()[0],_1c5b=fc?fc.labelNode:this.domNode;
_1c5b.setAttribute("tabIndex","0");
tree.lastFocused=fc;
}
},removeChild:function(node){
this.inherited(arguments);
var _1c5d=this.getChildren();
if(_1c5d.length==0){
this.isExpandable=false;
this.collapse();
}
dojo.forEach(_1c5d,function(child){
child._updateLayout();
});
},makeExpandable:function(){
this.isExpandable=true;
this._setExpando(false);
},_onNodeFocus:function(evt){
var node=dijit.getEnclosingWidget(evt.target);
this.tree._onTreeFocus(node);
},_onMouseEnter:function(evt){
dojo.addClass(this.contentNode,"dijitTreeNodeHover");
},_onMouseLeave:function(evt){
dojo.removeClass(this.contentNode,"dijitTreeNodeHover");
}});
dojo.declare("dijit.Tree",[dijit._Widget,dijit._Templated],{store:null,model:null,query:null,label:"",showRoot:true,childrenAttr:["children"],openOnClick:false,templateString:"<div class=\"dijitTreeContainer\" waiRole=\"tree\"\n\tdojoAttachEvent=\"onclick:_onClick,onkeypress:_onKeyPress\">\n</div>\n",isExpandable:true,isTree:true,persist:true,dndController:null,dndParams:["onDndDrop","itemCreator","onDndCancel","checkAcceptance","checkItemAcceptance","dragThreshold"],onDndDrop:null,itemCreator:null,onDndCancel:null,checkAcceptance:null,checkItemAcceptance:null,dragThreshold:0,_publish:function(_1c63,_1c64){
dojo.publish(this.id,[dojo.mixin({tree:this,event:_1c63},_1c64||{})]);
},postMixInProperties:function(){
this.tree=this;
this._itemNodeMap={};
if(!this.cookieName){
this.cookieName=this.id+"SaveStateCookie";
}
},postCreate:function(){
if(this.persist){
var _1c65=dojo.cookie(this.cookieName);
this._openedItemIds={};
if(_1c65){
dojo.forEach(_1c65.split(","),function(item){
this._openedItemIds[item]=true;
},this);
}
}
if(!this.model){
this._store2model();
}
this.connect(this.model,"onChange","_onItemChange");
this.connect(this.model,"onChildrenChange","_onItemChildrenChange");
this.connect(this.model,"onDelete","_onItemDelete");
this._load();
this.inherited(arguments);
if(this.dndController){
if(dojo.isString(this.dndController)){
this.dndController=dojo.getObject(this.dndController);
}
var _1c67={};
for(var i=0;i<this.dndParams.length;i++){
if(this[this.dndParams[i]]){
_1c67[this.dndParams[i]]=this[this.dndParams[i]];
}
}
this.dndController=new this.dndController(this,_1c67);
}
},_store2model:function(){
this._v10Compat=true;
dojo.deprecated("Tree: from version 2.0, should specify a model object rather than a store/query");
var _1c69={id:this.id+"_ForestStoreModel",store:this.store,query:this.query,childrenAttrs:this.childrenAttr};
if(this.params.mayHaveChildren){
_1c69.mayHaveChildren=dojo.hitch(this,"mayHaveChildren");
}
if(this.params.getItemChildren){
_1c69.getChildren=dojo.hitch(this,function(item,_1c6b,_1c6c){
this.getItemChildren((this._v10Compat&&item===this.model.root)?null:item,_1c6b,_1c6c);
});
}
this.model=new dijit.tree.ForestStoreModel(_1c69);
this.showRoot=Boolean(this.label);
},_load:function(){
this.model.getRoot(dojo.hitch(this,function(item){
var rn=this.rootNode=this.tree._createTreeNode({item:item,tree:this,isExpandable:true,label:this.label||this.getLabel(item)});
if(!this.showRoot){
rn.rowNode.style.display="none";
}
this.domNode.appendChild(rn.domNode);
this._itemNodeMap[this.model.getIdentity(item)]=rn;
rn._updateLayout();
this._expandNode(rn);
}),function(err){
console.error(this,": error loading root: ",err);
});
},mayHaveChildren:function(item){
},getItemChildren:function(_1c71,_1c72){
},getLabel:function(item){
return this.model.getLabel(item);
},getIconClass:function(item,_1c75){
return (!item||this.model.mayHaveChildren(item))?(_1c75?"dijitFolderOpened":"dijitFolderClosed"):"dijitLeaf";
},getLabelClass:function(item,_1c77){
},_onKeyPress:function(e){
if(e.altKey){
return;
}
var dk=dojo.keys;
var _1c7a=dijit.getEnclosingWidget(e.target);
if(!_1c7a){
return;
}
var key=e.charOrCode;
if(typeof key=="string"){
if(!e.altKey&&!e.ctrlKey&&!e.shiftKey&&!e.metaKey){
this._onLetterKeyNav({node:_1c7a,key:key.toLowerCase()});
dojo.stopEvent(e);
}
}else{
var map=this._keyHandlerMap;
if(!map){
map={};
map[dk.ENTER]="_onEnterKey";
map[this.isLeftToRight()?dk.LEFT_ARROW:dk.RIGHT_ARROW]="_onLeftArrow";
map[this.isLeftToRight()?dk.RIGHT_ARROW:dk.LEFT_ARROW]="_onRightArrow";
map[dk.UP_ARROW]="_onUpArrow";
map[dk.DOWN_ARROW]="_onDownArrow";
map[dk.HOME]="_onHomeKey";
map[dk.END]="_onEndKey";
this._keyHandlerMap=map;
}
if(this._keyHandlerMap[key]){
this[this._keyHandlerMap[key]]({node:_1c7a,item:_1c7a.item});
dojo.stopEvent(e);
}
}
},_onEnterKey:function(_1c7d){
this._publish("execute",{item:_1c7d.item,node:_1c7d.node});
this.onClick(_1c7d.item,_1c7d.node);
},_onDownArrow:function(_1c7e){
var node=this._getNextNode(_1c7e.node);
if(node&&node.isTreeNode){
this.focusNode(node);
}
},_onUpArrow:function(_1c80){
var node=_1c80.node;
var _1c82=node.getPreviousSibling();
if(_1c82){
node=_1c82;
while(node.isExpandable&&node.isExpanded&&node.hasChildren()){
var _1c83=node.getChildren();
node=_1c83[_1c83.length-1];
}
}else{
var _1c84=node.getParent();
if(!(!this.showRoot&&_1c84===this.rootNode)){
node=_1c84;
}
}
if(node&&node.isTreeNode){
this.focusNode(node);
}
},_onRightArrow:function(_1c85){
var node=_1c85.node;
if(node.isExpandable&&!node.isExpanded){
this._expandNode(node);
}else{
if(node.hasChildren()){
node=node.getChildren()[0];
if(node&&node.isTreeNode){
this.focusNode(node);
}
}
}
},_onLeftArrow:function(_1c87){
var node=_1c87.node;
if(node.isExpandable&&node.isExpanded){
this._collapseNode(node);
}else{
var _1c89=node.getParent();
if(_1c89&&_1c89.isTreeNode&&!(!this.showRoot&&_1c89===this.rootNode)){
this.focusNode(_1c89);
}
}
},_onHomeKey:function(){
var node=this._getRootOrFirstNode();
if(node){
this.focusNode(node);
}
},_onEndKey:function(_1c8b){
var node=this;
while(node.isExpanded){
var c=node.getChildren();
node=c[c.length-1];
}
if(node&&node.isTreeNode){
this.focusNode(node);
}
},_onLetterKeyNav:function(_1c8e){
var node=_1c8e.node,_1c90=node,key=_1c8e.key;
do{
node=this._getNextNode(node);
if(!node){
node=this._getRootOrFirstNode();
}
}while(node!==_1c90&&(node.label.charAt(0).toLowerCase()!=key));
if(node&&node.isTreeNode){
if(node!==_1c90){
this.focusNode(node);
}
}
},_onClick:function(e){
var _1c93=e.target;
var _1c94=dijit.getEnclosingWidget(_1c93);
if(!_1c94||!_1c94.isTreeNode){
return;
}
if((this.openOnClick&&_1c94.isExpandable)||(_1c93==_1c94.expandoNode||_1c93==_1c94.expandoNodeText)){
if(_1c94.isExpandable){
this._onExpandoClick({node:_1c94});
}
}else{
this._publish("execute",{item:_1c94.item,node:_1c94});
this.onClick(_1c94.item,_1c94);
this.focusNode(_1c94);
}
dojo.stopEvent(e);
},_onExpandoClick:function(_1c95){
var node=_1c95.node;
this.focusNode(node);
if(node.isExpanded){
this._collapseNode(node);
}else{
this._expandNode(node);
}
},onClick:function(item,node){
},onOpen:function(item,node){
},onClose:function(item,node){
},_getNextNode:function(node){
if(node.isExpandable&&node.isExpanded&&node.hasChildren()){
return node.getChildren()[0];
}else{
while(node&&node.isTreeNode){
var _1c9e=node.getNextSibling();
if(_1c9e){
return _1c9e;
}
node=node.getParent();
}
return null;
}
},_getRootOrFirstNode:function(){
return this.showRoot?this.rootNode:this.rootNode.getChildren()[0];
},_collapseNode:function(node){
if(node.isExpandable){
if(node.state=="LOADING"){
return;
}
node.collapse();
this.onClose(node.item,node);
if(this.persist&&node.item){
delete this._openedItemIds[this.model.getIdentity(node.item)];
this._saveState();
}
}
},_expandNode:function(node){
if(!node.isExpandable){
return;
}
var model=this.model,item=node.item;
switch(node.state){
case "LOADING":
return;
case "UNCHECKED":
node.markProcessing();
var _this=this;
model.getChildren(item,function(items){
node.unmarkProcessing();
node.setChildItems(items);
_this._expandNode(node);
},function(err){
console.error(_this,": error loading root children: ",err);
});
break;
default:
node.expand();
this.onOpen(node.item,node);
if(this.persist&&item){
this._openedItemIds[model.getIdentity(item)]=true;
this._saveState();
}
}
},blurNode:function(){
var node=this.lastFocused;
if(!node){
return;
}
var _1ca7=node.labelNode;
dojo.removeClass(_1ca7,"dijitTreeLabelFocused");
_1ca7.setAttribute("tabIndex","-1");
dijit.setWaiState(_1ca7,"selected",false);
this.lastFocused=null;
},focusNode:function(node){
node.labelNode.focus();
},_onBlur:function(){
this.inherited(arguments);
if(this.lastFocused){
var _1ca9=this.lastFocused.labelNode;
dojo.removeClass(_1ca9,"dijitTreeLabelFocused");
}
},_onTreeFocus:function(node){
if(node){
if(node!=this.lastFocused){
this.blurNode();
}
var _1cab=node.labelNode;
_1cab.setAttribute("tabIndex","0");
dijit.setWaiState(_1cab,"selected",true);
dojo.addClass(_1cab,"dijitTreeLabelFocused");
this.lastFocused=node;
}
},_onItemDelete:function(item){
var _1cad=this.model.getIdentity(item);
var node=this._itemNodeMap[_1cad];
if(node){
var _1caf=node.getParent();
if(_1caf){
_1caf.removeChild(node);
}
delete this._itemNodeMap[_1cad];
node.destroyRecursive();
}
},_onItemChange:function(item){
var model=this.model,_1cb2=model.getIdentity(item),node=this._itemNodeMap[_1cb2];
if(node){
node.setLabelNode(this.getLabel(item));
node._updateItemClasses(item);
}
},_onItemChildrenChange:function(_1cb4,_1cb5){
var model=this.model,_1cb7=model.getIdentity(_1cb4),_1cb8=this._itemNodeMap[_1cb7];
if(_1cb8){
_1cb8.setChildItems(_1cb5);
}
},_onItemDelete:function(item){
var model=this.model,_1cbb=model.getIdentity(item),node=this._itemNodeMap[_1cbb];
if(node){
node.destroyRecursive();
delete this._itemNodeMap[_1cbb];
}
},_saveState:function(){
if(!this.persist){
return;
}
var ary=[];
for(var id in this._openedItemIds){
ary.push(id);
}
dojo.cookie(this.cookieName,ary.join(","),{expires:365});
},destroy:function(){
if(this.rootNode){
this.rootNode.destroyRecursive();
}
if(this.dndController&&!dojo.isString(this.dndController)){
this.dndController.destroy();
}
this.rootNode=null;
this.inherited(arguments);
},destroyRecursive:function(){
this.destroy();
},_createTreeNode:function(args){
return new dijit._TreeNode(args);
}});
dojo.declare("dijit.tree.TreeStoreModel",null,{store:null,childrenAttrs:["children"],labelAttr:"",root:null,query:null,constructor:function(args){
dojo.mixin(this,args);
this.connects=[];
var store=this.store;
if(!store.getFeatures()["dojo.data.api.Identity"]){
throw new Error("dijit.Tree: store must support dojo.data.Identity");
}
if(store.getFeatures()["dojo.data.api.Notification"]){
this.connects=this.connects.concat([dojo.connect(store,"onNew",this,"_onNewItem"),dojo.connect(store,"onDelete",this,"_onDeleteItem"),dojo.connect(store,"onSet",this,"_onSetItem")]);
}
},destroy:function(){
dojo.forEach(this.connects,dojo.disconnect);
},getRoot:function(_1cc2,_1cc3){
if(this.root){
_1cc2(this.root);
}else{
this.store.fetch({query:this.query,onComplete:dojo.hitch(this,function(items){
if(items.length!=1){
throw new Error(this.declaredClass+": query "+dojo.toJson(this.query)+" returned "+items.length+" items, but must return exactly one item");
}
this.root=items[0];
_1cc2(this.root);
}),onError:_1cc3});
}
},mayHaveChildren:function(item){
return dojo.some(this.childrenAttrs,function(attr){
return this.store.hasAttribute(item,attr);
},this);
},getChildren:function(_1cc7,_1cc8,_1cc9){
var store=this.store;
var _1ccb=[];
for(var i=0;i<this.childrenAttrs.length;i++){
var vals=store.getValues(_1cc7,this.childrenAttrs[i]);
_1ccb=_1ccb.concat(vals);
}
var _1cce=0;
dojo.forEach(_1ccb,function(item){
if(!store.isItemLoaded(item)){
_1cce++;
}
});
if(_1cce==0){
_1cc8(_1ccb);
}else{
var _1cd0=function _1cd0(item){
if(--_1cce==0){
_1cc8(_1ccb);
}
};
dojo.forEach(_1ccb,function(item){
if(!store.isItemLoaded(item)){
store.loadItem({item:item,onItem:_1cd0,onError:_1cc9});
}
});
}
},getIdentity:function(item){
return this.store.getIdentity(item);
},getLabel:function(item){
if(this.labelAttr){
return this.store.getValue(item,this.labelAttr);
}else{
return this.store.getLabel(item);
}
},newItem:function(args,_1cd6){
var pInfo={parent:_1cd6,attribute:this.childrenAttrs[0]};
return this.store.newItem(args,pInfo);
},pasteItem:function(_1cd8,_1cd9,_1cda,bCopy){
var store=this.store,_1cdd=this.childrenAttrs[0];
if(_1cd9){
dojo.forEach(this.childrenAttrs,function(attr){
if(store.containsValue(_1cd9,attr,_1cd8)){
if(!bCopy){
var _1cdf=dojo.filter(store.getValues(_1cd9,attr),function(x){
return x!=_1cd8;
});
store.setValues(_1cd9,attr,_1cdf);
}
_1cdd=attr;
}
});
}
if(_1cda){
store.setValues(_1cda,_1cdd,store.getValues(_1cda,_1cdd).concat(_1cd8));
}
},onChange:function(item){
},onChildrenChange:function(_1ce2,_1ce3){
},onDelete:function(_1ce4,_1ce5){
},_onNewItem:function(item,_1ce7){
if(!_1ce7){
return;
}
this.getChildren(_1ce7.item,dojo.hitch(this,function(_1ce8){
this.onChildrenChange(_1ce7.item,_1ce8);
}));
},_onDeleteItem:function(item){
this.onDelete(item);
},_onSetItem:function(item,_1ceb,_1cec,_1ced){
if(dojo.indexOf(this.childrenAttrs,_1ceb)!=-1){
this.getChildren(item,dojo.hitch(this,function(_1cee){
this.onChildrenChange(item,_1cee);
}));
}else{
this.onChange(item);
}
}});
dojo.declare("dijit.tree.ForestStoreModel",dijit.tree.TreeStoreModel,{rootId:"$root$",rootLabel:"ROOT",query:null,constructor:function(_1cef){
this.root={store:this,root:true,id:_1cef.rootId,label:_1cef.rootLabel,children:_1cef.rootChildren};
},mayHaveChildren:function(item){
return item===this.root||this.inherited(arguments);
},getChildren:function(_1cf1,_1cf2,_1cf3){
if(_1cf1===this.root){
if(this.root.children){
_1cf2(this.root.children);
}else{
this.store.fetch({query:this.query,onComplete:dojo.hitch(this,function(items){
this.root.children=items;
_1cf2(items);
}),onError:_1cf3});
}
}else{
this.inherited(arguments);
}
},getIdentity:function(item){
return (item===this.root)?this.root.id:this.inherited(arguments);
},getLabel:function(item){
return (item===this.root)?this.root.label:this.inherited(arguments);
},newItem:function(args,_1cf8){
if(_1cf8===this.root){
this.onNewRootItem(args);
return this.store.newItem(args);
}else{
return this.inherited(arguments);
}
},onNewRootItem:function(args){
},pasteItem:function(_1cfa,_1cfb,_1cfc,bCopy){
if(_1cfb===this.root){
if(!bCopy){
this.onLeaveRoot(_1cfa);
}
}
dijit.tree.TreeStoreModel.prototype.pasteItem.call(this,_1cfa,_1cfb===this.root?null:_1cfb,_1cfc===this.root?null:_1cfc);
if(_1cfc===this.root){
this.onAddToRoot(_1cfa);
}
},onAddToRoot:function(item){
console.log(this,": item ",item," added to root");
},onLeaveRoot:function(item){
console.log(this,": item ",item," removed from root");
},_requeryTop:function(){
var _1d00=this.root.children||[];
this.store.fetch({query:this.query,onComplete:dojo.hitch(this,function(_1d01){
this.root.children=_1d01;
if(_1d00.length!=_1d01.length||dojo.some(_1d00,function(item,idx){
return _1d01[idx]!=item;
})){
this.onChildrenChange(this.root,_1d01);
}
})});
},_onNewItem:function(item,_1d05){
this._requeryTop();
this.inherited(arguments);
},_onDeleteItem:function(item){
if(dojo.indexOf(this.root.children,item)!=-1){
this._requeryTop();
}
this.inherited(arguments);
}});
}
if(!dojo._hasResource["quickr.share.wiki.fx"]){
dojo._hasResource["quickr.share.wiki.fx"]=true;
dojo.provide("quickr.share.wiki.fx");
quickr.share.wiki.fx.wipeIn=function(args){
args.node=dojo.byId(args.node);
var node=args.node,s=node.style,o;
var anim=dojo.animateProperty(dojo.mixin({properties:{height:{start:function(){
o=s.overflow;
s.overflow="hidden";
if(s.visibility=="hidden"||s.display=="none"){
s.height="1px";
s.display="";
s.visibility="";
return 1;
}else{
var _1d0c=dojo.style(node,"height");
return Math.max(_1d0c,1);
}
},end:function(){
return node.scrollHeight;
}}}},args));
dojo.connect(anim,"onEnd",function(){
s.height="auto";
if(o){
s.overflow=o;
}
});
return anim;
};
}
if(!dojo._hasResource["quickr.share.wiki.util.NavigationTree"]){
dojo._hasResource["quickr.share.wiki.util.NavigationTree"]=true;
dojo.provide("quickr.share.wiki.util.NavigationTree");
dojo.declare("quickr.share.wiki.util._NavigationTreeNode",[dijit._TreeNode],{_updateItemClasses:function(item){
var tree=this.tree,model=tree.model;
this.iconNode.className=tree.getIconClass(item,this.isExpanded);
this.labelNode.className="dijitTreeLabel "+tree.getLabelClass(item,this.isExpanded);
if(tree.sitemap==true){
if(item.name==model.page){
this.rowNode.className="dijitTreeSiteMapRowSelected "+this.rowNode.className;
}else{
if(item.id=="newpage"){
this.rowNode.className="dijitTreeSiteMapRowSelected "+this.rowNode.className;
}else{
this.rowNode.className="dijitTreeSiteMapRowUnselected "+this.rowNode.className;
}
}
}else{
if(item.name==model.page){
this.rowNode.className="dijitTreeRowSelected "+this.rowNode.className;
}else{
if(item.id=="newpage"){
this.rowNode.className="dijitTreeRowSelected "+this.rowNode.className;
}else{
this.rowNode.className="dijitTreeRowUnselected "+this.rowNode.className;
}
}
}
},_setExpando:function(_1d10){
var _1d11=["dijitTreeExpandoLoading","dijitTreeExpandoOpened","dijitTreeExpandoClosed","dijitTreeExpandoLeaf","dijitTreeSelectedExpandoOpened","dijitTreeSelectedExpandoClosed"];
var _1d12=quickr.share.config.dir=="ltr"?["*","&#9660;","&#9658;","*","&#9660;","&#9658;"]:["*","&#9660;","&#9668;","*","&#9660;","&#9668;"];
var model=this.tree.model;
if(this.label==model.page){
var idx=_1d10?0:(this.item.childSize>0?(this.isExpanded?4:5):3);
}else{
var idx=_1d10?0:(this.item.childSize>0?(this.isExpanded?1:2):3);
}
dojo.forEach(_1d11,function(s){
dojo.removeClass(this.expandoNode,s);
},this);
dojo.addClass(this.expandoNode,_1d11[idx]);
this.expandoNodeText.innerHTML=_1d12[idx];
},_updateLayout:function(){
var _1d16=this.getParent();
if(!_1d16||_1d16.rowNode.style.display=="none"){
dojo.addClass(this.domNode,"dijitTreeIsRoot");
}else{
dojo.removeClass(this.domNode,"dijitTreeIsRoot");
dojo.toggleClass(this.domNode,"dijitTreeIsLast",!this.getNextSibling());
}
},setChildItems:function(items){
var tree=this.tree,model=tree.model;
this.getChildren().forEach(function(child){
dijit._Container.prototype.removeChild.call(this,child);
},this);
this.state="LOADED";
if(items&&items.length>0){
this.isExpandable=true;
if(!this.containerNode){
this.containerNode=this.tree.containerNodeTemplate.cloneNode(true);
this.domNode.appendChild(this.containerNode);
}
dojo.forEach(items,function(item){
var id=model.getIdentity(item),_1d1d=tree._itemNodeMap[id],node=(_1d1d&&!_1d1d.getParent())?_1d1d:new quickr.share.wiki.util._NavigationTreeNode({item:item,tree:tree,isExpandable:model.mayHaveChildren(item),label:tree.getLabel(item)});
this.addChild(node);
tree._itemNodeMap[id]=node;
if(this.tree.persist){
if(tree._openedItemIds[id]){
tree._expandNode(node);
}
}
},this);
dojo.forEach(this.getChildren(),function(child,idx){
child._updateLayout();
});
}else{
this.isExpandable=false;
}
if(this._setExpando){
this._setExpando(false);
}
if(!this.parent){
var fc=this.tree.showRoot?this:this.getChildren()[0],_1d22=fc?fc.labelNode:this.domNode;
_1d22.setAttribute("tabIndex","0");
}
if(this.containerNode&&!this._wipeIn){
this._wipeIn=quickr.share.wiki.fx.wipeIn({node:this.containerNode,duration:150});
this._wipeOut=dojo.fx.wipeOut({node:this.containerNode,duration:150});
}
},postCreate:function(){
this.inherited(arguments);
this.setLabelNode(this.label,this.label);
},setLabelNode:function(label,title){
this.inherited(arguments);
this.labelNode.title=title;
}});
dojo.declare("quickr.share.wiki.util.NavigationTree",[dijit.Tree],{isClicked:false,isClickedPending:false,postCreate:function(){
if(this.persist){
var _1d25=dojo.cookie(this.cookieName);
this._openedItemIds={};
if(this.model.store.app.useNavCookie==false){
_1d25=null;
}
if(_1d25){
dojo.forEach(_1d25.split(","),function(item){
this._openedItemIds[item]=true;
},this);
}
}
this.model.store.app.useNavCookie=true;
if(!this.model){
this._store2model();
}
this.connect(this.model,"onChange","_onItemChange");
this.connect(this.model,"onChildrenChange","_onItemChildrenChange");
this.connect(this.model,"onDelete","_onItemDelete");
this._load();
if(this.dndController){
if(dojo.isString(this.dndController)){
this.dndController=dojo.getObject(this.dndController);
}
var _1d27={};
for(var i=0;i<this.dndParams.length;i++){
if(this[this.dndParams[i]]){
_1d27[this.dndParams[i]]=this[this.dndParams[i]];
}
}
this.dndController=new this.dndController(this,_1d27);
}
},focusNode:function(node){
if(node&&node.labelNode&&typeof (node.labelNode.focus)=="function"){
node.labelNode.focus();
}
},_onClick:function(e){
var _1d2b=e.target;
var _1d2c=dijit.getEnclosingWidget(_1d2b);
if(!_1d2c||!_1d2c.isTreeNode){
return;
}
if((this.openOnClick&&_1d2c.item.childSize>0)||(_1d2b==_1d2c.expandoNode||_1d2b==_1d2c.expandoNodeText)){
if(_1d2c.item.childSize>0){
this._onExpandoClick({node:_1d2c});
}
}else{
this._publish("execute",{item:_1d2c.item,node:_1d2c});
this.onClick(_1d2c.item,_1d2c);
this.focusNode(_1d2c);
}
dojo.stopEvent(e);
},_onExpandoClick:function(_1d2d){
var node=_1d2d.node;
this.focusNode(node);
this.isClicked=true;
this.isClickedPending=false;
if(node.isExpanded){
this._collapseNode(node);
}else{
this._expandNode(node);
}
var model=this.model,item=node.item;
var store=model.getStore();
store.scene.updateSidebarHeight();
},_expandNode:function(node){
if(!node.isExpandable&&this.isClicked==false){
return;
}
var model=this.model,item=node.item;
var tree=this;
model.tree=tree;
var store=model.getStore();
if(node.state!="EXPANDED"&&item.id!="tree"){
var _1d37=store.getValues(item,"children");
dojo.forEach(_1d37,function(child){
node.state="UNCHECKED";
});
}else{
if(item.id=="tree"){
if(node.state=="UNCHECKED"){
node.state="ROOT";
}
}else{
if(tree.isClicked==true){
if(!tree.isClickedPending){
node.state="UNCHECKED";
}
}
}
}
switch(node.state){
case "LOADING":
return;
case "UNCHECKED":
node.markProcessing();
var _this=this;
model.getChildren(item,function(items){
node.unmarkProcessing();
node.setChildItems(items);
node.state="EXPANDED";
if(tree.isClicked){
tree.isClickedPending=true;
_this.expandNode(node);
}else{
if(tree.sitemap&&tree.sitemap==true){
_this.expandNode(node);
}else{
if(model.breadcrumbs){
var found=false;
for(var i=0;i<model.breadcrumbs.length;i++){
if(model.breadcrumbs[i].id){
if(node.item.id==model.breadcrumbs[i].getId()){
found=true;
}
}
}
if(found==true){
_this.expandNode(node);
}
}
}
}
_this._expandNode(node);
},function(err){
console.error(_this,": error loading root children: ",err);
});
break;
case "ROOT":
node.markProcessing();
var _this=this;
model.getChildren(item,function(items){
node.unmarkProcessing();
node.setChildItems(items);
_this._expandNode(node);
},function(err){
console.error(_this,": error loading root children: ",err);
});
break;
default:
node.expand();
if(this.persist&&item){
this._openedItemIds[model.getIdentity(item)]=true;
this._saveState();
}
}
store.scene.updateSidebarHeight();
},getLabelClass:function(item,_1d41){
var tree=this.tree,model=tree.model;
if(item.id=="newpage"){
return "dijitTreeSelected dijitTreeConfirmNew";
}else{
if(item.name==model.page){
return "dijitTreeSelected";
}else{
return "dijitTreeUnselected";
}
}
},_load:function(){
this.model.getRoot(dojo.hitch(this,function(item){
var rn=this.rootNode=new quickr.share.wiki.util._NavigationTreeNode({item:item,tree:this,isExpandable:true,label:this.label||this.getLabel(item)});
if(!this.showRoot){
rn.rowNode.style.display="none";
}
this.domNode.appendChild(rn.domNode);
this._itemNodeMap[this.model.getIdentity(item)]=rn;
rn._updateLayout();
this._expandNode(rn);
}),function(err){
console.error(this,": error loading root: ",err);
});
},expandNode:function(item){
if(item){
var n=this._itemNodeMap[item.id];
if(n==null){
n=this._itemNodeMap[item.item.id];
}
if(n&&n.isExpanded==false){
this._expandNode(n);
}
}
}});
dojo.declare("quickr.share.wiki.util.NavigationStoreModel",[dijit.tree.TreeStoreModel],{getStore:function(){
return this.store;
},getChildren:function(_1d49,_1d4a,_1d4b){
var store=this.getStore();
if(_1d49.label!="tree"){
var _1d4d=store.getValues(_1d49,"children");
if(_1d49.type!="item"&&this.tree.isClicked){
store.getChildren(_1d49);
dojo.forEach(_1d4d,function(child){
if(store.getValue(child,"type")!="item"){
store.getChildren(child);
}
});
}
}
return this.inherited(arguments);
},mayHaveChildren:function(item){
return (item.childSize>0);
},getNavChildren:function(_1d50,_1d51,_1d52){
var store=this.store;
var _1d54=[];
for(var i=0;i<this.childrenAttrs.length;i++){
var vals=store.getValues(_1d50,this.childrenAttrs[i]);
_1d54=_1d54.concat(vals);
}
var _1d57=0;
dojo.forEach(_1d54,function(item){
if(!store.isItem(item)){
_1d57++;
}
});
if(_1d57==0){
_1d51(_1d54);
}else{
var _1d59=function _1d59(item){
if(--_1d57==0){
_1d51(_1d54);
}
};
dojo.forEach(_1d54,function(item){
if(!store.isItem(item)){
store.loadItem({item:item,onItem:_1d59,onError:_1d52});
}
});
}
if(this.sitemap&&this.sitemap==true){
this.tree.expandNode(_1d50);
}else{
if(this.breadcrumbs){
var found=false;
for(var i=0;i<this.breadcrumbs.length;i++){
if(this.breadcrumbs[i].id){
if(_1d50.id==this.breadcrumbs[i].getId()){
found=true;
}
}
}
if(found==true){
this.tree.expandNode(_1d50);
}
}else{
if(this.tree.isClicked){
this.tree.expandNode(_1d50);
this.tree.isClicked=false;
}
}
}
},_onNewItem:function(item,_1d5e){
if(!_1d5e){
return;
}
this.getNavChildren(_1d5e.item,dojo.hitch(this,function(_1d5f){
this.onChildrenChange(_1d5e.item,_1d5f);
}));
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.WikiSidebarPage"]){
dojo._hasResource["quickr.share.wiki.scenes.WikiSidebarPage"]=true;
dojo.provide("quickr.share.wiki.scenes.WikiSidebarPage");
dojo.declare("quickr.share.wiki.scenes.WikiSidebarPage",[quickr.share.wiki.scenes.SidebarPage],{PAGE_LIST_VIEWS:[{title:"app.nls.WIKI_NAVLIST.SITEMAP",func:function(app,scene,_1d62){
return _1d62.getSiteMapUrl(scene.wikiLabel);
},scene:"quickr.share.wiki.scenes.SiteMap"},{title:"app.nls.WIKI_NAVLIST.ALPHABETICAL",func:function(app,scene,_1d65){
return _1d65.getPageIndexUrl(scene.wikiLabel);
},scene:"quickr.share.wiki.scenes.WikiIndex"},{title:"app.nls.WIKI_NAVLIST.EDITED",func:function(app,scene,_1d68){
return _1d68.getMyPagesUrl(scene.wikiLabel);
},scene:"quickr.share.wiki.scenes.MyPages"}],SITE_TOOLS:function(scene,doc){
var app=scene.app;
var _1d6c=app.authenticatedUser;
var wiki=scene.wiki;
var _1d6e=[];
if(doc.isCommunityWiki()){
if(_1d6c){
_1d6e.push({title:"app.nls.WIKI_NAV_TOOLS.MEMBERS",func:function(app,scene,_1d71){
return _1d71.getManageMembersUrl(scene.wikiLabel,scene.libraryId);
},onclick:null});
}
if(wiki&&wiki.getPermissions().GrantAccess){
_1d6e.push({title:"app.nls.WIKI_NAV_TOOLS.SETTINGS",func:null,onclick:quickr.share.wiki.scenes.AbstractPage.settings});
}
}else{
if(_1d6c){
_1d6e.push({title:"app.nls.WIKI_NAV_TOOLS.MEMBERS",func:function(app,scene,_1d74){
return _1d74.getManageMembersUrl(scene.wikiLabel,scene.libraryId);
},onclick:null});
}
if(wiki&&wiki.getPermissions().GrantAccess){
_1d6e.push({title:"app.nls.WIKI_ACCESS.TITLE",func:null,onclick:quickr.share.wiki.scenes.AbstractPage.manageAccess});
_1d6e.push({title:"app.nls.WIKI_NAV_TOOLS.SETTINGS",func:null,onclick:quickr.share.wiki.scenes.AbstractPage.settings});
}
}
return _1d6e;
},loadNavigation:function(d,el,doc,opt,_1d79,_1d7a){
var error;
if(_1d79 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_1d79,_1d7a);
}else{
var app=opt.app;
var scene=app.scene;
var div=d.createElement("div");
div.id="sideNav";
div.className="navDiv";
var sideW=app.prefs.get("sww");
if(sideW){
div.style.width=sideW+"px";
}
if(this.navStore==null&&_1d79.fullTree==true){
var _1d80=new quickr.share.wiki.util.NavigationStore({data:_1d79,curApp:app,curScene:scene});
this.navStore=_1d80;
this.navStore.timestamp=_1d79.timestamp;
}else{
if(_1d79.clean==true&&_1d79.fullTree==false){
var _1d80=this.navStore;
var data={data:_1d79};
var _1d82=new dojo.data.ItemFileWriteStore({data:_1d79});
var _1d83=null;
_1d82.fetchItemByIdentity({identity:"tree",onItem:function(item,_1d85){
_1d83=item;
var _1d86=_1d82.getValues(item,"children");
dojo.forEach(_1d86,function(child){
var i=null;
_1d80.fetchItemByIdentity({identity:child.id,onItem:function(item,_1d8a){
i=item;
}});
var r=null;
_1d80.fetchItemByIdentity({identity:_1d83.id,onItem:function(item,_1d8d){
r=item;
}});
if(i==null){
var _1d8e=_1d80.newItem({id:_1d82.getValue(child,"id"),name:_1d82.getValue(child,"name"),root:"false",type:_1d82.getValue(child,"type"),childSize:_1d82.getValue(child,"childSize")},{attribute:"children"});
var c=_1d80.getValues(r,"children");
_1d80.setValues(r,"children",c.concat(_1d8e));
_1d80.save();
var count=_1d80.getValue(r,"childSize");
var count=count+1;
_1d80.setValue(r,"childSize",count);
_1d80.save();
}else{
_1d80.setValue(i,"name",_1d82.getValue(child,"name"));
_1d80.setValue(i,"root",_1d82.getValue(child,"root"));
_1d80.setValue(i,"type",_1d82.getValue(child,"type"));
_1d80.setValue(i,"childSize",_1d82.getValue(child,"childSize"));
_1d80.save();
}
});
},onError:function(item,_1d92){
console.log("error");
}});
if(_1d83!=null){
_1d80.fetchItemByIdentity({identity:_1d83.id,onItem:function(item,_1d94){
var _1d95=_1d80.getValues(item,"children");
dojo.forEach(_1d95,function(child){
var i=null;
_1d82.fetchItemByIdentity({identity:child.id,onItem:function(item,_1d99){
i=item;
}});
if(i==null){
_1d80.deleteItem(child);
_1d80.save();
var count=_1d80.getValue(item,"childSize");
var count=count-1;
_1d80.setValue(item,"childSize",count);
_1d80.save();
}
});
},onError:function(item,_1d9c){
console.log("error");
}});
}
var _1d9d=null;
_1d82.fetch({query:{parElem:"true"},onItem:function(item,_1d9f){
_1d9d=item;
var _1da0=_1d82.getValues(_1d9d,"children");
dojo.forEach(_1da0,function(child){
var i=null;
_1d80.fetchItemByIdentity({identity:child.id,onItem:function(item,_1da4){
i=item;
}});
if(i==null){
var r=null;
_1d80.fetchItemByIdentity({identity:_1d9d.id,onItem:function(item,_1da7){
r=item;
}});
var _1da8=_1d80.newItem({id:_1d82.getValue(child,"id"),name:_1d82.getValue(child,"name"),root:"false",type:_1d82.getValue(child,"type"),childSize:_1d82.getValue(child,"childSize")},{attribute:"children"});
_1d80.save();
var c=_1d80.getValues(r,"children");
_1d80.setValues(r,"children",c.concat(_1da8));
_1d80.save();
var count=_1d80.getValue(r,"childSize");
var count=count+1;
_1d80.setValue(r,"childSize",count);
_1d80.save();
}else{
_1d80.setValue(i,"name",_1d82.getValue(child,"name"));
_1d80.setValue(i,"root",_1d82.getValue(child,"root"));
_1d80.setValue(i,"type",_1d82.getValue(child,"type"));
_1d80.setValue(i,"childSize",_1d82.getValue(child,"childSize"));
_1d80.save();
}
});
},onError:function(item,_1dac){
console.log("error");
}});
if(_1d9d!=null){
_1d80.fetchItemByIdentity({identity:_1d9d.id,onItem:function(item,_1dae){
var _1daf=_1d80.getValues(item,"children");
dojo.forEach(_1daf,function(child){
var i=null;
_1d82.fetchItemByIdentity({identity:child.id,onItem:function(item,_1db3){
i=item;
}});
if(i==null){
_1d80.deleteItem(child);
_1d80.save();
var count=_1d80.getValue(item,"childSize");
var count=count-1;
_1d80.setValue(item,"childSize",count);
_1d80.save();
}
});
},onError:function(item,_1db6){
console.log("error");
}});
}
var _1db7=null;
_1d82.fetch({query:{curElem:"true"},onItem:function(item,_1db9){
_1db7=item;
var _1dba=_1d82.getValues(_1db7,"children");
dojo.forEach(_1dba,function(child){
var i=null;
_1d80.fetchItemByIdentity({identity:child.id,onItem:function(item,_1dbe){
i=item;
}});
if(i==null){
var r=null;
_1d80.fetchItemByIdentity({identity:_1db7.id,onItem:function(item,_1dc1){
r=item;
}});
var _1dc2=_1d80.newItem({id:_1d82.getValue(child,"id"),name:_1d82.getValue(child,"name"),root:"false",type:_1d82.getValue(child,"type"),childSize:_1d82.getValue(child,"childSize")},{attribute:"children"});
_1d80.save();
var c=_1d80.getValues(r,"children");
_1d80.setValues(r,"children",c.concat(_1dc2));
_1d80.save();
var count=_1d80.getValue(r,"childSize");
var count=count+1;
_1d80.setValue(r,"childSize",count);
_1d80.save();
}
});
},onError:function(item,_1dc6){
console.log("error");
}});
if(_1db7!=null){
_1d80.fetchItemByIdentity({identity:_1db7.id,onItem:function(item,_1dc8){
var _1dc9=_1d80.getValues(item,"children");
dojo.forEach(_1dc9,function(child){
var i=null;
_1d82.fetchItemByIdentity({identity:child.id,onItem:function(item,_1dcd){
i=item;
}});
if(i==null){
_1d80.deleteItem(child);
_1d80.save();
var count=_1d80.getValue(item,"childSize");
var count=count-1;
_1d80.setValue(item,"childSize",count);
_1d80.save();
}
});
},onError:function(item,_1dd0){
console.log("error");
}});
}
}else{
var _1d80=this.navStore;
}
}
if(scene.declaredClass=="quickr.share.wiki.scenes.WikiPage"){
quickr.share.wiki.scenes.WikiPage.loadBreadcrumbs(_1d79.breadcrumbs,d,app,scene);
}
var _1dd1=new quickr.share.wiki.util.NavigationStoreModel({store:_1d80,query:{root:"true"},childrenAttrs:["children"],page:this.pageTitle});
_1dd1.breadcrumbs=this.parents;
var _1dd2=new quickr.share.wiki.util.NavigationTree({model:_1dd1,showRoot:false,persist:true,openOnClick:false,onClick:dojo.hitch(scene,function(item,_1dd4){
var str=item.id.toString();
if(item.id!="tree"&&str.indexOf("...")==-1){
var page=_1d80.getLabel(item);
page=page.replace(/\+/g,"_");
app.navigate(app.routes.getWikiPageUrl(scene.wikiLabel,page));
_1dd2.destroy();
}
})});
_1dd1.tree=_1dd2;
var inner=d.createElement("div");
inner.className="lotusNavTree";
inner.appendChild(_1dd2.domNode);
var cdiv=d.createElement("div");
cdiv.className="lotusChunk lotusTiny";
cdiv.style.textAlign="right";
if(scene.permissions.canEdit(doc)){
var o={rel:"root"};
var _1dda=dojo.getObject("quickr.share.config.actions.myWikiCreatePage");
var _1ddb=this.wikiActions=(_1dda)?_1dda(app,this,o):[];
var _1ddc=app.authenticatedUser;
for(var i=0;i<_1ddb.length;i++){
var _1dde=_1ddb[i];
if(_1dde.isValid(_1ddc,opt)){
var e=d.createElement("a");
e.href=_1dde.getUrlResource(_1ddc,o)||"javascript:;";
dojo.connect(e,"onclick",dojo.hitch(_1dde,_1dde.execute));
e.appendChild(d.createTextNode("+ "+_1dde.getName(_1ddc,o)));
e.className="lotusAction";
e.href="javascript:;";
cdiv.appendChild(e);
if(i+1!=_1ddb.length){
cdiv.appendChild(d.createElement("br"));
}
}
}
}
inner.appendChild(cdiv);
div.appendChild(inner);
var next=(dojo.hasClass(el.firstChild,"vcomm"))?el.firstChild.nextSibling:el.firstChild;
quickr.share.util.insertBefore(el,div,next);
_1dd2.startup();
if(_1dd1.breadcrumbs){
for(var i=0;i<_1dd1.breadcrumbs.length;i++){
var _1d83=null;
_1d80.fetchItemByIdentity({identity:_1dd1.breadcrumbs[i].id,onItem:function(item,_1de2){
_1d83=item;
_1dd2.expandNode(_1d83);
},onError:function(item,_1de4){
console.log("error");
}});
}
}
scene.updateSidebarHeight();
if(scene.onNavigationLoaded){
scene.onNavigationLoaded();
}
}
dojo.cookie("pvc",this.parents[this.parents.length-1].id,{path:"/"});
dojo.cookie("pvp",dojo.toJson(this.parents),{path:"/"});
},applySideNav:function(d,el,doc,opt,time){
var app=opt.app;
var scene=opt.scene;
if(scene.navStore==null){
var url=app.routes.getPageNavigationUrl({page:scene.pageId,library:scene.libraryId});
}else{
if(time){
this.navStore=null;
var url=app.routes.getPageNavigationUrl({page:scene.pageId,library:scene.libraryId,timestamp:time});
}else{
var url=app.routes.getPageNavigationUrl({page:scene.pageId,library:scene.libraryId,breadcrumbs:"true",timestamp:scene.navStore.timestamp,parent:scene.pageId});
}
}
app.net.getJson({url:url,handle:dojo.hitch(scene,scene.loadNavigation,d,el,doc,opt)});
},createLinkList:function(app,d,el,title,_1df1,_1df2){
var _1df3=d.createElement("div");
_1df3.className="lotusSection";
var h2=d.createElement("h2");
var _1df5=dojo.string.substitute(app.nls.TOGGLE_SECTION_NAMED,[title]);
var a=d.createElement("A");
a.title=_1df5;
a.href="javascript:;";
a.className="lotusSprite lotusArrow"+(_1df2?" lotusTwistyClosed":" lotusTwistyOpen");
dojo.connect(a,"onclick",a,quickr.share.scenes.toggleSection);
var _1df7=d.createElement("span");
_1df7.className="lotusHidden";
_1df7.appendChild(d.createTextNode(_1df5));
a.appendChild(_1df7);
var _1df8=d.createElement("span");
_1df8.className="lotusAltText";
_1df8.appendChild(d.createTextNode(_1df2?(dojo._isBodyLtr()?"▶":"◀"):"▼"));
a.appendChild(_1df8);
h2.appendChild(a);
var span=d.createElement("SPAN");
span.className="lotusLeft";
span.style.cursor="pointer";
span.appendChild(d.createTextNode(title));
dojo.connect(span,"onclick",a,quickr.share.scenes.toggleSection);
span.title=quickr.share.scenes.nls.TOGGLE_SECTION;
span.className="lotusLeft";
h2.appendChild(span);
var tip=quickr.share.scenes.createHelpLink(app,h2,_1df1);
dojo.addClass(tip,"lotusRight");
_1df3.appendChild(h2);
var div=d.createElement("div");
div.style.display=_1df2?"none":"";
div.className="lotusSectionBody lotusChunk";
_1df3.appendChild(div);
el.appendChild(_1df3);
return div;
},applyPageListNav:function(d,el,doc,app,scene){
var list=this.PAGE_LIST_VIEWS;
var div=this.createLinkList(app,d,el,app.nls.WIKI_NAVLIST.TITLE,"wiki.filter.allpages",false);
dojo.addClass(div,"lotusSearch");
var form=scene.form=d.createElement("form");
form.onsubmit=function(e){
dojo.stopEvent(e);
};
var _1e05=d.createElement("input");
_1e05.type="text";
_1e05.className="lotusText";
_1e05.value=app.nls.WIKI_NAVLIST.SEARCHBOX;
form.appendChild(_1e05);
var _1e06=d.createElement("label");
_1e06.appendChild(d.createTextNode(app.nls.WIKI_NAVLIST.TITLE));
_1e06.className="lotusHidden";
form.appendChild(_1e06);
var _1e07=app.getWikiPageTypeAheadStore(scene);
var args=quickr.share.wiki.widget.WikiTypeAhead.getWikiTypeAheadArguments(_1e07,{_strings:app.nls.WIKI_SEARCH,id:"pagenavsearchbox",name:"pagenavsearch"});
var combo=scene.allPagesCombo=new quickr.share.wiki.widget.WikiTypeAhead(args,_1e05);
dojo.connect(combo,"onSelect",scene,"onSelectTypeAheadPageName");
dojo.connect(form,"onsubmit",scene,"onSelectTypeAheadPageName");
dojo.connect(combo.textbox,"onfocus",scene,"onFocusTypeAheadPageName");
dojo.connect(combo.textbox,"onblur",scene,"onBlurTypeAheadPageName");
_1e06.setAttribute("for",args.id);
combo.textbox.value=combo.textbox.defaultValue=app.nls.WIKI_NAVLIST.SEARCHBOX;
combo.textbox.style.color="#aaa";
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",app.nls.SEARCH.SEARCH);
var input=d.createElement("input");
input.className="lotusSearchButton";
input.type="image";
input.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
input.name="submit";
input.setAttribute("alt",app.nls.SEARCH.SEARCH_ALT);
span.appendChild(input);
var aspan=d.createElement("a");
aspan.className="lotusAltText";
aspan.appendChild(d.createTextNode(app.nls.SEARCH.SEARCH_ALT));
aspan.href="javascript:;";
dojo.connect(aspan,"onclick",function(){
try{
input.click();
}
catch(e){
}
});
span.appendChild(aspan);
form.appendChild(span);
div.appendChild(form);
var ul=d.createElement("ul");
ul.className="lotusList lotusEditable lotusMeta";
for(var i=0;i<list.length;i++){
var li=d.createElement("li");
if(scene.declaredClass==list[i].scene){
li.className="lotusSelected";
}
var e=d.createElement("a");
e.appendChild(d.createTextNode(dojo.getObject(list[i].title,false,scene)));
e.className="lotusLeft lotusLink";
if(list[i].func!=null){
quickr.share.scenes.setOnClick(e,app,list[i].func(app,scene,app.routes));
}else{
e.href="javascript:;";
}
li.appendChild(e);
ul.appendChild(li);
}
div.appendChild(ul);
},applyToolsNav:function(d,el,doc,app,scene){
if(doc){
var list=this.SITE_TOOLS(scene,doc);
if(list&&list.length>0){
var div=this.createLinkList(app,d,el,app.nls.WIKI_NAV_TOOLS.TITLE,"wiki.sitetools",false);
var ul=d.createElement("ul");
ul.className="lotusList lotusEditable lotusMeta";
for(var i=0;i<list.length;i++){
var _1e1a=(list[i].onclick)?dojo.hitch(null,list[i].onclick,app,scene):null;
var li=d.createElement("li");
var e=d.createElement("a");
e.appendChild(d.createTextNode(dojo.getObject(list[i].title,false,scene)));
e.className="lotusLeft lotusLink";
if(list[i].func!=null){
quickr.share.scenes.setOnClick(e,app,list[i].func(app,scene,app.routes),_1e1a);
}else{
if(_1e1a){
quickr.share.scenes.setOnClick(e,app,"",_1e1a);
}
e.href="javascript:;";
}
li.appendChild(e);
ul.appendChild(li);
}
div.appendChild(ul);
}
}
},applyBusinessCard:function(d,el,doc,app,scene,_1e22){
if(!_1e22){
var _1e23=quickr.share.util.getElementsByTagNameNS(doc.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
_1e22=quickr.share.util.getChildElementTextContentNS(_1e23,"libraryCommunity",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
}
if(!_1e22){
return;
}
var span=document.createElement("span");
span.className="vcomm X-community-display-inline";
var _1e25=document.createElement("span");
_1e25.className="name";
_1e25.appendChild(document.createTextNode("Community business card"));
_1e25.style.display="none";
span.appendChild(_1e25);
var _1e26=document.createElement("span");
_1e26.className="uuid";
_1e26.appendChild(document.createTextNode(_1e22));
_1e26.style.display="none";
span.appendChild(_1e26);
var _1e27=document.createElement("span");
_1e27.className="selectedWidgetId";
_1e27.appendChild(document.createTextNode("Wiki"));
_1e27.style.display="none";
span.appendChild(_1e27);
el.insertBefore(span,el.firstChild);
if(window.SemTagSvc){
if(SemTagSvc.add){
SemTagSvc.add(span);
}else{
if(SemTagSvc.parseDom){
SemTagSvc.parseDom(null,span);
}
}
this.carded=true;
}
},applyTagsSection:function(d,el,doc,app,scene){
var div=d.createElement("div");
div.className="lotusSection";
var h2=d.createElement("h2");
var _1e2f=dojo.string.substitute(app.nls.TOGGLE_SECTION_NAMED,[app.nls.WIKI_HOME.SIDEBAR.POPULARTAGS]);
var a=d.createElement("a");
a.title=_1e2f;
var _1e31=scene.tagsSectionOpen||false;
if(!_1e31){
a.className="lotusSprite lotusArrow lotusTwistyOpen";
scene.tagsLoaded=true;
}else{
a.className="lotusSprite lotusArrow lotusTwistyClosed";
}
a.href="javascript:;";
dojo.connect(a,"onclick",a,quickr.share.scenes.toggleSection);
var _1e32=d.createElement("span");
_1e32.className="lotusAltText";
_1e32.appendChild(d.createTextNode(_1e31?(dojo._isBodyLtr()?"▶":"◀"):"▼"));
a.appendChild(_1e32);
var _1e33=d.createElement("span");
_1e33.className="lotusHidden";
_1e33.appendChild(d.createTextNode(_1e2f));
a.appendChild(_1e33);
h2.appendChild(a);
var span=d.createElement("span");
span.style.cursor="pointer";
span.title=app.nls.TOGGLE_SECTION;
dojo.connect(span,"onclick",a,quickr.share.scenes.toggleSection);
span.appendChild(d.createTextNode(app.nls.WIKI_HOME.SIDEBAR.POPULARTAGS));
span.className="lotusLeft";
h2.appendChild(span);
var tip=quickr.share.scenes.createHelpLink(app,h2,"tags.localcloud");
dojo.addClass(tip,"lotusRight");
div.appendChild(h2);
var cdiv=d.createElement("div");
var sdiv=d.createElement("div");
sdiv.className="lotusSectionBody lotusChunk lotusSearch";
var form=scene.form=d.createElement("form");
form.onsubmit=function(e){
dojo.stopEvent(e);
};
var _1e3a=d.createElement("input");
_1e3a.type="text";
_1e3a.className="lotusText";
_1e3a.value=app.nls.WIKI_HOME.SIDEBAR.SEARCHBOX;
form.appendChild(_1e3a);
var _1e3b=d.createElement("label");
_1e3b.appendChild(d.createTextNode(app.nls.WIKI_HOME.SIDEBAR.SEARCHBOX));
_1e3b.className="lotusHidden";
form.appendChild(_1e3b);
var args=quickr.widget.TagTypeAhead.getTagTypeAheadArguments(app.getTagTypeAheadStore(),{id:"tagSearchBox",name:"tagsearch",multipleValues:true,token:" ",hideEmptyResults:true,"class":"lotusText",hideEmptyResults:true,_strings:scene.app.nls.TAGGER,autoSelectChars:[]});
var combo=scene.tagSearchCombo=new quickr.widget.TagTypeAhead(args,_1e3a);
dojo.connect(combo,"onSelect",scene,"onSelectTypeAheadTag");
dojo.connect(form,"onsubmit",scene,"onSelectTypeAheadTag");
dojo.connect(combo.textbox,"onfocus",scene,"onFocusTypeAheadTag");
dojo.connect(combo.textbox,"onblur",scene,"onBlurTypeAheadTag");
_1e3b.setAttribute("for",args.id);
combo.textbox.value=combo.textbox.defaultValue=app.nls.WIKI_HOME.SIDEBAR.SEARCHBOX;
combo.textbox.style.color="#aaa";
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",app.nls.SEARCH.SEARCH);
var input=d.createElement("input");
input.className="lotusSearchButton";
input.type="image";
input.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
input.name="submit";
input.setAttribute("alt",app.nls.SEARCH.SEARCH_ALT);
span.appendChild(input);
var aspan=d.createElement("a");
aspan.className="lotusAltText";
aspan.appendChild(d.createTextNode(app.nls.SEARCH.SEARCH_ALT));
aspan.href="javascript:;";
dojo.connect(aspan,"onclick",function(){
try{
input.click();
}
catch(e){
}
});
span.appendChild(aspan);
form.appendChild(span);
sdiv.appendChild(form);
cdiv.appendChild(sdiv);
var _1e40=d.createElement("div");
_1e40.id="tagCloudContainer";
cdiv.appendChild(_1e40);
div.appendChild(cdiv);
el.appendChild(div);
},resizeBar:function(d,scene,app,_1e44){
var _1e45=scene.sidebar={id:"lotusColRight","class":"lotusColRight","role":"complementary",idBar:"lotusCollapseBar",idArrow:"lotusCollapseArrow",prefs:app.prefs,visible:_1e44,msgAlert:app.nls.SIDEBAR.ALERT,down:scene.sidebarMouseDown,move:scene.sidebarMouseMove,up:scene.sidebarMouseUp,hover:scene.sidebarHover,unhover:scene.sidebarUnHover};
var div=d.createElement("div");
div.id=_1e45.idBar;
div.className="lotusResizable";
div.title=app.nls.SIDEBAR.SHOW_TOOLTIP;
dojo.connect(div,"onmousedown",dojo.hitch(scene,function(e){
scene.mouseDown=true;
scene._mousePos={x:e.clientX,y:e.clientY};
}));
dojo.connect(document,"onmousemove",dojo.hitch(scene,function(e){
if(scene.mouseDown){
var _1e49={x:e.clientX,y:e.clientY};
if(_1e49.x!=scene._mousePos.x){
var delta=(_1e49.x-scene._mousePos.x);
var c=d.getElementById("lotusFrame");
dojo.addClass(c,"navDivDragging");
if(dojo.isIE){
document.onselectstart=function(){
return false;
};
}
var _1e4c=d.getElementById("lotusContent");
var _1e4d=_1e4c.style;
var _1e4e=((parseInt(_1e4d.width,10)||_1e4c.offsetWidth)+delta);
var diff=400-_1e4e;
if(_1e4e<400){
_1e4e=400;
}
var c=d.getElementById("lotusColLeft");
var s=c.style;
var w=((parseInt(s.width,10)||c.offsetWidth)+delta);
if(w<180){
w=180;
}
if(diff>0){
s.width=w-diff+"px";
}else{
s.width=w+"px";
}
var c=d.getElementById("sideNav");
var s=c.style;
var w=((parseInt(s.width,10)||c.offsetWidth)+delta);
if(w<180){
w=180;
}
if(diff>0){
s.width=w-diff+"px";
}else{
s.width=w+"px";
}
scene._mousePos=_1e49;
}
}
}));
dojo.connect(document,"onmouseup",dojo.hitch(scene,function(e){
scene.mouseDown=false;
var c=d.getElementById("lotusFrame");
dojo.removeClass(c,"navDivDragging");
if(dojo.isIE){
document.onselectstart=null;
}
var c=d.getElementById("lotusColLeft");
if(!c){
return;
}
var w=dojo.style(c,"width");
this.app.prefs.put("sww",w);
}));
dojo.connect(div,"onmouseover",_1e45,"hover");
dojo.connect(div,"onmouseout",_1e45,"unhover");
div.innerHTML="<!-- IE -->";
var divx=d.createElement("div");
div.appendChild(divx);
return div;
},sidebarHover:function(e){
this._overBar=true;
dojo.addClass(dojo.byId(this.idBar),"lotusResizableHover");
},sidebarUnHover:function(){
this._overBar=false;
dojo.removeClass(dojo.byId(this.idBar),"lotusResizableHover");
}});
}
if(!dojo._hasResource["quickr.share.scenes.AsyncScene"]){
dojo._hasResource["quickr.share.scenes.AsyncScene"]=true;
dojo.provide("quickr.share.scenes.AsyncScene");
dojo.declare("quickr.share.scenes.AsyncScene",null,{constructor:function(){
this._requests=[];
this._errors=[];
this._runningRequests=0;
},cancelRequests:function(){
dojo.forEach(this._requests,function(_1e57){
if(_1e57&&_1e57.dojoRequest){
_1e57.dojoRequest.cancel();
}
});
this._requests=[];
this._runningRequests=0;
},handleRequest:function(_1e58,_1e59){
for(var i=0;i<this._requests.length;i++){
var r=this._requests[i];
if(r&&r.handler==_1e59.args.handler){
running=--this._runningRequests;
this._requests[i]=null;
var _1e5c=this[_1e59.args.handler].apply(this,arguments);
if(_1e5c){
this._errors.push(_1e5c);
if(this.onRequestCompleted(_1e5c)){
this.cancelRequests();
}
}
break;
}
}
if(running<1){
var _1e5d=this._errors;
this._errors=[];
this.onRequestsCompleted(_1e5d);
}
},request:function(){
if(arguments.length>0&&dojo.isArray(arguments[0])){
this._runningRequests=arguments[0].length;
for(var i=0;i<arguments[0].length;i++){
this._requestSingle.apply(this,arguments[0][i]);
}
}else{
if(arguments.length>1){
this._runningRequests=1;
this._requestSingle.apply(this,arguments);
}
}
},_requestSingle:function(url,_1e60,_1e61,_1e62){
var _1e63={handler:_1e60};
this._requests.push(_1e63);
_1e63.dojoRequest=dojo.xhrGet({handler:_1e60,url:url,handle:dojo.hitch(this,this.handleRequest),timeout:_1e62||(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,handleAs:_1e61||"xml"});
},onRequestsCompleted:function(_1e64){
},onRequestCompleted:function(error){
return false;
}});
}
if(!dojo._hasResource["quickr.share.action.DeleteShare"]){
dojo._hasResource["quickr.share.action.DeleteShare"]=true;
dojo.provide("quickr.share.action.DeleteShare");
dojo.declare("quickr.share.action.DeleteShare",[quickr.share.action.Action],{constructor:function(app,scene,opts){
this.app=app;
this.nls=app.nls;
this.name=this.nls.CONTENT.DELETESHARE;
this.tooltip=this.nls.CONTENT.DELETESHARE_TOOLTIP;
},execute:function(user,opt,e){
if(e){
dojo.stopEvent(e);
}
if(confirm(dojo.string.substitute(this.nls.CONTENT.DELETESHARECONFIRM,[user.name]))){
var file=opt.file;
var url=this.app.routes.getFileShareListServiceUrl(file.getId(),{user:user.id});
dojo.xhrPost({url:url,handleAs:"xml",timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,headers:{"X-Method-Override":"DELETE"},handle:dojo.hitch(this,this.complete,file)});
}
},complete:function(file,_1e6f,_1e70){
if(_1e6f instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_1e6f,_1e70));
}else{
this.onsuccess(file);
}
},onsuccess:function(file){
this.onfilechange(file);
},onfilechange:function(file){
},onerror:function(code){
if(code=="cancel"){
alert(this.nls.CONTENT.DELETESHAREERROR_CANCEL);
}else{
if(code=="timeout"){
alert(this.nls.CONTENT.DELETESHAREERROR_TIMEOUT);
}else{
if(code=="ItemNotFound"){
alert(this.nls.CONTENT.DELETESHAREERROR_NOT_FOUND);
}else{
if(code=="unauthenticated"){
}else{
alert(this.nls.CONTENT.DELETESHAREERROR);
}
}
}
}
}});
}
if(!dojo._hasResource["quickr.widget.Notify"]){
dojo._hasResource["quickr.widget.Notify"]=true;
dojo.provide("quickr.widget.Notify");
dojo.declare("quickr.widget.Notify",[dijit._Widget],{_strings:{},available:true,enabled:false,type:"media",url:null,buildRendering:function(){
var d=document;
var div=this.domNode=this.srcNodeRef;
while(div.firstChild){
div.removeChild(div.firstChild);
}
if(this.baseClass){
dojo.addClass(div,this.baseClass);
}
var label=d.createElement("label");
label.className="lotusCheckbox";
if(!this.available){
dojo.addClass(label,"lotusInactive");
}
label.title=(this.available)?this._strings.NOTIFY_TOOLTIP:this._strings.NO_EMAIL;
var input=this.notifyNode=d.createElement("input");
input.id=this.id+"_notify";
input.value="true";
input.type="checkbox";
input.className="lotusCheckbox";
if(this.available){
input.checked=input.defaultChecked=this.enabled;
dojo.connect(input,"onclick",dojo.hitch(this,this.toggle));
input.title=label.title;
}else{
input.disabled=true;
input.title=this._strings.NO_EMAIL;
}
label.setAttribute("for","");
label.appendChild(d.createTextNode(this._strings.NOTIFY));
div.appendChild(input);
div.appendChild(label);
},toggle:function(){
if(this.notifyNode.checked){
this.enable();
}else{
this.disable();
}
},enable:function(opt){
this.notifyNode.checked=true;
this._hideConfirmation();
if(!this.enabled){
this.enabled=true;
this.net.putXml({url:this.url,timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,contentType:"application/atom+xml",postData:this._getEntryText(true),handle:dojo.hitch(this,this.handle,this._strings.CREATE,false,opt)});
}
},disable:function(opt){
this.notifyNode.checked=false;
this._hideConfirmation();
if(this.enabled){
this.enabled=false;
this.net.putXml({url:this.url,timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,contentType:"application/atom+xml",postData:this._getEntryText(false),handle:dojo.hitch(this,this.handle,this._strings.DELETE,true,opt)});
}
},handle:function(msgs,_1e7b,opt,_1e7d,_1e7e){
if(_1e7d instanceof Error){
this.handleError(msgs,_1e7b,opt,_1e7d);
}else{
this.handleLoad(opt);
}
},handleLoad:function(opt){
if(this.enabled&&this.onenable){
this.onenable();
}else{
if(this.ondisable){
this.ondisable();
}
}
this._displayConfirmation(this.enabled);
},handleError:function(msgs,_1e81,opt,error){
this.enabled=_1e81;
this.notifyNode.checked=_1e81;
if(error instanceof Error){
var code=error.code;
if(code=="cancel"){
alert(msgs.CANCEL);
}else{
if(code=="timeout"){
alert(msgs.TIMEOUT);
}else{
if(code=="unauthenticated"){
}else{
alert(msgs.ERROR);
}
}
}
}
},_displayConfirmation:function(_1e85){
},_hideConfirmation:function(){
},_getEntryText:function(_1e86){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _1e89=quickr.share.util.createElementNS(doc,"notifications",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var type=quickr.share.util.createElementNS(doc,this.type,quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
type.appendChild(doc.createTextNode(_1e86?"on":"off"));
_1e89.appendChild(type);
entry.appendChild(_1e89);
return quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
}});
dojo.declare("quickr.widget.NotifyContents",[quickr.widget.Notify],{type:"media"});
dojo.declare("quickr.widget.NotifyComments",[quickr.widget.Notify],{type:"comment"});
}
if(!dojo._hasResource["quickr.share.bean.Comment"]){
dojo._hasResource["quickr.share.bean.Comment"]=true;
dojo.provide("quickr.share.bean.Comment");
dojo.declare("quickr.share.bean.Comment",null,{constructor:function(entry){
this.e=entry;
},getEntry:function(){
return this.e;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentId",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getTitle:function(){
return quickr.share.util.getChildElementTextContent(this.e,"title");
},getAuthor:function(){
if(!this.author){
this.author=new quickr.share.bean.User(this.e.getElementsByTagName("author")[0]);
}
return this.author;
},isDeleted:function(){
return (quickr.share.util.getChildElementTextContentNS(this.e,"deleteWithRecord",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)=="true");
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.updated=this.updated||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.published=this.published||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.published;
},getPermissions:function(){
if(!this.permissions){
var s=quickr.share.util.getChildElementTextContentNS(this.e,"permissions",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={View:true};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.permissions=p;
}
return this.permissions;
},getDescription:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getContents:function(){
return quickr.share.util.getChildElementTextContent(this.e,"content");
},getModifier:function(){
if(!this.modifier){
var e=quickr.share.util.getElementsByTagNameNS(this.e,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(e){
this.modifier=new quickr.share.bean.User(e);
}
}
return this.modifier;
},getUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
},getUrlDownload:function(){
return quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href");
}});
}
if(!dojo._hasResource["quickr.widget.Comments"]){
dojo._hasResource["quickr.widget.Comments"]=true;
dojo.provide("quickr.widget.Comments");
dojo.declare("quickr.widget.Comments",[quickr.widget.Stream],{templateString:"<div class=\"${baseClass} ${additionalClasses}\" style=\"${_initWidgetStyle}\">\n   <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\" style=\"${_initPageStyle}\">\n      <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n      <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n         <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n         <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n         <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n         <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n      </ul>\n      <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n   </div>\n   <div dojoAttachPoint=\"streamNode\"></div>\n   <div dojoAttachPoint=\"toggleNode\" style=\"display:none;\" class=\"lotusChunk\"><a href=\"javascript:;\" dojoAttachEvent=\"onclick:createComment\">${_strings.ADD_COMMENT}</a></div>\n\t<form dojoAttachPoint=\"addCommentNode\" dojoAttachEvent=\"onsubmit:performCreate\" class=\"qkrAddComment lotusForm\" style=\"display:none;\">\n\t\t<table class=\"lotusFormTable\">\n\t\t   <tr class=\"lotusFormFieldRow\"><td><label for=\"addCommentBody\">${_strings.COMMENT_LABEL}</label><textarea rows=\"${_commentsRowsNum}\" id=\"addCommentBody\" class=\"lotusText\" name=\"description\"></textarea></td></tr>\n\t\t   <tr class=\"lotusFormFooter\"><td><input class=\"lotusFormButton\" type=\"submit\" value=\"${_strings.SAVE}\"><a class=\"lotusAction\" href=\"javascript:;\" dojoAttachEvent=\"onclick:cancelCreate\">${_strings.CANCEL}</a></td></tr>\n\t   </table>\n   </form>\n   <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\" style=\"${_initPageStyle}\">\n      <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n         <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n         <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n         <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n         <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n      </ul>\n   </div>      \n</div>\n",baseClass:"",additionalClasses:"",_initWidgetStyle:"",_commentsRowsNum:(dojo.isIE||dojo.isSafari)?5:4,showTitles:false,assumeNoEntries:false,authenticatedUser:null,fileOwner:null,commentCount:0,scrollTo:null,_strings:{},postMixInProperties:function(){
this.renderer=new quickr.widget.CommentStreamRenderer({_strings:this._strings,authenticatedUser:this.authenticatedUser,fileOwner:this.fileOwner,generateLinkToPerson:this.generateLinkToPerson,generateLinkToComment:this.generateLinkToComment,getUserImageUrl:this.getUserImageUrl});
this.inherited(arguments);
},postCreate:function(){
this.inherited(arguments);
if(this.authenticatedUser){
this.isEditable=true;
}
this.cancelCreate();
if(this.assumeNoEntries){
this.update({fromUrl:true});
}else{
this.update();
}
},onUpdate:function(data){
this.inherited(arguments);
if(data&&data.paging&&data.paging.total!=-1){
this.onCountChange(data.paging.total);
}
if(this.scrollTo){
var node=this.domNode;
if(data&&data.itemByPosition.length){
for(var i=0;i<data.itemByPosition.length;i++){
if(data.itemByPosition[i].getId()==this.scrollTo){
node=data.itemByPosition[i].element;
break;
}
}
}
dijit.scrollIntoView(node);
delete this.scrollTo;
}
},getCommentCount:function(){
return this.commentCount;
},onCountChange:function(count){
this.commentCount=count;
},updateLast:function(item){
if(this.data&&this.data.paging){
var _1e95=this.data.paging;
if(!_1e95.isFullPage()){
this.resetData();
var _1e96=this.data.itemByPosition.length;
_1e95.items++;
_1e95.total++;
this.renderer.updatePaging(this,this.streamNode,this.data);
if(_1e96==0){
quickr.share.util.removeChildren(this.streamNode);
this.renderer.renderSorting(this,this.streamNode,this.data);
}
this.renderer.renderItem(this,this.streamNode,this.data,item,_1e96,false,_1e96==(_1e95.size-1));
this.onCountChange(_1e95.total);
}else{
var total=_1e95.total;
var size=_1e95.size;
this.page((size>0&&total>0)?(Math.floor(total/size)+1):100);
}
}else{
this.refresh();
}
},removeItem:function(item){
if(this.data&&this.data.paging){
var _1e9a=this.data.paging;
if(!_1e9a.hasNext()&&_1e9a.items>1){
_1e9a.items--;
_1e9a.total--;
this.renderer.updatePaging(this,this.streamNode,this.data);
if(_1e9a.items==0){
this.renderer.renderEmpty(this,this.streamNode,this.data);
}else{
this.renderer.removeItem(this,this.streamNode,this.data,item);
}
this.onCountChange(_1e9a.total);
}else{
this.refresh();
}
}else{
this.refresh();
}
},validateCreate:function(){
var form=this.addCommentNode;
var el=this.addCommentNode.getElementsByTagName("textarea")[0];
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el);
quickr.share.validation.removeFormErrors(form);
var valid=this.validateCommentContents(form,el,false);
valid=this.validateCommentLength(form,el)&&valid;
return valid;
},validateEdit:function(form){
var el=form.getElementsByTagName("textarea")[0];
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el);
quickr.share.validation.removeFormErrors(form);
var valid=this.validateCommentContents(form,el,true);
valid=this.validateCommentLength(form,el)&&valid;
return valid;
},validateDelete:function(form){
var el=form.getElementsByTagName("textarea")[0];
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el);
quickr.share.validation.removeFormErrors(form);
return this.validateCommentLength(form,el);
},validateCommentContents:function(form,el,_1ea5){
var valid=true;
if(form){
var d=document;
if(quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",_1ea5?this._strings.ERROR_NO_CONTENT_EDIT:this._strings.ERROR_NO_CONTENT);
valid=false;
}
}
return valid;
},validateCommentLength:function(form,el){
var valid=true;
if(form){
var d=document;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.COMMENT_LENGTH)){
var _1eac=[d.createTextNode(this._strings.WARN_LONG_COMMENT)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.trimComment,el.id));
a.appendChild(d.createTextNode(this._strings.TRIM_LONG_COMMENT));
_1eac.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_1eac);
valid=false;
}
}
return valid;
},trimComment:function(id){
if(confirm(this._strings.TRIM_LONG_COMMENT_CONFIRM)){
var el=document.getElementById(id);
if(el){
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.COMMENT_LENGTH);
if(i!=-1){
el.value=el.value.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
}
},removeInlineErrors:function(){
dojo.forEach(this.domNode.getElementsByTagName("FORM"),quickr.share.validation.removeFormErrors);
},createComment:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.isEditable){
this.addCommentNode.style.display="";
this.toggleNode.style.display="none";
var _1eb2=this.addCommentNode["description"];
_1eb2.value="";
_1eb2.focus();
dijit.scrollIntoView(this.addCommentNode);
}else{
this.addCommentNode.style.display=this.toggleNode.style.display="none";
}
},cancelCreate:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.isEditable){
quickr.share.validation.removeFormErrors(this.addCommentNode);
this.addCommentNode.style.display="none";
this.toggleNode.style.display="";
this.addCommentNode["description"].value="";
}else{
this.addCommentNode.style.display=this.toggleNode.style.display="none";
}
},performCreate:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.validateCreate()){
return;
}
var _1eb5;
var _1eb6=this.addCommentNode.getElementsByTagName("textarea")[0];
var _1eb7=_1eb6.value||"";
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE);
var entry=doc.documentElement;
var _1eba=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_1eba.setAttribute("term","comment");
_1eba.setAttribute("scheme","tag:ibm.com,2006:td/type");
_1eba.setAttribute("label","comment");
entry.appendChild(_1eba);
if(_1eb5&&_1eb5.length>0){
var title=quickr.share.util.createElementNS(doc,"title",quickr.share.util.ATOM_NAMESPACE);
title.appendChild(doc.createTextNode(_1eb5));
entry.appendChild(title);
}
var _1ebc=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_1ebc.setAttribute("type","text/plain");
_1ebc.appendChild(doc.createTextNode(_1eb7));
entry.appendChild(_1ebc);
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.net.postXml({url:this.url,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,contentType:"application/atom+xml",postData:text,handle:dojo.hitch(this,this.handleCreate)});
},handleCreate:function(_1ebe,_1ebf){
var error=quickr.share.util.getAtomError(_1ebe,_1ebf);
if(error){
this.onCreateError(error.code);
}else{
this.cancelCreate();
this.updateLast(_1ebe.documentElement);
}
},onCreateError:function(code){
var type,msg;
if(code=="cancel"){
type="createCancel";
msg=this._strings.ERROR_CREATE_CANCEL;
}else{
if(code=="timeout"){
type="createTimeout";
msg=this._strings.ERROR_CREATE_TIMEOUT;
}else{
if(code=="ItemNotFound"){
type="createNotFound";
msg=this._strings.ERROR_CREATE_NOT_FOUND;
}else{
if(code=="AccessDenied"){
type="createAccessDenied";
msg=this._strings.ERROR_CREATE_ACCESS_DENIED;
}else{
if(code=="unauthenticated"){
type="createUnauthenticated";
msg=this._strings.ERROR_CREATE_NOT_LOGGED_IN;
}else{
type="createError";
msg=this._strings.ERROR_CREATE;
}
}
}
}
}
quickr.share.validation.setFormError(this.addCommentNode,msg);
},edit:function(_1ec4,e){
if(e){
dojo.stopEvent(e);
}
var el=_1ec4.element;
var div=dojo.query("DIV._qkrEditSection",el)[0];
if(div){
div.parentNode.removeChild(div);
}
dojo.query(".lotusPostDetails",el)[0].style.display="none";
var d=document;
div=d.createElement("div");
div.className="lotusChunk _qkrEditSection";
var form=d.createElement("form");
form.className="lotusForm qkrAddComment";
dojo.connect(form,"onsubmit",dojo.hitch(this,this.performEdit,_1ec4));
var table=d.createElement("table");
table.className="lotusFormTable";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
var label=d.createElement("label");
label.appendChild(d.createTextNode(this._strings.COMMENT_LABEL));
td.appendChild(label);
var _1ecf=d.createElement("textarea");
_1ecf.id=dijit.getUniqueId("commentBody");
_1ecf.className="lotusText";
_1ecf.name="description";
_1ecf.setAttribute("rows",this._commentsRowsNum);
_1ecf.value=_1ec4.getContents();
td.appendChild(_1ecf);
dojo.attr(label,"for",_1ecf.id);
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFooter";
var td=d.createElement("td");
var input=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this._strings.SAVE;
td.appendChild(input);
var a=d.createElement("a");
a.className="lotusAction";
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.cancelEdit,_1ec4));
a.appendChild(d.createTextNode(this._strings.CANCEL));
td.appendChild(a);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
form.appendChild(table);
div.appendChild(form);
el.appendChild(div);
dijit.focus(_1ecf);
},cancelEdit:function(_1ed2,e){
if(e){
dojo.stopEvent(e);
}
var el=_1ed2.element;
var div=dojo.query("DIV._qkrEditSection",el)[0];
if(div){
div.parentNode.removeChild(div);
}
dojo.query(".lotusPostDetails",el)[0].style.display="";
},performEdit:function(_1ed6,e){
if(e){
dojo.stopEvent(e);
}
var el=_1ed6.element;
var form=dojo.query("DIV._qkrEditSection > FORM",el)[0];
if(!this.validateEdit(form)){
return;
}
var _1eda;
var _1edb=form.getElementsByTagName("textarea")[0].value;
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE);
var entry=doc.documentElement;
var _1ede=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_1ede.setAttribute("term","comment");
_1ede.setAttribute("scheme","tag:ibm.com,2006:td/type");
_1ede.setAttribute("label","comment");
entry.appendChild(_1ede);
if(_1eda&&_1eda.length>0){
var title=quickr.share.util.createElementNS(doc,"title",quickr.share.util.ATOM_NAMESPACE);
title.appendChild(doc.createTextNode(_1eda));
entry.appendChild(title);
}
var _1ee0=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_1ee0.setAttribute("type","text/plain");
_1ee0.appendChild(doc.createTextNode(_1edb));
entry.appendChild(_1ee0);
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.net.putXml({url:_1ed6.getUrlEntry(),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,contentType:"application/atom+xml",postData:text,handle:dojo.hitch(this,this.handleEdit,_1ed6)});
},handleEdit:function(_1ee2,_1ee3,_1ee4){
if(!_1ee3||_1ee3 instanceof Error||!_1ee3.documentElement){
this.onEditError(_1ee2,quickr.share.util.getAtomErrorCode(_1ee3,_1ee4));
}else{
this.cancelEdit(_1ee2);
this.updateItem(_1ee2,_1ee3.documentElement);
}
},onEditError:function(_1ee5,code){
var type,msg;
if(code=="cancel"){
type="editCancel";
msg=this._strings.ERROR_EDIT_CANCEL;
}else{
if(code=="timeout"){
type="editTimeout";
msg=this._strings.ERROR_EDIT_TIMEOUT;
}else{
if(code=="ItemNotFound"){
type="editNotFound";
msg=this._strings.ERROR_EDIT_NOT_FOUND;
}else{
if(code=="AccessDenied"){
type="editAccessDenied";
msg=this._strings.ERROR_EDIT_ACCESS_DENIED;
}else{
if(code=="unauthenticated"){
type="editUnauthenticated";
msg=this._strings.ERROR_EDIT_NOT_LOGGED_IN;
}else{
type="editError";
msg=this._strings.ERROR_EDIT;
}
}
}
}
}
quickr.share.validation.setFormError(_1ee5.element.getElementsByTagName("FORM")[0],msg);
},remove:function(_1ee9,e){
if(e){
dojo.stopEvent(e);
}
if(!confirm(this._strings.DELETECONFIRM)){
return;
}
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _1eed=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_1eed.setAttribute("term","comment");
_1eed.setAttribute("scheme","tag:ibm.com,2006:td/type");
_1eed.setAttribute("label","comment");
entry.appendChild(_1eed);
var _1eee=quickr.share.util.createElementNS(doc,"deleteWithRecord",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_1eee.appendChild(doc.createTextNode("false"));
entry.appendChild(_1eee);
var _1eef=_1ee9.getUrlEntry();
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.net.deleteXml({url:_1eef,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,contentType:"application/atom+xml",postData:text,handle:dojo.hitch(this,this.handleRemove,_1ee9,true)});
},handleRemove:function(_1ef1,_1ef2,_1ef3,_1ef4){
if(_1ef3 instanceof Error||_1ef4.xhr.status!=200){
this.onRemoveError(_1ef1,quickr.share.util.getAtomErrorCode(_1ef3,_1ef4));
}else{
if(_1ef2){
this.removeItem(_1ef1);
}else{
if(_1ef3.documentElement){
this.updateItem(_1ef1,_1ef3.documentElement);
}else{
this.refresh();
}
}
}
},onRemoveError:function(_1ef5,code){
var type,msg;
if(code=="cancel"){
type="removeCancel";
msg=this._strings.ERROR_DELETE_CANCEL;
}else{
if(code=="timeout"){
type="removeTimeout";
msg=this._strings.ERROR_DELETE_TIMEOUT;
}else{
if(code=="ItemNotFound"){
type="removeNotFound";
msg=this._strings.ERROR_DELETE_NOT_FOUND;
}else{
if(code=="AccessDenied"){
type="deleteAccessDenied";
msg=this._strings.ERROR_DELETE_ACCESS_DENIED;
}else{
if(code=="unauthenticated"){
type="removeUnauthenticated";
msg=this._strings.ERROR_DELETE_NOT_LOGGED_IN;
}else{
type="removeError";
msg=this._strings.ERROR_DELETE;
}
}
}
}
}
alert(msg);
}});
dojo.declare("quickr.widget.CommentStreamRenderer",quickr.widget.StreamRenderer,{minimalPaging:true,render:function(_1ef9,el,data,item){
this.cleanup();
data.itemById={};
this.baseUrl=_1ef9.baseUrl;
quickr.share.util.removeChildren(el);
this.inherited(arguments);
},renderItem:function(_1efd,el,data,item,_1f01,_1f02,_1f03){
item=new quickr.share.bean.Comment(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
item._position=_1f01;
this.renderItemComment(_1efd,el,data,item,_1f01,_1f02,_1f03);
},renderItemComment:function(_1f04,el,data,_1f07,_1f08,_1f09,_1f0a,_1f0b){
var d=document;
var _1f0d=(this.authenticatedUser&&_1f07.getAuthor().id==this.authenticatedUser.id);
var _1f0e=(this.authenticatedUser&&this.fileOwner&&this.fileOwner.id==this.authenticatedUser.id);
var _1f0f=_1f07.isDeleted();
var div=(_1f0b)?_1f0b:d.createElement("div");
div.className="lotusPost lotusStatus";
var _1f11=d.createElement("a");
_1f11.name=_1f11.id="comment-"+_1f07.getId();
_1f11.className="lotusHidden";
div.appendChild(_1f11);
var divai=d.createElement("div");
divai.className="lotusPostAuthorInfo";
var divav=d.createElement("div");
divav.className="lotusPostAvatar";
var divc=d.createElement("div");
divc.className="lotusPostContent";
var divm=d.createElement("div");
divm.className="lotusMeta";
divai.appendChild(divav);
div.appendChild(divai);
divc.appendChild(divm);
div.appendChild(divc);
if(!_1f0f){
var u=_1f07.getAuthor();
if(this.getUserImageUrl){
var src=this.getUserImageUrl(u);
if(src){
var img=d.createElement("img");
img.className="lotusPostAvatar";
img.src=src;
img.style.width=img.style.height="35px";
img.setAttribute("alt",u.name);
divav.appendChild(img);
}
}
if(this.showTitles){
var h4=d.createElement("h4");
h4.appendChild(d.createTextNode(_1f07.getTitle()));
divm.appendChild(h4);
}
var _1f1a=new quickr.share.util.DateFormat(_1f07.getPublished());
var _1f1b=_1f1a.formatByAge(this._strings.COMMENT_CREATED);
var self=this;
quickr.share.util.html.substitute(d,divm,_1f1b,{user:function(){
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(u.name));
self.generateLinkToPerson(u,a);
return a;
},timestamp:function(){
if(self.generateLinkToComment){
var a=d.createElement("a");
a.appendChild(d.createTextNode(new quickr.share.util.DateFormat(_1f07.getPublished()).formatByAge(self._strings.COMMENT_CREATED_TIME)));
self.generateLinkToComment(_1f07,a);
return a;
}
return d.createTextNode(new quickr.share.util.DateFormat(_1f07.getPublished()).formatByAge(self._strings.COMMENT_CREATED_TIME));
}});
if(_1f07.getUpdated().getTime()!=_1f07.getPublished().getTime()){
var _1f1f=d.createElement("span");
_1f1f.className="lotusMeta";
var _1f1a=new quickr.share.util.DateFormat(_1f07.getUpdated());
var _1f1b=_1f1a.formatByAge(this._strings.COMMENT_EDITED);
_1f1f.title=_1f1a.toTimestamp();
_1f1f.appendChild(d.createTextNode(_1f1b));
div.appendChild(_1f1f);
}
}else{
var img=d.createElement("img");
img.className="lotusPostAvatar";
img.src=_1f04.baseUrl+"nav/common/styles/images/iconDeleteComment.gif";
divav.appendChild(img);
if(this.showTitles){
var h4=d.createElement("h4");
h4.appendChild(d.createTextNode(_1f07.getTitle()));
divm.appendChild(h4);
}
var _1f1b=new quickr.share.util.DateFormat(_1f07.getUpdated()).formatByAge(this._strings.COMMENT_DELETED);
var self=this;
quickr.share.util.html.substitute(d,divm,_1f1b,{user:function(){
var u=_1f07.getModifier();
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(u.name));
self.generateLinkToPerson(u,a);
return a;
}});
}
var divb=d.createElement("div");
divb.commentBody=_1f07.getContents();
divb.className="lotusPostDetails";
var pbody=d.createElement("p");
quickr.share.util.createTextNode(d,pbody,_1f07.getContents());
divb.appendChild(pbody);
if(!_1f0f&&(_1f0d||_1f0e)){
var diva=d.createElement("div");
diva.className="lotusActions";
var ul=d.createElement("ul");
ul.className="lotusInlinelist";
if(_1f0d){
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_1f04,_1f04.edit,_1f07));
a.appendChild(d.createTextNode(this._strings.EDIT));
li.appendChild(a);
ul.appendChild(li);
}
diva.appendChild(ul);
divb.appendChild(diva);
if(_1f0d||_1f0e){
var a=d.createElement("a");
a.className="lotusDelete";
a.title=this._strings.DELETE;
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_1f04,_1f04.remove,_1f07));
var img=d.createElement("img");
img.className="lotusPostAvatar";
img.src=_1f04.baseUrl+"nav/common/styles/images/blank.gif";
img.style.width=img.style.height="12px";
img.alt="";
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
divb.appendChild(a);
}
}
divc.appendChild(divb);
if(!_1f0b){
el.appendChild(div);
}
_1f07.element=div;
},updateItem:function(_1f29,data,el,_1f2c,_1f2d){
if(!_1f2d){
throw "updateItem requires the new data";
}
_1f29.resetData();
var item=new quickr.share.bean.Comment(_1f2d);
var _1f2f=_1f2c._position;
data.itemByPosition[_1f2f]=item;
data.itemById[item.getId()]=item;
item._position=_1f2f;
var d=document;
var div=_1f2c.element;
quickr.share.util.removeChildren(div);
_1f2c.element=null;
this.renderItemComment(_1f29,el,data,item,_1f2f,_1f2f==0,_1f2f==data.itemByPosition.length-1,div);
if(_1f2c._isExpanded){
this.toggleItem(_1f29,_1f2f);
}
},removeItem:function(_1f32,el,data,item){
_1f32.resetData();
var _1f36=data.itemByPosition.length;
var _1f37=item._position;
for(var i=_1f37+1;i<_1f36;i++){
data.itemByPosition[i]._position--;
}
data.itemByPosition.splice(_1f37,1);
delete data.itemById[item.getId()];
el.removeChild(item.element);
item.element=null;
},generateLinkToPerson:function(){
},generateLinkToComment:function(){
}});
}
if(!dojo._hasResource["quickr.share.bean.Version"]){
dojo._hasResource["quickr.share.bean.Version"]=true;
dojo.provide("quickr.share.bean.Version");
dojo.declare("quickr.share.bean.Version",null,{constructor:function(entry){
this.e=entry;
},getEntry:function(){
return this.e;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getVersionLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"versionLabel",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getName:function(){
return quickr.share.util.getChildElementTextContent(this.e,"title");
},getChangeSummary:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getOwner:function(){
if(!this.author){
var node=this.e.getElementsByTagName("author")[0];
this.author={id:decodeURIComponent(quickr.share.util.getChildElementTextContent(node,"uri")),name:quickr.share.util.getChildElementTextContent(node,"name"),email:quickr.share.util.getChildElementTextContent(node,"email")};
}
return this.author;
},getModifier:function(){
if(!this.modifier){
var e=quickr.share.util.getElementsByTagNameNS(this.e,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(e){
this.modifier=new quickr.share.bean.User(e);
}
}
return this.modifier;
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.updated=this.updated||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE));
this.published=this.published||quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.published;
},getUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
},getUrlDownload:function(){
return quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href");
},getSize:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","length"));
}});
}
if(!dojo._hasResource["quickr.widget.VersionStreamRenderer"]){
dojo._hasResource["quickr.widget.VersionStreamRenderer"]=true;
dojo.provide("quickr.widget.VersionStreamRenderer");
dojo.declare("quickr.widget.VersionStreamRenderer",[quickr.widget.StreamRenderer],{_strings:{},minimalPaging:true,displayVersionSummary:true,generateVersionLink:null,generateUserLink:null,generateViewLink:null,generateDownloadLink:null,generateRevertLink:null,render:function(_1f3c,el,data){
quickr.share.util.removeChildren(el);
if(data.xml.getElementsByTagName("entry").length>0){
var d=document;
var table=d.createElement("table");
table.className="lotusTable lotusClear";
table.cellSpacing=table.cellPadding=0;
var tbody=d.createElement("tbody");
table.appendChild(tbody);
el.appendChild(table);
arguments[1]=tbody;
}
this.inherited(arguments);
},renderItem:function(_1f42,el,data,item,_1f46,_1f47,_1f48,_1f49,_1f4a){
var _1f4b=new quickr.share.bean.Version(item);
var d=document;
var tr=(_1f49)?_1f49:d.createElement("tr");
if(_1f46%2==1){
dojo.addClass(tr,"lotusAltRow");
}
var df=new quickr.share.util.DateFormat(_1f4b.getPublished());
var _1f4f=df.formatByAge(this._strings.DATE.RELATIVE_TIME);
var td=d.createElement("td");
td.className="lotusNowrap";
td.appendChild(d.createTextNode(dojo.number.format(_1f4b.getVersionLabel())));
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusNowrap";
if(this.generateVersionLink){
var a=d.createElement("a");
this.generateVersionLink(_1f4b,a);
a.title=df.toTimestamp();
a.appendChild(d.createTextNode(_1f4f));
td.appendChild(a);
}else{
td.title=df.toTimestamp();
td.appendChild(d.createTextNode(_1f4f));
}
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusNowrap";
if(this.generateUserLink){
var a=d.createElement("a");
a.className="lotusPerson";
this.generateUserLink(_1f4b.getModifier(),a);
a.appendChild(d.createTextNode(_1f4b.getModifier().name));
td.appendChild(a);
}else{
td.appendChild(d.createTextNode(_1f4b.getModifier().name));
}
tr.appendChild(td);
if(this.generateViewLink){
var td=d.createElement("td");
td.className="lotusNowrap lotusActions";
if(_1f42.currentVersionId!=_1f4b.getId()){
var a=d.createElement("a");
if(_1f42.latestVersionLabel!=_1f4b.getVersionLabel()){
this.generateViewLink(a,_1f42.ownerId,_1f4b.getDocumentId(),_1f4b.getId());
}else{
this.generateViewLink(a,_1f42.ownerId,_1f4b.getDocumentId(),null);
}
a.appendChild(d.createTextNode(this._strings.CONTENT.VIEW));
td.appendChild(a);
}else{
var div=d.createElement("div");
div.style.color="gray";
div.appendChild(d.createTextNode(this._strings.CONTENT.VIEW));
td.appendChild(div);
}
tr.appendChild(td);
}
if(this.generateDownloadLink){
var td=d.createElement("td");
td.className="lotusNowrap lotusActions";
var a=d.createElement("a");
this.generateDownloadLink(a,_1f4b);
td.appendChild(a);
tr.appendChild(td);
}
if(this.canRevert&&this.generateRevertLink){
var _1f53=d.createElement("td");
_1f53.className="lotusNowrap";
if(_1f42.latestVersionLabel!=_1f4b.getVersionLabel()){
_1f53.className+=" lotusActions";
var a=d.createElement("a");
this.generateRevertLink(_1f4b,a);
a.appendChild(d.createTextNode(this._strings.CONTENT.REVERT));
_1f53.appendChild(a);
}else{
_1f53.appendChild(d.createTextNode(" "));
}
tr.appendChild(_1f53);
}
var td=d.createElement("td");
td.style.width="90%";
var text=_1f4b.getChangeSummary();
if(this.displayVersionSummary&&text&&text.length>0){
var _1f55=d.createElement("div");
_1f55.className="qkrWide";
var _1f56=d.createElement("div");
_1f56.title=text;
_1f56.className="qkrWideInner";
_1f56.appendChild(d.createTextNode(text));
_1f55.appendChild(_1f56);
td.appendChild(_1f55);
}else{
td.appendChild(d.createTextNode(" "));
}
tr.appendChild(td);
el.appendChild(tr);
}});
}
if(!dojo._hasResource["quickr.widget.Versions"]){
dojo._hasResource["quickr.widget.Versions"]=true;
dojo.provide("quickr.widget.Versions");
dojo.declare("quickr.widget.Versions",[quickr.widget.Stream],{templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\" style=\"${_initPageStyle}\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\" style=\"${_initPageStyle}\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>\n  <div dojoAttachPoint=\"compareNode\" class=\"lotusActions\" style=\"display: none;\">\n     ${_strings.COMPARE_VERSION}\n     <select class=\"qkrVersionSelect\" dojoAttachPoint=\"compareFromNode\"></select>\n     ${_strings.TO}\n     <select class=\"qkrVersionSelect\" dojoAttachPoint=\"compareToNode\"></select>\n     <a href=\"#\" dojoAttachPoint=\"compareLink\">${_strings.SHOW_COMPARISON}</a>\n  </div>\n  <div dojoAttachPoint=\"deleteNode\" class=\"lotusActions\" style=\"display: none;\">\n     ${_strings.DELETE_ALL}\n     <select class=\"qkrVersionSelect\" dojoAttachPoint=\"deleteFromNode\"></select>\n     <a href=\"#\" dojoAttachPoint=\"deleteLink\">${_strings.DELETE}</a>\n  </div>\n</div>\n",additionalClasses:"",url:null,loadOnStartup:false,pageSize:dojo.getObject("quickr.share.config.services.versions.pageSize")||10,currentVersionId:null,currentVersionLabel:null,latestVersionId:null,latestVersionLabel:null,canRevert:false,canDelete:false,displayVersionSummary:false,displayRevertVersion:false,displayDownloadVersion:false,displayCompareVersions:false,compareFrom:null,compareTo:null,displayDeletePriorVersions:false,deleteFrom:null,_strings:{},msgNoData:null,postMixInProperties:function(){
if(typeof this.url=="function"){
this.url=this.url({category:"version",sI:1,pageSize:this.pageSize});
}
this.renderer=new quickr.widget.VersionStreamRenderer({_strings:this._strings,canRevert:this.canRevert,displayVersionSummary:this.displayVersionSummary,generateVersionLink:this.generateVersionLink,generateUserLink:this.generateUserLink,generateViewLink:this.generateViewLink,generateDownloadLink:this.displayDownloadVersion?dojo.hitch(this,this.generateDownloadLink):null,generateRevertLink:this.displayRevertVersion?dojo.hitch(this,this.generateRevertLink):null});
this.inherited(arguments);
},postCreate:function(){
this.inherited(arguments);
this.latestVersionLabel=quickr.share.util.parseInt(this.latestVersionLabel);
this.currentVersionLabel=quickr.share.util.parseInt(this.currentVersionLabel);
this.compareFrom=quickr.share.util.parseInt(this.compareFrom);
this.compareTo=quickr.share.util.parseInt(this.compareTo);
this.deleteFrom=quickr.share.util.parseInt(this.deleteFrom);
if(this.displayCompareVersions){
this.compareFrom=this.compareFrom||this.currentVersionLabel||this.latestVersionLabel;
this.compareTo=this.compareTo||(this.compareFrom-1);
if(this.compareFromNode){
dojo.connect(this.compareFromNode,"onchange",dojo.hitch(this,this.updateCompareFrom,null,true));
}
if(this.compareToNode){
dojo.connect(this.compareToNode,"onchange",dojo.hitch(this,this.updateCompareTo,null));
}
if(this.compareLink){
var _1f57=dojo.hitch(this,function(){
return this.compareFrom;
});
var _1f58=dojo.hitch(this,function(){
return this.compareTo;
});
this.generateCompareLink(this.compareLink,this.ownerId,this.docId,_1f57,_1f58);
}
}
if(this.displayDeletePriorVersions&&this.deleteLink){
this.deleteFrom=this.deleteFrom||this.compareFrom||this.currentVersionLabel||this.latestVersionLabel;
var _1f57=dojo.hitch(this,function(){
return this.deleteFromNode.value;
});
this.generateDeletePriorVersionsLink(this.deleteLink,this.ownerId,this.docId,_1f57);
}
if(this.versions){
this.domNode.style.display="";
this.data=this.versionData=this.versions.data;
this.update();
}else{
if(this.loadOnStartup){
this.update();
}else{
this.domNode.style.display="none";
}
}
},onVisible:function(){
if(!this.data){
this.update();
}
},onUpdate:function(data){
var _1f5a=data.xml.getElementsByTagName("entry");
var _1f5b=dojo.map(_1f5a,function(e){
return new quickr.share.bean.Version(e);
});
this.versions={sI:data.paging.startIndex||1,total:Math.max(data.paging.total,_1f5b.length),list:_1f5b,data:data};
if(this.compareNode){
if(this.displayCompareVersions&&this.versions.total>1){
this.compareNode.style.display="";
this.updateCompareFrom(null,false);
}else{
this.compareNode.style.display="none";
}
}
if(this.deleteNode){
if(this.canDelete&&this.displayDeletePriorVersions&&this.versions.total>1){
this.deleteNode.style.display="";
this.updateDeleteFrom();
}else{
this.deleteNode.style.display="none";
}
}
this.onUpdateCount(this.versions.total);
},onUpdateCount:function(count){
},updateDeleteFrom:function(value){
var max=this.latestVersionLabel;
var min=(this.latestVersionLabel-this.versions.total+2);
var _1f61=quickr.share.util.parseInt(value||this.deleteFromNode.value||this.deleteFrom||this.currentVersionLabel||this.compareFrom||this.latestVersionLabel);
if(min>max){
min=max;
}
if(_1f61>max){
_1f61=max;
}
if(_1f61<min){
_1f61=min;
}
if(min!=this.deleteFromMin||max!=this.deleteFromMax||_1f61!=this.deleteFrom||_1f61!=this.deleteFromNode.value){
var d=document;
while(this.deleteFromNode.firstChild){
this.deleteFromNode.removeChild(this.deleteFromNode.firstChild);
}
var _1f63;
for(var i=max;i>=min;i--){
var _1f65=d.createElement("option");
_1f65.value=i;
_1f65.appendChild(d.createTextNode(dojo.number.format(i)));
if(i==_1f61){
_1f63=_1f65;
}
this.deleteFromNode.appendChild(_1f65);
}
_1f63.selected="selected";
this.deleteFromMin=min;
this.deleteFromMax=max;
this.deleteFrom=_1f61;
}
},updateCompareFrom:function(value,_1f67){
var max=this.latestVersionLabel;
var min=(this.latestVersionLabel-this.versions.total+2);
var _1f6a=quickr.share.util.parseInt(value||this.compareFromNode.value||this.compareFrom);
if(min>max){
min=max;
}
if(_1f6a>max){
_1f6a=max;
}
if(_1f6a<min){
_1f6a=min;
}
var _1f6b;
if(min!=this.compareFromMin||max!=this.compareFromMax||_1f6a!=this.compareFrom||_1f6a!=this.compareFromNode.value){
var d=document;
while(this.compareFromNode.firstChild){
this.compareFromNode.removeChild(this.compareFromNode.firstChild);
}
var _1f6d;
for(var i=max;i>=min;i--){
var _1f6f=d.createElement("option");
_1f6f.value=i;
_1f6f.appendChild(d.createTextNode(dojo.number.format(i)));
if(i==_1f6a){
_1f6d=_1f6f;
}
this.compareFromNode.appendChild(_1f6f);
}
_1f6d.selected="selected";
this.compareFromMin=min;
this.compareFromMax=max;
this.compareFrom=_1f6a;
if(_1f67){
_1f6b=_1f6a-1;
}
}
this.updateCompareTo(_1f6b);
},updateCompareTo:function(value){
var max=this.compareFrom-1;
var min=this.latestVersionLabel-this.versions.total+1;
var _1f73=quickr.share.util.parseInt(value||this.compareToNode.value||this.compareTo||(this.compareFrom-1));
if(min>max){
min=max;
}
if(_1f73>max){
_1f73=max;
}
if(_1f73<min){
_1f73=min;
}
if(min!=this.compareToMin||max!=this.compareToMax||_1f73!=this.compareTo||_1f73!=this.compareToNode.value){
var d=document;
while(this.compareToNode.firstChild){
this.compareToNode.removeChild(this.compareToNode.firstChild);
}
var _1f75;
for(var i=max;i>=min;i--){
var _1f77=d.createElement("option");
_1f77.value=i;
_1f77.appendChild(d.createTextNode(dojo.number.format(i)));
if(i==_1f73){
_1f75=_1f77;
}
this.compareToNode.appendChild(_1f77);
}
_1f75.selected="selected";
this.compareToMin=min;
this.compareToMax=max;
this.compareTo=_1f73;
}
},generateDownloadLink:function(a,_1f79){
var d=document;
a.href=_1f79.getUrlDownload();
a.appendChild(d.createTextNode(dojo.string.substitute(this._strings.CONTENT.DOWNLOAD,[quickr.share.util.formatSize(_1f79.getSize())])));
},generateCompareLink:function(a,_1f7c,docId,_1f7e,_1f7f){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(this,this.compareVersions,_1f7c,docId,_1f7e,_1f7f));
},generateRevertLink:function(_1f80,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(this,this.revertVersion,_1f80));
},revertVersion:function(_1f82){
var _1f83=_1f82.getDocumentId();
var _1f84=_1f82.getId();
var _1f85=_1f82.getVersionLabel();
var df=new quickr.share.util.DateFormat(_1f82.getUpdated());
var _1f87=df.formatByAge(this._strings.DATE.RELATIVE_TIME);
var _1f88=_1f82.getModifier().name;
var _1f89=_1f82.getOwner().id;
this.revertTo(_1f83,_1f84,_1f85,_1f87,_1f88,_1f89);
},revertTo:function(_1f8a,_1f8b,_1f8c,_1f8d,_1f8e,_1f8f){
if(confirm(dojo.string.substitute(this._strings.REVERT_CONFIRM,[_1f8c,_1f8d,_1f8e]))){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _1f92=quickr.share.util.createElementNS(doc,"changeSummary",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_1f92.appendChild(doc.createTextNode(dojo.string.substitute(this._strings.REVERT_DESCRIPTION,[dojo.number.format(_1f8c)])));
entry.appendChild(_1f92);
var _1f93=quickr.share.util.createElementNS(doc,"versionUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_1f93.appendChild(doc.createTextNode(_1f8b));
entry.appendChild(_1f93);
var _1f94=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
var _1f95=this.app.routes.getFileInfoServiceUrl(_1f8f,_1f8a,{submit:true,createVersion:true});
this.net.putXml({url:_1f95,postData:_1f94,requireData:true,headers:{"Content-Type":"application/atom+xml; charset=\"UTF-8\""},handle:dojo.hitch(this,this.handleRevertVersion)});
}
},handleRevertVersion:function(_1f96,_1f97){
if(!_1f96||_1f96 instanceof Error){
this.onRevertVersionError(quickr.share.util.getAtomError(_1f96,_1f97));
}else{
this.onRevertVersion();
}
},onRevertVersionError:function(error){
if(error.code=="AccessDenied"){
alert(this._strings.REVERT.ERROR_ACCESS_DENIED);
}else{
if(error.code=="QuotaViolation"){
var _1f99=quickr.share.util.parseInt(error.uploadSize-(error.libraryQuota-error.librarySize),"??");
alert(dojo.string.substitute(this._strings.REVERT.ERROR_QUOTA_VIOLATION,[quickr.share.util.formatSize(_1f99)]));
}else{
if(error.code=="ItemNotFound"){
alert(this._strings.REVERT.ERROR_NOT_FOUND);
}else{
if(error.code=="ItemExists"){
alert(this._strings.REVERT.ERROR_NAME_EXISTS);
}else{
if(error.code=="cancel"){
alert(this._strings.REVERT.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
alert(this._strings.REVERT.ERROR_TIMEOUT);
}else{
if(error.code=="unauthenticated"){
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this._strings.REVERT.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxPageSize)]);
alert(text);
}else{
alert(this._strings.REVERT.GENERIC_ERROR);
}
}
}
}
}
}
}
}
},onRevertVersion:function(){
this.data=this.versions=null;
},generateDeletePriorVersionsLink:function(a,_1f9c,docId,_1f9e){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(this,this.deletePriorVersions,_1f9e));
},deletePriorVersions:function(_1f9f){
var _1f9f=typeof (_1f9f)=="function"?_1f9f():_1f9f;
if(confirm(dojo.string.substitute(this._strings.DELETE_ALL_CONFIRM,[_1f9f]))){
var url=quickr.share.util.rewriteUri(this.url,{category:"version",deleteFrom:(_1f9f-1)});
this.net.deleteXml({url:url,requireData:true,handle:dojo.hitch(this,this.handleDeletePriorVersions,_1f9f)});
}
},handleDeletePriorVersions:function(_1fa1,_1fa2,_1fa3){
if(!_1fa2||_1fa2 instanceof Error){
this.onDeletePriorVersionsError(_1fa1,quickr.share.util.getAtomError(_1fa2,_1fa3));
}else{
this.onDeletePriorVersions(_1fa1,_1fa2);
}
},onDeletePriorVersionsError:function(_1fa4,error){
alert(this._strings.DELETEERROR);
},onDeletePriorVersions:function(_1fa6,_1fa7){
this.refresh();
}});
}
if(!dojo._hasResource["quickr.share.bean.Attachment"]){
dojo._hasResource["quickr.share.bean.Attachment"]=true;
dojo.provide("quickr.share.bean.Attachment");
dojo.declare("quickr.share.bean.Attachment",null,{constructor:function(entry){
this.e=entry;
},getEntry:function(){
return this.e;
},getAtomId:function(){
return quickr.share.util.getChildElementTextContent(this.e,"id");
},getId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDocumentId:function(){
return quickr.share.util.getChildElementTextContentNS(this.e,"documentId",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getDescription:function(){
return quickr.share.util.getChildElementTextContent(this.e,"summary");
},getName:function(){
var s=quickr.share.util.getChildElementTextContentNS(this.e,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
if(!s||s.length==0){
s=quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","title");
}
if(!s||s.length==0){
s=quickr.share.util.getChildElementTextContent(this.e,"title");
}
return s;
},getModifier:function(){
if(!this.modifier){
var user=quickr.share.util.getElementsByTagNameNS(this.e,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(user){
this.modifier={id:decodeURIComponent(quickr.share.util.getChildElementTextContentNS(user,"uri",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)),name:quickr.share.util.getChildElementTextContentNS(user,"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE),email:quickr.share.util.getChildElementTextContentNS(user,"email",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)};
}
}
return this.modifier;
},getUpdated:function(){
if(!this.updated){
this.updated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"updated"));
}
return this.updated;
},getPublished:function(){
if(!this.published){
this.published=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContent(this.e,"published"));
}
return this.published;
},getSystemLastModified:function(){
if(!this.systemLastModified){
this.systemLastModified=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getUpdated();
}
return this.systemLastModified;
},getSystemCreated:function(){
if(!this.systemCreated){
this.systemCreated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.e,"created",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getPublished();
}
return this.systemCreated;
},getSize:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","length"));
},getUrlEntry:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
},getUrlDownload:function(){
return quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","enclosure","href");
},getUrlRelated:function(){
return quickr.share.util.makeAtomUrlIESafe(quickr.share.util.getChildElementAttributeMatching(this.e,"link","rel","self","href"));
}});
}
if(!dojo._hasResource["quickr.widget.AttachmentStreamRenderer"]){
dojo._hasResource["quickr.widget.AttachmentStreamRenderer"]=true;
dojo.provide("quickr.widget.AttachmentStreamRenderer");
dojo.declare("quickr.widget.AttachmentStreamRenderer",[quickr.widget.StreamRenderer],{methods:{},actions:[],minimalPaging:true,getDelegate:function(type,def,_1fad){
var view=this.view||"summary";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_1fad){
var _1fb0=name+_1fad.substring(0,1).toUpperCase()+_1fad.substring(1);
if(typeof this[_1fb0]=="function"){
return this[_1fb0];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_1fb3){
return typeof this.getDelegate(type,null,null,_1fb3)=="function";
},delegate:function(type,args,def,_1fb7){
var f=this.getDelegate(type,def,_1fb7);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_1fb9){
return this.delegate("allowMultipleExpand",arguments,quickr.widget.AttachmentStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.destroyWidgets();
this.actions=[];
},destroyWidgets:function(){
this.delegate("destroy",arguments);
dojo.forEach(this.widgets||[],function(_1fba){
_1fba.destroy();
});
this.widgets=[];
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.widget.AttachmentStreamRenderer.superclass.getSorts);
},render:function(_1fbb,el,data,item){
this.destroyWidgets();
data.itemById={};
this.baseUrl=_1fbb.baseUrl;
this.delegate("render",arguments,quickr.widget.AttachmentStreamRenderer.superclass.render);
},renderSummary:function(_1fbf,el,data){
var _1fc2=el.parentNode;
var d=document;
quickr.share.util.removeChildren(el);
if(data.xml.getElementsByTagName("entry").length>0){
var table=d.createElement("TABLE");
table.className="lotusTable lotusClear";
table.cellSpacing=table.cellPadding=0;
var tbody=d.createElement("TBODY");
table.appendChild(tbody);
el.appendChild(table);
arguments[1]=tbody;
}
quickr.widget.AttachmentStreamRenderer.superclass.render.apply(this,arguments);
var _1fc6=dojo.byId("addAttachmentDiv");
this.setAddAttachmentLink(_1fc6);
},renderSorting:function(_1fc7,el,data){
},renderItem:function(_1fca,el,data,item,_1fce){
var _1fcf="Attachment";
item=new quickr.share.bean.Attachment(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_1fce;
item._qualifier=_1fcf;
this.delegate("renderItem",arguments,null,_1fcf);
},updateItem:function(_1fd0,data,el,item){
if(this.hasDelegate("updateItem")){
if(data.itemByPosition&&typeof item=="number"){
item=data.itemByPosition[item];
}
if(item&&item.getUrlRelated){
this.net.getXml({url:item.getUrlRelated(),handle:dojo.hitch(this,this.updateItemComplete,_1fd0,data,el,item)});
}
}
},updateItemComplete:function(_1fd4,data,el,_1fd7,_1fd8,_1fd9){
if(_1fd8 instanceof Error){
}else{
if(_1fd8.documentElement&&quickr.util.dom.isNamedNS(_1fd8.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _1fda="attachment";
var item=_1fd8.documentElement;
item=new quickr.share.bean.Attachment(item);
var _1fdc=_1fd7._position;
data.itemByPosition[_1fdc]=item;
data.itemById[item.getId()]=item;
item._position=_1fdc;
item._qualifier=_1fda;
this.delegate("updateItem",[_1fd4,data,el,doc,_1fd7,_1fdc],null,_1fda);
}
}
},renderItemSummaryAttachment:function(_1fdd,el,data,doc,_1fe1,_1fe2,_1fe3,_1fe4,_1fe5){
var _1fe6=_1fdd;
var d=document;
var tr=d.createElement("tr");
if(_1fe1%2==1){
dojo.addClass(tr,"lotusAltRow");
}
if(this.currentAttachmentId&&this.currentAttachmentId==doc.getId()){
dojo.addClass(tr,"lotusSelected");
}
var td=d.createElement("td");
td.style.whiteSpace="nowrap";
var img=d.createElement("img");
img.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),16);
img.setAttribute("alt",quickr.share.util.getExtension(doc.getName()));
td.appendChild(img);
td.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
var name=doc.getName();
if(name.length>50){
name=name.substring(0,50)+"...";
a.alt=doc.getName();
a.title=doc.getName();
}
a.appendChild(d.createTextNode(name));
a.href=doc.getUrlDownload();
td.appendChild(a);
tr.appendChild(td);
var td=d.createElement("td");
td.style.whiteSpace="nowrap";
var df=new quickr.share.util.DateFormat(doc.getUpdated());
var _1fee=df.formatByAge(this._strings.DATE.RELATIVE_TIME);
if(this.generateAttachmentLink){
var a=d.createElement("a");
this.generateAttachmentLink(attachment,a);
a.title=df.toTimestamp();
a.appendChild(d.createTextNode(_1fee));
td.appendChild(a);
}else{
td.title=df.toTimestamp();
td.appendChild(d.createTextNode(_1fee));
}
tr.appendChild(td);
var td=d.createElement("td");
td.style.whiteSpace="nowrap";
td.appendChild(d.createTextNode(quickr.share.util.formatSize(doc.getSize())));
tr.appendChild(td);
if(this.canEdit){
var td=d.createElement("td");
td.className="lotusActions";
var a=d.createElement("a");
a.appendChild(d.createTextNode(this._strings.DELETE));
a.href="javascript:;";
this.setDeleteAttachmentLink(a,doc);
td.appendChild(a);
tr.appendChild(td);
var _1fef=this.getEditAttachmentObj(doc.getUrlRelated());
var td=d.createElement("td");
td.className="lotusActions";
var a=d.createElement("a");
a.appendChild(d.createTextNode(this._strings.EDIT));
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_1fef,_1fef.execute,doc));
td.appendChild(a);
tr.appendChild(td);
this.setReplaceSuccessEvent(_1fef);
}
var td=d.createElement("td");
td.style.width="70%";
td.appendChild(d.createTextNode(doc.getDescription()));
tr.appendChild(td);
el.appendChild(tr);
},generateLinkToAttachment:function(doc,a){
a.href=doc.getUrlDownload();
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
}});
}
if(!dojo._hasResource["quickr.widget.Attachments"]){
dojo._hasResource["quickr.widget.Attachments"]=true;
dojo.provide("quickr.widget.Attachments");
dojo.declare("quickr.widget.Attachments",[quickr.widget.Stream],{templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\" style=\"${_initPageStyle}\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div dojoAttachPoint=\"toggleNode\" id =\"addAttachmentDiv\" style=\"display:none;\"></div>  \n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\" style=\"${_initPageStyle}\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>    \n</div>\n",additionalClasses:"",initialAttachments:10,loadOnStartup:true,assumeNoEntries:false,baseImageUri:quickr.share.config.baseUri+"/images/",_strings:{},msgNoData:null,postMixInProperties:function(){
this.urlAttachments=null;
if(typeof this.url=="function"){
this.urlAttachments=this.url;
}
var _1ff4=new quickr.share.bean.StreamPermissions({owner:this.isPersonalHome,authenticatedId:this.userId});
var _1ff5=this.renderer=new quickr.widget.AttachmentStreamRenderer({net:this.app.net,view:"summary",actions:[],permissions:_1ff4,highlightNew:"#FFFF75",canEdit:this.canEdit,_strings:this._strings,getEditAttachmentObj:dojo.hitch(this,this.getEditAttachmentObj),setAddAttachmentLink:dojo.hitch(this,this.setAddAttachmentLink),setDeleteAttachmentLink:dojo.hitch(this,this.setDeleteAttachmentLink),setReplaceSuccessEvent:dojo.hitch(this,this.setReplaceSuccessEvent),getFileTypeImage:dojo.hitch(this.app.routes,this.app.routes.getFileTypeImageUrl)});
this.inherited(arguments);
},postCreate:function(){
this.inherited(arguments);
if(this.assumeNoEntries){
if(!this.isAttachmentSecOpen()){
this.domNode.style.display="none";
}
this.onattachmentcountupdate(0,false);
this.update({fromUrl:true});
this.setAddAttachmentLink(dojo.byId("addAttachmentDiv"));
}else{
if(this.attachments){
this.domNode.style.display="";
this.data=this.attachmentData=this.attachments.data;
this.onattachmentcountupdate(this.attachments.total,false);
this.update();
}else{
if(this.loadOnStartup){
this.update();
}else{
if(!this.isAttachmentSecOpen()){
this.domNode.style.display="none";
}
}
}
}
},load:function(url){
if(this.assumeNoEntries){
this.assumeNoEntries=false;
this.update({fromUrl:true});
this.setAddAttachmentLink(dojo.byId("addAttachmentDiv"));
}else{
if(typeof (url)!="string"){
url=null;
}
var url=url||this.urlAttachments({category:"attachment",sI:1,pageSize:this.initialAttachments});
this.app.net.getXml({url:url,preventLoginRefresh:true,retry:dojo.hitch(this,this.load,url),handle:dojo.hitch(this,this.handleRetrieveAttachments)});
}
},_loadFromUrl:function(url){
this.load(url);
},handleRetrieveAttachments:function(_1ff8,_1ff9){
if(!_1ff8||!_1ff8.documentElement||_1ff8 instanceof Error){
this.attachments=null;
this.updateError(_1ff9);
}else{
var data=this.attachmentData={xml:_1ff8.documentElement,url:_1ff9.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_1ff9.url,_1ff8.documentElement);
this.bldAttachDataObjs(_1ff8,_1ff9,data);
this.onattachmentcountupdate(this.attachments.total,false);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.load(url);
return;
}
this.data=data;
this.update();
}
},bldAttachDataObjs:function(_1ffc,_1ffd,data){
var sI=1;
var total=quickr.share.util.getChildElementTextContentNS(_1ffc.documentElement,"totalResults",quickr.share.util.OPENSEARCH_NAMESPACE);
var _2001=_1ffc.documentElement.getElementsByTagName("entry");
var _2002=dojo.map(dojo.filter(_2001,function(a){
return ("attachment"==quickr.share.util.getChildElementAttribute(a,"category","term"));
}),function(e){
return new quickr.share.bean.Attachment(e);
});
this.attachments={sI:sI||1,total:Math.max(total,_2002.length),list:_2002,data:data};
},deleteFile:function(title,_2006,e){
if(confirm(dojo.string.substitute(this._appstrings.CONTENT.DELETECONFIRM,[title]))){
this.app.net.deleteXml({url:_2006,handle:dojo.hitch(this,this.deleteComplete)});
}
if(e){
dojo.stopEvent(e);
}
},deleteComplete:function(_2008,_2009){
if(_2008 instanceof Error){
this.ondeleteerror(quickr.share.util.getAtomErrorCode(_2008,_2009));
}else{
this.ondeletesuccess();
}
},ondeletesuccess:function(){
this.load();
},ondeleteerror:function(code){
if(code=="cancel"){
alert(this._appstrings.ATTACHMENT.DELETE_ERROR_CANCEL);
}else{
if(code=="timeout"){
alert(this._appstrings.ATTACHMENT.DELETE_ERROR_TIMEOUT);
}else{
if(code=="unauthenticated"){
}else{
alert(this._appstrings.ATTACHMENT.DELETEERROR);
}
}
}
},getFileTypeImage:function(ext,size){
return this.baseImageUri+"/filetypes/default_"+size+".gif";
},updateError:function(_200d){
var error={message:this._strings.ERROR,type:"unknown"};
var data=this.attachmentData={error:error,url:_200d.url};
if(this.attachments){
this.data=this.attachments.data=data;
this.update();
}
},page:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(this.attachmentData){
var _2012=this.attachmentData.paging;
var url=_2012.getPageUrl(page);
if(url){
this.load(url);
}
}
},next:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.attachmentData){
var _2015=this.attachmentData.paging;
var url=_2015.getNextUrl();
if(url){
}
this.load(url);
}
},previous:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.attachmentData){
var _2018=this.attachmentData.paging;
var url=_2018.getPreviousUrl();
if(url){
this.load(url);
}
}
},setPageSize:function(size,e){
if(e){
dojo.stopEvent(e);
}
if(size<1){
return;
}
this.app.prefs.put("itemsPerPage",size);
if(this.attachmentData){
var _201c=this.attachmentData.paging;
if(_201c.size!=size){
var url=_201c.getPageUrl(1,size);
this.load(url);
}
}
},destroy:function(){
quickr.share.util.destroy([this.upload,this.replace]);
this.upload=this.replace=null;
quickr.widget.Attachments.superclass.destroy.apply(this,arguments);
},setAddAttachmentLink:function(_201e){
var _201f=this.domNode;
if(!_201e){
var divs=_201f.getElementsByTagName("div");
for(var i=0;i<divs.length;i++){
var _2022=divs[i];
if(_2022.id=="addAttachmentDiv"){
_201e=divs[i];
break;
}
}
}
quickr.share.util.removeChildren(_201e);
var d=document;
if(this.canEdit){
var _2024=this.getUploadAttachmentObj(this.urlAttachments());
var a=d.createElement("A");
a.className="lotusActions";
a.href="javascript:;";
a.appendChild(d.createTextNode(this._strings.ADDATTACHMENT));
dojo.connect(a,"onclick",dojo.hitch(_2024,_2024.execute));
_201e.appendChild(a);
_201e.style.display="";
dojo.connect(_2024,"onsuccess",this,"load");
}else{
_201e.style.display="none";
}
},setDeleteAttachmentLink:function(a,doc){
dojo.connect(a,"onclick",dojo.hitch(this,this.deleteFile,doc.getName(),doc.getUrlRelated()));
},setReplaceSuccessEvent:function(_2028){
dojo.connect(_2028,"onsuccess",this,"load");
}});
}
if(!dojo._hasResource["quickr.share.bean.Comparison"]){
dojo._hasResource["quickr.share.bean.Comparison"]=true;
dojo.provide("quickr.share.bean.Comparison");
dojo.declare("quickr.share.bean.Comparison",null,{constructor:function(diff){
this.diff=diff;
this.resourceTo=this.diff.getElementsByTagName("resourceTo")[0];
this.resourceFrom=this.diff.getElementsByTagName("resourceFrom")[0];
this.comparison=this.diff.getElementsByTagName("comparison")[0];
},getComparison:function(){
return quickr.share.util.getChildElementTextContent(this.comparison,"content");
},getToId:function(){
return quickr.share.util.getChildElementTextContentNS(this.resourceTo,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getFromId:function(){
return quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"uuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getToVersionId:function(){
return quickr.share.util.getChildElementTextContentNS(this.resourceTo,"versionUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getFromVersionId:function(){
return quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"versionUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getToVersionLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.resourceTo,"versionLabel",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getFromVersionLabel:function(){
return quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"versionLabel",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
},getToUpdated:function(){
if(!this.toUpdated){
this.toUpdated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.resourceTo,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.toUpdated;
},getFromUpdated:function(){
if(!this.fromUpdated){
this.fromUpdated=quickr.share.util.date.convertAtomDate(quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"modified",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE))||this.getSystemLastModified();
}
return this.fromUpdated;
},getToAuthor:function(){
if(!this.toAuthor){
this.toAuthor=new quickr.share.bean.User(this.resourceTo.getElementsByTagName("author")[0]);
}
return this.toAuthor;
},getAuthor:function(){
return this.getFromAuthor();
},getFromAuthor:function(){
if(!this.fromAuthor){
this.fromAuthor=new quickr.share.bean.User(this.resourceFrom.getElementsByTagName("author")[0]);
}
return this.fromAuthor;
},getPermissions:function(){
if(!this.permissions){
var s=quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"permissions",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={View:true};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.permissions=p;
}
return this.permissions;
},getToModifier:function(){
if(!this.toModifier){
var e=quickr.share.util.getElementsByTagNameNS(this.resourceTo,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(e){
this.toModifier=new quickr.share.bean.User(e);
}
}
return this.toModifier;
},getFromModifier:function(){
if(!this.fromModifier){
var e=quickr.share.util.getElementsByTagNameNS(this.resourceFrom,"modifier",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
if(e){
this.fromModifier=new quickr.share.bean.User(e);
}
}
return this.fromModifier;
},getToPermissions:function(){
if(!this.toPermissions){
var s=quickr.share.util.getChildElementTextContentNS(this.resourceTo,"permissions",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={View:true};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.toPermissions=p;
}
return this.toPermissions;
},getFromPermissions:function(){
if(!this.fromPermissions){
var s=quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"permissions",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var p={View:true};
if(s){
dojo.forEach(s.split(", "),function(a){
if(a&&a.length>0){
p[a]=true;
}
});
}
this.fromPermissions=p;
}
return this.fromPermissions;
},getToMostRecentVersion:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(this.resourceTo,"totalResults",quickr.share.util.OPENSEARCH_NAMESPACE),-1);
},getFromMostRecentVersion:function(){
return quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(this.resourceFrom,"totalResults",quickr.share.util.OPENSEARCH_NAMESPACE),-1);
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.EditorAction"]){
dojo._hasResource["quickr.share.wiki.action.EditorAction"]=true;
dojo.provide("quickr.share.wiki.action.EditorAction");
dojo.declare("quickr.share.wiki.action.EditorAction",null,{isValid:function(user,opt){
var wiki=this.scene.wiki;
if(wiki&&wiki.getPermissions().AddChild){
return (this.app.authenticatedUser&&user.id==this.app.authenticatedUser.id)&&!dojo.getObject("quickr.share.config.disablePages");
}else{
return false;
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.CreatePage"]){
dojo._hasResource["quickr.share.wiki.action.CreatePage"]=true;
dojo.provide("quickr.share.wiki.action.CreatePage");
dojo.declare("quickr.share.wiki.action.CreatePage",[quickr.share.action.Action,quickr.share.wiki.action.EditorAction],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.opt=opt;
this.name=this.app.nls.CREATE_PAGE.ACTION;
this.tooltip=this.app.nls.CREATE_PAGE.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},execute:function(e){
if(e){
dojo.stopEvent(e);
}
this.app.navigate(this.app.routes.getUserCreatePagesUrl(this.app.scene.wikiLabel,this.app.authenticatedUser,this.opt));
}});
}
if(!dojo._hasResource["quickr.widget.TreeMap"]){
dojo._hasResource["quickr.widget.TreeMap"]=true;
dojo.provide("quickr.widget.TreeMap");
dojo.declare("quickr.widget.TreeMapItem",null,{getCategory:function(_203c){
return 0;
},getColorWeight:function(){
return 1;
},getWeight:function(){
return 1;
},buildCellRendering:function(_203d){
},onClick:function(){
}});
dojo.declare("quickr.widget.TreeMapDisplayer",dijit._Widget,{cellClass:"contentCell",fragmentClass:"mapFragment",containerClass:"container",numItems:20,minWeight:0.08,tabIndex:100,categories:[["#C37500","#FFC343"],["#074C7D","#77BBEB"],["#478109","#9EDB5C"]],items:null,buildRendering:function(){
this.domNode=this.srcNodeRef;
var _203e=this.createSubElement(this.domNode,this.containerClass);
this.width=dojo.style(_203e,"width");
this.height=dojo.style(_203e,"height");
if(this.items.length<this.numItems){
this.width*=Math.sqrt(this.items.length*this.numItems)/this.numItems;
this.height*=Math.sqrt(this.items.length*this.numItems)/this.numItems;
dojo.style(_203e,"width",this.width+"px");
dojo.style(_203e,"height",this.height+"px");
}
this.setWeights();
this.normalize();
this.sortByWeight();
var _203f=this.splitByCategory();
this.createFragment(_203f,[],_203e);
},createSubElement:function(_2040,_2041,_2042){
if(_2042==undefined){
_2042="div";
}
var _2043=document.createElement(_2042);
if(_2041!=null&&_2041.length>0){
_2043.className=_2041;
}
_2040.appendChild(_2043);
return _2043;
},splitByX:function(_2044){
if(dojo.isIE){
return (_2044.offsetWidth>_2044.offsetHeight);
}else{
return (dojo.style(_2044,"width")>dojo.style(_2044,"height"));
}
},elementWidth:function(_2045){
if(dojo.isIE){
return Math.min(_2045.offsetWidth,_2045.offsetHeight);
}else{
return Math.min(dojo.style(_2045,"width"),dojo.style(_2045,"height"));
}
},createFragment:function(_2046,_2047,_2048){
if(_2046.length==0){
if(_2047.length>0){
this.createRow(_2047,_2048);
}
return;
}
var width=this.elementWidth(_2048);
var _204a=(_2047.length>0)?this.worstAspectRatio(_2047,width):undefined;
_2047.push(_2046[0]);
var _204b=this.worstAspectRatio(_2047,width);
if(_204a==undefined||_204b<=_204a){
this.createFragment(_2046.slice(1),_2047,_2048);
}else{
_2047.pop();
var _204c=this.splitByWeight(_2048,[_2047,_2046]);
this.createRow(_2047,_204c[0]);
this.createFragment(_2046,[],_204c[1]);
}
},worstAspectRatio:function(_204d,width){
var _204f=width*width;
var _2050=this.totalWeight(_204d);
var _2051=_2050*_2050;
var _2052=this.minAttValue(_204d,"weight");
var _2053=this.maxAttValue(_204d,"weight");
return Math.max(_204f*_2053/_2051,_2051/(_204f*_2052));
},createRow:function(items,_2055){
var _2056=[];
if(items.length==1){
_2056.push(_2055);
}else{
_2056=this.splitByWeight(_2055,items);
}
for(var i=0;i<items.length&&i<_2056.length;i++){
var item=items[i];
var _2059=_2056[i];
if(dojo.isArray(item)){
this.createFragment(item,[],_2059);
}else{
this.createCell(item,_2059);
}
}
},splitByWeight:function(_205a,_205b){
var _205c=0;
for(var i=0;i<_205b.length;i++){
_205c+=this.totalWeight(_205b[i]);
}
var _205e=0;
var _205f=this.splitByX(_205a);
var _2060=[];
for(var i=0;i<_205b.length;i++){
var _2061=_205b[i];
var _2062=this.createSubElement(_205a,this.fragmentClass);
var _2063=this.totalWeight(_2061)/_205c;
if(_205f){
this.setDimensions(_2062,_2063,1);
dojo.style(_2062,"left",_205e*100+"%");
}else{
this.setDimensions(_2062,1,_2063);
dojo.style(_2062,"top",_205e*100+"%");
}
_2060.push(_2062);
_205e+=_2063;
}
return _2060;
},setDimensions:function(_2064,_2065,_2066){
dojo.style(_2064,"width",_2065*100+"%");
dojo.style(_2064,"height",_2066*100+"%");
},totalWeight:function(items){
if(!dojo.isArray(items)){
return items.weight;
}
var sum=0;
for(var i=0;i<items.length;i++){
sum+=this.totalWeight(items[i]);
}
return sum;
},sortByWeight:function(){
quickr.share.util.sort(this.items,["weight",-1]);
},createCell:function(item,_206b){
var cell=this.createSubElement(_206b,this.cellClass);
var _206d=this.categories[item.getCategory()];
var _206e=dojo.colorFromHex(_206d[0]);
var _206f=dojo.colorFromHex(_206d[1]);
if(!item.colorWeight){
item.colorWeight=1;
}
var _2070=dojo.blendColors(_206e,_206f,item.colorWeight);
dojo.style(cell,"backgroundColor",_2070.toHex());
cell.hoverColor=dojo.blendColors(_206e,_206f,item.colorWeight-0.25).toHex();
cell.tabIndex=this.tabIndex++;
cell.item=item;
cell.innerHTML="<table height=\"100%\" width=\"100%\"><tbody><tr><td valign=\"middle\" class=\"contentHolder\"></td></tr></tbody></table>";
item.buildCellRendering(dojo.query(".contentHolder",cell)[0]);
dojo.style(cell,"fontSize",new String(Math.sqrt(item.weight)/10)+"pt");
cell.onmouseover=function(){
this.originalColor=dojo.style(this,"backgroundColor");
dojo.style(this,"backgroundColor",this.hoverColor);
};
cell.onfocus=cell.onmouseover;
cell.onmouseout=function(){
dojo.style(this,"backgroundColor",this.originalColor);
};
cell.onblur=cell.onmouseout;
dojo.connect(cell,"onclick",item,"onClick");
dojo.connect(cell,"onkeypress",function(event){
if(event.keyCode==dojo.keys.ENTER){
item.onClick();
}
});
return cell;
},setWeights:function(){
dojo.forEach(this.items,function(item){
item.weight=item.getWeight();
item.colorWeight=item.getColorWeight();
});
var _2073=this.minAttValue(this.items,"colorWeight");
var _2074=this.maxAttValue(this.items,"colorWeight");
var _2075=_2074-_2073;
dojo.forEach(this.items,function(item){
item.colorWeight=(item.colorWeight-_2073)/_2075;
});
},splitByCategory:function(){
var _2077={};
dojo.forEach(this.items,function(item){
var _2079=_2077[item.getCategory()];
if(_2079==undefined){
_2077[item.getCategory()]=[item];
}else{
_2079.push(item);
}
});
var _207a=[];
for(var i=0;i<this.categories.length;i++){
var _207c=_2077[i];
if(_207c!=undefined){
_207a.push(_207c);
}
}
return _207a;
},normalize:function(){
var _207d=this.maxAttValue(this.items,"weight");
var _207e=this.minWeight;
dojo.forEach(this.items,function(item){
if(_207d>0){
item.weight=item.weight/_207d;
}
if(item.weight<_207e){
item.weight=_207e;
}
});
var _2080=this.width*this.height;
var ratio=_2080/this.totalWeight(this.items);
dojo.forEach(this.items,function(item){
item.weight=item.weight*ratio;
});
},minAttValue:function(items,_2084){
var min=items[0][_2084];
for(var i=1;i<items.length;i++){
if(min>items[i][_2084]){
min=items[i][_2084];
}
}
return min;
},maxAttValue:function(items,_2088){
var max=items[0][_2088];
for(var i=1;i<items.length;i++){
if(max<items[i][_2088]){
max=items[i][_2088];
}
}
return max;
}});
}
if(!dojo._hasResource["quickr.widget.ItemPickerStream"]){
dojo._hasResource["quickr.widget.ItemPickerStream"]=true;
dojo.provide("quickr.widget.ItemPickerStream");
dojo.declare("ItemPickerStreamMapItem",quickr.widget.TreeMapItem,{constructor:function(score,file,_208d){
this.score=score;
this.file=file;
this.renderer=_208d;
},getCategory:function(_208e){
return 1;
},getColorWeight:function(){
return this.score;
},getWeight:function(){
return this.score;
},buildCellRendering:function(_208f){
var name=this.file.getName();
_208f.title=name;
var text=document.createElement("span");
text.className="contentLink";
text.appendChild(document.createTextNode(name));
_208f.appendChild(text);
var a=document.createElement("a");
a.style.display="none";
this.handler={};
this.renderer.generateLinkToFile(this.file,this.handler);
_208f.appendChild(a);
},onClick:function(e){
if(e){
dojo.stopEvent(e);
}
this.handler.onclick();
}});
dojo.declare("quickr.widget.ItemPickerStreamRenderer",[quickr.widget.StreamRenderer],{methods:{},actions:[],_strings:{},getDelegate:function(type,def,_2096){
var view=this.view||"summary";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_2096){
var _2099=name+_2096.substring(0,1).toUpperCase()+_2096.substring(1);
if(typeof this[_2099]=="function"){
return this[_2099];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_209c){
return typeof this.getDelegate(type,null,null,_209c)=="function";
},delegate:function(type,args,def,_20a0){
var f=this.getDelegate(type,def,_20a0);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_20a2){
return this.delegate("allowMultipleExpand",arguments,quickr.widget.ItemPickerStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.destroyWidgets();
this.actions=[];
},destroyWidgets:function(){
this.delegate("destroy",arguments);
dojo.forEach(this.widgets||[],function(_20a3){
_20a3.destroy();
});
this.widgets=[];
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.widget.ItemPickerStreamRenderer.superclass.getSorts);
},render:function(_20a4,el,data,item){
this.destroyWidgets();
data.itemById={};
this.baseUrl=_20a4.baseUrl;
this.delegate("render",arguments,quickr.widget.ItemPickerStreamRenderer.superclass.render);
},renderSorting:function(_20a8,el,data){
this.delegate("renderSorting",arguments,quickr.widget.ItemPickerStreamRenderer.superclass.renderSorting);
},renderItem:function(_20ab,el,data,item,_20af){
var _20b0;
var _20b1=quickr.share.util.getChildElementAttribute(item,"category","term");
if(_20b1=="page"){
item=new quickr.share.bean.Page(item);
_20b0="page";
}else{
item=new quickr.share.bean.File(item);
_20b0="file";
}
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_20af;
item._qualifier=_20b0;
this.delegate("renderItem",arguments,null,_20b0);
},renderDetails:function(_20b2,el,data){
var d=document;
if(data.xml.getElementsByTagName("entry").length>0){
while(el.firstChild){
el.removeChild(el.firstChild);
}
var sorts=[{id:"title",name:this._strings.CONTENT.COLUMN_NAME,lowToHigh:true},{name:this._strings.CONTENT.COLUMN_LAST_MODIFIED},{id:"mostpopular",name:this._strings.CONTENT.COLUMN_DOWNLOAD},{id:"highestrated",name:this._strings.CONTENT.COLUMN_RATING}];
var _20b7=this.sortReversed;
var _20b8=this.activeSort||sorts[1];
_20b8=dojo.filter(sorts,function(a){
return a.id==_20b8.id;
})[0];
if(!this.activeSort||!_20b8){
_20b8=sorts[1];
_20b7=false;
}
this.renderTypes(_20b2,el,data);
var table=d.createElement("TABLE");
table.className="lotusTable lotusClear wikiFixedTable qkrFixedWidth";
table.cellSpacing=table.cellPadding=0;
table.width="100%";
var thead=d.createElement("THEAD");
var tr=d.createElement("TR");
tr.className="lotusSort";
for(var i=0,sort;sort=sorts[i];i++){
var th=d.createElement("TH");
var a=d.createElement("A");
if(i==0){
th.width="40%";
}
if(sort==_20b8){
dojo.addClass(a,((sort.lowToHigh)?!_20b7:_20b7)?"lotusAscending":"lotusDescending");
}
this.generateSortLink(_20b2,sort,(_20b8.id!=sort.id||_20b7)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
th.appendChild(a);
tr.appendChild(th);
}
thead.appendChild(tr);
table.appendChild(thead);
var tbody=this.tbody=d.createElement("TBODY");
table.appendChild(tbody);
el.appendChild(table);
arguments[1]=tbody;
}
quickr.widget.ItemPickerStreamRenderer.superclass.render.apply(this,arguments);
},renderSortingDetails:function(_20c2,el,data){
if(data.xml.getElementsByTagName("entry").length==0){
quickr.widget.ItemPickerStreamRenderer.superclass.renderSorting.apply(this,arguments);
}
},renderItemDetailsPage:function(_20c5,el,data,doc,_20c9,_20ca,_20cb,_20cc,_20cd){
var d=document;
var row;
var tr=row=(_20cc)?_20cc:d.createElement("TR");
tr.className="entry";
if(_20c9%2!=0){
tr.className+=" alternate";
}
var td=d.createElement("TD");
var _20d2=d.createElement("DIV");
_20d2.style.display="none";
var span=d.createElement("SPAN");
span.className="entry-id";
span.innerHTML=doc.getId();
_20d2.appendChild(span);
var span=d.createElement("SPAN");
span.className="published";
span.innerHTML=doc.getPublished();
_20d2.appendChild(span);
var span=d.createElement("SPAN");
span.className="updated";
span.innerHTML=doc.getPublished();
_20d2.appendChild(span);
td.appendChild(_20d2);
var h4=d.createElement("H4");
var inp=null;
try{
var rhtml="<input type=\"radio\" name=\"radio_"+this.id+"\">";
inp=d.createElement(rhtml);
}
catch(e){
}
if(!inp||inp.nodeName!="INPUT"){
inp=d.createElement("input");
inp.setAttribute("type","radio");
inp.setAttribute("name","radio_pg_"+this.id);
inp.className="lotusCheckbox";
inp.checked=false;
}
inp.id="pg_"+doc.getId();
h4.appendChild(inp);
var adoc=d.createElement("label");
var img=d.createElement("img");
img.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),16);
img.setAttribute("alt",(doc._qualifier=="page")?this._strings.ATTACHMENTS.PAGE:this._strings.UPLOAD.FILE);
adoc.appendChild(img);
var name=doc.getTitle();
adoc.appendChild(d.createTextNode(name));
adoc.className="entry-title";
adoc.setAttribute("for",inp.id);
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=d.createElement("TD");
td.className="updated";
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(null,d));
tr.appendChild(td);
var td=d.createElement("TD");
var span=d.createElement("SPAN");
span.className="lotusText";
span.appendChild(d.createTextNode(" "));
span.appendChild(d.createTextNode(doc.getTimesDownloaded()));
td.appendChild(span);
tr.appendChild(td);
var td=d.createElement("TD");
var span=d.createElement("SPAN");
span.className="lotusText";
span.appendChild(d.createTextNode(doc.getRatingCount()));
td.appendChild(span);
tr.appendChild(td);
if(!_20cc){
el.appendChild(tr);
}
doc.element=tr;
var _20da=tr.childNodes.length;
var tr=(_20cd)?_20cd:d.createElement("TR");
tr.className="entry";
if(_20c9%2!=0){
tr.className+=" alternate";
}
tr.style.display="none";
var td=d.createElement("TD");
td.colSpan=_20da;
tr.appendChild(td);
if(!_20cd){
el.appendChild(tr);
}
doc.elementExtra=tr;
if(this.setLink){
dojo.connect(row,"onclick",dojo.hitch(this,this.setLink,doc.getAuthor().id,doc.getId(),doc.getTitle(),"page"));
}
dojo.connect(row,"onclick",dojo.hitch(row,this.selectrow,this));
dojo.connect(row,"onmouseover",dojo.hitch(row,this.mouseoverrow,this));
dojo.connect(row,"onmouseout",dojo.hitch(row,this.mouseoutrow,this));
},renderItemDetails:function(_20db,el,data,doc,_20df,_20e0,_20e1,_20e2,_20e3){
var d=document;
var row;
var tr=row=(_20e2)?_20e2:d.createElement("TR");
tr.className="entry";
if(_20df%2!=0){
tr.className+=" alternate";
}
var td=d.createElement("TD");
var _20e8=d.createElement("DIV");
_20e8.style.display="none";
var span=d.createElement("SPAN");
span.className="entry-id";
span.innerHTML=doc.getId();
_20e8.appendChild(span);
var span=d.createElement("SPAN");
span.className="published";
span.innerHTML=doc.getPublished();
_20e8.appendChild(span);
var span=d.createElement("SPAN");
span.className="updated";
span.innerHTML=doc.getPublished();
_20e8.appendChild(span);
td.appendChild(_20e8);
var h4=d.createElement("H4");
var inp=null;
try{
var rhtml="<input type=\"radio\" name=\"radio_pg_"+this.id+"\">";
inp=d.createElement(rhtml);
}
catch(e){
}
if(!inp||inp.nodeName!="INPUT"){
inp=d.createElement("input");
inp.setAttribute("type","radio");
inp.setAttribute("name","radio_pg_"+this.id);
inp.className="lotusCheckbox";
inp.checked=false;
}
inp.id="pg_"+doc.getId();
h4.appendChild(inp);
var adoc=d.createElement("label");
var img=d.createElement("img");
img.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),16);
img.setAttribute("alt",(doc._qualifier=="page")?this._strings.ATTACHMENTS.PAGE:this._strings.UPLOAD.FILE);
adoc.appendChild(img);
var name=doc.getTitle();
adoc.appendChild(d.createTextNode(name));
adoc.className="entry-title";
adoc.setAttribute("for",inp.id);
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=d.createElement("TD");
td.className="updated";
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(null,d));
tr.appendChild(td);
var td=d.createElement("TD");
var span=d.createElement("SPAN");
span.className="lotusText";
span.appendChild(d.createTextNode(doc.getTimesDownloaded()));
td.appendChild(span);
tr.appendChild(td);
var td=d.createElement("TD");
var span=d.createElement("SPAN");
span.className="lotusText";
span.appendChild(d.createTextNode(doc.getRatingCount()));
td.appendChild(span);
tr.appendChild(td);
if(!_20e2){
el.appendChild(tr);
}
doc.element=tr;
var _20f0=tr.childNodes.length;
var tr=(_20e3)?_20e3:d.createElement("TR");
tr.className="entry";
if(_20df%2!=0){
tr.className+=" alternate";
}
tr.style.display="none";
var td=d.createElement("TD");
td.colSpan=_20f0;
tr.appendChild(td);
if(!_20e3){
el.appendChild(tr);
}
doc.elementExtra=tr;
if(this.setLink){
dojo.connect(row,"onclick",dojo.hitch(this,this.setLink,doc.getAuthor().id,doc.getId(),doc.getTitle(),"file"));
}else{
if(this.setMediaLink){
var uri=quickr.share.util.parseUri(doc.getUrlDownload());
dojo.connect(row,"onclick",dojo.hitch(this,this.setMediaLink,doc.getName(),uri.path));
}
}
dojo.connect(row,"onclick",dojo.hitch(row,this.selectrow,this));
dojo.connect(row,"onmouseover",dojo.hitch(row,this.mouseoverrow,this));
dojo.connect(row,"onmouseout",dojo.hitch(row,this.mouseoutrow,this));
},selectrow:function(_20f2){
if(_20f2.selectedTr){
dojo.removeClass(_20f2.selectedTr,"qkrSelected");
var radio=dojo.query("input[type='radio']",_20f2.selectedTr)[0];
if(radio){
radio.setAttribute("checked",false);
}
}
dojo.removeClass(this,"qkrHover");
this.className+=" qkrSelected";
_20f2.selectedTr=this;
var radio=dojo.query("input[type='radio']",this)[0];
if(radio){
radio.setAttribute("checked",true);
}
if(_20f2.validateLink){
_20f2.validateLink();
}
},highlightTableBody:function(){
dojo.addClass(this.tbody,"lotusFormErrorField");
},unHighlightTableBody:function(){
if(this.tbody){
dojo.removeClass(this.tbody,"lotusFormErrorField");
}
},mouseoverrow:function(_20f4){
this.className+=" qkrHover";
_20f4.overTr=this;
},mouseoutrow:function(_20f5){
if(_20f5.overTr){
dojo.removeClass(_20f5.overTr,"qkrHover");
}
},generateLinkToFile:function(doc,a){
a.href=doc.getUrlDownload();
},generateLinkToPage:function(doc,a){
a.href=doc.getUrlDownload();
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
}});
}
if(!dojo._hasResource["quickr.widget.AttachmentPickerStream"]){
dojo._hasResource["quickr.widget.AttachmentPickerStream"]=true;
dojo.provide("quickr.widget.AttachmentPickerStream");
dojo.declare("AttachmentPickerStreamMapItem",quickr.widget.TreeMapItem,{constructor:function(score,file,_20fe){
this.score=score;
this.file=file;
this.renderer=_20fe;
},getCategory:function(_20ff){
return 1;
},getColorWeight:function(){
return this.score;
},getWeight:function(){
return this.score;
},buildCellRendering:function(_2100){
var name=this.file.getName();
_2100.title=name;
var text=document.createElement("span");
text.className="contentLink";
text.appendChild(document.createTextNode(name));
_2100.appendChild(text);
var a=document.createElement("a");
a.style.display="none";
this.handler={};
this.renderer.generateLinkToAttachment(this.file,this.handler);
_2100.appendChild(a);
},onClick:function(e){
if(e){
dojo.stopEvent(e);
}
this.handler.onclick();
}});
dojo.declare("quickr.widget.AttachmentPickerStreamRenderer",[quickr.widget.StreamRenderer],{methods:{},actions:[],_strings:{},getDelegate:function(type,def,_2107){
var view=this.view||"summary";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_2107){
var _210a=name+_2107.substring(0,1).toUpperCase()+_2107.substring(1);
if(typeof this[_210a]=="function"){
return this[_210a];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_210d){
return typeof this.getDelegate(type,null,null,_210d)=="function";
},delegate:function(type,args,def,_2111){
var f=this.getDelegate(type,def,_2111);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_2113){
return this.delegate("allowMultipleExpand",arguments,quickr.widget.AttachmentPickerStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.destroyWidgets();
this.actions=[];
},destroyWidgets:function(){
this.delegate("destroy",arguments);
dojo.forEach(this.widgets||[],function(_2114){
_2114.destroy();
});
this.widgets=[];
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.widget.AttachmentPickerStreamRenderer.superclass.getSorts);
},render:function(_2115,el,data,item){
this.destroyWidgets();
data.itemById={};
this.baseUrl=_2115.baseUrl;
this.delegate("render",arguments,quickr.widget.AttachmentPickerStreamRenderer.superclass.render);
},renderSorting:function(_2119,el,data){
this.delegate("renderSorting",arguments,quickr.widget.AttachmentPickerStreamRenderer.superclass.renderSorting);
},renderItem:function(_211c,el,data,item,_2120){
var _2121="attachment";
item=new quickr.share.bean.Attachment(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_2120;
item._qualifier=_2121;
this.delegate("renderItem",arguments,null,_2121);
},renderDetails:function(_2122,el,data){
var d=document;
if(data.xml.getElementsByTagName("entry").length>0){
while(el.firstChild){
el.removeChild(el.firstChild);
}
var sorts=[{id:"title",name:this._strings.CONTENT.COLUMN_NAME,lowToHigh:true},{name:this._strings.CONTENT.COLUMN_LAST_MODIFIED}];
var _2127=this.sortReversed;
var _2128=this.activeSort||sorts[1];
_2128=dojo.filter(sorts,function(a){
return a.id==_2128.id;
})[0];
if(!this.activeSort||!_2128){
_2128=sorts[1];
_2127=false;
}
var table=d.createElement("TABLE");
table.className="lotusTable";
table.cellSpacing=table.cellPadding=0;
var thead=d.createElement("THEAD");
var tr=d.createElement("TR");
tr.className="lotusSort";
for(var i=0,sort;sort=sorts[i];i++){
var th=d.createElement("TH");
var a=d.createElement("A");
if(sort==_2128){
dojo.addClass(a,((sort.lowToHigh)?!_2127:_2127)?"lotusAscending":"lotusDescending");
}
this.generateSortLink(_2122,sort,(_2128.id!=sort.id||_2127)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
th.appendChild(a);
tr.appendChild(th);
}
var th=d.createElement("TH");
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
thead.appendChild(tr);
table.appendChild(thead);
var tbody=this.tbody=d.createElement("TBODY");
table.appendChild(tbody);
el.appendChild(table);
arguments[1]=tbody;
}
quickr.widget.AttachmentPickerStreamRenderer.superclass.render.apply(this,arguments);
},renderSortingDetails:function(_2132,el,data){
if(data.xml.getElementsByTagName("entry").length==0){
quickr.widget.AttachmentPickerStreamRenderer.superclass.renderSorting.apply(this,arguments);
}
},renderItemDetails:function(_2135,el,data,doc,_2139,_213a,_213b,_213c,_213d){
var d=document;
var row;
var tr=row=(_213c)?_213c:d.createElement("TR");
tr.className="entry";
if(_2139%2!=0){
tr.className+=" alternate";
}
var td=d.createElement("TD");
var _2142=d.createElement("DIV");
_2142.style.display="none";
var span=d.createElement("SPAN");
span.className="entry-id";
span.innerHTML=doc.getId();
_2142.appendChild(span);
var span=d.createElement("SPAN");
span.className="published";
span.innerHTML=doc.getPublished();
_2142.appendChild(span);
var span=d.createElement("SPAN");
span.className="updated";
span.innerHTML=doc.getPublished();
_2142.appendChild(span);
td.appendChild(_2142);
var h4=d.createElement("H4");
var inp=null;
try{
var rhtml="<input type=\"radio\" name=\"radio_att_"+this.id+"\">";
inp=d.createElement(rhtml);
}
catch(e){
}
if(!inp||inp.nodeName!="INPUT"){
inp=d.createElement("input");
inp.setAttribute("type","radio");
inp.setAttribute("name","radio_att_"+this.id);
inp.className="lotusCheckbox";
inp.checked=false;
}
inp.id="att_"+doc.getId();
h4.appendChild(inp);
var adoc=d.createElement("label");
var img=d.createElement("img");
img.src=this.getFileTypeImage(quickr.share.util.getExtension(doc.getName()),16);
img.setAttribute("alt",this._strings.ATTACHMENTS.ATTACHMENT);
adoc.appendChild(img);
var name=doc.getName();
if(name.length>50){
name=name.substring(0,50)+"...";
adoc.alt=doc.getName();
adoc.title=doc.getName();
}
adoc.appendChild(d.createTextNode(name));
adoc.className="entry-title";
adoc.setAttribute("for",inp.id);
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=d.createElement("TD");
td.className="updated";
td.appendChild(new quickr.share.util.DateFormat(doc.getUpdated()).formatByAgeToHtml(null,d));
tr.appendChild(td);
if(!_213c){
el.appendChild(tr);
}
doc.element=tr;
var _214a=tr.childNodes.length;
var tr=(_213d)?_213d:d.createElement("TR");
tr.className="entry";
if(_2139%2!=0){
tr.className+=" alternate";
}
tr.style.display="none";
var td=d.createElement("TD");
td.colSpan=_214a;
tr.appendChild(td);
if(!_213d){
el.appendChild(tr);
}
doc.elementExtra=tr;
var uri=quickr.share.util.parseUri(doc.getUrlDownload());
dojo.connect(row,"onclick",dojo.hitch(this,this.setMediaLink,doc.getName(),uri.path));
dojo.connect(row,"onclick",dojo.hitch(row,this.selectrow,this));
dojo.connect(row,"onmouseover",dojo.hitch(row,this.mouseoverrow,this));
dojo.connect(row,"onmouseout",dojo.hitch(row,this.mouseoutrow,this));
},selectrow:function(_214c){
if(_214c.selectedTr){
dojo.removeClass(_214c.selectedTr,"qkrSelected");
var radio=dojo.query("input[type='radio']",_214c.selectedTr)[0];
if(radio){
radio.setAttribute("checked",false);
}
}
dojo.removeClass(this,"qkrHover");
this.className+=" qkrSelected";
_214c.selectedTr=this;
var radio=dojo.query("input[type='radio']",this)[0];
if(radio){
radio.setAttribute("checked",true);
}
},highlightTableBody:function(){
dojo.addClass(this.tbody,"lotusFormErrorField");
},unHighlightTableBody:function(){
if(this.tbody){
dojo.removeClass(this.tbody,"lotusFormErrorField");
}
},mouseoverrow:function(_214e){
this.className+=" qkrHover";
_214e.overTr=this;
},mouseoutrow:function(_214f){
if(_214f.overTr){
dojo.removeClass(_214f.overTr,"qkrHover");
}
},generateLinkToAttachment:function(doc,a){
a.href=doc.getUrlDownload();
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
}});
}
if(!dojo._hasResource["dijit.ProgressBar"]){
dojo._hasResource["dijit.ProgressBar"]=true;
dojo.provide("dijit.ProgressBar");
dojo.declare("dijit.ProgressBar",[dijit._Widget,dijit._Templated],{progress:"0",maximum:100,places:0,indeterminate:false,templateString:"<div class=\"dijitProgressBar dijitProgressBarEmpty\"\n\t><div waiRole=\"progressbar\" tabindex=\"0\" dojoAttachPoint=\"internalProgress\" class=\"dijitProgressBarFull\"\n\t\t><div class=\"dijitProgressBarTile\"></div\n\t\t><span style=\"visibility:hidden\">&nbsp;</span\n\t></div\n\t><div dojoAttachPoint=\"label\" class=\"dijitProgressBarLabel\" id=\"${id}_label\">&nbsp;</div\n\t><img dojoAttachPoint=\"inteterminateHighContrastImage\" class=\"dijitProgressBarIndeterminateHighContrastImage\"\n\t></img\n></div>\n",_indeterminateHighContrastImagePath:dojo.moduleUrl("dijit","themes/a11y/indeterminate_progress.gif"),postCreate:function(){
this.inherited(arguments);
this.inteterminateHighContrastImage.setAttribute("src",this._indeterminateHighContrastImagePath);
this.update();
},update:function(_2154){
dojo.mixin(this,_2154||{});
var tip=this.internalProgress;
var _2156=1,_2157;
if(this.indeterminate){
_2157="addClass";
dijit.removeWaiState(tip,"valuenow");
dijit.removeWaiState(tip,"valuemin");
dijit.removeWaiState(tip,"valuemax");
}else{
_2157="removeClass";
if(String(this.progress).indexOf("%")!=-1){
_2156=Math.min(parseFloat(this.progress)/100,1);
this.progress=_2156*this.maximum;
}else{
this.progress=Math.min(this.progress,this.maximum);
_2156=this.progress/this.maximum;
}
var text=this.report(_2156);
this.label.firstChild.nodeValue=text;
dijit.setWaiState(tip,"describedby",this.label.id);
dijit.setWaiState(tip,"valuenow",this.progress);
dijit.setWaiState(tip,"valuemin",0);
dijit.setWaiState(tip,"valuemax",this.maximum);
}
dojo[_2157](this.domNode,"dijitProgressBarIndeterminate");
tip.style.width=(_2156*100)+"%";
this.onChange();
},report:function(_2159){
return dojo.number.format(_2159,{type:"percent",places:this.places,locale:this.lang});
},onChange:function(){
}});
}
if(!dojo._hasResource["quickr.widget.ProgressBar"]){
dojo._hasResource["quickr.widget.ProgressBar"]=true;
dojo.provide("quickr.widget.ProgressBar");
dojo.declare("quickr.widget.ProgressBar",dijit.ProgressBar,{postCreate:function(){
this.inherited(arguments);
this.inteterminateHighContrastImage.setAttribute("alt","");
}});
}
if(!dojo._hasResource["quickr.share.action.InsertLink"]){
dojo._hasResource["quickr.share.action.InsertLink"]=true;
dojo.provide("quickr.share.action.InsertLink");
dojo.declare("quickr.share.action.InsertLink",[quickr.share.action.DialogAction],{wInput:"578px",wDialog:"750px",constructor:function(_215a,_215b,_215c,_215d,_215e,_215f,app,_2161){
this.isImage=_215f;
if(this.isImage){
this.id="image_";
}else{
this.id="link_";
}
this.app=app;
this.nls=app.nls;
this.userId=_215a;
this.documentId=_215b;
this.isDraft=_215c;
this.documentFeedUrl=_215d;
this.onattachmentcountupdate=_215e;
this.getCurrentDraftId=_2161;
this.peopleStore=app.getUserTypeAheadStore();
if(this.isImage){
this.params={category:["document"]};
}else{
this.params={category:["page","document"]};
}
this.attachmentParams={category:"attachment"};
if(this.isImage){
this.types=null;
}else{
this.types=[{id:"mixed",name:app.nls.INSERTLINK.TYPE_ALL,category:["page","document"]},{id:"documents",name:app.nls.INSERTLINK.TYPE_FILES,category:"document"},{id:"pages",name:app.nls.INSERTLINK.TYPE_PAGES,category:"page"}];
}
this.attachmentSorts=[{id:"title",name:app.nls.SORTS.TITLE,sK:"title",lowToHigh:true},{name:app.nls.SORTS.MOSTRECENT,sK:"updated",mapReduce:function(file){
return file.getUpdated().getTime();
}}];
this.sorts=[{name:app.nls.SORTS.MOSTRECENT,sK:"updated",mapReduce:function(file){
return file.getUpdated().getTime();
}},{id:"mostpopular",name:app.nls.SORTS.MOSTDOWNLOADED,sK:"downloaded",mapReduce:function(file){
return file.getTimesDownloaded();
}},{id:"highestrated",name:app.nls.SORTS.HIGHESTRECOMMENDED,sK:"ratingCount",mapReduce:function(file){
return file.getRatingCount();
}},{id:"title",name:app.nls.SORTS.TITLE,sK:"title",lowToHigh:true}];
this.activeList=null;
this.activeUserId=_215a;
this.activeSort=this.sorts[0];
this.activeType=this.types?this.types[0]:null;
this.activeAttachmentSort=this.attachmentSorts[0];
this.sortReversed=false;
this.attachmentSortReversed=false;
this.activeView={id:"details",name:"Details",tooltip:"Tabular information"};
this.params.sort=this.activeSort.id;
this.attachmentParams.sort=this.activeAttachmentSort.id;
this.itemsPerPage=10;
var _2166=dojo.getObject("quickr.share.config.services.uploadMonitor");
if(_2166){
this.monitor=app.getMonitor(_2166);
dojo.connect(this.monitor,"onFailure",this,this.onTimeout);
dojo.connect(this.monitor,"onInterval",this,this.onUploadProgress);
}
this._requests=[];
},deselectLink:function(){
if(this.activeList.renderer.selectedTr){
dojo.removeClass(this.activeList.renderer.selectedTr,"qkrSelected");
}
if(this.attachmentList&&this.attachmentList.renderer.selectedTr){
dojo.removeClass(this.attachmentList.renderer.selectedTr,"qkrSelected");
}
this.link=null;
this.itemName=null;
},createDialog:function(item,opt,_2169){
var d=document;
var _216b=this.userId;
var _216c=this.app.authenticatedUser;
var _216d=d.createElement("div");
_216d.className="lotusDialogBorder";
_216d.style.width=this.wDialog;
var el=_2169.formNode=this.formNode=d.createElement("form");
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
dojo.connect(el,"onsubmit",dojo.hitch(this,this.save,false));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
h1.className="qkrMoveable";
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.IMAGE_TITLE:this.nls.INSERTLINK.TITLE));
el.appendChild(h1);
this.moveable=(dojo.isIE==6)?new dojo.dnd.TimedMoveable(this.dialog.domNode,{handle:h1}):new dojo.dnd.Moveable(this.dialog.domNode,{handle:h1,timeout:0});
var div=d.createElement("div");
div.className="lotusTabContainer";
div.style.height="3em";
div.style.marginBottom="0px";
var ul=d.createElement("ul");
ul.className="lotusTabs";
if(dojo.isFF){
ul.style.bottom="-4px";
}
var li=d.createElement("li");
var span=d.createElement("span");
var _2176=d.createElement("a");
_2176.href="javascript:;";
_2176.onclick=function(){
return false;
};
_2176.appendChild(d.createTextNode(this.nls.INSERTLINK.OPTION_EXTERNAL_URL));
span.appendChild(_2176);
li.appendChild(span);
this.externalUrlTab=li;
ul.appendChild(li);
var li=d.createElement("li");
var span=d.createElement("span");
var _2177=d.createElement("a");
_2177.href="javascript:;";
_2177.onclick=function(){
return false;
};
_2177.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.OPTION_IMAGE_FILE:this.nls.INSERTLINK.OPTION_PAGE_OR_FILE));
span.appendChild(_2177);
li.appendChild(span);
this.pageOrFileTab=li;
ul.appendChild(li);
if(this.isDraft||this.documentId){
var li=d.createElement("li");
var span=d.createElement("span");
var _2178=d.createElement("a");
_2178.href="#";
_2178.onclick=function(){
return false;
};
_2178.appendChild(d.createTextNode(this.nls.INSERTLINK.OPTION_ATTACHMENT));
span.appendChild(_2178);
li.appendChild(span);
this.attachmentTab=li;
ul.appendChild(li);
}
div.appendChild(ul);
el.appendChild(div);
dojo.connect(_2177,"onclick",dojo.hitch(this,this.selectPageOrFileTab));
if(this.isDraft||this.documentId){
dojo.connect(_2178,"onclick",dojo.hitch(this,this.selectAttachmentTab));
}
dojo.connect(_2176,"onclick",dojo.hitch(this,this.selectExternalUrlTab));
var _2179=d.createElement("div");
_2179.className="lotusDialogContent";
var div=this.pageOrFileLocationDiv=d.createElement("div");
var table=d.createElement("table");
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.PLACE_WHERE_IMAGE:this.nls.INSERTLINK.PLACE_WHERE));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.type="radio";
input.value="internal";
input.name="linkType";
this.linkStateInternal=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
td.appendChild(d.createTextNode(this.nls.INSERTLINK.SAME_AS_PAGE));
td.appendChild(d.createElement("br"));
var input=d.createElement("input");
input.type="radio";
input.value="peerSearch";
input.name="linkType";
this.linkStatePeerInternal=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
td.appendChild(d.createTextNode(this.nls.INSERTLINK.ANOTHER_PERSONS_PLACE));
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
div.appendChild(table);
div.appendChild(d.createElement("br"));
_2179.appendChild(div);
this.pageOrFileLocationDiv.style.display="none";
var div=d.createElement("div");
div.id="item-list";
_2179.appendChild(div);
var _2180=new quickr.share.bean.StreamPermissions({owner:this.isPersonalHome,authenticatedId:(_216c?_216c.id:null)});
var _2181={view:this.activeView.id,actions:[],pageActions:[],permissions:_2180,highlightNew:"#FFFF75",types:this.types,activeType:this.activeType,activeSort:this.activeSort,sortReversed:this.sortReversed,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,this.app,this.app.routes),generateLinkToFile:dojo.hitch(null,quickr.share.scenes.generateFileLink,this.app,this.app.routes),generateLinkToPage:dojo.hitch(null,quickr.share.scenes.generatePageLink,this.app,this.app.routes),generateLinkToTypes:dojo.hitch(this,this.generateTypeLink,this.app,this.app.routes,this.params),generateSortLink:dojo.hitch(this,this.generateSortLink,this.app,this.app.routes,this.params),getFileTypeImage:dojo.hitch(this.app.routes,this.app.routes.getFileTypeImageUrl),validateLink:dojo.hitch(this,this.validateLink),_strings:this.nls};
if(this.isImage){
_2181.setMediaLink=dojo.hitch(this,this.setMediaLink);
}else{
_2181.setLink=dojo.hitch(this,this.setLink);
}
var _2182=new quickr.widget.ItemPickerStreamRenderer(_2181);
var _2183=this.itemList=new quickr.widget.Stream({id:this.id+"itemList",baseClass:"file-stream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",_strings:this.nls.CONTENT,renderer:_2182,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_FILES:this.nls.INSERTLINK.NO_ITEMS,typeLabel:this.nls.INSERTLINK.TYPE_LABEL,page:dojo.hitch(this,this.page),next:dojo.hitch(this,this.nextPage),previous:dojo.hitch(this,this.previousPage)},div);
this.itemListDiv=this.itemList.domNode;
this.itemListDiv.appendChild(d.createElement("br"));
this.itemListDiv.style.display="none";
this.activeList=this.itemList;
this.activeListDiv=this.itemListDiv;
if(this.isDraft||this.documentId){
var div=this.attachmentTypeDiv=d.createElement("div");
var table=d.createElement("table");
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.ATTACHMENT_TYPE));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.type="radio";
input.value="attachment";
input.name="linkType";
this.linkStateExistingAttachment=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
td.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.LINK_TO_EXISTING_IMAGE:this.nls.INSERTLINK.LINK_TO_EXISTING));
td.appendChild(d.createElement("br"));
var input=d.createElement("input");
input.type="radio";
input.value="uploadattachment";
input.name="linkType";
this.linkStateUploadAttachment=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
td.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.LINK_TO_UPLOAD_IMAGE:this.nls.INSERTLINK.LINK_TO_UPLOAD));
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
div.appendChild(table);
div.appendChild(d.createElement("br"));
_2179.appendChild(div);
var div=d.createElement("div");
div.id="attachment-list";
_2179.appendChild(div);
var _2184={view:this.activeView.id,actions:[],permissions:_2180,highlightNew:"#FFFF75",setMediaLink:dojo.hitch(this,this.setMediaLink),_strings:this.nls.ATTACHMENTS,_appstrings:this.nls,activeSort:this.activeAttachmentSort,sortReversed:this.sortAttachmentReversed,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,this.app,this.app.routes),generateSortLink:dojo.hitch(this,this.generateAttachmentSortLink,this.app,this.app.routes,_216b,this.attachmentParams),getFileTypeImage:dojo.hitch(this.app.routes,this.app.routes.getFileTypeImageUrl),validateLink:dojo.hitch(this,this.validateAttachmentLink),_strings:this.nls};
var _2185=new quickr.widget.AttachmentPickerStreamRenderer(_2184);
var _2186=this.attachmentList=new quickr.widget.Stream({id:this.id+"attachmentList",baseClass:"file-stream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",renderer:_2185,_strings:this.nls.CONTENT,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_ATTACHMENTS:this.nls.INSERTLINK.NO_ATTACHMENTS,page:dojo.hitch(this,this.attachmentPage),next:dojo.hitch(this,this.nextAttachmentPage),previous:dojo.hitch(this,this.previousAttachmentPage)},div);
this.attachmentListDiv=this.attachmentList.domNode;
this.attachmentListDiv.appendChild(d.createElement("br"));
this.attachmentListDiv.style.display="none";
var table=this.uploadInputDiv=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=this.uploadTableBody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="15%";
td.className="lotusFormLabel";
var label=d.createElement("label");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.IMAGE_FILE_LABEL:this.nls.INSERTLINK.FILE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=_2169.contentsNode=d.createElement("input");
input.className="lotusText qkrFile";
input.type="file";
input.name="file";
if(this.isImage){
input.accept=quickr.share.config.imageInputAccepts;
}
if(dojo.isFF){
input.size="95";
}else{
if(dojo.isIE){
input.style.width=this.wInput;
}
}
dojo.connect(input,"onchange",dojo.hitch(this,this.onFileChange));
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
var limit=dojo.getObject("quickr.share.config.services.maxAttachmentSize");
if(limit>0){
var a=quickr.share.scenes.createHelpLink(this.app,td);
var _2188=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.LIMIT_HELP,{limit:quickr.share.util.formatSize(limit)});
quickr.share.scenes.applyGenericPopup(this.app,td,a,_2188);
}
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
var label=d.createElement("label");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.nls.INSERTLINK.NAME_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=_2169.nameNode=d.createElement("input");
input.className="lotusText";
input.name="label";
if(dojo.isIE){
input.style.width=this.wInput;
}
dojo.connect(input,"onfocus",dojo.hitch(this,this.onFilenameFocus));
dojo.connect(input,"onchange",dojo.hitch(this,this.onFilenameChange));
dojo.connect(input,"onchange",this,"validateFilename");
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
quickr.share.scenes.createHelpLink(this.app,td,"upload.filename");
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.DESCRIPTION_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var _2189=_2169.descriptionNode=d.createElement("textarea");
_2189.className="lotusText";
_2189.name="description";
_2189.setAttribute("maxlength",quickr.share.validation.DESCRIPTION_LENGTH);
if(dojo.isIE){
_2189.style.width=this.wInput;
}
dojo.connect(_2189,"onchange",this,"validateDescription");
td.appendChild(_2189);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2179.appendChild(table);
this.uploadInputDiv.style.display="none";
}
var table=this.urlTable=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="15%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.URL_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=this.url=d.createElement("input");
input.className="lotusText";
input.name="url";
if(dojo.isIE){
input.style.width=this.wInput;
}
_2169.urlNode=input;
dojo.connect(input,"onchange",this,"validateUrl");
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
quickr.share.scenes.createHelpLink(this.app,td,"linking.externalurl");
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2179.appendChild(table);
this.urlTable.style.display="none";
var div=d.createElement("div");
var form=d.createElement("form");
form.onsubmit=function(e){
dojo.stopEvent(e);
};
dojo.connect(form,"onsubmit",null,dojo.hitch(this,this.performUserSearch,form));
var input=d.createElement("input");
input.type="hidden";
input.name="lang";
input.value=this.app.language;
form.appendChild(input);
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="20%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.SEARCH_FOR_USER));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.type="text";
td.appendChild(input);
tr.appendChild(td);
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(this.peopleStore,{_strings:this.nls.USERSEARCH,id:this.id+"_selectUser",name:"usersearch",size:"30","class":"lotusText",multipleValues:false});
var combo=this.peopleCombo=new lconn.core.PeopleTypeAhead(args,input);
combo.textbox.style.width="99%";
dojo.connect(combo,"onSelect",this,"loadPeerMedia");
var td=d.createElement("td");
td.width="100px";
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",this.app.nls.SEARCH.SEARCH);
var input=d.createElement("input");
input.className="lotusSearchButton";
input.type="image";
input.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
input.name="submit";
input.setAttribute("alt",this.app.nls.SEARCH.SEARCH_ALT);
span.appendChild(input);
var aspan=d.createElement("a");
aspan.className="lotusAltText";
aspan.appendChild(d.createTextNode(this.app.nls.SEARCH.SEARCH_ALT));
aspan.href="javascript:;";
dojo.connect(aspan,"onclick",function(){
try{
input.click();
}
catch(e){
}
});
span.appendChild(aspan);
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
form.appendChild(table);
div.appendChild(form);
_2179.appendChild(div);
this.userSearchDiv=div;
this.userSearchDiv.style.display="none";
var _218f=d.createElement("div");
_218f.style.display="none";
var div=d.createElement("div");
var _2190=d.createElement("div");
_2190.className="lotusPaging";
var _2191=d.createElement("div");
_2191.className="lotusLeft";
_2191.style.display="none";
this.pageCounts=_2191;
_2190.appendChild(_2191);
var ul=d.createElement("ul");
ul.className="lotusRight lotusInlinelist";
ul.style.display="none";
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.previousUserPage));
a.appendChild(d.createTextNode(this.nls.PAGING.PREVIOUS));
this.previousLink=a;
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.nextUserPage));
a.appendChild(d.createTextNode(this.nls.PAGING.NEXT));
this.nextLink=a;
li.appendChild(a);
ul.appendChild(li);
this.pageLinks=ul;
_2190.appendChild(ul);
div.appendChild(_2190);
_218f.appendChild(div);
this.search=_218f;
var table=d.createElement("table");
table.id=this.id+"searchResultsTable";
table.className="lotusTable";
table.style.width="100%";
table.cellPadding=table.cellSpacing=0;
var tbody=d.createElement("tbody");
tbody.style.display="none";
var tr=d.createElement("tr");
var td=d.createElement("td");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
td.appendChild(img);
var span=d.createElement("span");
span.appendChild(d.createTextNode(this.nls.USERSEARCH.LOADING));
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
this.searchResultsTable=tbody;
table.appendChild(tbody);
_218f.appendChild(table);
var div=d.createElement("div");
var _2190=d.createElement("div");
_2190.className="lotusPaging";
div.appendChild(_2190);
_218f.appendChild(div);
_2179.appendChild(_218f);
var _2192=d.createElement("div");
_2179.appendChild(_2192);
var _2193=this.peerMediaList=new quickr.widget.Stream({id:this.id+"peerMediaList",baseClass:"file-stream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",renderer:_2182,_strings:this.nls.CONTENT,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_FILES:this.nls.INSERTLINK.NO_ITEMS,typeLabel:this.nls.INSERTLINK.TYPE_LABEL,page:dojo.hitch(this,this.page),next:dojo.hitch(this,this.nextPage),previous:dojo.hitch(this,this.previousPage)},_2192);
this.peerMediaListDiv=this.peerMediaList.domNode;
this.peerMediaListDiv.appendChild(d.createElement("br"));
this.peerMediaListDiv.style.display="none";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=this.titleDiv=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="15%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.IMAGE_TITLE_LABEL:this.nls.INSERTLINK.TITLE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.className="lotusText";
input.name="linktext";
if(dojo.isIE){
input.style.width=this.wInput;
}
_2169.titleNode=input;
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
if(this.isImage){
quickr.share.scenes.createHelpLink(this.app,td,"linking.alternatetext");
}else{
quickr.share.scenes.createHelpLink(this.app,td,"linking.linktext");
}
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2179.appendChild(table);
el.appendChild(_2179);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var divp=_2169.progressNode=d.createElement("div");
divp.style.display="none";
divp.className="lotusRight qkrStatus";
var divw=d.createElement("div");
divp.appendChild(divw);
var _2196=this.progress=new quickr.widget.ProgressBar({},divw);
div.appendChild(divp);
var input=_2169.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.INSERTLINK.SUBMIT_BUTTON_LABEL;
this.saveButton=input;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.INSERTLINK.CANCEL_BUTTON_LABEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_216d.appendChild(el);
_2169.setContent(_216d);
this.updateDialog(item,opt,_2169);
},isPageOrFile:function(){
return (this.currentTab==this.pageOrFileTab);
},isAttachment:function(){
return (this.currentTab==this.attachmentTab);
},isExternalUrl:function(){
return (this.currentTab==this.externalUrlTab);
},selectPageOrFileTab:function(_2197){
if(!this.isPageOrFile()||_2197){
if(this.currentTab){
dojo.removeClass(this.currentTab,"lotusSelected");
}
dojo.addClass(this.pageOrFileTab,"lotusSelected");
this.currentTab=this.pageOrFileTab;
this.updateLinkType("internal");
}
},selectAttachmentTab:function(){
if(!this.isAttachment()){
if(this.currentTab){
}
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.attachmentTab,"lotusSelected");
this.currentTab=this.attachmentTab;
if(this.documentId){
this.updateLinkType("attachment");
}else{
this.updateLinkType("uploadattachment");
}
}
},selectExternalUrlTab:function(){
if(!this.isExternalUrl()){
if(this.currentTab){
dojo.removeClass(this.currentTab,"lotusSelected");
}
dojo.addClass(this.externalUrlTab,"lotusSelected");
this.currentTab=this.externalUrlTab;
this.updateLinkType("external");
}
},selectuserrow:function(_2198,id){
dojo.removeClass(this,"qkrHover");
_2198.loadPeerMedia(id);
},mouseoveruserrow:function(_219a){
this.className+=" qkrHover";
_219a.overTr=this;
},mouseoutuserrow:function(_219b){
if(_219b.overTr){
dojo.removeClass(_219b.overTr,"qkrHover");
}
},onDialogCancel:function(){
this.cancelRequest();
this.inherited(arguments);
},cancelRequest:function(){
if(this.monitor){
this.monitor.cancel();
}
dojo.forEach(this._requests,function(r){
r.ioArgs.explicitCancel=true;
if(!r.ioArgs._finished){
r.cancel();
}
});
this._requests=[];
dojo.io.iframe.cancel();
},onUploadProgress:function(_219d,_219e){
var p=this.progress;
if(p){
if(!_219d||typeof _219d!="object"||!_219d.ops||!(_219d.ops.size>1)){
p.update({indeterminate:true});
}else{
if(_219d.ops.complete){
p.update({indeterminate:false,progress:"100%"});
}else{
p.domNode.title=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.TRANSFER,[quickr.share.util.formatSize(_219d.ops.size),quickr.share.util.formatSize(_219d.ops.rate)]);
p.update({indeterminate:false,maximum:_219d.ops.size,progress:_219d.ops.transfer});
}
}
}
},onTimeout:function(){
this.cancelRequest();
this.enableInput();
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_TIMEOUT);
},validateFileContents:function(_21a0){
_21a0=_21a0==true;
var valid=true;
if(this.dialog&&this.dialog.contentsNode){
var el=this.dialog.contentsNode;
if(_21a0){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
if(quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.UPLOAD_ATTACHMENT.SELECT_FILE);
valid=false;
}else{
var path=el.value;
var query=quickr.share.util.trim(path).lastIndexOf(".");
var ext=path.substring(query+1,path.length);
if(this.isImage&&!this._isValidImageExtension(ext)){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.INSERTLINK.VALIDATE_UPLOAD_IMAGE_TYPE);
valid=false;
}
}
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
}
return valid;
},validateFilename:function(_21a6){
_21a6=_21a6==true;
var valid=true;
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
var d=document;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.FILENAME_LENGTH)){
var _21aa=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_LONG_FILENAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimFilename");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.TRIM_LONG_FILENAME));
_21aa.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_21aa);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(_21a6&&quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.UPLOAD_ATTACHMENT.WARN_NO_FILENAME);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
var _21aa=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_INVALID_CHARS_IN_NAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixFilenameCharacters");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.FIX_INVALID_CHARS_IN_NAME));
_21aa.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_21aa);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
}
return valid;
},trimFilename:function(){
if(this.dialog&&this.dialog.nameNode&&this.dialog.contentsNode){
var el=this.dialog.nameNode;
var name=el.value;
var ext=quickr.share.util.getExtension(quickr.share.util.trim(this.dialog.contentsNode.value));
var _21af=quickr.share.util.lengthUtf8(name);
var _21b0=quickr.share.util.lengthUtf8(ext);
if(_21b0>0){
ext="."+ext;
_21b0++;
}
var i=quickr.share.util.getCharIndexForUtf8Index(name,quickr.share.validation.FILENAME_LENGTH-_21b0);
if(i!=-1){
el.value=name.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},fixFilenameCharacters:function(){
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
},validateDescription:function(){
var valid=true;
if(this.dialog&&this.dialog.descriptionNode){
var d=document;
var el=this.dialog.descriptionNode;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.DESCRIPTION_LENGTH)){
var _21b6=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_LONG_DESCRIPTION)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimDescription");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.TRIM_LONG_DESCRIPTION));
_21b6.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_21b6);
valid=false;
}
}
return valid;
},trimDescription:function(){
if(this.dialog&&this.dialog.descriptionNode){
var el=this.dialog.descriptionNode;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.DESCRIPTION_LENGTH);
if(i!=-1){
el.value=el.value.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},onFilenameFocus:function(){
if(!this.dialog._uploadFilenameChanged){
var _21ba=this.dialog.nameNode;
_21ba.select();
}
},onFilenameChange:function(){
this.dialog._uploadFilenameChanged=true;
},onFileChange:function(){
var _21bb=this.dialog;
_21bb._uploadFilenameChanged=false;
var _21bc=this.dialog.nameNode;
var _21bd=this.dialog.contentsNode;
_21bc.value=quickr.share.util.trimExtension(quickr.share.util.getFilename(quickr.share.util.trim(_21bd.value)));
},validateUpload:function(){
return this.validateFileContents(true)&&this.validateFilename(true)&&this.validateDescription(true);
},performUserSearch:function(form,e){
dojo.stopEvent(e);
var text=form["usersearch"].value;
if(text&&text!=""){
this.activeSearch=text;
this.showPage(1);
}
},nextUserPage:function(){
this.showPage(this.pageNum+1);
},previousUserPage:function(){
this.showPage(this.pageNum-1);
},showPage:function(page){
this.pageNum=page;
if(page>0){
this.app.net.getJson({url:this.app.routes.getUserSearchServiceUrl(this.activeSearch,{startAt:(page-1)*this.pageSize,endAt:(page)*this.pageSize}),handle:dojo.hitch(this,this.loadUsers),preventLoginRefresh:true,retry:dojo.hitch(this,this.showPage,page)});
}
},loadUsers:function(_21c2,_21c3){
var d=this.app.document;
var _21c5=this.pageCounts;
var _21c6=this.pageLinks;
var table=this.searchResultsTable;
this.searchResultsTable.style.display="";
this.search.style.display="";
this.peerMediaListDiv.style.display="none";
this.titleDiv.style.display="none";
this.saveButton.disabled=true;
while(table.firstChild){
table.removeChild(table.firstChild);
}
if(!_21c2||_21c2 instanceof Error){
var tr=d.createElement("tr");
var td=d.createElement("td");
td.appendChild(d.createTextNode("error"));
tr.appendChild(td);
table.appendChild(tr);
_21c6.style.display=_21c5.style.display="none";
}else{
if(_21c2.items&&_21c2.items.length==0&&_21c2.total){
this.page=Math.floor(_21c2.total/this.pageSize)+1;
this.showPage(this.page);
}else{
if(_21c2.items&&_21c2.items.length>0){
var tr=d.createElement("tr");
var th=d.createElement("th");
th.appendChild(d.createTextNode(this.nls.USERSEARCH.USER_NAME));
tr.appendChild(th);
var th=d.createElement("th");
th.appendChild(d.createTextNode(this.nls.USERSEARCH.USER_EMAIL));
tr.appendChild(th);
table.appendChild(tr);
var start=_21c2.start?_21c2.start:0;
var end=start+_21c2.items.length;
var total=_21c2.total?_21c2.total:end;
var row;
for(var i=0;i<_21c2.items.length;i++){
var tr=d.createElement("tr");
if(i%2==1){
tr.className+=" alternate";
}
var td=d.createElement("td");
var p=d.createElement("p");
p.appendChild(d.createTextNode(_21c2.items[i].name));
td.appendChild(p);
var p=d.createElement("p");
p.style.display="none";
p.className="dn";
p.appendChild(d.createTextNode(_21c2.items[i].id));
td.appendChild(p);
tr.appendChild(td);
var td=d.createElement("td");
if(quickr.share.util.trim(_21c2.items[i].email).length>0){
var p=d.createElement("p");
p.appendChild(d.createTextNode(_21c2.items[i].email));
td.appendChild(p);
}
var p=d.createElement("p");
p.style.display="none";
p.className="dn";
p.appendChild(d.createTextNode(_21c2.items[i].id));
td.appendChild(p);
tr.appendChild(td);
table.appendChild(tr);
dojo.connect(tr,"onclick",dojo.hitch(row,this.selectuserrow,this,_21c2.items[i].id));
dojo.connect(tr,"onmouseover",dojo.hitch(row,this.mouseoveruserrow,this));
dojo.connect(tr,"onmouseout",dojo.hitch(row,this.mouseoutuserrow,this));
}
_21c5.style.display="";
var _21d1=(!_21c2.moreResults)?total:"??";
while(_21c5.firstChild){
_21c5.removeChild(_21c5.firstChild);
}
_21c5.appendChild(d.createTextNode(dojo.string.substitute(this.nls.CONTENT.COUNT,[start+1,end,_21d1])));
_21c6.style.display="";
this.page=Math.floor(start/this.pageSize)+1;
if(window["SemTagSvc"]){
window.SemTagSvc.parseDom({},table);
}
}else{
var tr=d.createElement("tr");
var td=d.createElement("td");
td.appendChild(d.createTextNode(this.nls.USERSEARCH.NO_MATCHES));
tr.appendChild(td);
table.appendChild(tr);
_21c6.style.display=_21c5.style.display="none";
}
}
}
},loadPeerMedia:function(item){
var id=item;
if(item.id){
id=item.id;
}
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.userSearchDiv.style.display="";
this.search.style.display="none";
this.searchResultsTable.style.display="none";
this.peerMediaListDiv.style.display="";
this.activeUserId=this.peerUserId=id;
var _21d4=this.getActiveListUrl(id);
this.updateActiveList(_21d4);
},updateLinkType:function(_21d5){
this.deselectLink();
this.removeErrors();
this.linkType=_21d5;
if(_21d5=="internal"){
this.activeUserId=this.userId;
this.activeList=this.itemList;
this.activeListDiv=this.itemListDiv;
this.urlTable.style.display="none";
if(this.attachmentListDiv){
this.attachmentTypeDiv.style.display="none";
this.attachmentListDiv.style.display="none";
this.uploadInputDiv.style.display="none";
}
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="";
this.searchResultsTable.style.display="none";
this.itemListDiv.style.display="";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
}else{
if(_21d5=="external"){
this.activeUserId=this.userId;
this.itemListDiv.style.display="none";
if(this.attachmentTypeDiv){
this.attachmentTypeDiv.style.display="none";
this.attachmentListDiv.style.display="none";
this.uploadInputDiv.style.display="none";
}
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="none";
this.searchResultsTable.style.display="none";
this.urlTable.style.display="";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
}else{
if(_21d5=="attachment"){
this.activeUserId=this.userId;
this.itemListDiv.style.display="none";
if(this.documentId){
this.attachmentTypeDiv.style.display="";
}
this.uploadInputDiv.style.display="none";
this.urlTable.style.display="none";
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="none";
this.searchResultsTable.style.display="none";
this.attachmentListDiv.style.display="";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
}else{
if(_21d5=="uploadattachment"){
this.activeUserId=this.userId;
this.itemListDiv.style.display="none";
if(this.documentId){
this.attachmentTypeDiv.style.display="";
}
this.uploadInputDiv.style.display="";
this.urlTable.style.display="none";
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="none";
this.searchResultsTable.style.display="none";
this.attachmentListDiv.style.display="none";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
}else{
if(_21d5=="peerSearch"){
this.activeList=this.peerMediaList;
this.activeListDiv=this.peerMediaListDiv;
this.itemListDiv.style.display="none";
this.pageOrFileLocationDiv.style.display="";
if(this.attachmentTypeDiv){
this.attachmentTypeDiv.style.display="none";
this.attachmentListDiv.style.display="none";
this.uploadInputDiv.style.display="none";
}
this.urlTable.style.display="none";
this.userSearchDiv.style.display="";
this.titleDiv.style.display="none";
this.saveButton.disabled=true;
this.searchResultsTable.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
if(this.peerUserId){
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.search.style.display="none";
this.searchResultsTable.style.display="none";
this.peerMediaListDiv.style.display="";
this.activeUserId=this.peerUserId;
}
}
}
}
}
}
this.peopleCombo.setValue("");
this.linkStatePeerInternal.checked=(this.linkType==this.linkStatePeerInternal.value);
this.linkStateInternal.checked=(this.linkType==this.linkStateInternal.value);
if(this.linkStateExistingAttachment){
this.linkStateExistingAttachment.checked=(this.linkType==this.linkStateExistingAttachment.value);
}
if(this.linkStateUploadAttachment){
this.linkStateUploadAttachment.checked=(this.linkType==this.linkStateUploadAttachment.value);
}
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
},updateDialog:function(file,opt,_21da){
var _21db="",_21dc="";
if(this.isImage){
var img=this.editor.Selection.MoveToAncestorNode("IMG");
if(img){
this.editor.Selection.SelectNode(img);
_21db=img.getAttribute("_fcksavedurl")||img.getAttribute("src")||"";
_21dc=img.title||img.alt;
}
}else{
var a=this.editor.Selection.MoveToAncestorNode("A");
if(a){
this.editor.Selection.SelectNode(a);
_21db=a.getAttribute("_fcksavedurl")||a.getAttribute("href")||"";
_21dc=a.textContent||a.innerText;
}else{
_21dc=dojo.withGlobal(this.editor.EditorWindow,dijit._editor.selection.getSelectedText);
}
}
if(dojo.isIE){
var range=this.editor.EditorDocument.selection.createRange();
if(range.getBookmark){
this._savedSelection=range.getBookmark();
}else{
this._savedSelection=range;
}
}
if(_21dc){
_21da.titleNode.value=_21dc;
}else{
_21da.titleNode.value="";
}
if(_21db&&_21db.length>0&&!(_21db.substring(0,1)=="/")){
this.url.value=_21db;
}else{
this.url.value="";
}
this.selectExternalUrlTab();
var _21e0=this.getActiveListUrl(this.activeUserId);
this.updateActiveList(_21e0);
if(this.itemData){
this.activeList.data=this.itemData;
this.activeList.update();
}
if(this.isDraft||this.documentId){
if(this.documentId){
var _21e1=this.getAttachmentListUrl(this.userId,this.documentId,this.isDraft);
this.updateAttachmentList(_21e1);
if(this.attachmentData){
this.attachmentList.data=this.attachmentData;
this.attachmentList.update();
}
}
_21da.contentsNode.value="";
_21da.nameNode.value="";
_21da.descriptionNode.value="";
}
this.search.style.display="none";
this.peerUserId=null;
this.peopleCombo.setValue("");
this.enableInput(_21da);
},setLink:function(_21e2,_21e3,name,type,link){
this.itemName=name;
if(type=="file"){
this.link=this.app.routes.getFileSummaryUrl(_21e2,_21e3);
}else{
if(type=="page"){
this.link=this.app.routes.getPageSummaryUrl(_21e2,_21e3);
}else{
console.log("type not found="+type);
}
}
},setMediaLink:function(name,link){
this.itemName=name;
this.link=link;
},generateTypeLink:function(app,_21ea,_21eb,_21ec,type,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeType,type));
},changeType:function(type){
this.activeType=type;
this.activeList.renderer.activeType=type;
var _21f0=this.getActiveListUrl(this.activeUserId);
this.updateActiveList(_21f0);
},generateSortLink:function(app,_21f2,_21f3,_21f4,sort,_21f6,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeSortOrder,sort.id,!_21f6));
},changeSortOrder:function(_21f8,_21f9){
for(var i=0;i<this.sorts.length;i++){
if(this.sorts[i].id==_21f8){
this.activeSort=this.sorts[i];
this.sortReversed=_21f9;
var _21fb=this.getActiveListUrl(this.activeUserId);
this.activeList.renderer.activeSort=this.sorts[i];
this.activeList.renderer.sortReversed=_21f9;
this.updateActiveList(_21fb);
break;
}
}
},generateAttachmentSortLink:function(app,_21fd,_21fe,_21ff,_2200,sort,_2202,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeAttachmentSortOrder,_21fe,sort.id,!_2202));
},changeAttachmentSortOrder:function(_2204,_2205,_2206){
for(var i=0;i<this.attachmentSorts.length;i++){
if(this.attachmentSorts[i].id==_2205){
this.activeAttachmentSort=this.attachmentSorts[i];
this.attachmentSortReversed=_2206;
var _2208=this.getAttachmentListUrl(_2204,this.documentId,this.isDraft);
this.attachmentList.renderer.activeSort=this.attachmentSorts[i];
this.attachmentList.renderer.sortReversed=_2206;
this.updateAttachmentList(_2208);
break;
}
}
},removeErrors:function(){
this.removeUploadError();
this.removeLinkError();
this.removeAttachmentLinkError();
this.removeUrlError();
},addError:function(el,id,_220b){
var d=document;
var _220d;
if(!(el.previousSibling&&el.previousSibling.errorId&&el.previousSibling.errorId==id)){
var div=d.createElement("div");
div.className="lotusFormError";
el.parentNode.insertBefore(div,el);
_220d=div;
_220d.errorId=id;
if(dojo.isArray(_220b)){
for(var i=0;i<_220b.length;i++){
_220d.appendChild(_220b[i]);
}
}else{
if(typeof _220b=="string"){
_220d.appendChild(d.createTextNode(_220b));
}else{
_220d.appendChild(_220b);
}
}
}
},removeError:function(el,id){
if(el.previousSibling&&dojo.hasClass(el.previousSibling,"lotusFormError")&&el.previousSibling.errorId&&el.previousSibling.errorId==id){
el.parentNode.removeChild(el.previousSibling);
}
},addUploadError:function(_2212){
var d=document;
var _2214;
var el=this.uploadTableBody;
if(!(el.firstChild&&dojo.hasClass(el.firstChild,"lotusFormErrorSummary"))){
var tr=d.createElement("tr");
tr.className="lotusFormErrorSummary";
var td=d.createElement("td");
td.colSpan=2;
var div=d.createElement("div");
div.className="lotusFormRequired";
div.appendChild(d.createTextNode(_2212));
td.appendChild(div);
tr.appendChild(td);
el.insertBefore(tr,el.firstChild);
}
},removeUploadError:function(){
var el=this.uploadTableBody;
if(el.firstChild&&dojo.hasClass(el.firstChild,"lotusFormErrorSummary")){
el.removeChild(el.firstChild);
}
},validateLink:function(){
var valid=true;
var d=document;
var el=this.activeListDiv;
if(!this.link){
var _221d=d.createTextNode(this.isImage?this.nls.INSERTLINK.VALIDATE_IMAGE_LINK_MISSING:this.nls.INSERTLINK.VALIDATE_LINK_MISSING);
this.addError(el,"linkmissing",_221d);
this.activeList.renderer.highlightTableBody();
valid=false;
}else{
this.removeLinkError();
}
return valid;
},validateAttachmentLink:function(){
var valid=true;
var d=document;
var el=this.attachmentListDiv;
if(!this.link){
var _2221=d.createTextNode(this.nls.INSERTLINK.VALIDATE_ATTACHMENT_MISSING);
this.addError(el,"attachmentlinkmissing",_2221);
this.attachmentList.renderer.highlightTableBody();
valid=false;
}else{
this.removeAttachmentLinkError();
}
return valid;
},validateUrl:function(){
var valid=true;
var d=document;
var el=this.dialog.urlNode;
if(!(this.url.value&&this.url.value.length>0)){
var _2225=d.createTextNode(this.nls.INSERTLINK.VALIDATE_URL_MISSING);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"urlmissing",_2225);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"urlmissing");
}
return valid;
},removeAttachmentLinkError:function(){
var el=this.attachmentListDiv;
if(el){
this.removeError(el,"attachmentlinkmissing");
this.attachmentList.renderer.unHighlightTableBody();
}
},removeLinkError:function(){
var el=this.activeListDiv;
if(el){
this.removeError(el,"linkmissing");
this.activeList.renderer.unHighlightTableBody();
}
},removeUrlError:function(){
var el=this.dialog.urlNode;
if(el){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"urlmissing");
}
},validateDialog:function(){
if(this.linkType=="internal"||this.linkType=="peerSearch"){
return this.validateLink();
}else{
if(this.linkType=="attachment"){
return this.validateAttachmentLink();
}else{
if(this.linkType=="uploadattachment"){
return this.validateUpload();
}else{
return this.validateUrl();
}
}
}
return true;
},_savedSelection:null,_isValidImageExtension:function(ext){
for(var i=0;i<quickr.share.config.validImageExtensions.length;i++){
if(ext.toUpperCase()==quickr.share.config.validImageExtensions[i].toUpperCase()){
return true;
}
}
},save:function(_222b,e){
if(e){
dojo.stopEvent(e);
}
if(this._request){
console.log("UploadAttachment::save DEBUG another request was attempted while the current one was active");
return;
}
if(this.monitor){
this.monitor.cancel();
}
if(this.progress){
this.progress.update({indeterminate:true});
}
var _222d=this.dialog;
var form=_222d.formNode;
this.removeUploadError();
if(!this.validateDialog()){
return;
}
if(this.linkType=="uploadattachment"){
var path=quickr.share.util.trim(_222d.contentsNode.value);
var _2230=quickr.share.util.trim(_222d.nameNode.value);
if(_2230.length>0){
var ext=quickr.share.util.getExtension(_2230);
var _2232=quickr.share.util.getExtension(quickr.share.util.getFilename(path));
if(ext!=_2232&&_2232.length>0){
_222d.nameNode.value=_2230+"."+_2232;
}
}
var _2233=quickr.share.util.trim(_222d.descriptionNode.value);
var _2234=quickr.share.util.createOperationId(["upload_attachment",_2230,new Date().getTime()]);
var _2235;
if(this.isDraft){
if(!this.documentId){
this.documentId=this.getCurrentDraftId();
}
_2235=this.app.routes.getDraftAttachmentListServiceUrl(this.userId,this.documentId,null);
}else{
var _2235=this.documentFeedUrl;
}
var _2235=(_222b)?quickr.share.util.rewriteUri(_2235,{replace:true,opId:_2234,format:"html"}):quickr.share.util.rewriteUri(_2235,{opId:_2234,format:"html"});
var _2236="POST";
if(!this.app.checkAuthentication()){
this.onerror({code:"unauthenticated"});
return;
}
this.disableInput();
this._requests.push(this.app.net.postMultipart({url:_2235,detectHtmlLogin:quickr.share.util.detectLoginForMultipartAtomResponse,form:form,noStatus:true,content:{"label":_2230,"description":_2233},handle:dojo.hitch(this,this.completeIFrame)}));
if(this.monitor){
this.monitor.url=quickr.share.util.rewriteUri(this.monitor.url,{opId:_2234});
this.monitor.start();
}
}else{
this.disableInput();
this.insertLink();
}
},completeIFrame:function(_2237,_2238){
_2238._finished=true;
var _2239=_2238.explicitCancel;
if(this.monitor){
this.monitor.cancel();
}
this.dialog.titleNode.disabled=false;
this.enableInput();
if(_2239){
return;
}
if(_2237 instanceof Error){
if(dojo.isIE&&_2237.number==-2147024891){
this.onerror("InvalidRequest");
}else{
var error=quickr.share.util.getAtomError(_2237,_2238)||"unknown";
this.onerror(error);
}
}else{
var json=quickr.share.util.getJsonResponseFromHtml(_2237);
var error=quickr.share.util.getMultipartError(json);
if(error){
this.onerror(error);
}else{
this.result=json.contents;
this.onsuccess();
}
}
},onerror:function(error){
if(typeof error=="string"){
error={code:error};
}
if(error.code=="ItemExists"){
if(confirm(this.nls.UPLOAD_ATTACHMENT.CONFIRM_REPLACE)){
this.save(true,null);
}
}else{
if(error.code=="QuotaViolation"){
var _223d=quickr.share.util.parseInt(error.uploadSize-(error.libraryQuota-error.librarySize),"??");
this.addUploadError(dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.ERROR_QUOTA_VIOLATION,[quickr.share.util.formatSize(_223d)]));
}else{
if(error.code=="cancel"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_TIMEOUT);
}else{
if(error.code=="InvalidPath"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_FILENAME_INVALID_CHARACTERS);
}else{
if(error.code=="AccessDenied"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_ACCESS_DENIED);
}else{
if(error.code=="InvalidRequest"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.FILE_DOES_NOT_EXIST);
}else{
if(error.code=="unauthenticated"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_NOT_LOGGED_IN);
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxAttachmentSize)]);
this.addUploadError(text);
}else{
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR);
}
}
}
}
}
}
}
}
}
},onsuccess:function(){
if(this.onattachmentcountupdate){
this.onattachmentcountupdate(null,true);
}
this.insertLink();
},insertLink:function(){
if(dojo.isIE){
if(this._savedSelection){
var b=this._savedSelection;
this._savedSelection=null;
this.editor.Focus();
var range=this.editor.EditorDocument.selection.createRange();
range.moveToBookmark(b);
range.select();
}
if(this.isImage){
var img=dojo.withGlobal(this.editor.EditorWindow,"getAncestorElement",dijit._editor.selection,["img"]);
if(img){
dojo.withGlobal(this.editor.EditorWindow,"selectElement",dijit._editor.selection,[img]);
}
}else{
var a=dojo.withGlobal(this.editor.EditorWindow,"getAncestorElement",dijit._editor.selection,["a"]);
if(a){
dojo.withGlobal(this.editor.EditorWindow,"selectElement",dijit._editor.selection,[a]);
}
}
}else{
this.editor.Focus();
}
var url;
if((this.result&&this.result.links)){
for(var i=0;i<this.result.links.length;i++){
var l=this.result.links[i];
if(l.rel=="alternate"){
url=l.href;
var uri=quickr.share.util.parseUri(url);
url=uri.path;
break;
}
}
}else{
if(this.linkType=="internal"||this.linkType=="attachment"||this.linkType=="peerSearch"){
url=this.link;
}else{
url=this.url.value;
if(!/^(https?|ftps?)/.test(url)){
url="http://"+url;
}
}
}
var d=this.editor.EditorDocument;
var el;
if(this.isImage){
el=d.createElement("img");
el.setAttribute("src",url);
}else{
el=d.createElement("a");
el.setAttribute("href",url);
}
if(this.isImage){
var title=this.dialog.titleNode.value;
if(title&&title.length>0){
el.setAttribute("title",title);
el.setAttribute("alt",title);
}
}else{
if(this.dialog.titleNode.value&&this.dialog.titleNode.value.length>0){
el.appendChild(d.createTextNode(this.dialog.titleNode.value));
}else{
if(this.linkType=="uploadattachment"){
el.appendChild(d.createTextNode(this.dialog.nameNode.value));
}else{
if(this.linkType=="internal"||this.linkType=="attachment"||this.linkType=="peerSearch"){
el.appendChild(d.createTextNode(this.itemName));
}else{
el.appendChild(d.createTextNode(this.url.value));
}
}
}
}
this.editor.InsertElement(el);
this.cancelDialog();
},destroy:function(){
if(this.itemList){
this.itemList.destroy();
}
if(this.peerMediaList){
this.peerMediaList.destroy();
}
if(this.peopleCombo){
quickr.share.util.destroy(this.peopleCombo);
}
if(this.combo){
this.combo.destroy();
}
if(this.attachmentList){
this.attachmentList.destroy();
}
if(this.button){
this.button.destroy();
}
if(this.dialog){
this.dialog.destroy();
}
this.progress=null;
if(this.monitor){
this.monitor.cancel();
}
if(this.moveable){
this.moveable.destroy();
}
},getActiveListUrl:function(_224a,opts){
var p={};
if(this.isImage){
p.category="document";
p.fileType="image";
}else{
if(this.activeType){
p.category=this.activeType.category;
}else{
p.category=["page","document"];
}
}
if(!opts||!opts.unpaged){
var _224d=10;
p.pageSize=_224d?_224d:this.itemsPerPage;
p.start=(opts&&opts.start?opts.start:0);
}
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _224e=!this.activeSort.lowToHigh;
if(this.sortReversed){
_224e=!_224e;
}
p.sortDescending=_224e;
}
var url=this.app.routes.getFileListServiceUrl(_224a,p);
return url;
},page:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _2252=this.itemData.paging;
var url=_2252.getPageUrl(page);
if(url){
this.updateActiveList(url);
}
}
},nextPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _2255=this.itemData.paging;
var url=_2255.getNextUrl();
if(url){
}
this.updateActiveList(url);
}
},previousPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _2258=this.itemData.paging;
var url=_2258.getPreviousUrl();
if(url){
this.updateActiveList(url);
}
}
},loadActiveListData:function(_225a,_225b){
this.documentLoaded=true;
if(_225a instanceof Error||!_225a||!_225a.documentElement){
var error;
if(_225a&&_225a.dojoType=="cancel"){
error={message:this.nls.CONTENT.ERROR_REQUEST_CANCELLED,type:"requestCancelled"};
}else{
if(_225a&&_225a.dojoType=="timeout"){
error={message:this.nls.CONTENT.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"};
}else{
if(_225b.xhr.status==404){
error={message:this.msgNoData,type:"noFiles"};
}else{
error={message:this.nls.CONTENT.ERROR_REQUEST_UNKNOWN,type:"unknown"};
}
}
}
var data=this.itemData={error:error,url:_225b.url};
if(this.activeList){
this.activeList.data=data;
this.activeList.update();
}
}else{
var data=this.itemData={xml:_225a.documentElement,url:_225b.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_225b.url,_225a.documentElement);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.updateActiveList(url);
return;
}
if(this.activeList){
this.activeList.data=data;
this.activeList.update();
}
}
},updateActiveList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadActiveListData),preventLoginRefresh:true,retry:dojo.hitch(this,this.updateActiveList,url)});
},getAttachmentListUrl:function(_2260,_2261,_2262,opts){
var p;
if(this.isImage){
p={category:"attachment",fileType:"image"};
}else{
p={category:"attachment"};
}
if(!opts||!opts.unpaged){
var _2265=10;
p.pageSize=_2265?_2265:this.itemsPerPage;
p.start=(opts&&opts.start?opts.start:0);
}
if(this.activeAttachmentSort){
p.sortKey=this.activeAttachmentSort.sK;
var _2266=!this.activeAttachmentSort.lowToHigh;
if(this.attachmentSortReversed){
_2266=!_2266;
}
p.sortDescending=_2266;
}
var url;
if(_2262){
url=this.app.routes.getDraftAttachmentListServiceUrl(_2260,_2261,p);
}else{
url=this.app.routes.getAttachmentListServiceUrl(_2260,_2261,p);
}
return url;
},attachmentPage:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _226a=this.attachmentData.paging;
var url=_226a.getPageUrl(page);
if(url){
this.updateAttachmentList(url);
}
}
},nextAttachmentPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _226d=this.attachmentData.paging;
var url=_226d.getNextUrl();
if(url){
this.updateAttachmentList(url);
}
}
},previousAttachmentPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _2270=this.attachmentData.paging;
var url=_2270.getPreviousUrl();
if(url){
this.updateAttachmentList(url);
}
}
},loadAttachmentListData:function(_2272,_2273){
this.documentLoaded=true;
if(quickr.share.util.requiresAuth(_2272,_2273)){
this.app.login();
}else{
if(_2272 instanceof Error||!_2272||!_2272.documentElement){
var error;
if(_2272&&_2272.dojoType=="cancel"){
error={message:this.nls.CONTENT.ERROR_REQUEST_CANCELLED,type:"requestCancelled"};
}else{
if(_2272&&_2272.dojoType=="timeout"){
error={message:this.nls.CONTENT.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"};
}else{
if(_2273.xhr.status==404){
error={message:this.msgNoData,type:"noFiles"};
}else{
error={message:this.nls.CONTENT.ERROR_REQUEST_UNKNOWN,type:"unknown"};
}
}
}
var data=this.attachmentData={error:error,url:_2273.url};
if(this.attachmentList){
this.attachmentList.data=data;
this.attachmentList.update();
}
}else{
var data=this.attachmentData={xml:_2272.documentElement,url:_2273.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_2273.url,_2272.documentElement);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.updateAttachmentList(url);
return;
}
if(this.attachmentList){
this.attachmentList.data=data;
this.attachmentList.update();
}
}
}
},updateAttachmentList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadAttachmentListData),timeout:(dojo.getObject("quickr.share.config.services.timeout.retrieveFiles")||10)*1000,preventLoginRefresh:true,retry:dojo.hitch(this,this.updateAttachmentList,url)});
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.WikiTypeAhead"]){
dojo._hasResource["quickr.share.wiki.widget.WikiTypeAhead"]=true;
dojo.provide("quickr.share.wiki.widget.WikiTypeAhead");
dojo.declare("quickr.share.wiki.widget.WikiTypeAhead",[lconn.core.TypeAhead],{size:"",pageSize:15,templateString:null,multipleValues:false,autoSelectChars:[","],templateString:"<input type=\"text\" autocomplete=\"off\" name=\"${name}\" id=\"widget_${id}\" size=\"${size}\"\n\tdojoAttachEvent=\"onkeydown:_onKeyDown, onkeypress:_onKeyPress, onfocus:_update, compositionend,onKeyUp\"\n\tdojoAttachPoint=\"domNode,textbox,focusNode,comboNode\" waiRole=\"combobox\"/>\n",formatItem:function(item){
if(item.name){
return item.name+(item.member?" <"+item.member+">":"");
}else{
return item;
}
},_startSearch:function(key,opt){
opt=opt||{};
if(opt.searchImmediately){
opt.searchBoth=true;
}
if(!this._popupWidget){
var _227b=this.id+"_popup";
this._popupWidget=new quickr.share.wiki.widget.WikiTypeAheadMenu({_strings:this._strings,onChange:dojo.hitch(this,this._selectOption),id:_227b});
dijit.removeWaiState(this.focusNode,"activedescendant");
dijit.setWaiState(this.textbox,"owns",_227b);
}
this.item=null;
var query=dojo.clone(this.query);
this._lastQuery=query=key;
this.searchTimer=setTimeout(dojo.hitch(this,function(query,_this){
var _227f=this.store.fetch({queryOptions:dojo.mixin({ignoreCase:this.ignoreCase,deep:true},opt),query:query,onComplete:dojo.hitch(this,"_openResultList"),onError:function(_2280){
console.error("dijit.form.ComboBox: "+_2280);
dojo.hitch(_this,"_hideResultList")();
},start:0,count:this.pageSize});
var _2281=function(_2282,_2283){
_2282.start+=_2282.count*_2283;
_2282.direction=_2283;
this.store.fetch(_2282);
};
this._nextSearch=this._popupWidget.onPage=dojo.hitch(this,_2281,_227f);
},query,this),opt.searchImmediately?1:this.searchDelay);
}});
dojo.declare("quickr.share.wiki.widget.WikiTypeAheadMenu",[dijit.form._ComboBoxMenu],{templateString:"<ul class='dijitMenu' dojoAttachEvent='onmousedown:_onMouseDown,onmouseup:_onMouseUp,onmouseover:_onMouseOver,onmouseout:_onMouseOut' tabIndex='-1' style='overflow:\"auto\";'>"+"<li class='dijitMenuItem dijitMenuPreviousButton' dojoAttachPoint='previousButton'></li>"+"<li class='dijitMenuItem resultsNode' dojoAttachPoint='resultsNode'></li>"+"<li class='dijitMenuItem dijitMenuNextButton' dojoAttachPoint='nextButton'></li>"+"</ul>",_messages:null,postCreate:function(){
this.resultsNode.selectHandler=dojo.hitch(this,function(evt){
dojo.stopEvent(evt);
return true;
});
this.inherited("postCreate",arguments);
},setValue:function(value){
if(value.target.item){
this.value=value;
this.onChange(value);
}
},_onMouseUp:function(evt){
if(evt.target!=this.resultsNode){
this.inherited("_onMouseUp",arguments);
}
},_onMouseOver:function(evt){
if(evt.target===this.domNode){
return;
}
var tgt=evt.target;
if(!(tgt==this.previousButton||tgt==this.nextButton||tgt==this.searchButton||tgt==this.resultsNode)){
while(!tgt.item){
tgt=tgt.parentNode;
}
}
this._focusOptionNode(tgt);
},createOptions:function(_2289,_228a,_228b){
this.clearResultList();
this.previousButton.style.display=(!_228a.start||_228a.start==0)?"none":"";
dojo.attr(this.previousButton,"id",this.id+"_prev");
dojo.forEach(_2289.items,function(item,i){
if(_228a.count&&i>=_228a.count){
return;
}
var _228e=this._createOption(item,_228b);
_228e.className="dijitMenuItem";
dojo.attr(_228e,"id",this.id+i);
this.domNode.insertBefore(_228e,this.nextButton);
},this);
this.nextButton.style.display=(_228a.count&&_228a.count<_2289.length)?"":"none";
dojo.attr(this.nextButton,"id",this.id+"_next");
var el=this.resultsNode;
if(_2289.items.length==0){
var _2290=dojo.string.substitute(this._strings.NO_RESULTS,[_228a.query]);
while(el.firstChild){
el.removeChild(el.firstChild);
}
el.appendChild(document.createTextNode(_2290));
el.item=_2290;
this.domNode.insertBefore(el,this.nextButton);
}
},clearResultList:function(){
var first=this.previousButton;
var last=this.nextButton;
while(first.nextSibling&&first.nextSibling!=last){
this.domNode.removeChild(first.nextSibling);
}
},getListLength:function(){
return this.domNode.childNodes.length-2-(this.searchButton.parentNode?1:0)-(this.resultsNode.parentNode?1:0);
}});
quickr.share.wiki.widget.WikiTypeAhead.getWikiTypeAheadArguments=function(store,opt){
var args={nameAttr:"name",minChars:2,searchDelay:400,pageSize:30,multipleValues:false,store:store,hasDownArrow:false,"class":"",formatItem:function(item,_2297){
if(item.name){
return item.name;
}else{
return item;
}
}};
if(opt){
dojo.mixin(args,opt);
}
return args;
};
}
if(!dojo._hasResource["quickr.share.wiki.action.InsertLink"]){
dojo._hasResource["quickr.share.wiki.action.InsertLink"]=true;
dojo.provide("quickr.share.wiki.action.InsertLink");
dojo.declare("quickr.share.wiki.action.InsertLink",[quickr.share.action.DialogAction],{wInput:"478px",wDialog:"750px",constructor:function(_2298,_2299,_229a,_229b,_229c,_229d,_229e,_229f,app,_22a1){
this.isImage=_229f;
if(this.isImage){
this.id="image_";
}else{
this.id="link_";
}
this.app=app;
this.nls=app.nls;
this.userId=_229a;
this.documentId=_229b;
this.isNewPage=_229c;
this.documentFeedUrl=_229d;
this.onattachmentcountupdate=_229e;
this.getCurrentDraftId=_22a1;
this.peopleStore=app.getUserTypeAheadStore();
this.libraryId=_2299;
this.wikiTitle=_2298;
if(this.isImage){
this.params={category:["document"]};
}else{
this.params={category:["page","document"]};
}
this.attachmentParams={category:"attachment"};
if(this.isImage){
this.types=null;
}else{
this.types=[{id:"mixed",name:app.nls.INSERTLINK.TYPE_ALL,category:["page","document"]},{id:"documents",name:app.nls.INSERTLINK.TYPE_FILES,category:"document"},{id:"pages",name:app.nls.INSERTLINK.TYPE_PAGES,category:"page"}];
}
this.attachmentSorts=[{id:"title",name:app.nls.SORTS.TITLE,sK:"title",lowToHigh:true},{name:app.nls.SORTS.MOSTRECENT,sK:"updated",mapReduce:function(file){
return file.getUpdated().getTime();
}}];
this.sorts=[{name:app.nls.SORTS.MOSTRECENT,sK:"updated",mapReduce:function(file){
return file.getUpdated().getTime();
}},{id:"mostpopular",name:app.nls.SORTS.MOSTDOWNLOADED,sK:"downloaded",mapReduce:function(file){
return file.getTimesDownloaded();
}},{id:"highestrated",name:app.nls.SORTS.HIGHESTRECOMMENDED,sK:"ratingCount",mapReduce:function(file){
return file.getRatingCount();
}},{id:"title",name:app.nls.SORTS.TITLE,sK:"title",lowToHigh:true}];
this.activeList=null;
this.activeUserId=_229a;
this.activeSort=this.sorts[0];
this.activeType=this.types?this.types[0]:null;
this.activeAttachmentSort=this.attachmentSorts[0];
this.sortReversed=false;
this.attachmentSortReversed=false;
this.activeView={id:"details",name:"Details",tooltip:"Tabular information"};
this.params.sort=this.activeSort.id;
this.attachmentParams.sort=this.activeAttachmentSort.id;
this.itemsPerPage=10;
var _22a6=dojo.getObject("quickr.share.config.services.uploadMonitor");
if(_22a6){
this.monitor=app.getMonitor(_22a6);
dojo.connect(this.monitor,"onFailure",this,this.onTimeout);
dojo.connect(this.monitor,"onInterval",this,this.onUploadProgress);
}
this._requests=[];
},deselectLink:function(){
if(this.activeList.renderer.selectedTr){
dojo.removeClass(this.activeList.renderer.selectedTr,"qkrSelected");
}
if(this.attachmentList&&this.attachmentList.renderer.selectedTr){
dojo.removeClass(this.attachmentList.renderer.selectedTr,"qkrSelected");
}
this.link=null;
this.itemName=null;
},createDialog:function(item,opt,_22a9){
var d=document;
var _22ab=this.userId;
var _22ac=this.app.authenticatedUser;
var _22ad=d.createElement("div");
_22ad.className="lotusDialogBorder";
_22ad.style.width=this.wDialog;
var el=_22a9.formNode=this.formNode=d.createElement("form");
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
dojo.connect(el,"onsubmit",dojo.hitch(this,this.save,false));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
h1.className="qkrMoveable";
var a=d.createElement("a");
a.title=this.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.IMAGE_TITLE:this.nls.INSERTLINK.TITLE));
el.appendChild(h1);
this.moveable=(dojo.isIE==6)?new dojo.dnd.TimedMoveable(this.dialog.domNode,{handle:h1}):new dojo.dnd.Moveable(this.dialog.domNode,{handle:h1,timeout:0});
var div=d.createElement("div");
div.className="lotusTabContainer";
div.style.height="3em";
div.style.marginBottom="0px";
var ul=d.createElement("ul");
ul.className="lotusTabs";
if(dojo.isFF){
ul.style.bottom="-4px";
}
var li=d.createElement("li");
var span=d.createElement("span");
var _22b6=d.createElement("a");
_22b6.href="javascript:;";
_22b6.onclick=function(){
return false;
};
_22b6.appendChild(d.createTextNode(this.nls.INSERTLINK.OPTION_EXTERNAL_URL));
span.appendChild(_22b6);
li.appendChild(span);
this.externalUrlTab=li;
ul.appendChild(li);
if(!this.isImage){
var li=d.createElement("li");
var span=d.createElement("span");
var _22b7=d.createElement("a");
_22b7.href="javascript:;";
_22b7.onclick=function(){
return false;
};
_22b7.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.OPTION_IMAGE_FILE:this.nls.INSERTLINK.WIKI_TAB));
span.appendChild(_22b7);
li.appendChild(span);
this.pageOrFileTab=li;
ul.appendChild(li);
}
if(this.isNewPage||this.documentId){
var li=d.createElement("li");
var span=d.createElement("span");
var _22b8=d.createElement("a");
_22b8.href="javascript:;";
_22b8.onclick=function(){
return false;
};
_22b8.appendChild(d.createTextNode(this.nls.INSERTLINK.OPTION_ATTACHMENT));
span.appendChild(_22b8);
li.appendChild(span);
this.attachmentTab=li;
ul.appendChild(li);
}
div.appendChild(ul);
el.appendChild(div);
if(!this.isImage){
dojo.connect(_22b7,"onclick",dojo.hitch(this,this.selectPageOrFileTab));
}
if(this.isNewPage||this.documentId){
dojo.connect(_22b8,"onclick",dojo.hitch(this,this.selectAttachmentTab));
}
dojo.connect(_22b6,"onclick",dojo.hitch(this,this.selectExternalUrlTab));
var _22b9=d.createElement("div");
_22b9.className="lotusDialogContent";
var div=this.pageOrFileLocationDiv=d.createElement("div");
var table=d.createElement("table");
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
var label=d.createElement("strong");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.CHOOSE_PAGE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.type="radio";
input.value="internal";
input.name="linkType_pg";
input.id=this.id+"page_choice";
this.linkStateInternal=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.FROM_LIST_LABEL));
label.setAttribute("for",input.id);
td.appendChild(label);
td.appendChild(d.createElement("br"));
var input=d.createElement("input");
input.type="radio";
input.value="manualPageEntry";
input.name="linkType_pg";
input.id=this.id+"list_choice";
this.linkStatePeerInternal=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.ENTER_MANUALLY_LABEL));
label.setAttribute("for",input.id);
td.appendChild(label);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
div.appendChild(table);
div.appendChild(d.createElement("br"));
_22b9.appendChild(div);
this.pageOrFileLocationDiv.style.display="none";
var div=d.createElement("div");
div.id=this.id+"item-list";
_22b9.appendChild(div);
var _22c0=new quickr.share.bean.StreamPermissions({owner:this.isPersonalHome,authenticatedId:(_22ac?_22ac.id:null)});
var _22c1={view:this.activeView.id,actions:[],pageActions:[],permissions:_22c0,highlightNew:"#FFFF75",activeSort:this.activeSort,sortReversed:this.sortReversed,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,this.app,this.app.routes),generateLinkToFile:dojo.hitch(null,quickr.share.scenes.generateFileLink,this.app,this.app.routes),generateLinkToPage:dojo.hitch(null,quickr.share.scenes.generatePageLink,this.app,this.app.routes),generateLinkToTypes:dojo.hitch(this,this.generateTypeLink,this.app,this.app.routes,this.params),generateSortLink:dojo.hitch(this,this.generateSortLink,this.app,this.app.routes,this.params),getFileTypeImage:dojo.hitch(this.app.routes,this.app.routes.getFileTypeImageUrl),validateLink:dojo.hitch(this,this.validateLink),_strings:this.nls};
if(this.isImage){
_22c1.setMediaLink=dojo.hitch(this,this.setMediaLink);
}else{
_22c1.setLink=dojo.hitch(this,this.setLink);
}
var _22c2=new quickr.widget.ItemPickerStreamRenderer(_22c1);
var _22c3=this.itemList=new quickr.widget.Stream({id:this.id+"itemList",baseClass:"file-stream lotusStream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",_strings:this.nls.CONTENT,renderer:_22c2,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_FILES:this.nls.INSERTLINK.NO_ITEMS,typeLabel:this.nls.INSERTLINK.TYPE_LABEL,page:dojo.hitch(this,this.page),next:dojo.hitch(this,this.nextPage),previous:dojo.hitch(this,this.previousPage)},div);
this.itemListDiv=this.itemList.domNode;
this.itemListDiv.appendChild(d.createElement("br"));
this.itemListDiv.style.display="none";
this.activeList=this.itemList;
this.activeListDiv=this.itemListDiv;
if(this.isNewPage||this.documentId){
var div=this.attachmentTypeDiv=d.createElement("div");
var table=d.createElement("table");
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
var label=d.createElement("strong");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.ATTACHMENT_TYPE));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.type="radio";
input.value="attachment";
input.name="linkType_att";
input.id=this.id+"existing_att";
this.linkStateExistingAttachment=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.LINK_TO_EXISTING_IMAGE:this.nls.INSERTLINK.LINK_TO_EXISTING));
label.setAttribute("for",input.id);
td.appendChild(label);
td.appendChild(d.createElement("br"));
var input=d.createElement("input");
input.type="radio";
input.value="uploadattachment";
input.name="linkType_att";
input.id=this.id+"upload_att";
this.linkStateUploadAttachment=input;
dojo.connect(input,"onclick",dojo.hitch(this,this.updateLinkType,input.value));
td.appendChild(input);
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.LINK_TO_UPLOAD_IMAGE:this.nls.INSERTLINK.LINK_TO_UPLOAD));
label.setAttribute("for",input.id);
td.appendChild(label);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
div.appendChild(table);
div.appendChild(d.createElement("br"));
_22b9.appendChild(div);
var div=d.createElement("div");
div.id=this.id+"attachment-list";
_22b9.appendChild(div);
var _22c4={view:this.activeView.id,actions:[],permissions:_22c0,highlightNew:"#FFFF75",setMediaLink:dojo.hitch(this,this.setMediaLink),_strings:this.nls.ATTACHMENTS,_appstrings:this.nls,activeSort:this.activeAttachmentSort,sortReversed:this.sortAttachmentReversed,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,this.app,this.app.routes),generateSortLink:dojo.hitch(this,this.generateAttachmentSortLink,this.app,this.app.routes,_22ab,this.attachmentParams),getFileTypeImage:dojo.hitch(this.app.routes,this.app.routes.getFileTypeImageUrl),validateLink:dojo.hitch(this,this.validateAttachmentLink),_strings:this.nls};
var _22c5=new quickr.widget.AttachmentPickerStreamRenderer(_22c4);
var _22c6=this.attachmentList=new quickr.widget.Stream({id:this.id+"attachmentList",baseClass:"file-stream lotusStream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",renderer:_22c5,_strings:this.nls.CONTENT,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_ATTACHMENTS:this.nls.INSERTLINK.NO_ATTACHMENTS,page:dojo.hitch(this,this.attachmentPage),next:dojo.hitch(this,this.nextAttachmentPage),previous:dojo.hitch(this,this.previousAttachmentPage)},div);
this.attachmentListDiv=this.attachmentList.domNode;
this.attachmentListDiv.appendChild(d.createElement("br"));
this.attachmentListDiv.style.display="none";
var table=this.uploadInputDiv=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=this.uploadTableBody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="15%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","file");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.IMAGE_FILE_LABEL:this.nls.INSERTLINK.FILE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=_22a9.contentsNode=d.createElement("input");
input.className="lotusText qkrFile";
input.type="file";
input.name="file";
if(this.isImage){
input.accept=quickr.share.config.imageInputAccepts;
}
if(dojo.isFF){
input.size="70";
}else{
if(dojo.isIE){
input.style.width=this.wInput;
}
}
dojo.connect(input,"onchange",dojo.hitch(this,this.onFileChange));
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
var limit=dojo.getObject("quickr.share.config.services.maxAttachmentSize");
if(limit>0){
var a=quickr.share.scenes.createHelpLink(this.app,td);
var _22c8=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.LIMIT_HELP,{limit:quickr.share.util.formatSize(limit)});
quickr.share.scenes.applyGenericPopup(this.app,td,a,_22c8);
}
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","label");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.nls.INSERTLINK.NAME_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=_22a9.nameNode=d.createElement("input");
input.className="lotusText";
input.name="label";
if(dojo.isIE){
input.style.width=this.wInput;
}
dojo.connect(input,"onfocus",dojo.hitch(this,this.onFilenameFocus));
dojo.connect(input,"onchange",dojo.hitch(this,this.onFilenameChange));
dojo.connect(input,"onchange",this,"validateFilename");
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
quickr.share.scenes.createHelpLink(this.app,td,"upload.filename");
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","description");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.DESCRIPTION_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var _22c9=_22a9.descriptionNode=d.createElement("textarea");
_22c9.className="lotusText";
_22c9.name="description";
_22c9.setAttribute("maxlength",quickr.share.validation.DESCRIPTION_LENGTH);
if(dojo.isIE){
_22c9.style.width=this.wInput;
}
dojo.connect(_22c9,"onchange",this,"validateDescription");
td.appendChild(_22c9);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_22b9.appendChild(table);
this.uploadInputDiv.style.display="none";
}
var table=this.pageNameTable=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="15%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","pageName");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.PAGE_NAME_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=this.pageName=d.createElement("input");
input.className="lotusText";
input.name="pageName";
if(dojo.isIE){
input.style.width=this.wInput;
}
_22a9.pageNameNode=input;
td.appendChild(input);
var args=quickr.share.wiki.widget.WikiTypeAhead.getWikiTypeAheadArguments(this.getWikiPageTypeAheadStore(),{_strings:this.nls.WIKI_SEARCH,id:this.id+"mysearchbox",name:"pagenamesearch"});
var combo=this.pagesCombo=new quickr.share.wiki.widget.WikiTypeAhead(args,input);
dojo.connect(combo,"onSelect",this,"onSelectTypeAheadPageName");
combo.textbox.value="";
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
quickr.share.scenes.createHelpLink(this.app,td,"linking.wikipage");
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_22b9.appendChild(table);
this.pageNameTable.style.display="none";
var table=this.urlTable=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="20%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","url");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.URL_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=this.url=d.createElement("input");
input.className="lotusText";
input.name="url";
if(dojo.isIE){
input.style.width=this.wInput;
}
_22a9.urlNode=input;
dojo.connect(input,"onchange",this,"validateUrl");
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
if(!this.isImage){
quickr.share.scenes.createHelpLink(this.app,td,"linking.externalurl");
}else{
quickr.share.scenes.createHelpLink(this.app,td,"linking.externalimageurl");
}
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_22b9.appendChild(table);
this.urlTable.style.display="none";
var div=d.createElement("div");
var form=d.createElement("form");
form.onsubmit=function(e){
dojo.stopEvent(e);
};
dojo.connect(form,"onsubmit",null,dojo.hitch(this,this.performUserSearch,form));
var input=d.createElement("input");
input.type="hidden";
input.name="lang";
input.value=this.app.language;
form.appendChild(input);
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="20%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","");
label.appendChild(d.createTextNode(this.nls.INSERTLINK.SEARCH_FOR_USER));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.type="text";
td.appendChild(input);
tr.appendChild(td);
var args=lconn.core.PeopleTypeAhead.getUserTypeAheadArguments(this.peopleStore,{_strings:this.nls.USERSEARCH,id:this.id+"_selectUser",name:"usersearch",size:"30","class":"lotusText",multipleValues:false});
var combo=this.peopleCombo=new lconn.core.PeopleTypeAhead(args,input);
combo.textbox.style.width="99%";
dojo.connect(combo,"onSelect",this,"loadPeerMedia");
var td=d.createElement("td");
td.width="100px";
var span=d.createElement("span");
span.className="lotusBtnImg";
span.setAttribute("title",this.app.nls.SEARCH.SEARCH);
var input=d.createElement("input");
input.className="lotusSearchButton";
input.type="image";
input.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
input.name="submit";
input.setAttribute("alt",this.app.nls.SEARCH.SEARCH_ALT);
span.appendChild(input);
var aspan=d.createElement("a");
aspan.className="lotusAltText";
aspan.appendChild(d.createTextNode(this.app.nls.SEARCH.SEARCH_ALT));
aspan.href="javascript:;";
dojo.connect(aspan,"onclick",function(){
try{
input.click();
}
catch(e){
}
});
span.appendChild(aspan);
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
form.appendChild(table);
div.appendChild(form);
_22b9.appendChild(div);
this.userSearchDiv=div;
this.userSearchDiv.style.display="none";
var _22cf=d.createElement("div");
_22cf.style.display="none";
var div=d.createElement("div");
var _22d0=d.createElement("div");
_22d0.className="lotusPaging";
var _22d1=d.createElement("div");
_22d1.className="lotusLeft";
_22d1.style.display="none";
this.pageCounts=_22d1;
_22d0.appendChild(_22d1);
var ul=d.createElement("ul");
ul.className="lotusRight lotusInlinelist";
ul.style.display="none";
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.previousUserPage));
a.appendChild(d.createTextNode(this.nls.PAGING.PREVIOUS));
this.previousLink=a;
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.nextUserPage));
a.appendChild(d.createTextNode(this.nls.PAGING.NEXT));
this.nextLink=a;
li.appendChild(a);
ul.appendChild(li);
this.pageLinks=ul;
_22d0.appendChild(ul);
div.appendChild(_22d0);
_22cf.appendChild(div);
this.search=_22cf;
var table=d.createElement("table");
table.id=this.id+"searchResultsTable";
table.className="lotusTable wikiFixedTable qkrFixedWidth";
table.style.width="100%";
table.cellPadding=table.cellSpacing=0;
var tbody=d.createElement("tbody");
tbody.style.display="none";
var tr=d.createElement("tr");
var td=d.createElement("td");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
td.appendChild(img);
var span=d.createElement("span");
span.appendChild(d.createTextNode(this.nls.USERSEARCH.LOADING));
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
this.searchResultsTable=tbody;
table.appendChild(tbody);
_22cf.appendChild(table);
var div=d.createElement("div");
var _22d0=d.createElement("div");
_22d0.className="lotusPaging";
div.appendChild(_22d0);
_22cf.appendChild(div);
_22b9.appendChild(_22cf);
var _22d2=d.createElement("div");
_22b9.appendChild(_22d2);
var _22d3=this.peerMediaList=new quickr.widget.Stream({id:this.id+"peerMediaList",baseClass:"file-stream lotusStream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",renderer:_22c2,_strings:this.nls.CONTENT,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_FILES:this.nls.INSERTLINK.NO_ITEMS,typeLabel:this.nls.INSERTLINK.TYPE_LABEL,page:dojo.hitch(this,this.page),next:dojo.hitch(this,this.nextPage),previous:dojo.hitch(this,this.previousPage)},_22d2);
this.peerMediaListDiv=this.peerMediaList.domNode;
this.peerMediaListDiv.appendChild(d.createElement("br"));
this.peerMediaListDiv.style.display="none";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=this.titleDiv=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.style.width="20%";
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","linktext");
label.appendChild(d.createTextNode(this.isImage?this.nls.INSERTLINK.IMAGE_TITLE_LABEL:this.nls.INSERTLINK.TITLE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.className="lotusText";
input.name="linktext";
if(dojo.isIE){
input.style.width=this.wInput;
}
_22a9.titleNode=input;
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
if(this.isImage){
quickr.share.scenes.createHelpLink(this.app,td,"linking.alternatetext");
}else{
quickr.share.scenes.createHelpLink(this.app,td,"linking.linktext");
}
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_22b9.appendChild(table);
el.appendChild(_22b9);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var divp=_22a9.progressNode=d.createElement("div");
divp.style.display="none";
divp.className="lotusRight qkrStatus";
var divw=d.createElement("div");
divp.appendChild(divw);
var _22d6=this.progress=new quickr.widget.ProgressBar({},divw);
div.appendChild(divp);
var input=_22a9.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.INSERTLINK.SUBMIT_BUTTON_LABEL;
this.saveButton=input;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.INSERTLINK.CANCEL_BUTTON_LABEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_22ad.appendChild(el);
_22a9.setContent(_22ad);
this.updateDialog(item,opt,_22a9);
},onSelectTypeAheadPageName:function(args){
},itemSelected:function(arg){
},isPageOrFile:function(){
return (this.currentTab==this.pageOrFileTab);
},isAttachment:function(){
return (this.currentTab==this.attachmentTab);
},isExternalUrl:function(){
return (this.currentTab==this.externalUrlTab);
},selectPageOrFileTab:function(_22d9){
if(!this.isPageOrFile()||_22d9){
if(this.currentTab){
dojo.removeClass(this.currentTab,"lotusSelected");
}
dojo.addClass(this.pageOrFileTab,"lotusSelected");
this.currentTab=this.pageOrFileTab;
this.updateLinkType("internal");
}
},selectAttachmentTab:function(){
if(!this.isAttachment()){
if(this.currentTab){
}
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.attachmentTab,"lotusSelected");
this.currentTab=this.attachmentTab;
if(this.documentId){
this.updateLinkType("attachment");
}else{
this.updateLinkType("uploadattachment");
}
}
},selectExternalUrlTab:function(){
if(!this.isExternalUrl()){
if(this.currentTab){
dojo.removeClass(this.currentTab,"lotusSelected");
}
dojo.addClass(this.externalUrlTab,"lotusSelected");
this.currentTab=this.externalUrlTab;
this.updateLinkType("external");
}
},selectuserrow:function(_22da,id){
dojo.removeClass(this,"qkrHover");
_22da.loadPeerMedia(id);
},mouseoveruserrow:function(_22dc){
this.className+=" qkrHover";
_22dc.overTr=this;
},mouseoutuserrow:function(_22dd){
if(_22dd.overTr){
dojo.removeClass(_22dd.overTr,"qkrHover");
}
},onDialogCancel:function(){
this.cancelRequest();
this.inherited(arguments);
},cancelRequest:function(){
if(this.monitor){
this.monitor.cancel();
}
dojo.forEach(this._requests,function(r){
r.ioArgs.explicitCancel=true;
if(!r.ioArgs._finished){
r.cancel();
}
});
this._requests=[];
dojo.io.iframe.cancel();
},onUploadProgress:function(_22df,_22e0){
var p=this.progress;
if(p){
if(!_22df||typeof _22df!="object"||!_22df.ops||!(_22df.ops.size>1)){
p.update({indeterminate:true});
}else{
if(_22df.ops.complete){
p.update({indeterminate:false,progress:"100%"});
}else{
p.domNode.title=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.TRANSFER,[quickr.share.util.formatSize(_22df.ops.size),quickr.share.util.formatSize(_22df.ops.rate)]);
p.update({indeterminate:false,maximum:_22df.ops.size,progress:_22df.ops.transfer});
}
}
}
},onTimeout:function(){
this.cancelRequest();
this.enableInput();
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_TIMEOUT);
},validateFileContents:function(_22e2){
_22e2=_22e2==true;
var valid=true;
if(this.dialog&&this.dialog.contentsNode){
var el=this.dialog.contentsNode;
if(_22e2){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
if(quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.UPLOAD_ATTACHMENT.SELECT_FILE);
valid=false;
}else{
var path=el.value;
var query=quickr.share.util.trim(path).lastIndexOf(".");
var ext=path.substring(query+1,path.length);
if(this.isImage&&!this._isValidImageExtension(ext)){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.INSERTLINK.VALIDATE_UPLOAD_IMAGE_TYPE);
valid=false;
}
}
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
}
return valid;
},validateFilename:function(_22e8){
_22e8=_22e8==true;
var valid=true;
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
var d=document;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.FILENAME_LENGTH)){
var _22ec=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_LONG_FILENAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimFilename");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.TRIM_LONG_FILENAME));
_22ec.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_22ec);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(_22e8&&quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.UPLOAD_ATTACHMENT.WARN_NO_FILENAME);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
var _22ec=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_INVALID_CHARS_IN_NAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixFilenameCharacters");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.FIX_INVALID_CHARS_IN_NAME));
_22ec.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_22ec);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
}
return valid;
},trimFilename:function(){
if(this.dialog&&this.dialog.nameNode&&this.dialog.contentsNode){
var el=this.dialog.nameNode;
var name=el.value;
var ext=quickr.share.util.getExtension(quickr.share.util.trim(this.dialog.contentsNode.value));
var _22f1=quickr.share.util.lengthUtf8(name);
var _22f2=quickr.share.util.lengthUtf8(ext);
if(_22f2>0){
ext="."+ext;
_22f2++;
}
var i=quickr.share.util.getCharIndexForUtf8Index(name,quickr.share.validation.FILENAME_LENGTH-_22f2);
if(i!=-1){
el.value=name.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},fixFilenameCharacters:function(){
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
},validateDescription:function(){
var valid=true;
if(this.dialog&&this.dialog.descriptionNode){
var d=document;
var el=this.dialog.descriptionNode;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.DESCRIPTION_LENGTH)){
var _22f8=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_LONG_DESCRIPTION)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimDescription");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.TRIM_LONG_DESCRIPTION));
_22f8.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_22f8);
valid=false;
}
}
return valid;
},trimDescription:function(){
if(this.dialog&&this.dialog.descriptionNode){
var el=this.dialog.descriptionNode;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.DESCRIPTION_LENGTH);
if(i!=-1){
el.value=el.value.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},onFilenameFocus:function(){
if(!this.dialog._uploadFilenameChanged){
var _22fc=this.dialog.nameNode;
_22fc.select();
}
},onFilenameChange:function(){
this.dialog._uploadFilenameChanged=true;
},onFileChange:function(){
var _22fd=this.dialog;
_22fd._uploadFilenameChanged=false;
var _22fe=this.dialog.nameNode;
var _22ff=this.dialog.contentsNode;
_22fe.value=quickr.share.util.getFilename(quickr.share.util.trim(_22ff.value));
},validateUpload:function(){
return this.validateFileContents(true)&&this.validateFilename(true)&&this.validateDescription(true);
},performUserSearch:function(form,e){
dojo.stopEvent(e);
var text=form["usersearch"].value;
if(text&&text!=""){
this.activeSearch=text;
this.showPage(1);
}
},nextUserPage:function(){
this.showPage(this.pageNum+1);
},previousUserPage:function(){
this.showPage(this.pageNum-1);
},showPage:function(page){
this.pageNum=page;
if(page>0){
var url=this.app.routes.getUserSearchServiceUrl(this.activeSearch,{startAt:(page-1)*this.pageSize,endAt:(page)*this.pageSize});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadUsers)});
}
},loadUsers:function(_2305,_2306){
var d=this.app.document;
var _2308=this.pageCounts;
var _2309=this.pageLinks;
var table=this.searchResultsTable;
this.searchResultsTable.style.display="";
this.search.style.display="";
this.peerMediaListDiv.style.display="none";
this.titleDiv.style.display="none";
this.saveButton.disabled=true;
while(table.firstChild){
table.removeChild(table.firstChild);
}
if(!_2305||_2305 instanceof Error){
var tr=d.createElement("tr");
var td=d.createElement("td");
td.appendChild(d.createTextNode("error"));
tr.appendChild(td);
table.appendChild(tr);
_2309.style.display=_2308.style.display="none";
}else{
if(_2305.items&&_2305.items.length==0&&_2305.total){
this.page=Math.floor(_2305.total/this.pageSize)+1;
this.showPage(this.page);
}else{
if(_2305.items&&_2305.items.length>0){
var tr=d.createElement("tr");
var th=d.createElement("th");
th.appendChild(d.createTextNode(this.nls.USERSEARCH.USER_NAME));
tr.appendChild(th);
var th=d.createElement("th");
th.appendChild(d.createTextNode(this.nls.USERSEARCH.USER_EMAIL));
tr.appendChild(th);
table.appendChild(tr);
var start=_2305.start?_2305.start:0;
var end=start+_2305.items.length;
var total=_2305.total?_2305.total:end;
var row;
for(var i=0;i<_2305.items.length;i++){
var tr=d.createElement("tr");
if(i%2==1){
tr.className+=" alternate";
}
var td=d.createElement("td");
var p=d.createElement("p");
p.appendChild(d.createTextNode(_2305.items[i].name));
td.appendChild(p);
var p=d.createElement("p");
p.style.display="none";
p.className="dn";
p.appendChild(d.createTextNode(_2305.items[i].id));
td.appendChild(p);
tr.appendChild(td);
var td=d.createElement("td");
if(quickr.share.util.trim(_2305.items[i].email).length>0){
var p=d.createElement("p");
p.appendChild(d.createTextNode(_2305.items[i].email));
td.appendChild(p);
}
var p=d.createElement("p");
p.style.display="none";
p.className="dn";
p.appendChild(d.createTextNode(_2305.items[i].id));
td.appendChild(p);
tr.appendChild(td);
table.appendChild(tr);
dojo.connect(tr,"onclick",dojo.hitch(row,this.selectuserrow,this,_2305.items[i].id));
dojo.connect(tr,"onmouseover",dojo.hitch(row,this.mouseoveruserrow,this));
dojo.connect(tr,"onmouseout",dojo.hitch(row,this.mouseoutuserrow,this));
}
_2308.style.display="";
var _2314=(!_2305.moreResults)?total:"??";
while(_2308.firstChild){
_2308.removeChild(_2308.firstChild);
}
_2308.appendChild(d.createTextNode(dojo.string.substitute(this.nls.CONTENT.COUNT,[start+1,end,_2314])));
_2309.style.display="";
this.page=Math.floor(start/this.pageSize)+1;
if(window["SemTagSvc"]){
window.SemTagSvc.parseDom({},table);
}
}else{
var tr=d.createElement("tr");
var td=d.createElement("td");
td.appendChild(d.createTextNode(this.nls.USERSEARCH.NO_MATCHES));
tr.appendChild(td);
table.appendChild(tr);
_2309.style.display=_2308.style.display="none";
}
}
}
},loadPeerMedia:function(item){
var id=item;
if(item.id){
id=item.id;
}
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.userSearchDiv.style.display="";
this.search.style.display="none";
this.searchResultsTable.style.display="none";
this.peerMediaListDiv.style.display="";
this.activeUserId=this.peerUserId=id;
var _2317=this.getActiveListUrl(id);
this.updateActiveList(_2317);
},updateLinkType:function(_2318){
this.deselectLink();
this.removeErrors();
this.linkType=_2318;
if(_2318=="internal"){
this.activeUserId=this.userId;
this.activeList=this.itemList;
this.activeListDiv=this.itemListDiv;
this.urlTable.style.display="none";
if(this.attachmentListDiv){
this.attachmentTypeDiv.style.display="none";
this.attachmentListDiv.style.display="none";
this.uploadInputDiv.style.display="none";
}
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="";
this.searchResultsTable.style.display="none";
this.itemListDiv.style.display="";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.pageNameTable.style.display="none";
}else{
if(_2318=="external"){
this.activeUserId=this.userId;
this.itemListDiv.style.display="none";
if(this.attachmentTypeDiv){
this.attachmentTypeDiv.style.display="none";
this.attachmentListDiv.style.display="none";
this.uploadInputDiv.style.display="none";
}
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="none";
this.searchResultsTable.style.display="none";
this.urlTable.style.display="";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.pageNameTable.style.display="none";
}else{
if(_2318=="attachment"){
this.activeUserId=this.userId;
this.itemListDiv.style.display="none";
if(this.documentId){
this.attachmentTypeDiv.style.display="";
}
this.uploadInputDiv.style.display="none";
this.urlTable.style.display="none";
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="none";
this.searchResultsTable.style.display="none";
this.attachmentListDiv.style.display="";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.pageNameTable.style.display="none";
}else{
if(_2318=="uploadattachment"){
this.activeUserId=this.userId;
this.itemListDiv.style.display="none";
if(this.documentId){
this.attachmentTypeDiv.style.display="";
}
this.uploadInputDiv.style.display="";
this.urlTable.style.display="none";
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="none";
this.searchResultsTable.style.display="none";
this.attachmentListDiv.style.display="none";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.pageNameTable.style.display="none";
}else{
if(_2318=="manualPageEntry"){
this.activeUserId=this.userId;
this.activeList=this.itemList;
this.activeListDiv=this.itemListDiv;
this.urlTable.style.display="none";
if(this.attachmentListDiv){
this.attachmentTypeDiv.style.display="none";
this.attachmentListDiv.style.display="none";
this.uploadInputDiv.style.display="none";
}
this.userSearchDiv.style.display="none";
this.search.style.display="none";
this.peerMediaListDiv.style.display="none";
this.peerUserId=null;
this.pageOrFileLocationDiv.style.display="";
this.searchResultsTable.style.display="none";
this.itemListDiv.style.display="none";
this.titleDiv.style.display="";
this.saveButton.disabled=false;
this.pageNameTable.style.display="";
}
}
}
}
}
this.peopleCombo.setValue("");
this.linkStatePeerInternal.checked=(this.linkType==this.linkStatePeerInternal.value);
this.linkStateInternal.checked=(this.linkType==this.linkStateInternal.value);
if(this.linkStateExistingAttachment){
this.linkStateExistingAttachment.checked=(this.linkType==this.linkStateExistingAttachment.value);
}
if(this.linkStateUploadAttachment){
this.linkStateUploadAttachment.checked=(this.linkType==this.linkStateUploadAttachment.value);
}
},getFileTypeImage:function(ext,size){
return this.baseUrl+"/images/filetypes/default_"+size+".gif";
},updateDialog:function(file,opt,_231d){
this.result=null;
var _231e="",_231f="";
if(quickr.share.config.editorType==="fck"){
if(this.isImage){
var img=this.editor.Selection.MoveToAncestorNode("IMG");
if(img){
this.editor.Selection.SelectNode(img);
_231e=img.getAttribute("_fcksavedurl")||img.getAttribute("src")||"";
_231f=img.title||img.alt;
}
}else{
var a=this.editor.Selection.MoveToAncestorNode("A");
if(a){
this.editor.Selection.SelectNode(a);
_231e=a.getAttribute("_fcksavedurl")||a.getAttribute("href")||"";
_231f=a.textContent||a.innerText;
}else{
_231f=dojo.withGlobal(this.editor.EditorWindow,dijit._editor.selection.getSelectedText);
}
}
}else{
this.selectedImage=this.editor.getSelection().getStartElement().getAscendant("img",true);
if(this.isImage){
var _2322=this.editor.getSelection().getStartElement().getAscendant("img",true);
if(img){
this.editor.getSelection().selectElement(img);
_231e=img.getAttribute("_fcksavedurl")||img.getAttribute("src")||"";
_231f=img.title||img.alt;
}
}else{
var a=this.editor.getSelection().getStartElement().getAscendant("a",true);
if(a){
this.editor.getSelection().selectElement(a);
_231e=a.getAttribute("_fcksavedurl")||a.getAttribute("href")||"";
_231f=a.getText()||a.textContent||a.innerText;
}else{
if(dojo.isIE){
_231f=this.editor.getSelection().getNative().createRange().text;
}else{
_231f=this.editor.getSelection().getNative().toString();
}
}
}
}
if(dojo.isIE){
if(quickr.share.config.editorType==="fck"){
var range=this.editor.EditorDocument.selection.createRange();
if(range.getBookmark){
this._savedSelection=range.getBookmark();
}else{
this._savedSelection=range;
}
}else{
this._savedSelection=this.editor.getSelection().getRanges();
}
}
if(_231f){
_231d.titleNode.value=_231f;
}else{
_231d.titleNode.value="";
}
if(_231e&&_231e.length>0&&!(_231e.substring(0,1)=="/")){
this.url.value=_231e;
this.pagesCombo.textbox.value="";
}else{
this.url.value="";
}
var _2324=this.getWikiPageName(_231e);
if(_2324){
this.pagesCombo.textbox.value=_2324;
this.selectPageOrFileTab();
this.updateLinkType("manualPageEntry");
}else{
this.selectExternalUrlTab();
this.pagesCombo.textbox.value="";
}
var _2325=this.getActiveListUrl(this.activeUserId);
this.updateActiveList(_2325);
if(this.itemData){
this.activeList.data=this.itemData;
this.activeList.update();
}
if(this.isNewPage||this.documentId){
if(this.documentId){
var _2326=this.getAttachmentListUrl(this.libraryId,this.documentId,this.isNewPage);
this.updateAttachmentList(_2326);
if(this.attachmentData){
this.attachmentList.data=this.attachmentData;
this.attachmentList.update();
}
}
_231d.contentsNode.value="";
_231d.nameNode.value="";
_231d.descriptionNode.value="";
}
this.search.style.display="none";
this.peerUserId=null;
this.peopleCombo.setValue("");
this.enableInput(_231d);
},setLink:function(_2327,_2328,name,type,link){
this.itemName=name;
if(type=="file"){
this.link=this.app.routes.getFileSummaryUrl(_2327,_2328);
}else{
if(type=="page"){
name=name.replace(/\+/g,"_");
this.link=this.app.routes.getWikiPageUrl(this.wikiTitle,name,{},true);
var el=this.dialog.pageNameNode;
el.value=this.itemName;
}else{
console.log("type not found="+type);
}
}
},setMediaLink:function(name,link){
this.itemName=name;
this.link=link;
},generateTypeLink:function(app,_2330,_2331,_2332,type,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeType,type));
},changeType:function(type){
this.activeType=type;
this.activeList.renderer.activeType=type;
var _2336=this.getActiveListUrl(this.activeUserId);
this.updateActiveList(_2336);
},generateSortLink:function(app,_2338,_2339,_233a,sort,_233c,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeSortOrder,sort.id,!_233c));
},changeSortOrder:function(_233e,_233f){
for(var i=0;i<this.sorts.length;i++){
if(this.sorts[i].id==_233e){
this.activeSort=this.sorts[i];
this.sortReversed=_233f;
var _2341=this.getActiveListUrl(this.activeUserId);
this.activeList.renderer.activeSort=this.sorts[i];
this.activeList.renderer.sortReversed=_233f;
this.updateActiveList(_2341);
break;
}
}
},generateAttachmentSortLink:function(app,_2343,_2344,_2345,_2346,sort,_2348,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeAttachmentSortOrder,_2344,sort.id,!_2348));
},changeAttachmentSortOrder:function(_234a,_234b,_234c){
for(var i=0;i<this.attachmentSorts.length;i++){
if(this.attachmentSorts[i].id==_234b){
this.activeAttachmentSort=this.attachmentSorts[i];
this.attachmentSortReversed=_234c;
var _234e=this.getAttachmentListUrl(this.libraryId,this.documentId,this.isNewPage);
this.attachmentList.renderer.activeSort=this.attachmentSorts[i];
this.attachmentList.renderer.sortReversed=_234c;
this.updateAttachmentList(_234e);
break;
}
}
},removeErrors:function(){
this.removeUploadError();
this.removeLinkError();
this.removeAttachmentLinkError();
this.removeUrlError();
this.removePageNameError();
},addError:function(el,id,_2351){
var d=document;
var _2353;
if(!(el.previousSibling&&el.previousSibling.errorId&&el.previousSibling.errorId==id)){
var div=d.createElement("div");
div.className="lotusFormError";
el.parentNode.insertBefore(div,el);
_2353=div;
_2353.errorId=id;
if(dojo.isArray(_2351)){
for(var i=0;i<_2351.length;i++){
_2353.appendChild(_2351[i]);
}
}else{
if(typeof _2351=="string"){
_2353.appendChild(d.createTextNode(_2351));
}else{
_2353.appendChild(_2351);
}
}
}
},removeError:function(el,id){
if(el.previousSibling&&dojo.hasClass(el.previousSibling,"lotusFormError")&&el.previousSibling.errorId&&el.previousSibling.errorId==id){
el.parentNode.removeChild(el.previousSibling);
}
},addUploadError:function(_2358){
var d=document;
var _235a;
var el=this.uploadTableBody;
if(!(el.firstChild&&dojo.hasClass(el.firstChild,"lotusFormErrorSummary"))){
var tr=d.createElement("tr");
tr.className="lotusFormErrorSummary";
var td=d.createElement("td");
td.colSpan=2;
var div=d.createElement("div");
div.className="lotusFormRequired";
div.appendChild(d.createTextNode(_2358));
td.appendChild(div);
tr.appendChild(td);
el.insertBefore(tr,el.firstChild);
}
},removeUploadError:function(){
var el=this.uploadTableBody;
if(el){
if(el.firstChild&&dojo.hasClass(el.firstChild,"lotusFormErrorSummary")){
el.removeChild(el.firstChild);
}
}
},validateLink:function(){
var valid=true;
var d=document;
var el=this.activeListDiv;
if(!this.link){
var _2363=d.createTextNode(this.isImage?this.nls.INSERTLINK.VALIDATE_IMAGE_LINK_MISSING:this.nls.INSERTLINK.VALIDATE_LINK_MISSING);
this.addError(el,"linkmissing",_2363);
this.activeList.renderer.highlightTableBody();
valid=false;
}else{
this.removeLinkError();
}
return valid;
},validatePageName:function(){
var valid=true;
var d=document;
var el=this.pageNameTable;
var _2367=this.pagesCombo.textbox.value;
var _2368=/[\\\/\:\*\?\<\>\|\[\]\"\+]/g;
_2368.lastIndex=0;
if(_2368.exec(_2367)!=null){
var _2369=d.createTextNode(this.nls.INSERTLINK.INVALID_CHARS_MESSAGE);
this.addError(el,"invalidPageName",_2369);
valid=false;
}else{
this.removePageNameError();
}
return valid;
},validateAttachmentLink:function(){
var valid=true;
var d=document;
var el=this.attachmentListDiv;
if(!this.link){
var _236d=d.createTextNode(this.nls.INSERTLINK.VALIDATE_ATTACHMENT_MISSING);
this.addError(el,"attachmentlinkmissing",_236d);
this.attachmentList.renderer.highlightTableBody();
valid=false;
}else{
this.removeAttachmentLinkError();
}
return valid;
},validateUrl:function(){
var valid=true;
var d=document;
var el=this.dialog.urlNode;
if(!(this.url.value&&this.url.value.length>0)){
var _2371=d.createTextNode(this.nls.INSERTLINK.VALIDATE_URL_MISSING);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"urlmissing",_2371);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"urlmissing");
}
return valid;
},removeAttachmentLinkError:function(){
var el=this.attachmentListDiv;
if(el){
this.removeError(el,"attachmentlinkmissing");
this.attachmentList.renderer.unHighlightTableBody();
}
},removeLinkError:function(){
var el=this.activeListDiv;
if(el){
this.removeError(el,"linkmissing");
this.activeList.renderer.unHighlightTableBody();
}
},removeUrlError:function(){
var el=this.dialog.urlNode;
if(el){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"urlmissing");
}
},removePageNameError:function(){
var el=this.pageNameTable;
if(el){
this.removeError(el,"invalidPageName");
}
},validateDialog:function(){
if(this.linkType=="internal"){
return this.validateLink();
}else{
if(this.linkType=="manualPageEntry"){
return this.validatePageName();
}else{
if(this.linkType=="attachment"){
return this.validateAttachmentLink();
}else{
if(this.linkType=="uploadattachment"){
return this.validateUpload();
}else{
return this.validateUrl();
}
}
}
}
return true;
},_savedSelection:null,_isValidImageExtension:function(ext){
for(var i=0;i<quickr.share.config.validImageExtensions.length;i++){
if(ext.toUpperCase()==quickr.share.config.validImageExtensions[i].toUpperCase()){
return true;
}
}
},save:function(_2378,e){
if(e){
dojo.stopEvent(e);
}
if(this._request){
console.log("UploadAttachment::save DEBUG another request was attempted while the current one was active");
return;
}
if(this.monitor){
this.monitor.cancel();
}
if(this.progress){
this.progress.update({indeterminate:true});
}
var _237a=this.dialog;
var form=_237a.formNode;
this.removeUploadError();
if(!this.validateDialog()){
return;
}
if(this.linkType=="uploadattachment"){
var path=quickr.share.util.trim(_237a.contentsNode.value);
var _237d=quickr.share.util.trim(_237a.nameNode.value);
if(_237d.length>0){
var ext=quickr.share.util.getExtension(_237d);
var _237f=quickr.share.util.getExtension(quickr.share.util.getFilename(path));
if(ext!=_237f&&_237f.length>0){
_237a.nameNode.value=_237d+"."+_237f;
}
}
var _2380=quickr.share.util.trim(_237a.descriptionNode.value);
var _2381=quickr.share.util.createOperationId(["upload_attachment",_237d,new Date().getTime()]);
var _2382;
if(this.isNewPage){
if(!this.documentId){
this.documentId=this.getCurrentDraftId();
}
_2382=this.app.routes.getDraftAttachmentListServiceUrl(this.libraryId,this.documentId,null,this.userId);
}else{
if(this.documentFeedUrl==null){
_2382=this.app.routes.getAttachmentListServiceUrl(this.libraryId,this.documentId,null);
}else{
var _2382=this.documentFeedUrl;
}
}
var _2382=(_2378)?quickr.share.util.rewriteUri(_2382,{replace:true,opId:_2381,format:"html"}):quickr.share.util.rewriteUri(_2382,{opId:_2381,format:"html"});
var _2383="POST";
this._requests.push(this.app.net.postMultipart({url:_2382,detectHtmlLogin:quickr.share.util.detectLoginForMultipartAtomResponse,form:form,noStatus:true,handle:dojo.hitch(this,this.completeIFrame)}));
this.disableInput();
if(this.monitor){
this.monitor.url=quickr.share.util.rewriteUri(this.monitor.url,{opId:_2381});
this.monitor.start();
}
}else{
this.disableInput();
this.insertLink();
}
},completeIFrame:function(_2384,_2385){
_2385._finished=true;
var _2386=_2385.explicitCancel;
if(this.monitor){
this.monitor.cancel();
}
this.dialog.titleNode.disabled=false;
this.enableInput();
if(_2386){
return;
}
if(_2384 instanceof Error){
if(dojo.isIE&&_2384.number==-2147024891){
this.onerror("InvalidRequest");
}else{
this.onerror(_2384);
}
}else{
var json=_2384;
var error=quickr.share.util.getMultipartError(json);
if(error){
this.onerror(error);
}else{
this.result=json.contents;
this.onsuccess();
}
}
},onerror:function(error){
if(typeof error=="string"){
error={code:error};
}
if(error.code=="ItemExists"){
if(confirm(this.nls.UPLOAD_ATTACHMENT.CONFIRM_REPLACE)){
this.save(true,null);
}
}else{
if(error.code=="QuotaViolation"){
var _238a=quickr.share.util.parseInt(error.uploadSize-(error.libraryQuota-error.librarySize),"??");
this.addUploadError(dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.ERROR_QUOTA_VIOLATION,[quickr.share.util.formatSize(_238a)]));
}else{
if(error.code=="cancel"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_TIMEOUT);
}else{
if(error.code=="InvalidPath"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_FILENAME_INVALID_CHARACTERS);
}else{
if(error.code=="AccessDenied"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_ACCESS_DENIED);
}else{
if(error.code=="InvalidRequest"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.FILE_DOES_NOT_EXIST);
}else{
if(error.code=="unauthenticated"){
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR_NOT_LOGGED_IN);
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxAttachmentSize)]);
this.addUploadError(text);
}else{
this.addUploadError(this.nls.UPLOAD_ATTACHMENT.ERROR);
}
}
}
}
}
}
}
}
}
},onsuccess:function(){
if(this.onattachmentcountupdate){
this.onattachmentcountupdate(null,true);
}
this.insertLink();
},insertLink:function(){
if(dojo.isIE){
if(this._savedSelection){
if(quickr.share.config.editorType==="fck"){
var b=this._savedSelection;
this._savedSelection=null;
this.editor.Focus();
var range=this.editor.EditorDocument.selection.createRange();
range.moveToBookmark(b);
range.select();
}else{
var b=this._savedSelection;
this._savedSelection=null;
this.editor.focus();
this.editor.getSelection().selectRanges(b);
}
}
}else{
if(quickr.share.config.editorType==="fck"){
this.editor.Focus();
}else{
this.editor.focus();
}
}
var url;
if((this.result&&this.result.links)){
for(var i=0;i<this.result.links.length;i++){
var l=this.result.links[i];
if(l.rel=="alternate"){
url=l.href;
if(url.search(/(\/media\/([^\/]*))/)==-1){
url=url+"/"+this.result.title;
}
var uri=quickr.share.util.parseUri(url);
url=uri.path;
break;
}
}
}else{
if(this.linkType=="internal"||this.linkType=="attachment"){
url=this.link;
if(this.isNewPage){
url=url.replace(window._anonSvc,window._authSvc);
}
}else{
if(this.linkType=="manualPageEntry"){
var _2392=this.pagesCombo.textbox.value;
var _2393=this.app.scene.wikiLabel;
url=this.app.routes.getWikiPageUrl(_2393,_2392,null,true);
}else{
url=this.url.value;
if(!/^(https?|ftps?|notes?)/.test(url.toLowerCase())){
url="http://"+url;
}
}
}
}
if(quickr.share.config.editorType==="fck"){
var d=this.editor.EditorDocument;
var el;
if(this.isImage){
el=d.createElement("img");
el.setAttribute("src",url);
}else{
el=d.createElement("a");
el.setAttribute("href",url);
}
if(this.isImage){
var title=this.dialog.titleNode.value;
if(title&&title.length>0){
el.setAttribute("title",title);
el.setAttribute("alt",title);
}
}else{
if(this.dialog.titleNode.value&&this.dialog.titleNode.value.length>0){
el.appendChild(d.createTextNode(this.dialog.titleNode.value));
}else{
if(this.linkType=="uploadattachment"){
el.appendChild(d.createTextNode(this.dialog.nameNode.value));
}else{
if(this.linkType=="internal"||this.linkType=="attachment"||this.linkType=="manualPageEntry"){
el.appendChild(d.createTextNode(this.itemName));
}else{
el.appendChild(d.createTextNode(this.url.value));
}
}
}
}
this.editor.InsertElement(el);
}else{
var el;
var _2397=this.editor.document;
if(this.isImage){
el=new CKEDITOR.dom.element("img",_2397);
el.setAttribute("src",url);
}else{
el=new CKEDITOR.dom.element("a",_2397);
el.setAttribute("href",url);
}
if(this.isImage){
var title=this.dialog.titleNode.value;
if(title&&title.length>0){
el.setAttribute("title",title);
el.setAttribute("alt",title);
}
}else{
if(!this.selectedImage){
if(this.dialog.titleNode.value&&this.dialog.titleNode.value.length>0){
var txt=new CKEDITOR.dom.text(this.dialog.titleNode.value,_2397);
txt.appendTo(el);
}else{
if(this.linkType=="uploadattachment"){
var txt=new CKEDITOR.dom.text(this.dialog.nameNode.value,_2397);
txt.appendTo(el);
}else{
if(this.linkType=="internal"||this.linkType=="attachment"||this.linkType=="manualPageEntry"){
var _2399;
if(this.itemName){
_2399=this.itemName;
}else{
_2399=this.pagesCombo.textbox.value;
}
var txt=new CKEDITOR.dom.text(_2399,_2397);
txt.appendTo(el);
}else{
var txt=new CKEDITOR.dom.text(this.url.value,_2397);
txt.appendTo(el);
}
}
}
}
}
if(this.isImage){
this.editor.insertElement(el);
}else{
if(this.selectedImage){
var _239a=this.selectedImage.getParent();
if(_239a.getName().toLowerCase()!="a"){
var _239b=new CKEDITOR.dom.element("img",_2397);
this.selectedImage.copyAttributes(_239b);
_239b.appendTo(el);
this.editor.insertElement(el);
}else{
_239a.setAttribute("_cke_saved_href",url);
_239a.setAttribute("href",url);
}
}else{
this.editor.insertElement(el);
}
}
}
this.cancelDialog();
},destroy:function(){
if(this.itemList){
this.itemList.destroy();
}
if(this.peerMediaList){
this.peerMediaList.destroy();
}
if(this.peopleCombo){
quickr.share.util.destroy(this.peopleCombo);
}
if(this.pagesCombo){
quickr.share.util.destroy(this.pagesCombo);
}
if(this.combo){
this.combo.destroy();
}
if(this.attachmentList){
this.attachmentList.destroy();
}
if(this.button){
this.button.destroy();
}
if(this.dialog){
this.dialog.destroy();
}
this.progress=null;
if(this.monitor){
this.monitor.cancel();
}
if(this.moveable){
this.moveable.destroy();
}
},getActiveListUrl:function(_239c,opts){
var p={};
if(this.isImage){
p.category="document";
p.fileType="image";
}else{
if(this.activeType){
p.category=this.activeType.category;
}else{
p.category=["page","document"];
}
}
if(!opts||!opts.unpaged){
var _239f=10;
p.pageSize=_239f?_239f:this.itemsPerPage;
p.start=(opts&&opts.start?opts.start:0);
}
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _23a0=!this.activeSort.lowToHigh;
if(this.sortReversed){
_23a0=!_23a0;
}
p.sortDescending=_23a0;
}
var url=this.app.routes.getWikiDocumentsFeedServiceUrl(this.wikiTitle,p);
return url;
},page:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _23a4=this.itemData.paging;
var url=_23a4.getPageUrl(page);
if(url){
this.updateActiveList(url);
}
}
},nextPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _23a7=this.itemData.paging;
var url=_23a7.getNextUrl();
if(url){
}
this.updateActiveList(url);
}
},previousPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _23aa=this.itemData.paging;
var url=_23aa.getPreviousUrl();
if(url){
this.updateActiveList(url);
}
}
},loadActiveListData:function(_23ac,_23ad){
this.documentLoaded=true;
if(_23ac instanceof Error||!_23ac||!_23ac.documentElement){
var error;
if(_23ac&&_23ac.dojoType=="cancel"){
error={message:this.nls.CONTENT.ERROR_REQUEST_CANCELLED,type:"requestCancelled"};
}else{
if(_23ac&&_23ac.dojoType=="timeout"){
error={message:this.nls.CONTENT.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"};
}else{
if(_23ad.xhr.status==404){
error={message:this.msgNoData,type:"noFiles"};
}else{
error={message:this.nls.CONTENT.ERROR_REQUEST_UNKNOWN,type:"unknown"};
}
}
}
var data=this.itemData={error:error,url:_23ad.url};
if(this.activeList){
this.activeList.data=data;
this.activeList.update();
}
}else{
var data=this.itemData={xml:_23ac.documentElement,url:_23ad.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_23ad.url,_23ac.documentElement);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.updateActiveList(url);
return;
}
if(this.activeList){
this.activeList.data=data;
this.activeList.update();
}
}
},updateActiveList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadActiveListData)});
},getAttachmentListUrl:function(_23b2,_23b3,_23b4,opts){
var p;
if(this.isImage){
p={category:"attachment",fileType:"image"};
}else{
p={category:"attachment"};
}
if(!opts||!opts.unpaged){
var _23b7=10;
p.pageSize=_23b7?_23b7:this.itemsPerPage;
p.start=(opts&&opts.start?opts.start:0);
}
if(this.activeAttachmentSort){
p.sortKey=this.activeAttachmentSort.sK;
var _23b8=!this.activeAttachmentSort.lowToHigh;
if(this.attachmentSortReversed){
_23b8=!_23b8;
}
p.sortDescending=_23b8;
}
var url;
if(_23b4){
url=this.app.routes.getDraftAttachmentListServiceUrl(_23b2,_23b3,p,this.userId);
}else{
url=this.app.routes.getAttachmentListServiceUrl(_23b2,_23b3,p);
}
return url;
},attachmentPage:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _23bc=this.attachmentData.paging;
var url=_23bc.getPageUrl(page);
if(url){
this.updateAttachmentList(url);
}
}
},nextAttachmentPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _23bf=this.attachmentData.paging;
var url=_23bf.getNextUrl();
if(url){
this.updateAttachmentList(url);
}
}
},previousAttachmentPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _23c2=this.attachmentData.paging;
var url=_23c2.getPreviousUrl();
if(url){
this.updateAttachmentList(url);
}
}
},loadAttachmentListData:function(_23c4,_23c5){
this.documentLoaded=true;
if(quickr.share.util.requiresAuth(_23c4,_23c5)){
this.app.login();
}else{
if(_23c4 instanceof Error||!_23c4||!_23c4.documentElement){
var error;
if(_23c4&&_23c4.dojoType=="cancel"){
error={message:this.nls.CONTENT.ERROR_REQUEST_CANCELLED,type:"requestCancelled"};
}else{
if(_23c4&&_23c4.dojoType=="timeout"){
error={message:this.nls.CONTENT.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"};
}else{
if(_23c5.xhr.status==404){
error={message:this.msgNoData,type:"noFiles"};
}else{
error={message:this.nls.CONTENT.ERROR_REQUEST_UNKNOWN,type:"unknown"};
}
}
}
var data=this.attachmentData={error:error,url:_23c5.url};
if(this.attachmentList){
this.attachmentList.data=data;
this.attachmentList.update();
}
}else{
var data=this.attachmentData={xml:_23c4.documentElement,url:_23c5.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_23c5.url,_23c4.documentElement);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.updateAttachmentList(url);
return;
}
if(this.attachmentList){
this.attachmentList.data=data;
this.attachmentList.update();
}
}
}
},getWikiPageName:function(url){
var _23ca=quickr.share.wiki.Routes.BASE_PATH+quickr.share.wiki.Routes.WIKI_HOME+"/wiki/"+this.app.scene.wikiLabel+"/page/";
var _23cb=url.indexOf(_23ca);
if(_23cb==0){
var _23cc=url.substring(_23ca.length);
_23cc=unescape(_23cc);
return _23cc;
}else{
return null;
}
},updateAttachmentList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadAttachmentListData)});
},getWikiPageTypeAheadStore:function(){
if(!this.wikiPageTypeAheadStore){
var d=this.app.document;
var div=d.createElement("div");
div.style.display="none";
d.body.appendChild(div);
this.wikiPageTypeAheadStore=new lconn.core.TypeAheadDataStore({url:this.app.routes.getWikiFileListServiceUrl(this.app.scene.wikiLabel,{format:"json"}),queryParam:"searchString",maxResults:dojo.getObject("quickr.share.config.peopleSearch.maxResults"),pageSize:dojo.getObject("quickr.share.config.peopleSearch.pageSize")},div);
}
return this.wikiPageTypeAheadStore;
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.EditWiki"]){
dojo._hasResource["quickr.share.wiki.action.EditWiki"]=true;
dojo.provide("quickr.share.wiki.action.EditWiki");
dojo.declare("quickr.share.wiki.action.EditWiki",[quickr.share.wiki.action.CreateWiki],{wInput:"330px",wDialog:"500px",_stringsPrefix:"EDIT_WIKI",_commentsRowsNum:(dojo.isIE||dojo.isSafari)?3:2,constructor:function(app,scene){
this.listeners=[];
this.app=app;
this.nls=app.nls[this._stringsPrefix];
this.wikiLabel=scene.wikiLabel||scene.sceneInfo.wikiLabel;
this.url=app.routes.getWikiEntryServiceUrl(this.wikiLabel,{includeTags:true});
this.tagStore=app.getTagTypeAheadStore();
},destroy:function(){
this.inherited(arguments);
},isValid:function(file,opt){
return true;
},createDialog:function(item,opt,_23d6){
var d=document;
var app=this.app;
var _23d9=d.createElement("div");
_23d9.className="lotusDialogBorder";
_23d9.style.width=this.wDialog;
var el=_23d6.formNode=d.createElement("form");
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.TITLE));
el.appendChild(h1);
var _23df=d.createElement("div");
_23df.className="lotusDialogContent";
if(dojo.isIE<7){
_23df.style.width="468px";
}
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
var tbody=this.tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tbody.appendChild(tr);
var td=document.createElement("td");
var div=d.createElement("DIV");
div.className="qkrLoading lotusCenter";
img.className="lotusCenter";
var img=d.createElement("IMG");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
div.appendChild(img);
div.appendChild(d.createTextNode(app.nls.LOADING));
td.appendChild(div);
tr.appendChild(td);
table.appendChild(tbody);
_23df.appendChild(table);
el.appendChild(_23df);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var input=_23d6.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.SAVE;
dojo.connect(input,"onclick",this,"save");
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_23d9.appendChild(el);
_23d6.setContent(_23d9);
this.disableInput(_23d6);
this.app.net.getXml({url:this.url,handle:dojo.hitch(this,this.loadWiki)});
},createLoadedDialog:function(item,opt,_23e8,_23e9){
var d=document;
var tbody=this.tbody;
while(tbody.firstChild){
tbody.removeChild(tbody.firstChild);
}
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.setAttribute("width","25%");
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.WIKITITLE));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
td.setAttribute("id","wiki_title");
label.setAttribute("for",td.getAttribute("id"));
var h4=d.createElement("h4");
h4.appendChild(d.createTextNode(this.wiki.getTitle()));
td.appendChild(h4);
tr.appendChild(td);
tbody.appendChild(tr);
if(!this.wiki.isCommunityWiki()){
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.setAttribute("width","25%");
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.CREATOR));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var a=d.createElement("a");
a.className="lotusPerson";
quickr.share.scenes.generateUserLink(this.app,this.app.routes,this.wiki.getAuthor(),a);
a.appendChild(d.createTextNode(this.wiki.getAuthor().name));
td.appendChild(a);
td.setAttribute("id","wiki_creator");
label.setAttribute("for",td.getAttribute("id"));
tr.appendChild(td);
tbody.appendChild(tr);
}
var tr2=d.createElement("tr");
tr2.className="lotusFormFieldRow";
var td2=d.createElement("td");
td2.setAttribute("width","25%");
td2.className="lotusFormLabel";
var lbl=d.createElement("label");
lbl.setAttribute("for","desc");
lbl.appendChild(d.createTextNode(this.nls.DESC_LABEL));
td2.appendChild(lbl);
tr2.appendChild(td2);
var td2=d.createElement("td");
var inp=d.createElement("textarea");
inp.className="lotusText";
inp.setAttribute("id","desc");
inp.setAttribute("rows",this._commentsRowsNum);
inp.style.width="320px";
td2.appendChild(inp);
dojo.connect(inp,"onchange",this,"validateDescription");
dojo.connect(inp,"onkeypress",this,"_descriptionChanged");
this.description=inp;
inp.value=this.wiki.getDescription();
lbl.setAttribute("for",inp.getAttribute("id"));
tr2.appendChild(td2);
var td2=d.createElement("td");
quickr.share.scenes.createHelpLink(this.app,td2,"wikicreate.description");
tr2.appendChild(td2);
tbody.appendChild(tr2);
quickr.share.wiki.action.EditWiki.applyTagsSection(tbody,this,this.app,this.wiki);
},updateDialog:function(file,opt,_23f7){
return;
},loadWiki:function(_23f8,_23f9){
var error;
if(_23f8 instanceof Error||!_23f8){
alert(this.nls.ERROR_LOAD);
this.cancelDialog();
}else{
var wiki=this.wiki=new quickr.share.wiki.bean.Wiki(_23f8.documentElement);
}
this.createLoadedDialog();
this.enableInput(this.dialog);
},save:function(e){
dojo.stopEvent(e);
this.disableInput();
quickr.share.validation.removeFormErrors(this.form);
if(!this.validateDescription()){
this.enableInput();
return;
}
var _23fd=this.createPostBody();
this.app.net.putXml({url:this.url,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:_23fd,detectHtmlLogin:quickr.share.util.detectLoginForMultipartAtomResponse,headers:{"Content-Type":"application/atom+xml: charset=\"UTF-8\""},handle:dojo.hitch(this,this._saveComplete)});
},createPostBody:function(){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE,quickr.share.util.SNX_NAMESPACE]);
var entry=doc.documentElement;
var id=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
id.appendChild(doc.createTextNode(this.wiki.getId()));
entry.appendChild(id);
var _2401=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_2401.setAttribute("term","wiki");
_2401.setAttribute("label","wiki");
_2401.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_2401);
var label=quickr.share.util.createElementNS(doc,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
label.appendChild(doc.createTextNode(this.wiki.getLabel()));
entry.appendChild(label);
var _2403=quickr.share.util.createElementNS(doc,"summary",quickr.share.util.ATOM_NAMESPACE);
_2403.setAttribute("type","text");
_2403.appendChild(doc.createTextNode(this.description.value));
entry.appendChild(_2403);
return quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
},_saveComplete:function(_2404,_2405){
if(_2404 instanceof Error||!_2404){
if(_2404.message=="unauthenticated"){
this.enableInput();
return;
}
alert(this.nls.ERROR_SAVE);
this.cancelDialog();
}else{
this.destroy();
}
},ontagchange:function(){
}});
quickr.share.wiki.action.EditWiki.applyTagsSection=function(tbody,_2407,app,doc){
var d=app.document;
var opts={};
var tr2=d.createElement("tr");
tr2.className="lotusFormFieldRow";
var td2=d.createElement("td");
td2.setAttribute("width","25%");
td2.className="lotusFormLabel";
var lbl=d.createElement("label");
lbl.appendChild(d.createTextNode(_2407.nls.TAGS_LABEL));
td2.appendChild(lbl);
tr2.appendChild(td2);
var td2=d.createElement("td");
var _240f=d.createElement("span");
var _2410=_2407.tagger=new quickr.widget.Tagger({baseClass:"lotusTags",labelText:"",editable:true,tags:doc.getTags(),docId:doc.getAtomId(),url:doc.getUrlEntry(),deleteTag:dojo.hitch(null,quickr.share.wiki.action.EditWiki.deleteTag,_2407),createTags:dojo.hitch(null,quickr.share.wiki.action.EditWiki.createTags,_2407),urlAllTags:app.routes.getTagServiceUrl(),tagStore:app.getTagTypeAheadStore(),renderPopup:dojo.hitch(null,quickr.share.scenes.applyGenericPopup,app),generateTagLink:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,app.authenticatedUser?app.authenticatedUser.id:null,opts,true,true,false),_strings:app.nls.TAGGER,_astrings:app.nls,net:app.net},_240f);
td2.appendChild(_240f);
dojo.connect(_2410,"ontagchange",_2407,"ontagchange");
lbl.setAttribute("for",_240f.getAttribute("id"));
tr2.appendChild(td2);
var td2=d.createElement("td");
quickr.share.scenes.createHelpLink(app,td2,"wikicreate.tags");
tr2.appendChild(td2);
tbody.appendChild(tr2);
};
quickr.share.wiki.action.EditWiki.deleteTag=function(_2411,tag,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
var _2414=_2411.createPostBody();
var _2415=new quickr.share.wiki.action.ConfirmDialogAction();
var nls=this._astrings;
var _2417={CANCEL:nls.CANCEL,HEADING:this._strings.REMOVE,MESSAGE:dojo.string.substitute(this._strings.REMOVECONFIRM,[tag]),OK:nls.REMOVE_MEMBER.ACTION,BUSY:nls.EDIT_FILE.BUSY};
this.confirmDialog=_2415;
_2415.execute(null,{onSubmit:dojo.hitch(this,function(tag){
this.tags=dojo.filter(this.tags,function(a){
return a!=tag;
});
this.update(true);
var _241a=quickr.share.util.rewriteUri(this.url,{removeTag:tag});
this.net.putXml({url:_241a,postData:_2414,contentType:"application/atom+xml",timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,handle:dojo.hitch(this,function(tag){
this.handleDelete(tag);
this.confirmDialog.cancelDialog();
delete this.confirmDialog;
},tag)});
},tag),strings:_2417});
};
quickr.share.wiki.action.EditWiki.createTags=function(_241c,e){
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
this.errNode.style.display="none";
quickr.util.html.removeChildren(this.errNode);
this.tagCombo.staticClass="lotusText";
dojo.removeClass(this.inputField,"lotusFormErrorField");
var _241e=this.formNode.firstChild.value;
var tags=this.validateTags(_241e);
if(!this.validateTagLength(tags)){
return;
}
if(tags&&tags.length>0){
var _2420=quickr.util.uri.rewriteUri(this.url,{tag:tags,includeTags:true});
var _2421=_241c.createPostBody();
this.net.putXml({url:_2420,postData:_2421,contentType:"application/atom+xml",handle:dojo.hitch(this,this.handleCreate,tags)});
}else{
this.cancelEdit();
}
};
}
if(!dojo._hasResource["quickr.share.wiki.bean.AtomEntry"]){
dojo._hasResource["quickr.share.wiki.bean.AtomEntry"]=true;
dojo.provide("quickr.share.wiki.bean.AtomEntry");
dojo.declare("quickr.share.wiki.bean.AtomEntry",null,{constructor:function(entry){
this.e=entry;
},getEditLink:function(){
},getSelfLink:function(){
},getDeleteLink:function(){
},getAuthor:function(){
if(!this.author){
this.author=new quickr.share.bean.User(this.e.getElementsByTagName("author")[0]);
}
return this.author;
},getId:function(){
if(!this.id){
this.id=quickr.share.util.getChildElementTextContent(this.e,"id");
}
return this.id;
},getTitle:function(){
if(!this.title){
this.title=quickr.share.util.getChildElementTextContent(this.e,"title");
}
return this.title;
},getContent:function(){
if(!this.content){
this.content=quickr.share.util.getChildElementTextContent(this.e,"content");
}
return this.content;
}});
}
if(!dojo._hasResource["quickr.share.wiki.bean.Member"]){
dojo._hasResource["quickr.share.wiki.bean.Member"]=true;
dojo.provide("quickr.share.wiki.bean.Member");
dojo.declare("quickr.share.wiki.bean.Member",quickr.share.wiki.bean.AtomEntry,{getDisplayName:function(){
if(!this.displayName){
this._initMemberFields();
}
return this.displayName;
},getUpdated:function(){
return new Date();
},getModifier:function(){
return {name:"",email:"",id:""};
},getPublished:function(){
return new Date();
},getTags:function(){
return [];
},getEmail:function(){
if(!this.email){
this._initMemberFields();
}
return this.email;
},getDN:function(){
if(!this.DN){
this._initMemberFields();
}
return this.DN;
},getDirectoryId:function(){
if(!this.directoryId){
this._initMemberFields();
}
return this.directoryId;
},getType:function(){
if(!this.type){
this._initMemberFields();
}
return this.type;
},_initMemberFields:function(){
if(this.e){
var _2423=this.e.getElementsByTagName("content")[0];
var c=quickr.share.util.getChildElementNS(_2423,"member",quickr.share.wiki.util.CA_NAMESPACE);
this.displayName=(dojo.isIE)?c.getAttribute(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":display-name"):c.getAttributeNS(quickr.share.wiki.util.CA_NAMESPACE.LONG,"display-name");
this.type=(dojo.isIE)?c.getAttribute(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":type"):c.getAttributeNS(quickr.share.wiki.util.CA_NAMESPACE.LONG,"type");
this.directoryId=(dojo.isIE)?c.getAttribute(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":id"):c.getAttributeNS(quickr.share.wiki.util.CA_NAMESPACE.LONG,"id");
this.DN=(dojo.isIE)?c.getAttribute(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":DN"):c.getAttributeNS(quickr.share.wiki.util.CA_NAMESPACE.LONG,"DN");
this.email=(dojo.isIE)?c.getAttribute(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":email"):c.getAttributeNS(quickr.share.wiki.util.CA_NAMESPACE.LONG,"email");
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.ManageWikiAccess"]){
dojo._hasResource["quickr.share.wiki.action.ManageWikiAccess"]=true;
dojo.provide("quickr.share.wiki.action.ManageWikiAccess");
dojo.declare("quickr.share.wiki.action.ManageWikiAccess",[quickr.share.action.DialogAction],{wDialog:"470px",_stringsPrefix:"WIKI_ACCESS",constructor:function(app,scene){
this.listeners=[];
this.app=app;
this.nls=app.nls[this._stringsPrefix];
this.wikiLabel=scene.wikiLabel||scene.sceneInfo.wikiLabel;
this.libraryId=scene.libraryId;
},destroy:function(){
this.inherited(arguments);
},isValid:function(file,opt){
return true;
},createDialog:function(item,opt,_242b){
var d=document;
this.optionsNode=null;
var _242d=d.createElement("div");
_242d.className="lotusDialogBorder";
_242d.style.width=this.wDialog;
var el=_242b.formNode=d.createElement("form");
dojo.connect(el,"onsubmit",dojo.hitch(this,function(e){
dojo.stopEvent(e);
}));
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=this.closeButton=d.createElement("a");
a.title=this.app.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.TITLE));
el.appendChild(h1);
var _2434=d.createElement("div");
_2434.className="lotusDialogContent";
var _2435=d.createElement("fieldset");
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=this.optionsNode=d.createElement("tr");
tr.className="lotusFormFieldRow";
tbody.appendChild(tr);
table.appendChild(tbody);
_2435.appendChild(table);
_2434.appendChild(_2435);
el.appendChild(_2434);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_242b.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(this.app.nls.LOADING));
div.appendChild(span);
var input=_242b.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.SAVE;
dojo.connect(input,"onclick",this,"performAdd");
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.app.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_242d.appendChild(el);
_242b.setContent(_242d);
this.disableInput();
this.app.net.getXml({url:this.app.routes.getApplicationMembersServiceUrl(this.libraryId,{filter:"type=virtual"}),handle:dojo.hitch(this,this._createDialog,item,opt,_242b)});
},_createDialog:function(item,opt,_243d,_243e,_243f){
if(_243e instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_243e,_243f));
return;
}
this.wasPublicViewingAllowed=this.wasAuthenticatedEditingAllowed=false;
var _2440=_243e.documentElement.getElementsByTagName("entry");
for(var i=0;i<_2440.length;i++){
var _2442=new quickr.share.wiki.bean.Member(_2440[i]);
if(_2442.getType()=="virtual"){
if(_2442.getDirectoryId()=="anonymous-user"){
this.wasPublicViewingAllowed=true;
}else{
if(_2442.getDirectoryId()=="all-authenticated-users"){
this.wasAuthenticatedEditingAllowed=true;
}
}
}
}
var _2443=this.accessOptions=new quickr.share.wiki.widget.WikiAccessOptions({_strings:this.app.nls.WIKI_ACCESS,app:this.app},this.optionsNode);
_2443.setPublicViewingAllowed(this.wasPublicViewingAllowed);
_2443.setAuthenticatedEditingAllowed(this.wasAuthenticatedEditingAllowed);
this.enableInput();
},updateDialog:function(file,opt,_2446){
return;
},performAdd:function(e){
this.disableInput();
var _2448=0;
var _2449=this.accessOptions;
var roles={};
if(_2449.isPublicViewingAllowed()&&!this.wasPublicViewingAllowed){
_2448++;
roles["reader"]=[{id:"anonymous-user",type:"virtual"}];
}
if(_2449.isAuthenticatedEditingAllowed()&&!this.wasAuthenticatedEditingAllowed){
_2448++;
roles["editor"]=[{id:"all-authenticated-users",type:"virtual"}];
}
if(_2448<1){
this.performDelete();
return;
}
var opts={};
var _244c=this.app.routes.getApplicationRolesServiceUrl(this.libraryId,opts);
var doc=quickr.share.util.newXMLDocument("feed",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE,quickr.share.wiki.util.CA_NAMESPACE]);
var feed=doc.documentElement;
var id=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
id.appendChild(doc.createTextNode("ca:/applications/{libraryId}/roles".replace("{libraryId}",this.libraryId)));
feed.appendChild(id);
for(var role in roles){
var entry=quickr.share.util.createElementNS(doc,"entry",quickr.share.util.ATOM_NAMESPACE);
var eid=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
eid.appendChild(doc.createTextNode("ca:/applications/{libraryId}/roles/{role}".replace("{libraryId}",this.libraryId).replace("{role}",role)));
entry.appendChild(eid);
var _2453=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_2453.setAttribute("type","application/xml");
var _2454=roles[role];
var _2455=quickr.share.util.createElementNS(doc,"role",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2455,this._w("id"),role+"@"+this.libraryId,quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2455,this._w("type"),role,quickr.share.wiki.util.CA_NAMESPACE);
for(var i=0;i<_2454.length;i++){
var _2457=quickr.share.util.createElementNS(doc,"member",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2457,this._w("id"),_2454[i].id,quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2457,this._w("type"),_2454[i].type,quickr.share.wiki.util.CA_NAMESPACE);
_2455.appendChild(_2457);
}
_2453.appendChild(_2455);
entry.appendChild(_2453);
feed.appendChild(entry);
}
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.app.net.postXml({url:_244c,postData:text,headers:{"Content-Type":"application/atom+xml;charset=\"UTF-8\""},handle:_2448<2?dojo.hitch(this,this.performDelete):dojo.hitch(this,this.complete)});
},performDelete:function(_2459,_245a){
if(_2459 instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_2459,_245a));
return;
}
var _245b=false;
var _245c=this.accessOptions;
var _245d=[];
if(!_245c.isPublicViewingAllowed()&&this.wasPublicViewingAllowed){
_245b=true;
_245d.push("anonymous-user");
}
if(!_245c.isAuthenticatedEditingAllowed()&&this.wasAuthenticatedEditingAllowed){
_245b=true;
_245d.push("all-authenticated-users");
}
if(!_245b){
this.complete();
return;
}
var url=this.app.routes.getApplicationRolesServiceUrl(this.libraryId,{memberId:_245d});
this.app.net.deleteXml({url:url,handle:dojo.hitch(this,this.complete)});
},complete:function(_245f,_2460){
if(_245f instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_245f,_2460));
}else{
this.destroy();
}
},onerror:function(code){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.ERROR);
this.enableInput();
},_w:function(name){
return dojo.isIE?name:("ca:"+name);
}});
}
if(!dojo._hasResource["quickr.share.wiki.bean.Navigation"]){
dojo._hasResource["quickr.share.wiki.bean.Navigation"]=true;
dojo.provide("quickr.share.wiki.bean.Navigation");
dojo.declare("quickr.share.wiki.bean.Navigation",null,{constructor:function(name,p,id){
this.label=name;
this.parent=p;
this.id=id;
},getLabel:function(){
return this.label;
},setParent:function(p){
this.parent=p;
},getParent:function(){
return this.parent;
},getId:function(){
return this.id;
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.AbstractPage"]){
dojo._hasResource["quickr.share.wiki.scenes.AbstractPage"]=true;
dojo.provide("quickr.share.wiki.scenes.AbstractPage");
dojo.declare("quickr.share.wiki.scenes.AbstractPage",[quickr.share.scenes.AsyncScene,quickr.share.wiki.scenes.WikiSidebarPage],{defaultSearchScope:"thiswiki",constructor:function constructor(app,_2468){
this.app=app;
this.nls=app.nls;
this.sceneInfo=_2468;
this.baseWidgets=["searchFor","userWatchlist"];
this.widgets=[];
this.expanded={};
this.wikiLabel=_2468.wikiLabel;
this.pageId=_2468.pageId;
this.pageName=_2468.pageName;
this.userId=_2468.userId=app.authenticatedUser?app.authenticatedUser.id:null;
},begin:function(_2469){
this.end();
this.document=null;
this.user=null;
var _246a=[];
if(_2469&&_2469.declaredClass==this.declaredClass&&(_2469.wikiLabel==this.wikiLabel)&&((_2469.pageId&&_2469.pageId==this.pageId)||(_2469.pageName&&_2469.pageName==this.pageName))){
this.expanded=_2469.expanded;
if(_2469.versionsSectionOpen&&!(_2469.versionReverted||_2469.saved)){
this.versions=_2469.versions;
this.versionsSectionOpen=true;
}
if(_2469.attachmentsSectionOpen){
this.attachments=_2469.attachments;
this.attachmentsSectionOpen=true;
}
if(_2469.comments){
this.comments=_2469.comments;
}
if(_2469.tagger){
this.tagger=_2469.tagger;
}
if(_2469.rater){
this.rater=_2469.rater;
}
if(_2469.notify){
this.notify=_2469.notify;
}
if(_2469.downloads){
this.downloads=_2469.downloads;
}
}
_246a.push([this.app.routes.getUserInfoServiceUrl(this.userId),"loadUser","json-comment-optional"]);
if(_246a.length>0){
this.request(_246a);
}else{
this.show();
}
},loadUser:function(_246b,_246c){
var error;
if(_246b instanceof Error||!_246b||!_246b.items||_246b.items.length<1){
error={type:"user"};
}else{
var user=this.user=quickr.share.scenes.createUser(this.app,_246b.items[0]);
}
return error;
},loadWiki:function(_246f,_2470){
var error;
if(_246f instanceof Error||!_246f){
var code=quickr.share.util.getAtomErrorCode(_246f,_2470);
if(code=="unauthenticated"){
error={type:"unauthenticated"};
}else{
if(code=="AccessDenied"){
error={type:"unauthorized"};
}else{
error={type:"user"};
}
}
}else{
var wiki=this.wiki=new quickr.share.wiki.bean.Wiki(_246f.documentElement);
var _2474=wiki.getPermissions();
if(!(_2474&&_2474.AddChild)){
error={type:"unauthorized"};
}
}
return error;
},onRequestsCompleted:function(_2475){
if(dojo.some(_2475,function(e){
return e.type=="user";
})){
this.showUserError(dojo.filter(_2475,function(e){
return e.type=="user";
})[0]);
}else{
if(_2475.length>0){
this.showError(_2475[0]);
}else{
this.show();
}
}
},onRequestCompleted:function(error){
return (error.type=="user");
},show:function(){
var d=this.app.document;
var _247a=this.app.authenticatedUser;
var _247b=this.document;
if(this.draftId){
this.fileLastUpdated=_247b.getDocumentUpdated();
}else{
this.fileLastUpdated=_247b.getUpdated();
}
var app=this.app;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_247a?_247a.id:null)});
quickr.share.wiki.scenes.applyHomeTemplate(d,app.authenticatedUser,app,app.routes,{logout:dojo.hitch(this,this._beforeLogout),defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.AbstractPage.render(d,_247b,null,_247a,null,app,app.routes,this);
d.body.style.visibility="visible";
},end:function(_247d){
this.cancelRequests();
quickr.share.util.destroy(this.baseWidgets);
quickr.share.util.destroy(this.widgets);
quickr.share.util.destroy(this.actions);
if(this.editor){
this.editor.destroy();
}
this.widgets=this.actions=[];
quickr.share.util.destroy(this.deleteShareAction);
this.deleteShareAction=null;
quickr.share.util.destroy(this.changePropagationAction);
this.changePropagationAction=null;
},expand:function(s){
this.expanded[s]=true;
},collapse:function(s){
this.expanded[s]=false;
},_beforeLogout:function(){
this.app.logout();
}});
quickr.share.wiki.scenes.AbstractPage.manageMembers=function(app,scene){
if(scene.wikiLabel&&scene.libraryId){
app.navigate(app.routes.getManageMembersUrl(scene.wikiLabel,scene.libraryId));
}else{
}
};
quickr.share.wiki.scenes.AbstractPage.settings=function(app,scene){
if(scene.wikiLabel||scene.sceneInfo&&scene.sceneInfo.wikiLabel){
var _2484=new quickr.share.wiki.action.EditWiki(app,scene);
_2484.execute();
}
};
quickr.share.wiki.scenes.AbstractPage.manageAccess=function(app,scene){
if(scene.wikiLabel||scene.sceneInfo&&scene.sceneInfo.wikiLabel){
var _2487=new quickr.share.wiki.action.ManageWikiAccess(app,scene);
_2487.execute();
}
};
quickr.share.wiki.scenes.AbstractPage.createBreadcrumbs=function(_2488,_2489,d,app,scene){
var url=app.routes.getPageNavigationUrl({page:_2488,library:_2489,breadcrumbs:"true"});
app.net.getJson({url:url,handle:dojo.hitch(scene,quickr.share.wiki.scenes.AbstractPage.loadBreadcrumbs,null,d,app,scene)});
};
quickr.share.wiki.scenes.AbstractPage.loadBreadcrumbs=function(_248e,d,app,scene,_2492,_2493){
if(_2492 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2492,_2493);
}else{
if(_2492!=null){
var json={"identifier":"id","label":"name","items":_2492.breadcrumbs};
}else{
var json={"identifier":"id","label":"name","items":_248e};
}
var data={data:json};
var _2496=new dojo.data.ItemFileReadStore(data);
var _2497=[];
var root=null;
var _2499=null;
_2496.fetch({query:{root:"true"},onItem:function(item,_249b){
_2499=item;
root=new quickr.share.wiki.bean.Navigation(_2496.getValue(item,"name"),null,_2496.getValue(item,"id"));
_2497.unshift(root);
}});
if(root!=null){
var _249c=_2496.getValues(_2499,"children");
var _249d=root;
while(_249c.length>0){
_2496.fetch({query:{name:_2496.getValue(_249c[0],"name")},onItem:function(item,_249f){
_2499=item;
_249d=new quickr.share.wiki.bean.Navigation(_2496.getValue(item,"name"),_249d,_2496.getValue(item,"id"));
_2497.unshift(_249d);
}});
var _249c=_2496.getValues(_2499,"children");
}
}
scene.parents=_2497.reverse();
var _24a0=quickr.share.wiki.util.shallowClone(scene.parents);
if(scene.title){
_24a0.push(scene.title);
}
var _24a1=dojo.byId("wikiBreadcrumbs");
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,_24a1,_24a0,app,scene);
}
};
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs=function(d,el,_24a4,app,scene){
var _24a7=app.routes;
var p=d.createElement("span");
p.className="lotusTiny";
p.appendChild(d.createTextNode(app.nls.WIKI_BREADCRUMBS.YOUAREHERE));
p.appendChild(d.createTextNode(" "));
_24a4.unshift({title:scene.wiki.getTitle(),url:app.routes.getWikiUrl(scene.wikiLabel,null)});
for(var i=0;i<_24a4.length-1;i++){
if(typeof (_24a4[i])!="string"){
if(typeof (_24a4[i].getLabel)=="function"){
var a=d.createElement("a");
var linkT=_24a4[i].getLabel().replace(/\+/g,"_");
quickr.share.scenes.setOnClick(a,app,_24a7.getWikiPageUrl(scene.wikiLabel,linkT));
a.appendChild(d.createTextNode(_24a4[i].getLabel()));
a.className="lotusLink";
p.appendChild(a);
}else{
if(typeof (_24a4[i].label)=="string"){
var a=d.createElement("a");
var linkT=_24a4[i].label.replace(/\+/g,"_");
quickr.share.scenes.setOnClick(a,app,_24a7.getWikiPageUrl(scene.wikiLabel,linkT));
a.appendChild(d.createTextNode(_24a4[i].label));
a.className="lotusLink";
p.appendChild(a);
}else{
if(_24a4[i].url&&_24a4[i].title){
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_24a4[i].url);
a.appendChild(d.createTextNode(_24a4[i].title));
a.className="lotusLink";
p.appendChild(a);
}else{
p.appendChild(d.createTextNode(_24a4[i]));
}
}
}
}else{
p.appendChild(d.createTextNode(_24a4[i]));
}
if(i<_24a4.length-1){
p.appendChild(d.createTextNode(" > "));
}
}
if(typeof (_24a4[_24a4.length-1].getLabel)=="function"){
p.appendChild(d.createTextNode(_24a4[_24a4.length-1].getLabel()));
}else{
if(_24a4[_24a4.length-1].value){
p.appendChild(d.createTextNode(_24a4[_24a4.length-1].value));
}else{
p.appendChild(d.createTextNode(_24a4[_24a4.length-1]));
}
}
el.appendChild(p);
};
quickr.share.wiki.scenes.AbstractPage.applyTitle=function(d,el,opt){
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,el,[],opt.app,opt.scene);
};
quickr.share.wiki.scenes.AbstractPage.applyPageView=function(){
};
quickr.share.wiki.scenes.AbstractPage.applySideNav=function(d,el,pages,_24b2,app,scene){
var div=d.createElement("div");
div.id="lotusSidenav";
div.className="lotusMenu";
var _24b6=d.createElement("div");
_24b6.className="lotusBottomCorner";
var inner=d.createElement("div");
inner.className="lotusInner";
var ul=d.createElement("ul");
for(var i=0;i<pages.length;i++){
var li=d.createElement("li");
if(i==_24b2){
dojo.addClass(li,"lotusSelected");
}
var e=d.createElement("a");
e.appendChild(d.createTextNode(pages[i].title));
quickr.share.scenes.setOnClick(e,app,pages[i].url);
li.appendChild(e);
li.appendChild(d.createTextNode(" "));
ul.appendChild(li);
}
inner.appendChild(ul);
var cdiv=d.createElement("div");
cdiv.className="lotusChunk lotusRight lotusTiny";
var _24bd=dojo.getObject("quickr.share.config.actions.myWikiCreatePage");
var _24be=this.wikiActions=(_24bd)?_24bd(app,this,{}):[];
var _24bf=app.authenticatedUser;
var opt={};
for(var i=0;i<_24be.length;i++){
var _24c1=_24be[i];
var e=d.createElement("a");
e.href=_24c1.getUrlResource(_24bf,opt)||"javascript:;";
dojo.connect(e,"onclick",dojo.hitch(_24c1,_24c1.execute,scene.wikiLabel,_24bf,opt));
e.appendChild(d.createTextNode("+ "+_24c1.getName(_24bf,opt)));
e.className="lotusAction";
e.href="javascript:;";
cdiv.appendChild(e);
if(i+1!=_24be.length){
cdiv.appendChild(d.createElement("br"));
}
}
inner.appendChild(cdiv);
_24b6.appendChild(inner);
div.appendChild(_24b6);
el.appendChild(div);
};
quickr.share.wiki.scenes.AbstractPage.render=function(d,doc,_24c4,user,app,_24c7,scene){
var opt={app:app,routes:app.routes,authenticatedUser:_24c4,scene:scene,user:user,aboutTitle:app.nls.DOCUMENTCONTENT.ABOUTPAGE,documentId:doc.getId(),documentFeedUrl:scene.draftId?null:doc.getUrlFeed(),onattachmentcountupdate:dojo.hitch(scene,scene.onattachmentcountupdate),generateCommentLink:dojo.hitch(null,quickr.share.scenes.generatePageCommentLink,app,app.routes,doc),generateUserLink:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),getUserInfoUrl:dojo.hitch(app.routes,app.routes.getUserInfoServiceUrl),renderTipPopup:dojo.hitch(null,quickr.share.scenes.applyTipPopup,app)};
var c=d.getElementById("lotusMain");
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
quickr.share.wiki.scenes.AbstractPage.applySideNav(d,el,pages,-1,app,scene);
scene.applyTagsSection(d,el,app,scene);
scene.applyPageListNav(d,el,app,scene);
scene.applyToolsNav(d,el,doc,app,scene);
c.appendChild(el);
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var div=d.createElement("div");
div.className="wikiHeader";
quickr.share.wiki.scenes.AbstractPage.applyTitle(d,div,opt);
el.appendChild(div);
var div=d.createElement("div");
div.id="pageDetails";
quickr.share.wiki.scenes.AbstractPage.applyPageView(d,div,opt);
el.appendChild(div);
c.appendChild(el);
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.WikiIndex"]){
dojo._hasResource["quickr.share.wiki.scenes.WikiIndex"]=true;
dojo.provide("quickr.share.wiki.scenes.WikiIndex");
dojo.declare("quickr.share.wiki.scenes.WikiIndex",[quickr.share.scenes.AbstractList,quickr.share.wiki.scenes.WikiSidebarPage],{defaultSearchScope:"thiswiki",views:quickr.share.wiki.scenes.WIKIPAGE_VIEWS,dateFilters:quickr.share.scenes.CHANNEL_FILTERS.DATE,sorts:[{id:"updated",sK:"modified"},{id:"mostpopular",sK:"downloaded",isValid:function(app,scene){
return scene.activeView&&scene.activeView.id=="details";
}},{id:"highestrated",sK:"recommended",isValid:function(app,scene){
return scene.activeView&&scene.activeView.id=="details";
}},{id:"size",sK:"length",isValid:function(app,scene){
return scene.activeView&&scene.activeView.id=="summary";
}},{id:"totalSize",sK:"totalMediaSize"},{id:"name",sK:"label",lowToHigh:true},{id:"mostcommented",sK:"commented",isValid:function(app,scene){
return scene.activeView&&scene.activeView.id=="details";
}},{id:"added",sK:"published",isValid:function(app,scene){
return scene.activeView&&scene.activeView.id=="summary";
}}],constructor:function(app,_24d9){
this.app=app;
this.sceneInfo=_24d9;
this.init(app,_24d9);
this.wikiLabel=_24d9.wikiLabel;
},begin:function(_24da){
if(_24da&&_24da.navStore&&_24da.wikiLabel==this.wikiLabel){
this.navStore=_24da.navStore;
}else{
this.navStore=null;
}
if(_24da&&_24da.wiki){
this.wiki=_24da.wiki;
this.libraryId=this.wiki.getId();
this.show();
}else{
this.getWikiPermissions();
}
},end:function(_24db){
},initFilters:function(p){
p=p||{};
if(p.tag){
var tags=dojo.isArray(p.tag)?p.tag:[p.tag];
var _24de=this.activeTags={};
var _24df=this.activeFilters;
dojo.forEach(tags,function(tag){
_24df.push({id:"tags",longName:tag,setServiceOptions:function(_24e1){
(_24e1.tag=_24e1.tag||[]).push(tag);
},removeAppParams:function(_24e2){
if(_24e2.tag){
var index=dojo.indexOf(_24e2.tag,tag);
if(index!=-1){
delete _24e2.tag[index];
}
}
}});
_24de[tag]=1;
});
this.params.tag=tags;
}
if(p.date){
var _24e4=this._byId(this.dateFilters,p.date);
if(_24e4){
this.activeFilters.push(_24e4);
}
this.params.date=p.date;
}
},getListUrl:function(opts){
var p={pageSize:10,includeTags:true};
opts=opts||{};
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _24e7=!this.activeSort.lowToHigh;
if(this.sortReversed){
_24e7=!_24e7;
}
p.sortDescending=_24e7;
}
for(var i=0;i<this.activeFilters.length;i++){
var _24e9=this.activeFilters[i];
if(_24e9.setServiceOptions){
_24e9.setServiceOptions(p);
}
}
var url=this.app.routes.getWikiDocumentsFeedServiceUrl(this.sceneInfo.wikiLabel,p);
return url;
},show:function(){
var d=this.app.document;
var app=this.app;
d.title=dojo.string.substitute(this.app.nls.WINDOWTITLE.PAGEINDEX,[this.wiki.getTitle()]);
var _24ed=this.app.authenticatedUser;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_24ed?_24ed.id:null)});
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"wikiindex",defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.wiki,this.app.authenticatedUser,null,this.wiki.getTitle(),this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.WikiIndex.render(d,this.app,this);
var _24ee=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_24ee,this.app,this,this.app.authenticatedUser,false);
var _24ef={_strings:app.nls.CONTENT,_appstrings:app.nls,permissions:this.permissions,tagStore:app.getTagTypeAheadStore(),urlAllTags:app.routes.getTagServiceUrl(),generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),generateLinkToPage:dojo.hitch(null,function(app,_24f1,_24f2,doc,link,_24f5){
var _24f5=_24f5||{};
if(_24f5.section=="comments"){
quickr.share.scenes.setOnClick(link,app,_24f1.getWikiPageCommentUrl(_24f2,doc.getName()));
}else{
quickr.share.scenes.setOnClick(link,app,_24f1.getWikiPageUrl(_24f2,doc.getName()));
}
},app,app.routes,this.sceneInfo.wikiLabel),getUserRecommendationUrl:dojo.hitch(app.routes,app.routes.getRecommendServiceUrl),getUnsavedChangesList:dojo.hitch(app,app.getUnsavedChangesList),generateSortLink:dojo.hitch(null,quickr.share.wiki.scenes.WikiIndex.generateSortLink,app,app.routes,this.sceneInfo.wikiLabel,this.params),generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,this.userId,this.params,true,false,false),app:app,routes:app.routes,sortId:this.sortId,sortReversed:this.sortReversed,view:this.activeView.id};
var _24f6=new quickr.share.wiki.widget.WikiIndexStreamRenderer(_24ef);
var list=this.list=new quickr.widget.Stream({id:"list",baseClass:"lotusStream",renderer:_24f6,msgNoData:app.nls.WIKI_HOME.SIDEBAR.NO_ITEMS,_strings:app.nls.CONTENT,url:this.getListUrl(),onUpdate:dojo.hitch(this,this.onUpdate),net:app.net},d.getElementById("scene-list"));
dojo.connect(_24f6,"ontagchange",this,"ontagchange");
list.update();
d.body.style.visibility="visible";
},ontagchange:function(){
if(this.taglist){
this.taglist.reload();
}
},onUpdate:function(data){
},onFocusTypeAheadPageName:function(args){
if(this.allPagesCombo.textbox.value==this.allPagesCombo.textbox.defaultValue){
this.allPagesCombo.textbox.value="";
this.allPagesCombo.textbox.style.color="";
}
},onBlurTypeAheadPageName:function(args){
if(this.allPagesCombo.textbox.value==""){
this.allPagesCombo.textbox.value=this.allPagesCombo.textbox.defaultValue;
this.allPagesCombo.textbox.style.color="#aaa";
}
},onSelectTypeAheadPageName:function(args){
var app=this.app;
var _24fd=app.routes;
var _24fe=this.allPagesCombo.value;
if(_24fe&&_24fe!=this.allPagesCombo.textbox.defaultValue){
app.navigate(_24fd.getWikiPageUrl(this.wikiLabel,_24fe));
}
},showUnauthenticatedWarning:function(){
var app=this.app;
quickr.share.scenes.applyGenericWarning(app,app.nls.APP.ERRORS.LOGIN.TITLE,app.nls.APP.ERRORS.LOGIN.MESSAGES,[[app.nls.APP.ERRORS.LOGIN.ACT,app.getUrl(),"login"]]);
},getWikiPermissions:function(){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.getWikiEntryComplete),sync:true});
},getWikiEntryComplete:function(_2501,_2502){
var error;
if(_2501 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2501,_2502);
this.showPageError(error);
}else{
var _2504=this.app.authenticatedUser;
var _2505;
var e=_2501.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2507=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_2507=="wiki"){
_2505=new quickr.share.wiki.bean.Wiki(e);
}
}
if(_2505){
this.wiki=_2505;
this.libraryId=_2505.getId();
this.show();
}
}
},showPageError:function(error){
var app=this.app;
var _250a=app.routes;
var _250b=this.app.authenticatedUser;
var d=this.app.document;
d.title=this.app.nls.WINDOWTITLE.WIKIPAGEERROR;
var _250d=[];
if(!_250b){
_250d.push([dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.ERRORS.LOGIN),this.app.getUrl(),"login"]);
}
var _250e=false;
var _250f=false;
var text=this.app.nls.WIKIPAGE.ERROR.DEFAULT;
if(error){
if(error.code=="AccessDenied"){
if(!_250b){
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED_ANON;
}else{
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED;
}
_250e=true;
}else{
if(error.code=="ItemNotFound"){
if(error.type=="page"){
this.getWikiEntry();
return;
}else{
if(error.type=="wiki"){
text=this.app.nls.WIKIPAGE.ERROR.WIKI;
}else{
this.app.navigate(this.app.routes.getWelcomeUrl());
return;
}
}
}else{
if(error.code=="ForwardLink"){
this.showConfirmNewPage();
return;
}
}
}
}
if(_250e){
quickr.share.scenes.applyGenericWarning(this.app,text.TITLE,text.MESSAGES,_250d);
}else{
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,_250d);
}
d.body.style.visibility="visible";
if(_250f){
this.clearBeforeNavigate=true;
this.app.login();
}
}});
quickr.share.wiki.scenes.WikiIndex.generateSortLink=function(app,_2512,_2513,_2514,_2515,sort,_2517,a){
var p=dojo.clone(_2514);
p.sort=sort.id;
p.sortReversed=!_2517;
delete p.page;
var url=_2512.getPageIndexUrl(_2513,p);
quickr.share.scenes.setOnClick(a,app,url);
if(sort.tooltips){
a.title=(_2517)?sort.tooltips.normalOrder:a.title=sort.tooltips.reverseOrder;
}
};
quickr.share.wiki.scenes.WikiIndex.render=function(d,app,scene){
var opt={app:app,routes:app.routes,scene:scene,libraryId:scene.libraryId,wikiLabel:scene.wikiLabel};
var _251f=app.routes;
var _2520=app.authenticatedUser;
var _2521=scene.activeFilters;
var _2522=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="WikiIndex"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
quickr.share.wiki.scenes.WikiIndex.applySideNav(d,el,app,scene,_2520);
c.appendChild(el);
c.appendChild(scene.resizeBar(d,scene,app,true));
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var _2526=(dojo.getObject("quickr.share.config.actions.draftList")||function(){
return [];
})(app,scene);
quickr.share.scenes.applyUnsavedChangesAlert(app,el,_2526);
quickr.share.wiki.scenes.applyBackToWikiLink(d,el,app,scene);
var _2527=d.createElement("div");
_2527.className="lotusHeader";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(app.nls.HEADER.PAGEINDEX));
_2527.appendChild(h1);
var div=d.createElement("div");
if(_2521.length>0){
div.className="lotusFilters";
div.appendChild(d.createTextNode(app.nls.CONTENT.FILTERED_BY));
for(var i=0;i<_2521.length;i++){
var args;
if(_2521[i]&&_2521[i].removeAppParams){
args=dojo.clone(_2522);
_2521[i].removeAppParams(args);
}else{
args={};
}
div.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.className="lotusFilter";
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
a.appendChild(d.createTextNode(_2521[i].longName));
quickr.share.scenes.setOnClick(a,app,_251f.getPageIndexUrl(scene.wikiLabel,args));
var span=d.createElement("span");
span.className="lotusClose";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
div.appendChild(a);
div.appendChild(d.createTextNode(" "));
}
}
_2527.appendChild(div);
el.appendChild(_2527);
var div=d.createElement("div");
div.className="lotusBtnContainer lotusActionBar";
scene.renderView(d,div);
var clear=d.createElement("div");
clear.className="lotusClear";
clear.innerHTML="<!-- IE -->";
div.appendChild(clear);
el.appendChild(div);
var div=d.createElement("div");
div.id="scene-list";
el.appendChild(div);
c.appendChild(el);
c.activeTemplate="WikiIndex";
var nav=d.getElementById("lotusColLeft");
scene.applyBusinessCard(d,nav,scene.wiki,app,scene,scene.wiki.getCommunityId());
scene.applySideNav(d,nav,scene.wiki,opt);
}
};
quickr.share.wiki.scenes.WikiIndex.applySideNav=function(d,el,app,scene,_2534){
scene.applyTagsSection(d,el,scene.wiki,app,scene);
var _2535=dojo.filter(scene.dateFilters,function(_2536){
if(_2536.isValid){
return _2536.isValid(app,scene);
}
return true;
});
var _2537=quickr.share.scenes.findFilter(scene.activeFilters,_2535);
var f=dojo.hitch(null,this.createPageLink,app,app.routes,scene.wikiLabel,scene.params,"date");
quickr.share.scenes.createFilterSection(app,el,app.nls.FILTERS.DATE.TITLE,"files.filter.date",_2535,f,_2537,false);
scene.applyPageListNav(d,el,scene.wiki,app,scene);
scene.applyToolsNav(d,el,scene.wiki,app,scene);
if(el.firstChild){
dojo.addClass(el.firstChild,"lotusFirst");
}
};
quickr.share.wiki.scenes.WikiIndex.generateTagLink=function(app,_253a,_253b,opts,_253d,tag,a){
var p=(opts)?dojo.clone(opts):[];
p.tag=p.tag||[];
var index=dojo.indexOf(p.tag,tag);
if(_253d&&index==-1){
p.tag.push(tag);
}else{
if(!_253d&&index!=-1){
delete p.tag[index];
}
}
quickr.share.scenes.setOnClick(a,app,_253a.getPageIndexUrl(_253b,p));
};
quickr.share.wiki.scenes.WikiIndex.createPageLink=function(app,_2543,_2544,_2545,type,el,item){
var p=dojo.clone(_2545);
p[type]=(item)?item.id:null;
var url=_2543.getPageIndexUrl(app.scene.wikiLabel,p);
quickr.share.scenes.setOnClick(el,app,url);
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.MyPages"]){
dojo._hasResource["quickr.share.wiki.scenes.MyPages"]=true;
dojo.provide("quickr.share.wiki.scenes.MyPages");
dojo.declare("quickr.share.wiki.scenes.MyPages",[quickr.share.wiki.scenes.WikiIndex],{begin:function(_254b){
if(_254b&&_254b.navStore&&_254b.wikiLabel==this.wikiLabel){
this.navStore=_254b.navStore;
}else{
this.navStore=null;
}
var _254c=this.app.authenticatedUser;
if(!_254c){
quickr.share.wiki.scenes.showUnauthenticatedWarning(this.app);
return;
}
if(_254b&&_254b.wiki){
this.wiki=_254b.wiki;
this.libraryId=this.wiki.getId();
this.show();
}else{
this.getWikiPermissions();
}
},show:function(){
var d=this.app.document;
var app=this.app;
d.title=dojo.string.substitute(app.nls.WINDOWTITLE.MYPAGES,[app.authenticatedUser.name,this.wiki.getTitle()]);
var _254f=this.app.authenticatedUser;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_254f?_254f.id:null)});
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"mypages",defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.wiki,this.app.authenticatedUser,null,this.wiki.getTitle(),this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.MyPages.render(d,this.app,this);
var _2550=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_2550,this.app,this,this.app.authenticatedUser,false);
var _2551={_strings:app.nls.CONTENT,_appstrings:app.nls,permissions:this.permissions,tagStore:app.getTagTypeAheadStore(),urlAllTags:app.routes.getTagServiceUrl(),generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),generateLinkToPage:dojo.hitch(null,function(app,_2553,_2554,doc,link,_2557){
var _2557=_2557||{};
if(_2557.section=="comments"){
quickr.share.scenes.setOnClick(link,app,_2553.getWikiPageCommentUrl(_2554,doc.getName()));
}else{
quickr.share.scenes.setOnClick(link,app,_2553.getWikiPageUrl(_2554,doc.getName()));
}
},app,app.routes,this.sceneInfo.wikiLabel),getUserRecommendationUrl:dojo.hitch(app.routes,app.routes.getRecommendServiceUrl),getUnsavedChangesList:dojo.hitch(app,app.getUnsavedChangesList),generateSortLink:dojo.hitch(null,quickr.share.wiki.scenes.MyPages.generateSortLink,app,app.routes,this.sceneInfo.wikiLabel,this.params),generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,this.userId,this.params,true,false,false),app:app,routes:app.routes,sortId:this.sortId,sortReversed:this.sortReversed,view:this.activeView.id};
var _2558=new quickr.share.wiki.widget.WikiIndexStreamRenderer(_2551);
var list=this.list=new quickr.widget.Stream({id:"list",baseClass:"lotusStream",renderer:_2558,msgNoData:app.nls.WIKI_HOME.SIDEBAR.NO_ITEMS,_strings:app.nls.CONTENT,url:this.getListUrl(),onUpdate:dojo.hitch(this,this.onUpdate),net:app.net},d.getElementById("scene-list"));
dojo.connect(_2558,"ontagchange",this,"ontagchange");
list.update();
d.body.style.visibility="visible";
},getListUrl:function(opts){
var p={pageSize:10,includeTags:true};
opts=opts||{};
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _255c=!this.activeSort.lowToHigh;
if(this.sortReversed){
_255c=!_255c;
}
p.sortDescending=_255c;
}
for(var i=0;i<this.activeFilters.length;i++){
var _255e=this.activeFilters[i];
if(_255e.setServiceOptions){
_255e.setServiceOptions(p);
}
}
var url=this.app.routes.getMyWikiDocumentsFeedServiceUrl(this.sceneInfo.wikiLabel,p);
return url;
}});
quickr.share.wiki.scenes.MyPages.render=function(d,app,scene){
var opt={app:app,routes:app.routes,scene:scene,libraryId:scene.libraryId,wikiLabel:scene.wikiLabel};
var _2564=app.routes;
var _2565=app.authenticatedUser;
var _2566=scene.activeFilters;
var _2567=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="MyPages"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
quickr.share.wiki.scenes.WikiIndex.applySideNav(d,el,app,scene,_2565);
c.appendChild(el);
c.appendChild(scene.resizeBar(d,scene,app,true));
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var _256b=(dojo.getObject("quickr.share.config.actions.draftList")||function(){
return [];
})(app,scene);
quickr.share.scenes.applyUnsavedChangesAlert(app,el,_256b);
quickr.share.wiki.scenes.applyBackToWikiLink(d,el,app,scene);
var _256c=d.createElement("div");
_256c.className="lotusHeader";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(dojo.string.substitute(app.nls.HEADER.MYPAGES,[app.authenticatedUser.name])));
_256c.appendChild(h1);
var div=d.createElement("div");
if(_2566.length>0){
div.className="lotusFilters";
div.appendChild(d.createTextNode(app.nls.CONTENT.FILTERED_BY));
for(var i=0;i<_2566.length;i++){
var args;
if(_2566[i]&&_2566[i].removeAppParams){
args=dojo.clone(_2567);
_2566[i].removeAppParams(args);
}else{
args={};
}
div.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.className="lotusFilter";
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
a.appendChild(d.createTextNode(_2566[i].longName));
quickr.share.scenes.setOnClick(a,app,_2564.getPageIndexUrl(scene.wikiLabel,args));
var span=d.createElement("span");
span.className="lotusClose";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
div.appendChild(a);
}
}
_256c.appendChild(div);
el.appendChild(_256c);
var div=d.createElement("div");
div.className="lotusBtnContainer lotusActionBar";
scene.renderView(d,div);
var clear=d.createElement("div");
clear.className="lotusClear";
clear.innerHTML="<!-- IE -->";
div.appendChild(clear);
el.appendChild(div);
var div=d.createElement("div");
div.id="scene-list";
el.appendChild(div);
c.appendChild(el);
c.activeTemplate="MyPages";
var nav=d.getElementById("lotusColLeft");
scene.applySideNav(d,nav,scene.wiki,opt);
}
};
quickr.share.wiki.scenes.MyPages.generateSortLink=function(app,_2576,_2577,_2578,_2579,sort,_257b,a){
var p=dojo.clone(_2578);
p.sort=sort.id;
p.sortReversed=!_257b;
delete p.page;
var url=_2576.getMyPagesUrl(_2577,p);
quickr.share.scenes.setOnClick(a,app,url);
if(sort.tooltips){
a.title=(_257b)?sort.tooltips.normalOrder:a.title=sort.tooltips.reverseOrder;
}
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.SiteMap"]){
dojo._hasResource["quickr.share.wiki.scenes.SiteMap"]=true;
dojo.provide("quickr.share.wiki.scenes.SiteMap");
dojo.declare("quickr.share.wiki.scenes.SiteMap",[quickr.share.wiki.scenes.WikiIndex,quickr.share.wiki.scenes.WikiSidebarPage],{dateFilters:quickr.share.scenes.CHANNEL_FILTERS.DATE,constructor:function(app,_2580){
this.app=app;
this.sceneInfo=_2580;
this.wikiLabel=_2580.wikiLabel;
},begin:function(_2581){
if(_2581&&_2581.navStore&&_2581.wikiLabel==this.wikiLabel){
this.navStore=_2581.navStore;
}else{
this.navStore=null;
}
if(_2581&&_2581.wiki){
this.wiki=_2581.wiki;
this.libraryId=this.wiki.getId();
this.show();
}else{
this.getWikiPermissions();
}
},end:function(_2582){
},show:function(){
var d=this.app.document;
var app=this.app;
d.title=app.nls.SITEMAP.SITEMAP;
var _2585=this.app.authenticatedUser;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_2585?_2585.id:null)});
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes,{activeTab:"sitemap",defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.wiki,this.app.authenticatedUser,null,this.wiki.getTitle(),this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.SiteMap.render(d,this.app,this);
var _2586=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_2586,this.app,this,this.app.authenticatedUser,false);
d.body.style.visibility="visible";
},getWikiPermissions:function(){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.getWikiEntryComplete),sync:true});
},getWikiEntryComplete:function(_2588,_2589){
var error;
if(_2588 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2588,_2589);
this.showPageError(error);
}else{
var _258b=this.app.authenticatedUser;
var _258c;
var e=_2588.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _258e=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_258e=="wiki"){
_258c=new quickr.share.wiki.bean.Wiki(e);
}
}
if(_258c){
this.wiki=_258c;
this.libraryId=_258c.getId();
this.show();
}
}
},showPageError:function(error){
var app=this.app;
var _2591=app.routes;
var _2592=this.app.authenticatedUser;
var d=this.app.document;
d.title=this.app.nls.WINDOWTITLE.WIKIPAGEERROR;
var _2594=[];
if(!_2592){
_2594.push([dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.ERRORS.LOGIN),this.app.getUrl(),"login"]);
}
var _2595=false;
var _2596=false;
var text=this.app.nls.WIKIPAGE.ERROR.DEFAULT;
if(error){
if(error.code=="AccessDenied"){
if(!_2592){
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED_ANON;
}else{
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED;
}
_2595=true;
}else{
if(error.code=="ItemNotFound"){
if(error.type=="page"){
this.getWikiEntry();
return;
}else{
if(error.type=="wiki"){
text=this.app.nls.WIKIPAGE.ERROR.WIKI;
}else{
this.app.navigate(this.app.routes.getWelcomeUrl());
return;
}
}
}else{
if(error.code=="ForwardLink"){
this.showConfirmNewPage();
return;
}
}
}
}
if(_2595){
quickr.share.scenes.applyGenericWarning(this.app,text.TITLE,text.MESSAGES,_2594);
}else{
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,_2594);
}
d.body.style.visibility="visible";
if(_2596){
this.clearBeforeNavigate=true;
this.app.login();
}
},loadTree:function(d,el,div,app,scene,_259d,_259e){
var error;
if(_259d instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_259d,_259e);
}else{
var _25a0=new quickr.share.wiki.util.NavigationStore({data:_259d,curApp:app,curScene:scene});
var _25a1=new quickr.share.wiki.util.NavigationStoreModel({store:_25a0,query:{root:"true"},childrenAttrs:["children"],page:this.pageName});
_25a1.sitemap=true;
var _25a2=new quickr.share.wiki.util.NavigationTree({model:_25a1,showRoot:false,persist:false,openOnClick:false,onClick:dojo.hitch(scene,function(item,_25a4){
var str=item.id.toString();
if(item.id!="tree"&&str.indexOf("...")==-1){
var page=_25a0.getLabel(item);
page=page.replace(/\+/g,"_");
app.navigate(app.routes.getWikiPageUrl(scene.wikiLabel,page));
_25a2.destroy();
}
})});
_25a2.sitemap=true;
_25a1.tree=_25a2;
var inner=d.createElement("div");
inner.className="lotusNavTree";
inner.appendChild(_25a2.domNode);
div.appendChild(inner);
_25a2.startup();
this.expandAllNodes(_25a2);
}
},expandAllNodes:function(tree){
var _25a9=tree.rootNode.getChildren();
this.expandChildren(_25a9,tree);
},expandChildren:function(_25aa,tree){
for(var i=0;i<_25aa.length;i++){
var node=_25aa[i];
tree.expandNode(node);
var _25ae=node.getChildren();
if(_25ae.length>0){
this.expandChildren(_25ae,tree);
}
}
}});
quickr.share.wiki.scenes.SiteMap.render=function(d,app,scene){
var opt={app:app,routes:app.routes,scene:scene,libraryId:scene.libraryId,wikiLabel:scene.wikiLabel};
var _25b3=app.routes;
var _25b4=app.authenticatedUser;
var _25b5=scene.activeFilters;
var _25b6=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="SiteMap"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
quickr.share.wiki.scenes.SiteMap.applySideNav(d,el,app,scene,_25b4);
c.appendChild(el);
var nav=d.getElementById("lotusColLeft");
scene.applySideNav(d,nav,this.wiki,opt);
c.appendChild(scene.resizeBar(d,scene,app,true));
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent ";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
quickr.share.wiki.scenes.applyBackToWikiLink(d,el,app,scene);
var _25bb=d.createElement("div");
_25bb.className="lotusHeader";
var h1=d.createElement("h1");
h1.appendChild(d.createTextNode(app.nls.SITEMAP.SITEMAP));
_25bb.appendChild(h1);
_25bb.appendChild(d.createElement("br"));
el.appendChild(_25bb);
var div=d.createElement("div");
div.id="siteMap";
div.className="siteMapDiv";
el.appendChild(div);
quickr.share.wiki.scenes.SiteMap.getTree(d,el,div,app,scene);
c.appendChild(el);
}
};
quickr.share.wiki.scenes.SiteMap.applySideNav=function(d,el,app,scene,_25c2){
scene.applyTagsSection(d,el,scene.wiki,app,scene);
scene.applyPageListNav(d,el,scene.wiki,app,scene);
scene.applyToolsNav(d,el,scene.wiki,app,scene);
if(el.firstChild){
dojo.addClass(el.firstChild,"lotusFirst");
}
};
quickr.share.wiki.scenes.SiteMap.getTree=function(d,el,div,app,scene,time){
var url=app.routes.getPageNavigationUrl({page:scene.pageId,library:scene.libraryId});
app.net.getJson({url:url,handle:dojo.hitch(scene,scene.loadTree,d,el,div,app,scene)});
};
}
if(!dojo._hasResource["quickr.share.action.EditAttachment"]){
dojo._hasResource["quickr.share.action.EditAttachment"]=true;
dojo.provide("quickr.share.action.EditAttachment");
dojo.declare("quickr.share.action.EditAttachment",[quickr.share.action.DialogAction],{alwaysRecreate:true,wInput:"300px",wDialog:"450px",constructor:function(app,opts){
this.app=app;
this.nls=app.nls;
this.url=opts.url;
var _25cc=dojo.getObject("quickr.share.config.services.uploadMonitor");
if(_25cc){
this.monitor=app.getMonitor(_25cc);
dojo.connect(this.monitor,"onFailure",this,this.onTimeout);
dojo.connect(this.monitor,"onInterval",this,this.onUploadProgress);
}
this._requests=[];
},isValid:function(file,opt){
if(opt&&opt.permissions&&opt.permissions.canEdit){
return opt.permissions.canEdit(file)||file.getPermissions().Edit;
}
return file.getPermissions().Edit;
},destroy:function(){
if(this.dialog){
this.dialog.destroy();
}
},createDialog:function(item,opt,_25d1){
var d=document;
var _25d3=d.createElement("div");
_25d3.className="lotusDialogBorder";
_25d3.style.width=this.wDialog;
var el=_25d1.formNode=d.createElement("form");
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
dojo.connect(el,"onsubmit",dojo.hitch(this,this.save));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(this.nls.EDIT_ATTACHMENT.DIALOG_TITLE));
el.appendChild(h1);
var _25d9=d.createElement("div");
_25d9.className="lotusDialogContent";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="25%";
var label=d.createElement("label");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.nls.EDIT_ATTACHMENT.NAME_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.className="lotusText";
input.name="label";
if(dojo.isIE){
input.style.width=this.wInput;
}
dojo.connect(input,"onchange",this,"validateFilename");
td.appendChild(input);
_25d1.nameNode=input;
tr.appendChild(td);
var td=d.createElement("td");
quickr.share.scenes.createHelpLink(this.app,td,"editattachment.filename");
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="25%";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.EDIT_ATTACHMENT.DESCRIPTION_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var _25e0=d.createElement("textarea");
_25e0.className="lotusText";
_25e0.name="description";
_25e0.setAttribute("maxlength",quickr.share.validation.DESCRIPTION_LENGTH);
if(dojo.isIE){
_25e0.style.width=this.wInput;
}
dojo.connect(_25e0,"onchange",this,"validateDescription");
td.appendChild(_25e0);
_25d1.descriptionNode=_25e0;
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="25%";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.EDIT_ATTACHMENT.REPLACE_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=d.createElement("input");
input.className="lotusText qkrFile";
input.type="file";
input.name="file";
input.style.width=this.wInput;
if(dojo.isFF){
input.size="35";
input.style.width="auto";
}
td.appendChild(input);
_25d1.contentsNode=input;
tr.appendChild(td);
var limit=dojo.getObject("quickr.share.config.services.maxAttachmentSize");
if(limit>0){
var td=d.createElement("td");
var a=quickr.share.scenes.createHelpLink(this.app,td);
var _25e2=dojo.string.substitute(this.nls.EDIT_ATTACHMENT.LIMIT_HELP,{limit:quickr.share.util.formatSize(limit)});
quickr.share.scenes.applyGenericPopup(this.app,td,a,_25e2);
tr.appendChild(td);
}else{
var td=d.createElement("td");
quickr.share.scenes.createHelpLink(this.app,td,"editattachment.filename");
tr.appendChild(td);
}
tbody.appendChild(tr);
table.appendChild(tbody);
_25d9.appendChild(table);
el.appendChild(_25d9);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var divp=_25d1.progressNode=d.createElement("div");
divp.style.display="none";
divp.className="lotusRight qkrStatus";
var divw=d.createElement("div");
divp.appendChild(divw);
var _25e6=this.progress=new quickr.widget.ProgressBar({},divw);
div.appendChild(divp);
var input=_25d1.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.EDIT_ATTACHMENT.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.EDIT_ATTACHMENT.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_25d3.appendChild(el);
_25d1.setContent(_25d3);
this.updateDialog(item,opt,_25d1);
},updateDialog:function(file,opt,_25e9){
_25e9.nameNode.value=file.getName();
_25e9.descriptionNode.value=file.getDescription();
_25e9.contentsNode.value="";
_25e9.file=file;
_25e9.fileId=file.getId();
_25e9.atomId=file.getAtomId();
_25e9.fileName=file.getName();
_25e9.fileExtension=quickr.share.util.getExtension(_25e9.fileName);
_25e9.fileDescription=file.getDescription();
_25e9.urlEntry=file.getUrlEntry();
_25e9.fileLastUpdated=file.getSystemLastModified();
this.validateFilename();
this.validateDescription();
quickr.share.validation.removeFormErrors(_25e9.formNode);
this.enableInput(_25e9);
},isReplace:function(){
return (this.dialog.contentsNode.value||this.dialog.contentsNode.value.length>0);
},validate:function(){
return this.validateFilename(true)&&this.validateDescription(true);
},generateIfMatchETag:function(_25ea){
return _25ea+":modified="+this.dialog.fileLastUpdated.getTime();
},save:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.monitor){
this.monitor.cancel();
}
if(this.progress){
this.progress.update({indeterminate:true});
}
var _25ec=this.dialog;
var id=_25ec.atomId;
var _25ee=_25ec.fileExtension;
var _25ef=_25ec.fileId;
var _25f0=_25ec.file.getSystemLastModified();
quickr.share.validation.removeFormErrors(_25ec.formNode);
if(!this.validate()){
return;
}
var name=quickr.share.util.trim(_25ec.nameNode.value);
if(this.isReplace()&&this.dialog&&this.dialog.contentsNode){
name=quickr.share.util.getFilename(_25ec.contentsNode.value);
_25ee=quickr.share.util.getExtension(name);
}
_25ec.nameNode.value=name;
_25ec.fileExtension=_25ee;
var _25f2=_25ec.descriptionNode.value;
if(this.isReplace()){
var _25f3=quickr.share.util.createOperationId(["replace",_25ef,new Date().getTime()]);
var _25f4=quickr.share.util.rewriteUri(_25ec.urlEntry,{opId:_25f3,format:"html"});
this._requests.push(this.app.net.putMultipart({url:_25f4,timeout:(dojo.getObject("quickr.share.config.services.timeout.upload")||10)*1000,detectHtmlLogin:quickr.share.util.detectLoginForMultipartAtomResponse,form:_25ec.formNode,noStatus:true,ifMatch:this.generateIfMatchETag(_25ef),handle:dojo.hitch(this,this.protectedComplete)}));
this.disableInput();
if(this.monitor){
this.monitor.url=quickr.share.util.rewriteUri(this.monitor.url,{opId:_25f3});
this.monitor.start();
}
}else{
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _25f7=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_25f7.setAttribute("term","attachment");
_25f7.setAttribute("label","attachment");
_25f7.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_25f7);
var _25f8=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
_25f8.appendChild(doc.createTextNode(id));
entry.appendChild(_25f8);
var label=quickr.share.util.createElementNS(doc,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
label.appendChild(doc.createTextNode(name));
entry.appendChild(label);
var _25fa=quickr.share.util.createElementNS(doc,"summary",quickr.share.util.ATOM_NAMESPACE);
_25fa.setAttribute("type","text");
_25fa.appendChild(doc.createTextNode(_25f2));
entry.appendChild(_25fa);
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.disableInput();
this._requests.push(this.app.net.putXml({url:quickr.share.util.rewriteUri(_25ec.urlEntry,{submit:true}),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:text,headers:{"Content-Type":"application/atom+xml;charset=\"UTF-8\"","If-Match":this.generateIfMatchETag(_25ef)},handle:dojo.hitch(this,this.complete)}));
}
},complete:function(_25fc,_25fd){
_25fd._finished=true;
if(this.monitor){
this.monitor.cancel();
}
this.enableInput();
var _25fe=_25fd.explicitCancel;
if(_25fe){
return;
}
var error=quickr.share.util.getConcurrentModificationError(_25fc,_25fd);
if(!error){
error=quickr.share.util.getAtomError(_25fc,_25fd);
}
if(error){
this.onerror(error);
}else{
this.onsuccess(this.dialog.file);
}
},onUploadProgress:function(_2600,_2601){
var p=this.progress;
if(p){
if(!_2600||typeof _2600!="object"||!_2600.ops||!(_2600.ops.size>1)){
p.update({indeterminate:true});
}else{
if(_2600.ops.complete){
p.update({indeterminate:false,progress:"100%"});
}else{
p.domNode.title=dojo.string.substitute(this.nls.EDIT_ATTACHMENT.TRANSFER,[quickr.share.util.formatSize(_2600.ops.size),quickr.share.util.formatSize(_2600.ops.rate)]);
p.update({indeterminate:false,maximum:_2600.ops.size,progress:_2600.ops.transfer});
}
}
}
},onTimeout:function(){
this.cancelRequest();
this.enableInput();
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.ERROR_TIMEOUT);
},cancelRequest:function(){
if(this.monitor){
this.monitor.cancel();
}
dojo.forEach(this._requests,function(r){
r.ioArgs.explicitCancel=true;
if(!r.ioArgs._finished){
r.cancel();
}
});
this._requests=[];
dojo.io.iframe.cancel();
},onDialogCancel:function(){
this.cancelRequest();
this.inherited(arguments);
},cancelDialog:function(file){
if(this.hadConcurrentError){
this.onfilechange(this.dialog.file);
}
this.inherited(arguments);
},validateFilename:function(_2605){
_2605=_2605==true;
var valid=true;
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
var d=document;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.FILENAME_LENGTH)){
var _2609=[d.createTextNode(this.nls.UPLOAD_FILE.WARN_LONG_FILENAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimFilename");
a.appendChild(d.createTextNode(this.nls.UPLOAD_FILE.TRIM_LONG_FILENAME));
_2609.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_2609);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(_2605&&quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.EDIT_ATTACHMENT.WARN_SPECIFY_NAME);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
var _2609=[d.createTextNode(this.nls.UPLOAD_FILE.WARN_INVALID_CHARS_IN_NAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixFilenameCharacters");
a.appendChild(d.createTextNode(this.nls.UPLOAD_FILE.FIX_INVALID_CHARS_IN_NAME));
_2609.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_2609);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
}
return valid;
},trimFilename:function(){
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
var name=quickr.share.util.trimExtension(el.value);
var ext=this.dialog.fileExtension;
var _260e=quickr.share.util.lengthUtf8(name);
var _260f=quickr.share.util.lengthUtf8(ext);
if(_260f>0){
ext="."+ext;
_260f++;
}
var i=quickr.share.util.getCharIndexForUtf8Index(name,quickr.share.validation.FILENAME_LENGTH);
if(i!=-1){
el.value=name.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},fixFilenameCharacters:function(){
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
},validateDescription:function(){
var valid=true;
if(this.dialog&&this.dialog.descriptionNode){
var d=document;
var el=this.dialog.descriptionNode;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.DESCRIPTION_LENGTH)){
var _2615=[d.createTextNode(this.nls.UPLOAD_FILE.WARN_LONG_DESCRIPTION)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimDescription");
a.appendChild(d.createTextNode(this.nls.UPLOAD_FILE.TRIM_LONG_DESCRIPTION));
_2615.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_2615);
valid=false;
}
}
return valid;
},trimDescription:function(){
if(this.dialog&&this.dialog.descriptionNode){
var el=this.dialog.descriptionNode;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.DESCRIPTION_LENGTH);
if(i!=-1){
el.value=el.value.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},onsuccess:function(file){
this.hadConcurrentError=false;
this.cancelDialog();
this.onfilechange(file);
},onfilechange:function(file){
},onerror:function(error){
if(typeof error=="string"){
error={code:error};
}
if(error.code=="AccessDenied"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.ERROR_ACCESS_DENIED);
}else{
if(error.code=="InvalidRequest"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.FILE_DOES_NOT_EXIST);
}else{
if(error.code=="ItemExists"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.ERROR_NAME_EXISTS);
}else{
if(error.code=="QuotaViolation"){
var _261c=quickr.share.util.parseInt(error.uploadSize-(error.libraryQuota-error.librarySize),"??");
quickr.share.validation.setFormError(this.dialog.formNode,dojo.string.substitute(this.nls.EDIT_ATTACHMENT.ERROR_QUOTA_VIOLATION,[quickr.share.util.formatSize(_261c)]));
}else{
if(error.code=="cancel"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.ERROR_TIMEOUT);
}else{
if(error.code=="unauthenticated"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.EDIT_ATTACHMENT.ERROR_NOT_LOGGED_IN);
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this.nls.EDIT_ATTACHMENT.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxAttachmentSize)]);
quickr.share.validation.setFormError(this.dialog.formNode,text);
}else{
if(error.code=="ConcurrentModification"){
var date=error.date;
var user=error.user;
this.dialog.fileLastUpdated=date;
this.hadConcurrentError=true;
var d=document;
var span=d.createElement("span");
var text=new quickr.share.util.DateFormat(date).format(this.nls.EDIT_ATTACHMENT.ERROR_CONCURRENT_MODIFICATION);
var app=this.app;
quickr.share.util.html.substitute(d,span,text,{user:function(){
var a=d.createElement("a");
a.appendChild(d.createTextNode(user.name));
quickr.share.scenes.generateUserLink(app,app.routes,user,a);
return a;
}});
quickr.share.validation.setFormError(this.dialog.formNode,span);
}else{
quickr.share.validation.setFormError(this.dialog.formNode,this.isReplace()?this.nls.EDIT_ATTACHMENT.REPLACEERROR:this.nls.EDIT_ATTACHMENT.EDITERROR);
}
}
}
}
}
}
}
}
}
}});
}
if(!dojo._hasResource["quickr.share.action.UploadAttachment"]){
dojo._hasResource["quickr.share.action.UploadAttachment"]=true;
dojo.provide("quickr.share.action.UploadAttachment");
dojo.declare("quickr.share.action.UploadAttachment",[quickr.share.action.DialogAction],{alwaysRecreate:true,wInput:"300px",wDialog:"450px",constructor:function(app,opts){
this.app=app;
this.nls=app.nls;
this.url=opts.url;
var _2626=dojo.getObject("quickr.share.config.services.uploadMonitor");
if(_2626){
this.monitor=app.getMonitor(_2626);
dojo.connect(this.monitor,"onFailure",this,this.onTimeout);
dojo.connect(this.monitor,"onInterval",this,this.onUploadProgress);
}
this._requests=[];
},isValid:function(file,opt){
if(opt&&opt.permissions&&opt.permissions.canEdit){
return opt.permissions.canEdit(file)||file.getPermissions().Edit;
}
return file.getPermissions().Edit;
},destroy:function(){
if(this.dialog){
this.dialog.destroy();
}
this.progress=null;
if(this.monitor){
this.monitor.cancel();
}
},createDialog:function(item,opt,_262b){
var d=document;
var _262d=d.createElement("div");
_262d.className="lotusDialogBorder";
_262d.style.width=this.wDialog;
var el=_262b.formNode=d.createElement("form");
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
dojo.connect(el,"onsubmit",dojo.hitch(this,this.save,false));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.DIALOG_TITLE));
el.appendChild(h1);
var _2633=d.createElement("div");
_2633.className="lotusDialogContent";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="25%";
var label=d.createElement("label");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.CONTENTS_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=_262b.contentsNode=d.createElement("input");
input.className="lotusText qkrFile";
input.type="file";
input.name="file";
input.setAttribute("id",input.name);
label.setAttribute("for",input.getAttribute("id"));
input.style.width=this.wInput;
if(dojo.isFF){
input.size="35";
input.style.width="auto";
}
dojo.connect(input,"onchange",dojo.hitch(this,this.onFileChange));
td.appendChild(input);
if(this.nls.UPLOAD_ATTACHMENT.CONFIDENTIAL_INSTRUCTION){
var div=d.createElement("div");
var _263b=d.createElement("strong");
_263b.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.NOTE_LABEL));
div.appendChild(_263b);
div.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.CONFIDENTIAL_INSTRUCTION));
td.appendChild(div);
}
tr.appendChild(td);
var limit=dojo.getObject("quickr.share.config.services.maxAttachmentSize");
if(limit>0){
var td=d.createElement("td");
var a=quickr.share.scenes.createHelpLink(this.app,td);
var _263d=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.LIMIT_HELP,{limit:quickr.share.util.formatSize(limit)});
quickr.share.scenes.applyGenericPopup(this.app,td,a,_263d);
tr.appendChild(td);
}
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="25%";
var label=d.createElement("label");
quickr.share.validation.addRequiredIndicator(label);
label.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.NAME_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var input=_262b.nameNode=d.createElement("input");
input.className="lotusText";
input.name="label";
input.setAttribute("id","file_name");
label.setAttribute("for",input.getAttribute("id"));
if(dojo.isIE){
input.style.width=this.wInput;
}
dojo.connect(input,"onfocus",dojo.hitch(this,this.onFilenameFocus));
dojo.connect(input,"onchange",dojo.hitch(this,this.onFilenameChange));
dojo.connect(input,"onchange",this,"validateFilename");
td.appendChild(input);
tr.appendChild(td);
var td=d.createElement("td");
quickr.share.scenes.createHelpLink(this.app,td,"upload.filename");
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.className="lotusFormLabel";
td.style.width="25%";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.DESCRIPTION_LABEL));
td.appendChild(label);
tr.appendChild(td);
var td=d.createElement("td");
var _263e=_262b.descriptionNode=d.createElement("textarea");
_263e.className="lotusText";
_263e.name="description";
_263e.setAttribute("id",_263e.name);
label.setAttribute("for",_263e.getAttribute("id"));
_263e.setAttribute("maxlength",quickr.share.validation.DESCRIPTION_LENGTH);
if(dojo.isIE){
_263e.style.width=this.wInput;
}
dojo.connect(_263e,"onchange",this,"validateDescription");
td.appendChild(_263e);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2633.appendChild(table);
el.appendChild(_2633);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var divp=_262b.progressNode=d.createElement("div");
divp.style.display="none";
divp.className="lotusRight qkrStatus";
var divw=d.createElement("div");
divp.appendChild(divw);
var _2641=this.progress=new quickr.widget.ProgressBar({},divw);
div.appendChild(divp);
var input=_262b.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.UPLOAD_ATTACHMENT.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_262d.appendChild(el);
_262b.setContent(_262d);
this.updateDialog(item,opt,_262b);
},updateDialog:function(file,opt,_2644){
_2644.contentsNode.value="";
_2644.nameNode.value="";
_2644.descriptionNode.value="";
this.validateFileContents();
this.validateFilename();
this.validateDescription();
quickr.share.validation.removeFormErrors(_2644.formNode);
this.enableInput(_2644);
},validate:function(){
return this.validateFileContents(true)&&this.validateFilename(true)&&this.validateDescription(true);
},onDialogCancel:function(){
this.cancelRequest();
this.inherited(arguments);
},cancelRequest:function(){
if(this.monitor){
this.monitor.cancel();
}
dojo.forEach(this._requests,function(r){
r.ioArgs.explicitCancel=true;
if(!r.ioArgs._finished){
r.cancel();
}
});
this._requests=[];
dojo.io.iframe.cancel();
},onUploadProgress:function(_2646,_2647){
var p=this.progress;
if(p){
if(!_2646||typeof _2646!="object"||!_2646.ops||!(_2646.ops.size>1)){
p.update({indeterminate:true});
}else{
if(_2646.ops.complete){
p.update({indeterminate:false,progress:"100%"});
}else{
p.domNode.title=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.TRANSFER,[quickr.share.util.formatSize(_2646.ops.size),quickr.share.util.formatSize(_2646.ops.rate)]);
p.update({indeterminate:false,maximum:_2646.ops.size,progress:_2646.ops.transfer});
}
}
}
},onTimeout:function(){
this.cancelRequest();
this.enableInput();
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR_TIMEOUT);
},save:function(_2649,e){
if(e){
dojo.stopEvent(e);
}
if(this._request){
console.log("UploadAttachment::save DEBUG another request was attempted while the current one was active");
return;
}
if(this.monitor){
this.monitor.cancel();
}
if(this.progress){
this.progress.update({indeterminate:true});
}
var _264b=this.dialog;
var form=_264b.formNode;
quickr.share.validation.removeFormErrors(form);
if(!this.validate()){
return;
}
var path=quickr.share.util.trim(_264b.contentsNode.value);
var _264e=quickr.share.util.trim(_264b.nameNode.value);
if(_264e.length>0){
var ext=quickr.share.util.getExtension(_264e);
var _2650=quickr.share.util.getExtension(quickr.share.util.getFilename(path));
if(ext!=_2650&&_2650.length>0){
_264b.nameNode.value=_264e+"."+_2650;
}
}
var _2651=_264b.descriptionNode.value;
var _2652=quickr.share.util.createOperationId(["upload_attachment",_264e,new Date().getTime()]);
var _2653=(_2649)?quickr.share.util.rewriteUri(this.url,{replace:true,opId:_2652,category:"attachment",format:"html"}):quickr.share.util.rewriteUri(this.url,{opId:_2652,category:"attachment",format:"html"});
this._requests.push(this.app.net.postMultipart({url:_2653,noStatus:true,detectHtmlLogin:quickr.util.atom.detectLoginForMultipartResponse,form:form,handle:dojo.hitch(this,this.completeIFrame)}));
this.disableInput();
if(this.monitor){
this.monitor.url=quickr.share.util.rewriteUri(this.monitor.url,{opId:_2652});
this.monitor.start();
}
},completeIFrame:function(_2654,_2655){
_2655._finished=true;
var _2656=_2655.explicitCancel;
if(this.monitor){
this.monitor.cancel();
}
this.enableInput();
if(_2656){
return;
}
if(_2654 instanceof Error){
this.onerror(_2654);
}else{
this.onsuccess();
}
},onerror:function(error){
if(typeof error=="string"){
error={code:error};
}
if(error.code=="ItemExists"){
if(confirm(this.nls.UPLOAD_ATTACHMENT.CONFIRM_REPLACE)){
this.save(true,null);
}
}else{
if(error.code=="QuotaViolation"){
var _2658=quickr.share.util.parseInt(error.uploadSize-(error.libraryQuota-error.librarySize),"??");
quickr.share.validation.setFormError(this.dialog.formNode,dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.ERROR_QUOTA_VIOLATION,[quickr.share.util.formatSize(_2658)]));
}else{
if(error.code=="cancel"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR_TIMEOUT);
}else{
if(error.code=="InvalidPath"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR_FILENAME_INVALID_CHARACTERS);
}else{
if(error.code=="AccessDenied"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR_ACCESS_DENIED);
}else{
if(error.code=="InvalidRequest"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.FILE_DOES_NOT_EXIST);
}else{
if(error.code=="unauthenticated"){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR_NOT_LOGGED_IN);
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this.nls.UPLOAD_ATTACHMENT.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxAttachmentSize)]);
quickr.share.validation.setFormError(this.dialog.formNode,text);
}else{
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.UPLOAD_ATTACHMENT.ERROR);
}
}
}
}
}
}
}
}
}
},validateFileContents:function(_265a){
_265a=_265a==true;
var valid=true;
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.contentsNode;
if(_265a&&quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.UPLOAD_ATTACHMENT.SELECT_FILE);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
}
return valid;
},validateFilename:function(_265d){
_265d=_265d==true;
var valid=true;
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
var d=document;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.FILENAME_LENGTH)){
var _2661=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_LONG_FILENAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimFilename");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.TRIM_LONG_FILENAME));
_2661.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_2661);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(_265d&&quickr.share.util.trim(el.value).length==0){
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"empty",this.nls.UPLOAD_ATTACHMENT.WARN_NO_FILENAME);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"empty");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
var _2661=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_INVALID_CHARS_IN_NAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixFilenameCharacters");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.FIX_INVALID_CHARS_IN_NAME));
_2661.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_2661);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
}
return valid;
},trimFilename:function(){
if(this.dialog&&this.dialog.nameNode&&this.dialog.contentsNode){
var el=this.dialog.nameNode;
var name=el.value;
var ext=quickr.share.util.getExtension(quickr.share.util.trim(this.dialog.contentsNode.value));
var _2666=quickr.share.util.lengthUtf8(name);
var _2667=quickr.share.util.lengthUtf8(ext);
if(_2667>0){
ext="."+ext;
_2667++;
}
var i=quickr.share.util.getCharIndexForUtf8Index(name,quickr.share.validation.FILENAME_LENGTH-_2667);
if(i!=-1){
el.value=name.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},fixFilenameCharacters:function(){
if(this.dialog&&this.dialog.nameNode){
var el=this.dialog.nameNode;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
},validateDescription:function(){
var valid=true;
if(this.dialog&&this.dialog.descriptionNode){
var d=document;
var el=this.dialog.descriptionNode;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.DESCRIPTION_LENGTH)){
var _266d=[d.createTextNode(this.nls.UPLOAD_ATTACHMENT.WARN_LONG_DESCRIPTION)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"trimDescription");
a.appendChild(d.createTextNode(this.nls.UPLOAD_ATTACHMENT.TRIM_LONG_DESCRIPTION));
_266d.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_266d);
valid=false;
}
}
return valid;
},trimDescription:function(){
if(this.dialog&&this.dialog.descriptionNode){
var el=this.dialog.descriptionNode;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.DESCRIPTION_LENGTH);
if(i!=-1){
el.value=el.value.substring(0,i);
}
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
},onFilenameFocus:function(){
if(!this.dialog._uploadFilenameChanged){
var _2671=this.dialog.nameNode;
_2671.select();
}
},onFilenameChange:function(){
this.dialog._uploadFilenameChanged=true;
},onFileChange:function(){
var _2672=this.dialog;
_2672._uploadFilenameChanged=false;
var _2673=this.dialog.nameNode;
var _2674=this.dialog.contentsNode;
_2673.value=quickr.share.util.getFilename(quickr.share.util.trim(_2674.value));
}});
}
if(!dojo._hasResource["quickr.share.util.AsyncLoader"]){
dojo._hasResource["quickr.share.util.AsyncLoader"]=true;
dojo.provide("quickr.share.util.AsyncLoader");
dojo.declare("quickr.share.util.AsyncLoader",null,{constructor:function(opt){
dojo.mixin(this,opt);
this._requests=[];
this._plannedRequests=[];
this._errors=[];
this._runningRequests=0;
},add:function(){
this._plannedRequests.push(arguments);
},size:function(){
return this._plannedRequests.length;
},isEmpty:function(){
return this._plannedRequests.length==0;
},cancel:function(){
dojo.forEach(this._requests,function(_2676){
if(_2676&&_2676.dojoRequest){
_2676.dojoRequest.cancel();
}
});
this._requests=[];
this._plannedRequests=[];
this._runningRequests=0;
},handleRequest:function(_2677,_2678){
var _2679=this._runningRequests;
for(var i=0;i<this._requests.length;i++){
var r=this._requests[i];
if(r&&r.originalHandler==_2678.args.originalHandler){
_2679=--this._runningRequests;
this._requests[i]=null;
var scope=(this.scope||this);
var f=typeof _2678.args.originalHandler=="function"?_2678.args.originalHandler:scope[_2678.args.originalHandler];
var _267e=f.apply(scope,arguments);
if(_267e){
this._errors.push(_267e);
if(this.onRequestCompleted(_267e)){
this.cancel();
}
}
break;
}
}
if(_2679<1){
var _267f=this._errors;
this._errors=[];
this._requests=[];
this._plannedRequests=[];
this._runningRequests=0;
this.onRequestsCompleted(_267f);
}
},start:function(){
if(this._runningRequests>0){
throw "Requests already running, call cancel() first";
}
if(this._plannedRequests){
this._runningRequests=this._plannedRequests.length;
for(var i=0;i<this._plannedRequests.length;i++){
this._requestSingle.apply(this,this._plannedRequests[i]);
}
}
},_requestSingle:function(url,_2682,_2683,_2684){
var _2685={originalHandler:_2682};
this._requests.push(_2685);
_2685.dojoRequest=this.net.get({originalHandler:_2682,url:url,handle:dojo.hitch(this,this.handleRequest),timeout:_2684,handleAs:_2683||"xml"});
},onRequestsCompleted:function(_2686){
if(this.scope&&this.scope.onRequestsCompleted){
this.scope.onRequestsCompleted(_2686);
}
},onRequestCompleted:function(error){
if(this.scope&&this.scope.onRequestCompleted){
return this.scope.onRequestCompleted(error);
}
return false;
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.CreateChildPage"]){
dojo._hasResource["quickr.share.wiki.action.CreateChildPage"]=true;
dojo.provide("quickr.share.wiki.action.CreateChildPage");
dojo.declare("quickr.share.wiki.action.CreateChildPage",[quickr.share.action.Action,quickr.share.wiki.action.EditorAction],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.opt=opt;
this.name=this.app.nls.CREATE_CHILD_PAGE.ACTION;
this.tooltip=this.app.nls.CREATE_CHILD_PAGE.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},execute:function(e){
if(e){
dojo.stopEvent(e);
}
this.app.navigate(this.app.routes.getUserCreatePagesUrl(this.app.scene.wikiLabel,this.app.authenticatedUser,this.opt));
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.CreateSiblingPage"]){
dojo._hasResource["quickr.share.wiki.action.CreateSiblingPage"]=true;
dojo.provide("quickr.share.wiki.action.CreateSiblingPage");
dojo.declare("quickr.share.wiki.action.CreateSiblingPage",[quickr.share.action.Action,quickr.share.wiki.action.EditorAction],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.opt={rel:"sibling"};
this.name=this.app.nls.CREATE_SIBLING_PAGE.ACTION;
this.tooltip=this.app.nls.CREATE_SIBLING_PAGE.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},execute:function(e){
if(e){
dojo.stopEvent(e);
}
this.app.navigate(this.app.routes.getUserCreatePagesUrl(this.app.scene.wikiLabel,this.app.authenticatedUser,this.opt));
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.DeletePage"]){
dojo._hasResource["quickr.share.wiki.action.DeletePage"]=true;
dojo.provide("quickr.share.wiki.action.DeletePage");
dojo.declare("quickr.share.wiki.action.DeletePage",[quickr.share.action.Action],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.nls=app.nls;
this.name=this.app.nls.DELETE_PAGE.ACTION;
this.tooltip=this.app.nls.DELETE_PAGE.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},isValid:function(user,opt){
var wiki=this.scene.wiki;
if(wiki&&wiki.getPermissions().GrantAccess){
return (this.app.authenticatedUser&&user.id==this.app.authenticatedUser.id)&&!dojo.getObject("quickr.share.config.disablePages");
}else{
return false;
}
},complete:function(_2696,_2697){
if(_2696 instanceof Error){
var code=quickr.share.util.getAtomErrorCode(_2696,_2697);
this.onerror(code);
}else{
var scene=this.scene;
this.scene.navStore=null;
this.app.useNavCookie=false;
this.app.navigate(this.app.routes.getWikiUrl(this.scene.wikiLabel));
}
},execute:function(e){
if(e){
dojo.stopEvent(e);
}
var _269b=this.scene.pageName;
var _269c=this.scene.pageTitle||_269b;
var _269d=new quickr.share.wiki.action.ConfirmDialogAction();
var nls=this.app.nls;
var _269f={CANCEL:nls.CANCEL,HEADING:nls.DELETE_PAGE.ACTION,MESSAGE:dojo.string.substitute(nls.DELETE_PAGE.CONFIRM,[_269c]),OK:nls.CONTENT.DELETE,BUSY:nls.EDIT_FILE.BUSY};
this.confirmDialog=_269d;
_269d.execute(null,{onSubmit:dojo.hitch(this,function(_26a0){
var url=this.app.routes.getWikiPageInfoServiceUrl(this.scene.wikiLabel,_26a0);
this.app.net.deleteXml({url:url,handle:dojo.hitch(this,function(){
this.complete();
this.confirmDialog.cancelDialog();
delete this.confirmDialog;
})});
},_269b),strings:_269f});
},complete:function(_26a2,_26a3){
if(_26a2 instanceof Error){
var code=quickr.share.util.getAtomErrorCode(_26a2,_26a3);
this.onerror(code);
}else{
var scene=this.scene;
this.scene.navStore=null;
this.app.navigate(this.app.routes.getWikiUrl(this.scene.wikiLabel));
}
},onerror:function(code){
var msg=this.nls.CONTENT.ERROR_REQUEST_UNKNOWN;
switch(code){
case "ItemNotFound":
msg=this.nls.DELETE_PAGE.NOSUCHPAGE;
break;
case "AccessDenied":
msg=this.nls.DELETE_PAGE.UNAUTHORIZED;
break;
}
alert(msg);
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.EditWikiPage"]){
dojo._hasResource["quickr.share.wiki.action.EditWikiPage"]=true;
dojo.provide("quickr.share.wiki.action.EditWikiPage");
dojo.declare("quickr.share.wiki.action.EditWikiPage",[quickr.share.action.Action,quickr.share.wiki.action.EditorAction],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.name=this.app.nls.PAGEEDIT.ACTION;
this.tooltip=this.app.nls.PAGEEDIT.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},execute:function(e){
if(e){
dojo.stopEvent(e);
}
var _26ac=this.app.scene.document.getDraftId();
if(_26ac!=null&&_26ac!=""){
if(confirm(this.app.nls.CONTENT.EDIT_PAGE_DRAFT_CONFIRM)){
this.app.navigate(this.app.routes.getWikiPageEditDraftSummaryUrl(_26ac));
}
}else{
this.app.navigate(this.app.routes.getWikiPageEditUrl(this.app.scene.wikiLabel,this.app.scene.pageName));
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.MoveWikiPage"]){
dojo._hasResource["quickr.share.wiki.action.MoveWikiPage"]=true;
dojo.provide("quickr.share.wiki.action.MoveWikiPage");
dojo.declare("quickr.share.wiki.action.MoveWikiPage",[quickr.share.action.DialogAction,quickr.share.wiki.action.EditorAction],{wInput:"350px",wDialog:"500px",constructor:function(app,scene){
this.id="move_";
this.listeners=[];
this.app=app;
this.nls=app.nls;
this.scene=scene;
this.wikiLabel=scene.wikiLabel||scene.sceneInfo.wikiLabel;
this.userId=scene.userId;
this.documentId=scene.pageId;
this.libraryId=scene.wikiLabel;
this.pageTitle=scene.document.getTitle();
this.url=app.routes.getWikiEntryServiceUrl(this.wikiLabel,{});
this.setRoot=false;
this.showList=false;
this.name=this.app.nls.MOVEPAGE.TITLE;
this.tooltip=this.app.nls.MOVEPAGE.TITLE;
this.activeView={id:"details",name:"Details",tooltip:"Tabular information"};
this.params={category:["page"]};
this.sorts=[{name:app.nls.SORTS.MOSTRECENT,sK:"modified",mapReduce:function(file){
return file.getUpdated().getTime();
}},{id:"mostpopular",name:app.nls.SORTS.MOSTDOWNLOADED,sK:"downloaded",mapReduce:function(file){
return file.getTimesDownloaded();
}},{id:"highestrated",name:app.nls.SORTS.HIGHESTRECOMMENDED,sK:"recommended",mapReduce:function(file){
return file.getRatingCount();
}},{id:"title",name:app.nls.SORTS.TITLE,sK:"title",lowToHigh:true}];
this.types=null;
this.sortReversed=false;
this.activeSort=this.sorts[0];
this.activeType=this.types?this.types[0]:null;
},destroy:function(){
if(this.itemList){
this.itemList.destroy();
}
this.inherited(arguments);
},createDialog:function(item,opt,_26b4){
var url=this.app.routes.getPageNavigationUrl({page:this.scene.pageId,library:this.scene.wikiLabel});
var _26b6=this.scene.parents.length;
if(_26b6>1){
this.parent=this.scene.parents[_26b6-2];
url=url+"/"+this.parent.getId();
}else{
this.parent=null;
}
this.getSiblings(url,this.createFinalDialog,item,opt,_26b4);
},getSiblings:function(url,_26b8,item,opt,_26bb){
this.app.net.getJson({url:url,handle:dojo.hitch(this,_26b8,item,opt,_26bb)});
},createFinalDialog:function(item,opt,_26be,_26bf){
if(_26bf instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_26bf,ioArgs);
}else{
var data={data:_26bf};
var _26c1=new dojo.data.ItemFileReadStore(data);
var _26c2=[];
var root=null;
var _26c4=null;
if(this.parent==null){
_26c1.fetch({query:{root:"true"},onItem:function(item,_26c6){
_26c4=item;
root=new quickr.share.wiki.bean.Navigation(_26c1.getValue(item,"name"),null,_26c1.getValue(item,"id"));
}});
}else{
_26c1.fetchItemByIdentity({identity:this.parent.getId(),onItem:function(item,_26c8){
_26c4=item;
root=new quickr.share.wiki.bean.Navigation(_26c1.getValue(item,"name"),null,_26c1.getValue(item,"id"));
}});
}
if(root!=null){
var _26c9=_26c1.getValues(_26c4,"children");
var child=root;
for(var i=0;i<_26c9.length;i++){
child=new quickr.share.wiki.bean.Navigation(_26c1.getValue(_26c9[i],"name"),parent,_26c1.getValue(_26c9[i],"id"));
_26c2.unshift(child);
}
}
var d=document;
var _26cd=this.userId;
var _26ce=this.app.authenticatedUser;
var _26cf=d.createElement("div");
_26cf.className="lotusDialogBorder";
_26cf.style.width=this.wDialog;
var el=_26be.formNode=this.formNode=d.createElement("form");
el.method="POST";
el.enctype="multipart/form-data";
el.setAttribute("encoding","multipart/form-data");
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.MOVEPAGE.TITLE));
el.appendChild(h1);
var div=d.createElement("div");
div.className="lotusTabContainer";
div.style.height="3em";
div.style.marginBottom="0px";
var ul=d.createElement("ul");
ul.className="lotusTabs";
if(dojo.isFF){
ul.style.bottom="-4px";
}
var li=this.selectParentTab=d.createElement("li");
li.className="lotusSelected";
var span=d.createElement("span");
var _26d8=d.createElement("a");
_26d8.href="javascript:;";
dojo.connect(_26d8,"onclick",this,"updateTabToParent");
_26d8.appendChild(d.createTextNode(this.nls.MOVEPAGE.PARENT_TAB));
span.appendChild(_26d8);
li.appendChild(span);
this.externalUrlTab=li;
ul.appendChild(li);
var li=this.selectReorderTab=d.createElement("li");
var span=d.createElement("span");
var _26d9=d.createElement("a");
_26d9.href="javascript:;";
dojo.connect(_26d9,"onclick",this,"updateTabToReorder");
_26d9.appendChild(d.createTextNode(this.nls.MOVEPAGE.REORDER_TAB));
span.appendChild(_26d9);
li.appendChild(span);
this.externalUrlTab=li;
ul.appendChild(li);
div.appendChild(ul);
el.appendChild(div);
var _26da=d.createElement("div");
_26da.className="lotusDialogContent";
if(dojo.isIE){
_26da.style.width="500px";
}
var div=this.pageNameTable=d.createElement("div");
div.id="move_parentName";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
table.cellSpacing=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow lotusLeft";
var td=d.createElement("td");
td.colSpan="3";
td.className="lotusLabel lotusLeft";
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.MOVEPAGE.INPUT_LABEL));
td.appendChild(label);
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
td.width="75%";
var input=this.pageName=d.createElement("input");
input.className="lotusText";
input.name="pageName";
_26be.pageNameNode=input;
td.appendChild(input);
var args=quickr.share.wiki.widget.WikiTypeAhead.getWikiTypeAheadArguments(this.getWikiPageTypeAheadStore(),{_strings:this.nls.WIKI_SEARCH,id:this.id+"mysearchbox",name:"pagenamesearch"});
label.setAttribute("for",this.id+"mysearchbox");
var combo=this.pagesCombo=new quickr.share.wiki.widget.WikiTypeAhead(args,input);
dojo.connect(combo,"onSelect",this,"onSelectTypeAheadPageName");
dojo.connect(combo,"_openResultList",this,"onOpenResults");
dojo.connect(combo,"onFocus",this,dojo.hitch(combo,function(e){
combo.textbox.value="";
combo.textbox.style.color="#000000";
}));
combo.textbox.value="";
if(this.parent==null){
combo.textbox.value=this.nls.MOVEPAGE.TOPLEVEL;
combo.textbox.style.color="#C0C0C0";
}else{
combo.textbox.value=this.parent.label;
}
this.pageName=combo.textbox;
combo.textbox.style.width=this.wInput;
tr.appendChild(td);
var td=d.createElement("td");
var span=this.chooseButton=d.createElement("span");
span.className="lotusBtn";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"onChoose");
a.appendChild(d.createTextNode(this.nls.MOVEPAGE.CHOOSE_BUTTON));
a.title=this.nls.MOVEPAGE.CHOOSE_BUTTON_TOOLTIP;
span.appendChild(a);
td.appendChild(span);
tr.appendChild(td);
var td=d.createElement("td");
td.className="lotusFormHelp";
quickr.share.scenes.createHelpLink(this.app,td,"movepage.chooseparent");
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
div.appendChild(table);
_26da.appendChild(div);
div.style.display="";
var div=this.rootCheck=d.createElement("div");
div.style.marginBottom="20px";
var input=d.createElement("input");
input.type="checkbox";
input.name=this.nls.MOVEPAGE.MAKETOPLEVEL;
input.setAttribute("id","maketoplevel_box");
dojo.connect(input,"onclick",dojo.hitch(this,this.setToRoot,input));
div.appendChild(input);
var label=d.createElement("label");
label.appendChild(d.createTextNode(this.nls.MOVEPAGE.MAKETOPLEVEL));
label.setAttribute("for",input.getAttribute("id"));
div.appendChild(label);
div.appendChild(d.createElement("br"));
_26da.appendChild(div);
this.rootCheck.style.display="";
var div=this.listDiv=d.createElement("div");
div.id="item-list";
_26da.appendChild(div);
div.style.display="none";
var _26e4=new quickr.share.bean.StreamPermissions({owner:this.isPersonalHome,authenticatedId:(_26ce?_26ce.id:null)});
var _26e5={view:this.activeView.id,actions:[],pageActions:[],permissions:_26e4,highlightNew:"#FFFF75",sorts:this.sorts,types:this.types,activeSort:this.activeSort,sortReversed:this.sortReversed,setLink:dojo.hitch(this,this.setLink),generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,this.app,this.app.routes),generateLinkToFile:dojo.hitch(null,quickr.share.scenes.generateFileLink,this.app,this.app.routes),generateLinkToPage:dojo.hitch(null,quickr.share.scenes.generatePageLink,this.app,this.app.routes),generateLinkToTypes:dojo.hitch(this,this.generateTypeLink,this.app,this.app.routes,this.params),generateSortLink:dojo.hitch(this,this.generateSortLink,this.app,this.app.routes,this.params),getFileTypeImage:dojo.hitch(this.app.routes,this.app.routes.getFileTypeImageUrl),_strings:this.nls};
var _26e6=new quickr.widget.ItemPickerStreamRenderer(_26e5);
var _26e7=this.itemList=new quickr.widget.Stream({id:this.id+"itemList",baseClass:"file-stream lotusStream",templateString:"<div class=\"${baseClass}\">\n  <div class=\"lotusPaging\" dojoAttachPoint=\"topPageNode\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"tPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"tPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"tNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"tNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\">\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"bottomPageNavigateNode\" style=\"display: none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n  </div>      \n</div>\n",_strings:this.nls.CONTENT,renderer:_26e6,msgNoData:this.isImage?this.nls.INSERTLINK.NO_IMAGE_FILES:this.nls.INSERTLINK.NO_ITEMS,typeLabel:this.nls.INSERTLINK.TYPE_LABEL,page:dojo.hitch(this,this.page),next:dojo.hitch(this,this.nextPage),previous:dojo.hitch(this,this.previousPage)},div);
this.itemListDiv=this.itemList.domNode;
this.itemListDiv.appendChild(d.createElement("br"));
this.itemListDiv.style.display="none";
var _26e8=this.reorderDiv=d.createElement("div");
_26e8.style.width="450px";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=0;
table.cellSpacing=0;
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow lotusLeft";
var td=d.createElement("td");
td.colSpan="3";
td.className="lotusLabel";
var div=d.createElement("div");
div.className="reorderLabelDiv";
var label=this.reorderLabel=d.createElement("label");
var l=null;
if(this.parent==null){
l=this.nls.MOVEPAGE.REORDER_LABEL2;
}else{
l=dojo.string.substitute(this.nls.MOVEPAGE.REORDER_LABEL,[this.pageName.value]);
}
label.appendChild(d.createTextNode(l));
div.appendChild(label);
td.appendChild(div);
tr.appendChild(td);
tbody.appendChild(tr);
_26c2=_26c2.reverse();
var tr=d.createElement("tr");
var td=d.createElement("td");
var div=this.orderDiv=d.createElement("div");
div.style.width="340px";
div.setAttribute("id","reorder_list");
label.setAttribute("for",div.getAttribute("id"));
var ul=this.reorderList=d.createElement("ul");
ul.className="reorderDiv";
var i=0;
for(;i<_26c2.length;i++){
var li=d.createElement("li");
li.className="liItem";
var span=d.createElement("span");
var label=_26c2[i].getLabel();
if(_26c2[i].getLabel()==this.pageTitle){
this.selectedItem=li;
this.selectedItem.nvalue=i;
li.className="liItemSelected";
label=dojo.string.substitute(this.nls.MOVEPAGE.CURRENTPAGELABEL,[label]);
}
li.id=_26c2[i].getId();
li.nvalue=i+"";
span.appendChild(d.createTextNode(label));
li.appendChild(span);
ul.appendChild(li);
}
div.appendChild(ul);
td.appendChild(div);
tr.appendChild(td);
var td2=d.createElement("td");
td2.style.verticalAlign="top";
var _26eb=d.createElement("div");
var div=d.createElement("div");
var a=d.createElement("A");
a.href="javascript:;";
var img=d.createElement("IMG");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/arrow_up.gif";
img.setAttribute("alt",this.nls.MOVEPAGE.UP);
a.appendChild(img);
dojo.connect(a,"onclick",this,"moveUp");
div.appendChild(a);
div.style.marginBottom="4px";
div.style.paddingBottom="4px";
_26eb.appendChild(div);
var div=d.createElement("div");
var a=d.createElement("A");
a.href="javascript:;";
var img=d.createElement("IMG");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/arrow_down.gif";
img.setAttribute("alt",this.nls.MOVEPAGE.DOWN);
a.appendChild(img);
dojo.connect(a,"onclick",this,"moveDown");
div.appendChild(a);
_26eb.appendChild(div);
td2.appendChild(_26eb);
tr.appendChild(td2);
var td2=d.createElement("td");
td2.style.verticalAlign="top";
quickr.share.scenes.createHelpLink(this.app,td2,"movepage.reorderpages");
tr.appendChild(td2);
tbody.appendChild(tr);
table.appendChild(tbody);
_26e8.appendChild(table);
this.reorderDiv.style.display="none";
_26da.appendChild(_26e8);
el.appendChild(_26da);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var input=_26be.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.MOVEPAGE.SUBMIT_BUTTON_LABEL;
dojo.connect(input,"onclick",this,"save");
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.MOVEPAGE.CANCEL_BUTTON_LABEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_26cf.appendChild(el);
_26be.setContent(_26cf);
this.updateDialog(item,opt,_26be);
}
},updateTabToParent:function(){
this.selectReorderTab.className="";
this.selectParentTab.className="lotusSelected";
if(this.showList==true){
this.itemListDiv.style.display="";
}else{
this.itemListDiv.style.display="none";
}
this.pageNameTable.style.display="";
this.rootCheck.style.display="";
this.reorderDiv.style.display="none";
},updateTabToReorder:function(){
this.removeListError();
this.selectParentTab.className="";
this.selectReorderTab.className="lotusSelected";
this.pageNameTable.style.display="none";
this.rootCheck.style.display="none";
this.itemListDiv.style.display="none";
this.reorderDiv.style.display="";
},moveUp:function(){
var x=this.selectedItem.nvalue=(+this.selectedItem.nvalue)-1;
if(x<0){
x=0;
}else{
this.reorderList.removeChild(this.selectedItem);
var item=this.reorderList.childNodes[this.selectedItem.nvalue];
this.reorderList.insertBefore(this.selectedItem,item);
}
for(var i=x;i<this.reorderList.childNodes.length;i++){
var _26ef=this.reorderList.childNodes[i];
_26ef.nvalue=i;
}
},moveDown:function(){
if(this.selectedItem.nvalue!=this.reorderList.childNodes.length-1){
var x=this.selectedItem.nvalue=(+this.selectedItem.nvalue)+1;
this.reorderList.removeChild(this.selectedItem);
var item=this.reorderList.childNodes[this.selectedItem.nvalue];
if(item){
this.reorderList.insertBefore(this.selectedItem,item);
}else{
this.reorderList.appendChild(this.selectedItem);
}
if(x<0){
x=0;
}
for(var i=x;i<this.reorderList.childNodes.length;i++){
var _26f3=this.reorderList.childNodes[i];
_26f3.nvalue=i;
}
}
},setToRoot:function(_26f4){
if(_26f4.checked){
this.setRoot=true;
this.itemListDiv.style.display="none";
this.pageName.disabled=true;
this.pagesCombo.disabled=true;
dojo.addClass(this.chooseButton,"lotusBtnDisabled");
this.removePageError();
this.pageName.value=this.nls.MOVEPAGE.TOPLEVEL;
this.parent=null;
this.pageName.style.color="#C0C0C0";
}else{
this.setRoot=false;
if(this.showList==true){
this.itemListDiv.style.display="";
}
this.pageName.disabled=false;
this.pagesCombo.disabled=false;
dojo.removeClass(this.chooseButton,"lotusBtnDisabled");
this.removePageError();
this.pageName.value="";
this.pageName.style.color="#000000";
}
this.parent=null;
this.parentId=null;
var url=this.app.routes.getPageNavigationUrl({page:this.scene.pageId,library:this.scene.wikiLabel});
this.getSiblings(url,this.updateOrderItems,null,null,null);
},save:function(e){
dojo.stopEvent(e);
this.disableInput();
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _26f9=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_26f9.setAttribute("type","application/xml");
for(var i=0;i<this.reorderList.childNodes.length;i++){
var _26fb=quickr.share.util.createElementNS(doc,"nav",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_26fb.setAttribute("media",this.reorderList.childNodes[i].id);
_26fb.setAttribute("name",this.reorderList.childNodes[i].textContent);
if(_26fc!=null){
_26fb.setAttribute("parent",_26fc.id);
}
if(i!=0){
_26fb.setAttribute("below",this.reorderList.childNodes[i-1].id);
}
if(i<this.reorderList.childNodes.length-1){
_26fb.setAttribute("above",this.reorderList.childNodes[i+1].id);
}
entry.appendChild(_26fb);
}
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
if(this.setRoot){
var _26fc=null;
}else{
if(this.parent==null){
var _26fc=null;
}else{
var _26fc=this.parent;
if(_26fc.replace){
_26fc=_26fc.replace(/\+/g,"_");
}else{
if(_26fc.label){
_26fc.label=_26fc.label.replace(/\+/g,"_");
}
}
}
}
var _26fe=this.selectedItem;
var pos=(+this.selectedItem.nvalue)+1;
if(pos>this.reorderList.childNodes.length-1){
var below=null;
}else{
var below=this.reorderList.childNodes[pos];
}
var pos=(+this.selectedItem.nvalue)-1;
if(pos<0){
var above=null;
}else{
var above=this.reorderList.childNodes[pos];
}
var url=this.app.routes.getDragAndDropUrl({page:this.scene.pageId,library:this.scene.wikiLabel},_26fc,above,below,false);
this.app.net.postXml({url:url,postData:text,headers:{"Content-Type":"application/atom+xml;charset=\"UTF-8\""},handle:dojo.hitch(this,this._saveComplete),timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000});
},updateDialog:function(file,opt,_2705){
var _2706=this.getListUrl(this.activeUserId);
this.updateList(_2706);
if(this.itemData){
this.itemList.data=this.itemData;
this.itemList.update();
}
},getListUrl:function(_2707,opts){
var p={};
p.category=["page","document"];
if(!opts||!opts.unpaged){
var _270a=5;
p.pageSize=_270a?_270a:this.itemsPerPage;
p.start=(opts&&opts.start?opts.start:0);
}
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _270b=!this.activeSort.lowToHigh;
if(this.sortReversed){
_270b=!_270b;
}
p.sortDescending=_270b;
}
var url=this.app.routes.getWikiDocumentsFeedServiceUrl(this.wikiLabel,p);
return url;
},updateList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadListData)});
},updateSelected:function(_270e){
this.selectedItem.className="";
this.selectedItem=_270e;
this.selectedItem.className="liItemSelected";
},loadListData:function(_270f,_2710){
this.documentLoaded=true;
if(_270f instanceof Error||!_270f||!_270f.documentElement){
var error;
if(_270f&&_270f.dojoType=="cancel"){
error={message:this.nls.CONTENT.ERROR_REQUEST_CANCELLED,type:"requestCancelled"};
}else{
if(_270f&&_270f.dojoType=="timeout"){
error={message:this.nls.CONTENT.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"};
}else{
if(_2710.xhr.status==404){
error={message:this.msgNoData,type:"noFiles"};
}else{
error={message:this.nls.CONTENT.ERROR_REQUEST_UNKNOWN,type:"unknown"};
}
}
}
var data=this.itemData={error:error,url:_2710.url};
if(this.itemList){
this.itemList.data=data;
this.itemList.update();
}
}else{
var data=this.itemData={xml:_270f.documentElement,url:_2710.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_2710.url,_270f.documentElement);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.updateList(url);
return;
}
if(this.itemList){
this.itemList.data=data;
this.itemList.update();
}
}
},onOpenResults:function(args){
if(args.pageSize==0){
var el=this.pageNameTable;
var d=document;
var span=d.createElement("span");
var label=d.createTextNode(this.nls.MOVEPAGE.NONEXISTING_PARENT);
span.appendChild(label);
var _2719=span;
this.addError(el,"nonExistant",_2719);
this.dialog.saveNode.disabled=true;
dojo.addClass(this.dialog.saveNode,"lotusBtnDisabled");
error=true;
}else{
this.removePageError();
}
},onSelectTypeAheadPageName:function(args){
this.parentId=args.id;
this.parent=args.name;
this.setRoot=false;
var url=this.app.routes.getPageNavigationUrl({page:this.scene.pageId,library:this.scene.wikiLabel});
if(this.parentId!=null){
url=url+"/"+this.parentId;
}
this.getSiblings(url,this.updateOrderItems,null,null,null);
},onChoose:function(){
if(this.showList==false){
if(this.setRoot==false){
var _271c=dojo.byId("move_itemList");
_271c.style.display="";
this.showList=true;
}
}else{
var _271c=dojo.byId("move_itemList");
_271c.style.display="none";
this.showList=false;
}
},getWikiPageTypeAheadStore:function(){
if(!this.wikiPageTypeAheadStore){
var d=this.app.document;
var div=d.createElement("div");
div.style.display="none";
d.body.appendChild(div);
this.wikiPageTypeAheadStore=new lconn.core.TypeAheadDataStore({url:this.app.routes.getWikiFileListServiceUrl(this.app.scene.wikiLabel,{format:"json"}),queryParam:"searchString",maxResults:dojo.getObject("quickr.share.config.peopleSearch.maxResults"),pageSize:dojo.getObject("quickr.share.config.peopleSearch.pageSize")},div);
}
return this.wikiPageTypeAheadStore;
},page:function(page,e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
this.parent=page;
var _2721=this.itemData.paging;
var url=_2721.getPageUrl(page);
if(url){
this.updateList(url);
}
}
},nextPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _2724=this.itemData.paging;
var url=_2724.getNextUrl();
if(url){
}
this.updateList(url);
}
},previousPage:function(e){
if(e){
dojo.stopEvent(e);
}
if(this.itemData){
var _2727=this.itemData.paging;
var url=_2727.getPreviousUrl();
if(url){
this.updateList(url);
}
}
},validateLink:function(){
var valid=true;
var d=document;
var el=this.listDiv;
if(!this.link){
var _272c=d.createTextNode(this.isImage?this.nls.INSERTLINK.VALIDATE_IMAGE_LINK_MISSING:this.nls.INSERTLINK.VALIDATE_LINK_MISSING);
this.addError(el,"linkmissing",_272c);
this.itemList.renderer.highlightTableBody();
valid=false;
}else{
this.removeListError();
}
return valid;
},addError:function(el,id,_272f){
var d=document;
var _2731;
if(!(el.previousSibling&&el.previousSibling.errorId&&el.previousSibling.errorId==id)){
var div=d.createElement("div");
div.className="lotusFormError";
div.setAttribute("role","alert");
el.parentNode.insertBefore(div,el);
_2731=div;
_2731.errorId=id;
if(dojo.isArray(_272f)){
for(var i=0;i<_272f.length;i++){
_2731.appendChild(_272f[i]);
}
}else{
if(typeof _272f=="string"){
_2731.appendChild(d.createTextNode(_272f));
}else{
_2731.appendChild(_272f);
}
}
this.dialog.saveNode.disabled=true;
dojo.addClass(this.dialog.saveNode,"lotusBtnDisabled");
}
},setLink:function(_2734,_2735,name,type,link){
this.removeListError();
var error=false;
if(this.pageTitle==name){
var el=this.itemListDiv;
var d=document;
var _273c=d.createTextNode(this.nls.MOVEPAGE.CANNOTCHOOSEASPARENT);
this.addError(el,"badParent",_273c);
error=true;
this.loadLink(_2734,_2735,name,type,link,error);
}else{
var url=this.app.routes.getPageNavigationUrl({page:_2735,library:this.scene.libraryId,breadcrumbs:"true"});
this.app.net.getJson({url:url,handle:dojo.hitch(this,this.loadLink,_2734,_2735,name,type,link,error)});
}
},loadLink:function(_273e,_273f,name,type,link,e,_2744,_2745){
if(!e){
var error;
if(_2744 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2744,_2745);
}else{
var json={"identifier":"id","label":"name","items":_2744.breadcrumbs};
var data={data:json};
var _2749=new dojo.data.ItemFileReadStore(data);
var _274a=null;
_2749.fetch({query:{name:this.pageTitle},onItem:function(item,_274c){
_274a=item;
}});
if(_274a!=null){
var el=this.itemListDiv;
var d=document;
var _274f=d.createTextNode(this.nls.MOVEPAGE.CANNOTCHOOSEASCHILD);
this.addError(el,"badParent",_274f);
e=true;
}else{
this.removeListError();
}
}
}
if(!e){
this.parent=name;
this.parentId=_273f;
this.pagesCombo.textbox.style.color="#000000";
this.pagesCombo.textbox.value=name;
var url=this.app.routes.getPageNavigationUrl({page:this.scene.pageId,library:this.scene.wikiLabel});
url=url+"/"+this.parentId;
this.getSiblings(url,this.updateOrderItems,null,null,null);
if(type=="file"){
this.link=this.app.routes.getFileSummaryUrl(_273e,_273f);
}else{
if(type=="page"){
this.link=this.app.routes.getWikiPageUrl(this.wikiLabel,name,{},true);
var el=this.dialog.pageNameNode;
el.value=this.itemName;
}else{
console.log("type not found="+type);
}
}
}
},updateOrderItems:function(item,opt,_2753,_2754){
if(_2754 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2754,ioArgs);
}else{
var data={data:_2754};
var _2756=new dojo.data.ItemFileReadStore(data);
var _2757=[];
var root=null;
var _2759=null;
if(this.parent==null){
_2756.fetch({query:{root:"true"},onItem:function(item,_275b){
_2759=item;
root=new quickr.share.wiki.bean.Navigation(_2756.getValue(item,"name"),null,_2756.getValue(item,"id"));
}});
}else{
_2756.fetchItemByIdentity({identity:this.parentId,onItem:function(item,_275d){
_2759=item;
root=new quickr.share.wiki.bean.Navigation(_2756.getValue(item,"name"),null,_2756.getValue(item,"id"));
}});
}
if(root!=null){
var _275e=_2756.getValues(_2759,"children");
var child=root;
for(var i=0;i<_275e.length;i++){
child=new quickr.share.wiki.bean.Navigation(_2756.getValue(_275e[i],"name"),parent,_2756.getValue(_275e[i],"id"));
_2757.unshift(child);
}
}
var d=document;
var l=null;
if(this.pageName.value=="top level"||this.pageName.value==""){
l=this.nls.MOVEPAGE.REORDER_LABEL2;
}else{
l=dojo.string.substitute(this.nls.MOVEPAGE.REORDER_LABEL,[this.pageName.value]);
}
while(this.reorderLabel.firstChild){
this.reorderLabel.removeChild(this.reorderLabel.firstChild);
}
this.reorderLabel.appendChild(d.createTextNode(l));
var div=this.orderDiv;
while(div.firstChild){
div.removeChild(div.firstChild);
}
div.className="reorderDiv";
_2757=_2757.reverse();
var ul=this.reorderList=d.createElement("ul");
ul.className="reorderUl";
var _2765=false;
var i=0;
for(;i<_2757.length;i++){
var li=d.createElement("li");
li.className="liItem";
var span=d.createElement("span");
var label=_2757[i].getLabel();
if(_2757[i].getLabel()==this.pageTitle){
this.selectedItem=li;
this.selectedItem.nvalue=i;
li.className="liItemSelected";
li.nvalue=i;
label=dojo.string.substitute(this.nls.MOVEPAGE.CURRENTPAGELABEL,[label]);
_2765=true;
}
span.appendChild(d.createTextNode(label));
li.id=_2757[i].getId();
li.nvalue=i;
li.appendChild(span);
ul.appendChild(li);
}
if(_2765==false){
var li=d.createElement("li");
var span=d.createElement("span");
var label=dojo.string.substitute(this.nls.MOVEPAGE.CURRENTPAGELABEL,[this.pageTitle]);
li.className="liItemSelected";
this.selectedItem=li;
this.selectedItem.nvalue=i;
span.appendChild(d.createTextNode(label));
li.id=this.scene.pageId;
li.nvalue=_2757.length;
li.appendChild(span);
ul.appendChild(li);
}
div.appendChild(ul);
}
},removeListError:function(){
var el=this.itemListDiv;
if(el){
this.removeError(el,"badParent");
this.itemList.renderer.unHighlightTableBody();
this.dialog.saveNode.disabled=false;
dojo.removeClass(this.dialog.saveNode,"lotusBtnDisabled");
}
},removePageError:function(){
var el=this.pageNameTable;
if(el){
this.removeError(el,"nonExistant");
this.dialog.saveNode.disabled=false;
dojo.removeClass(this.dialog.saveNode,"lotusBtnDisabled");
}
},removeError:function(el,id){
if(el.previousSibling&&dojo.hasClass(el.previousSibling,"lotusFormError")&&el.previousSibling.errorId&&el.previousSibling.errorId==id){
el.parentNode.removeChild(el.previousSibling);
}
},cancelDialog:function(){
this.destroy();
},_saveComplete:function(_276d,_276e){
if(_276d instanceof Error||!_276d){
if(_276d.message=="unauthenticated"){
this.enableInput();
return;
}
this.cancelDialog();
this.destroy();
}else{
this.destroy();
this.scene.navStore=null;
var page=this.pageTitle.replace(/\+/g,"_");
this.app.navigate(this.app.routes.getWikiPageUrl(this.wikiLabel,page));
}
},generateSortLink:function(app,_2771,_2772,_2773,sort,_2775,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.changeSortOrder,sort.id,!_2775));
},changeSortOrder:function(_2777,_2778){
for(var i=0;i<this.sorts.length;i++){
if(this.sorts[i].id==_2777){
this.activeSort=this.sorts[i];
this.sortReversed=_2778;
var _277a=this.getActiveListUrl(this.activeUserId);
this.itemList.renderer.activeSort=this.sorts[i];
this.itemList.renderer.sortReversed=_2778;
this.updateActiveList(_277a);
break;
}
}
},getActiveListUrl:function(_277b,opts){
var p={};
p.category=["page"];
if(!opts||!opts.unpaged){
var _277e=10;
p.pageSize=_277e?_277e:this.itemsPerPage;
p.start=(opts&&opts.start?opts.start:0);
}
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _277f=!this.activeSort.lowToHigh;
if(this.sortReversed){
_277f=!_277f;
}
p.sortDescending=_277f;
}
var url=this.app.routes.getWikiDocumentsFeedServiceUrl(this.wikiLabel,p);
return url;
},updateActiveList:function(url){
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadActiveListData)});
},loadActiveListData:function(_2782,_2783){
this.documentLoaded=true;
if(_2782 instanceof Error||!_2782||!_2782.documentElement){
var error;
if(_2782&&_2782.dojoType=="cancel"){
error={message:this.nls.CONTENT.ERROR_REQUEST_CANCELLED,type:"requestCancelled"};
}else{
if(_2782&&_2782.dojoType=="timeout"){
error={message:this.nls.CONTENT.ERROR_REQUEST_TIMEOUT,type:"serverNotResponding"};
}else{
if(_2783.xhr.status==404){
error={message:this.msgNoData,type:"noFiles"};
}else{
error={message:this.nls.CONTENT.ERROR_REQUEST_UNKNOWN,type:"unknown"};
}
}
}
var data=this.itemData={error:error,url:_2783.url};
if(this.activeList){
this.activeList.data=data;
this.activeList.update();
}
}else{
var data=this.itemData={xml:_2782.documentElement,url:_2783.url};
data.paging=new quickr.widget.StreamPaging();
data.paging.detect(_2783.url,_2782.documentElement);
if(data.paging.isPastEnd()){
var url=data.paging.getLastPageUrl();
this.updateActiveList(url);
return;
}
if(this.itemList){
this.itemList.data=data;
this.itemList.update();
}
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.PrintPage"]){
dojo._hasResource["quickr.share.wiki.action.PrintPage"]=true;
dojo.provide("quickr.share.wiki.action.PrintPage");
dojo.declare("quickr.share.wiki.action.PrintPage",[quickr.share.action.Action],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.opt=opt;
this.name=this.app.nls.PRINT_PAGE.ACTION;
this.tooltip=this.app.nls.PRINT_PAGE.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},isValid:function(user,opt){
return true;
},execute:function(e){
if(e){
dojo.stopEvent(e);
}
var _278d=dojo.byId("pageDetails");
var win=window.open("");
win.document.open("text/html");
win.document.write(_278d.innerHTML);
win.document.close();
win.document.getElementsByTagName("html")[0].setAttribute("dir",this.app.d.getElementsByTagName("html")[0].getAttribute("dir"));
win.focus();
win.print();
win.close();
}});
}
if(!dojo._hasResource["quickr.share.wiki.bean.WikiLinks"]){
dojo._hasResource["quickr.share.wiki.bean.WikiLinks"]=true;
dojo.provide("quickr.share.wiki.bean.WikiLinks");
dojo.declare("quickr.share.wiki.bean.WikiLinks",null,{constructor:function(entry){
this.e=entry;
},getForwardLinkIds:function(){
if(!this.forwardLinkIds){
var _2790={};
var _2791=this.e.getElementsByTagName("links");
if(_2791&&_2791.length>0){
var _2792=_2791.item(0);
for(var i=0;i<_2792.childNodes.length;i++){
var child=_2792.childNodes[i];
if(child.nodeName=="linkId"){
var _2795=child.firstChild.nodeValue;
_2790[_2795]=1;
}
}
}
this.forwardLinkIds=_2790;
}
return this.forwardLinkIds;
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.Comments"]){
dojo._hasResource["quickr.share.wiki.widget.Comments"]=true;
dojo.provide("quickr.share.wiki.widget.Comments");
dojo.declare("quickr.share.wiki.widget.Comments",[quickr.widget.Comments],{postMixInProperties:function(){
this.renderer=new quickr.share.wiki.widget.CommentStreamRenderer({_strings:this._strings,authenticatedUser:this.authenticatedUser,isManager:this.isManager,generateLinkToPerson:this.generateLinkToPerson,generateLinkToComment:this.generateLinkToComment,getUserImageUrl:this.getUserImageUrl});
quickr.widget.Stream.prototype.postMixInProperties.apply(this,arguments);
}});
dojo.declare("quickr.share.wiki.widget.CommentStreamRenderer",[quickr.widget.CommentStreamRenderer],{renderItemComment:function(_2796,el,data,_2799,_279a,_279b,_279c,_279d){
var d=document;
var _279f=(this.authenticatedUser&&_2799.getAuthor().id==this.authenticatedUser.id);
var _27a0=(this.authenticatedUser&&this.isManager);
var _27a1=_2799.isDeleted();
var div=(_279d)?_279d:d.createElement("div");
div.className="lotusPost lotusStatus";
var _27a3=d.createElement("a");
_27a3.name=_27a3.id="comment-"+_2799.getId();
_27a3.className="lotusHidden";
div.appendChild(_27a3);
var divai=d.createElement("div");
divai.className="lotusPostAuthorInfo";
var divav=d.createElement("div");
divav.className="lotusPostAvatar";
var divc=d.createElement("div");
divc.className="lotusPostContent";
var divm=d.createElement("div");
divm.className="lotusMeta";
divai.appendChild(divav);
div.appendChild(divai);
divc.appendChild(divm);
div.appendChild(divc);
if(!_27a1){
var u=_2799.getAuthor();
if(this.getUserImageUrl){
var src=this.getUserImageUrl(u);
if(src){
var img=d.createElement("img");
img.className="lotusPostAvatar";
img.src=src;
img.style.width=img.style.height="35px";
img.setAttribute("alt",u.name);
divav.appendChild(img);
}
}
if(this.showTitles){
var h4=d.createElement("h4");
h4.appendChild(d.createTextNode(_2799.getTitle()));
divm.appendChild(h4);
}
var _27ac=new quickr.share.util.DateFormat(_2799.getPublished());
var _27ad=_27ac.formatByAge(this._strings.COMMENT_CREATED);
var self=this;
quickr.share.util.html.substitute(d,divm,_27ad,{user:function(){
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(u.name));
self.generateLinkToPerson(u,a);
return a;
},timestamp:function(){
if(self.generateLinkToComment){
var a=d.createElement("a");
a.appendChild(d.createTextNode(new quickr.share.util.DateFormat(_2799.getPublished()).formatByAge(self._strings.COMMENT_CREATED_TIME)));
self.generateLinkToComment(_2799,a);
return a;
}
return d.createTextNode(new quickr.share.util.DateFormat(_2799.getPublished()).formatByAge(self._strings.COMMENT_CREATED_TIME));
}});
if(_2799.getUpdated().getTime()!=_2799.getPublished().getTime()){
var _27b1=d.createElement("span");
_27b1.className="lotusMeta";
var _27ac=new quickr.share.util.DateFormat(_2799.getUpdated());
var _27ad=_27ac.formatByAge(this._strings.COMMENT_EDITED);
_27b1.title=_27ac.toTimestamp();
_27b1.appendChild(d.createTextNode(_27ad));
div.appendChild(_27b1);
}
}else{
var img=d.createElement("img");
img.className="lotusPostAvatar";
img.src=_2796.baseUrl+"nav/common/styles/images/iconDeleteComment.gif";
divav.appendChild(img);
if(this.showTitles){
var h4=d.createElement("h4");
h4.appendChild(d.createTextNode(_2799.getTitle()));
divm.appendChild(h4);
}
var _27ad=new quickr.share.util.DateFormat(_2799.getUpdated()).formatByAge(this._strings.COMMENT_DELETED);
var self=this;
quickr.share.util.html.substitute(d,divm,_27ad,{user:function(){
var u=_2799.getModifier();
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(u.name));
self.generateLinkToPerson(u,a);
return a;
}});
}
var divb=d.createElement("div");
divb.commentBody=_2799.getContents();
divb.className="lotusPostDetails";
var pbody=d.createElement("p");
quickr.share.util.createTextNode(d,pbody,_2799.getContents());
divb.appendChild(pbody);
if(!_27a1&&(_279f||_27a0)){
var diva=d.createElement("div");
diva.className="lotusActions";
var ul=d.createElement("ul");
ul.className="lotusInlinelist";
if(_279f){
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_2796,_2796.edit,_2799));
a.appendChild(d.createTextNode(this._strings.EDIT));
li.appendChild(a);
ul.appendChild(li);
}
diva.appendChild(ul);
divb.appendChild(diva);
if(_279f||_27a0){
var a=d.createElement("a");
a.className="lotusDelete";
a.title=this._strings.DELETE;
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_2796,_2796.remove,_2799));
var img=d.createElement("img");
img.className="lotusPostAvatar";
img.src=_2796.baseUrl+"nav/common/styles/images/blank.gif";
img.style.width=img.style.height="12px";
img.alt="";
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
divb.appendChild(a);
}
}
divc.appendChild(divb);
if(!_279d){
el.appendChild(div);
}
_2799.element=div;
}});
}
if(!dojo._hasResource["quickr.widget.DownloadInfoStream"]){
dojo._hasResource["quickr.widget.DownloadInfoStream"]=true;
dojo.provide("quickr.widget.DownloadInfoStream");
dojo.declare("quickr.widget.DownloadInfoStreamRenderer",[quickr.widget.StreamRenderer],{minimalPaging:true,renderItem:function(_27bb,el,data,item,_27bf,_27c0,_27c1){
var d=document;
if(!_27c0){
el.appendChild(d.createTextNode(", "));
}
var _27c3=d.createElement("span");
_27c3.className="lotusNowrap";
var img=d.createElement("img");
var src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/";
img.style.padding="0 2px";
img.style.margin="0";
var nls=this.file.getCategory()=="page"?this._appstrings.SHARE_INFO.PAGE:this._appstrings.SHARE_INFO.FILE;
var _27c7=this.file.getDocumentVersionId()||this.file.getVersionId();
if(_27c7&&item.versionId&&_27c7!=item.versionId){
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_OLDER,[item.name]);
img.src=src+"iconDownloadedOlder.gif";
}else{
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_CURRENT,[item.name]);
img.src=src+"iconDownloadedCurrent.gif";
}
_27c3.appendChild(img);
var a=d.createElement("a");
a.className="lotusPerson";
this.generateLinkToPerson(item,a);
a.appendChild(d.createTextNode(item.name));
_27c3.appendChild(a);
el.appendChild(_27c3);
}});
dojo.declare("quickr.widget.DownloadInfoStream",[quickr.widget.Stream],{handleAs:"json-comment-optional",templateString:"<div class=\"${baseClass}\">\n  <div dojoAttachPoint=\"streamNode\"></div>\n  <div class=\"lotusPaging\" dojoAttachPoint=\"bottomPageNode\" style=\"${_initPageStyle}\">\n     <div class=\"lotusLeft\" style=\"display:none;\" dojoAttachPoint=\"pageInfoNode\"></div>\n     <ul class=\"lotusRight lotusInlinelist\" dojoAttachPoint=\"topPageNavigateNode\" style=\"display:none;\">\n        <li dojoAttachPoint=\"bPreviousLinkNode\" class=\"lotusFirst\"><a href=\"#\" dojoAttachEvent=\"onclick:previous\">${_strings.PREVIOUS}</a></li>\n        <li dojoAttachPoint=\"bPreviousTextNode\" class=\"lotusFirst\">${_strings.PREVIOUS}</li>\n        <li dojoAttachPoint=\"bNextLinkNode\"><a href=\"#\" dojoAttachEvent=\"onclick:next\">${_strings.NEXT}</a></li>\n        <li dojoAttachPoint=\"bNextTextNode\">${_strings.NEXT}</li>\n     </ul>\n     <ul class=\"lotusInlinelist\" style=\"display:none\" dojoAttachPoint=\"pageListNode\">${_strings.PAGE}</ul>\n  </div>\n</div>\n",url:null,renderer:new quickr.widget.DownloadInfoStreamRenderer()});
}
if(!dojo._hasResource["quickr.widget.DownloadInfo"]){
dojo._hasResource["quickr.widget.DownloadInfo"]=true;
dojo.provide("quickr.widget.DownloadInfo");
dojo.declare("quickr.widget.DownloadInfo",[dijit._Widget],{data:null,file:null,url:null,user:null,additionalClasses:"",loadOnStartup:true,baseImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/",stylesImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/",_strings:{},buildRendering:function(){
var d=document;
var el=this.domNode=this.containerNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
if(this.additionalClasses){
dojo.addClass(el,this.additionalClasses);
}
if(!this.data&&this.oldWidget){
this._hasData=this.oldWidget._hasData;
this.data=this.oldWidget.data;
}
this.update();
if(!this.data&&this.loadOnStartup){
this.load();
}
},load:function(){
this._hasData=false;
this.data=null;
var _27cb=this._loader;
if(!this._loader){
_27cb=this._loader=new quickr.share.util.AsyncLoader({net:this.net});
dojo.connect(_27cb,"onRequestsCompleted",this,"onRequestsCompleted");
dojo.connect(_27cb,"onRequestCompleted",this,"onRequestCompleted");
}
_27cb.cancel();
_27cb.add(this.url,dojo.hitch(this,"handleData"),"json-comment-optional");
_27cb.start();
},onRequestsCompleted:function(_27cc){
if(_27cc.length>0){
this.updateError();
}else{
this._hasData=true;
this.update();
}
},onRequestCompleted:function(error){
return true;
},handleData:function(_27ce,_27cf){
var error;
if(!_27ce||_27ce instanceof Error){
this.data=null;
error={type:"data"};
}else{
this.data=_27ce;
}
return error;
},updateError:function(){
var d=document;
var el=this.domNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
var div=d.createElement("div");
div.className="qkrError";
div.appendChild(d.createTextNode(this._strings.ERROR));
el.appendChild(div);
},update:function(){
var d=document;
var el=this.domNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
if(this._hasData){
var _27d6=d.createElement("div");
el.appendChild(_27d6);
var _27d7={minimalPaging:true,file:this.file,url:this.url,_strings:this._strings,_appstrings:this._appstrings,generateLinkToPerson:this.generateLinkToPerson};
var _27d8=new quickr.widget.DownloadInfoStreamRenderer(_27d7);
var list=this.list=new quickr.widget.DownloadInfoStream({baseClass:"",file:this.file,url:this.url,msgNoData:this._strings.EMPTY,_strings:this._appstrings.CONTENT,handleAs:"json-comment-optional",renderer:_27d8,net:this.net},_27d6);
list.update({json:this.data,url:this.url,fromUrl:this.url?true:false});
}else{
var div=d.createElement("div");
div.className="qkrLoading";
var img=d.createElement("img");
img.src=this.stylesImageUri+"loadingSmall.gif";
img.setAttribute("alt",this._strings.LOADING);
div.appendChild(img);
div.appendChild(d.createTextNode(this._strings.LOADING));
el.appendChild(div);
}
},onVisible:function(){
if(!this._loaded){
this._loaded=true;
this.load();
}
}});
}
if(!dojo._hasResource["quickr.share.scenes.InvolvedSharesStreamRenderer"]){
dojo._hasResource["quickr.share.scenes.InvolvedSharesStreamRenderer"]=true;
dojo.provide("quickr.share.scenes.InvolvedSharesStreamRenderer");
dojo.declare("quickr.share.scenes.InvolvedSharesStreamRenderer",[quickr.widget.StreamRenderer],{render:function(_27dc,el,data,item){
this.cleanup();
data.itemById={};
this.baseUrl=_27dc.baseUrl;
quickr.share.util.removeChildren(el);
this.inherited(arguments);
},renderItem:function(_27e0,el,data,item,_27e4,_27e5,_27e6){
item=new quickr.share.bean.Share(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
item._position=_27e4;
this.renderItemShare(_27e0,el,data,item,_27e4,_27e5,_27e6);
},renderItemShare:function(_27e7,el,data,item,_27eb,_27ec,_27ed,_27ee){
var d=document;
var _27f0=(item.getUpdated().getTime()!=item.getPublished().getTime())?this._appstrings.DATE.UPDATED:this._appstrings.DATE.ADDED;
var user=item.getCreator();
var _27f2=item.getShareTargetCount();
var _27f3=item.getSharedResourceType()=="page";
var div=(_27ee)?_27ee:d.createElement("div");
div.className="lotusComment";
var divh=d.createElement("div");
divh.className="lotusCommentHeader";
var divm=d.createElement("div");
divm.className="lotusMeta lotusTiny";
var span=d.createElement("span");
span.className="lotusLeft";
var _27f8,_27f9;
if(item.getPermissions().Edit){
_27f8=(_27f2>1)?this._appstrings.SHARING.EVT_EDIT_MANY:this._appstrings.SHARING.EVT_EDIT_ONE;
}else{
_27f8=(_27f2>1)?this._appstrings.SHARING.EVT_VIEW_MANY:this._appstrings.SHARING.EVT_VIEW_ONE;
}
var self=this;
var _27fb=new quickr.share.util.DateFormat(item.getPublished()).formatByAge(_27f8);
var o=quickr.share.util.html.substitute(d,span,_27fb,{user:function(){
var _27fd=self.deleteShareAction;
var file=self.file;
var _27ff=self.permissions.isOwner(file);
var spanu=d.createElement("span");
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(user.name));
self.generateLinkToPerson(user,a);
spanu.appendChild(a);
if(_27fd&&_27ff&&file.getAuthor().id!=user.id){
var a=d.createElement("a");
a.href="javascript:;";
a.title=self._strings.DELETESHARE_TOOLTIP;
dojo.connect(a,"onclick",dojo.hitch(_27fd,_27fd.execute,user,{file:file}));
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconRemove.gif";
a.appendChild(img);
spanu.appendChild(a);
}
return spanu;
},list:function(){
var _2803=quickr.share.util.sort(item.getShareTargets(),"name");
var _2804=self.deleteShareAction;
var file=self.file;
var _2806=self.permissions.isOwner(file);
var spanu=d.createElement("span");
dojo.forEach(_2803,function(user){
if(spanu.firstChild){
spanu.appendChild(d.createTextNode(self._strings.SHARE_MESSAGE.LIST_SEP));
}
if(self.downloads&&quickr.share.config.detailedDownloads){
var _2809=self.downloads[user.id];
var img=d.createElement("img");
var src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/";
img.style.padding="0 2px";
img.style.margin="0";
var nls=self.file.getCategory()=="page"?self._appstrings.SHARE_INFO.PAGE:self._appstrings.SHARE_INFO.FILE;
if(_2809){
var _280d=self.file.getDocumentVersionId()||self.file.getVersionId();
if(_280d&&_280d!=_2809.versionId){
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_OLDER,[user.name]);
img.src=src+"iconDownloadedOlder.gif";
}else{
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_CURRENT,[user.name]);
img.src=src+"iconDownloadedCurrent.gif";
}
}else{
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_NEVER,[user.name]);
img.src=src+"iconDownloadedNever.gif";
}
spanu.appendChild(img);
}
var a=d.createElement("A");
a.className="lotusPerson";
self.generateLinkToPerson(user,a);
a.appendChild(d.createTextNode(user.name));
spanu.appendChild(a);
if(_2804&&_2806&&_2806&&file.getAuthor().id!=user.id){
var a=d.createElement("a");
a.href="javascript:;";
a.title=self._strings.DELETESHARE_TOOLTIP;
dojo.connect(a,"onclick",dojo.hitch(_2804,_2804.execute,user,{file:file}));
var img=d.createElement("img");
img.style.marginRight="0px";
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconRemove.gif";
a.appendChild(img);
spanu.appendChild(a);
}
});
return spanu;
},count:_27f9});
divm.appendChild(span);
divh.appendChild(divm);
div.appendChild(divh);
var divb=d.createElement("div");
divb.className="lotusCommentBody";
var divd=d.createElement("div");
divd.className="qkrWide";
var _2811=d.createElement("div");
_2811.className="lotusChunk entry-summary qkrWideInner";
quickr.share.util.createTextNode(d,_2811,item.getDescription());
divd.appendChild(_2811);
if(_2811.firstChild){
divb.appendChild(divd);
}
if(divb.firstChild){
div.appendChild(divb);
}
el.appendChild(div);
item.element=div;
},getSorts:function(_2812,_2813){
return [];
}});
}
if(!dojo._hasResource["quickr.widget.ShareInfo"]){
dojo._hasResource["quickr.widget.ShareInfo"]=true;
dojo.provide("quickr.widget.ShareInfo");
dojo.declare("quickr.widget.ShareInfo",[dijit._Widget],{file:null,url:null,urlInvolved:null,urlGraph:null,user:null,downloads:{},additionalClasses:"",loadOnStartup:true,baseImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/",stylesImageUri:(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/",_strings:{},postMixInProperties:function(){
if(!this.permissions){
this.permissions=new quickr.share.bean.StreamPermissions({authenticatedId:(this.user?this.user.id:null)});
}
},buildRendering:function(){
var d=document;
var el=this.domNode=this.containerNode=this.srcNodeRef;
if(this.baseClass){
dojo.addClass(el,this.baseClass);
}
if(this.additionalClasses){
dojo.addClass(el,this.additionalClasses);
}
this.update();
if(this.shares||this.shareGraph){
}else{
if(this.loadOnStartup){
this.load();
}
}
},load:function(){
this._hasData=false;
this.shares=null;
this.shareGraph=null;
var _2816=this._loader;
if(!this._loader){
_2816=this._loader=new quickr.share.util.AsyncLoader();
dojo.connect(_2816,"onRequestsCompleted",this,"onRequestsCompleted");
dojo.connect(_2816,"onRequestCompleted",this,"onRequestCompleted");
}
_2816.cancel();
_2816.add(this.urlGraph,dojo.hitch(this,"handleGraph"),"json-comment-optional");
if(!this.file&&this.url){
_2816.add(this.url,dojo.hitch(this,"handleFile"));
}
_2816.start();
},onRequestsCompleted:function(_2817){
if(_2817.length>0){
this.updateError();
}else{
this._hasData=true;
this.update();
}
},onRequestCompleted:function(error){
return true;
},handleInvolved:function(_2819,_281a){
var error;
if(!_2819||!_2819.documentElement||_2819 instanceof Error){
this.shares=null;
error={type:"involved"};
}else{
this.shares=_2819.documentElement;
}
return error;
},handleGraph:function(_281c,_281d){
var error;
if(!_281c||_281c instanceof Error){
this.shareGraph=null;
error={type:"graph"};
}else{
this.shareGraph=_281c;
}
return error;
},handleFile:function(_281f,_2820){
var error;
if(!_281f||!_281f.documentElement||_281f instanceof Error){
this.file=null;
error={type:"file"};
}else{
this.file=new quickr.share.bean.File(_281f.documentElement);
}
return error;
},updateError:function(){
var d=document;
var el=this.domNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
var div=d.createElement("div");
div.className="qkrError";
div.appendChild(d.createTextNode(this._appstrings.SHARE_INFO.ERROR));
el.appendChild(div);
},update:function(){
var d=document;
var el=this.domNode;
while(el.firstChild){
el.removeChild(el.firstChild);
}
if(this._hasData){
var _2827=this.shares;
var _2828=this.shareGraph;
var file=this.file;
var _282a=this.user;
var _282b=this.permissions;
var _282c=this.deleteShareAction;
var users={};
var graph={};
var _282f=[];
var _2830=[];
if(_2827){
var _2831=_2827.getElementsByTagName("entry");
for(var i=0;entry=_2831[i];i++){
_2830.push(new quickr.share.bean.Share(entry));
}
}
if(_2828){
this.downloads={};
for(var i=0;i<_2828.items.length;i++){
var _2833=_2828.items[i].creator;
var _2834=_2828.items[i].target;
var id=decodeURIComponent(_2833.id);
var _2836=decodeURIComponent(_2834.id);
users[id]=_2833;
users[_2836]=_2834;
this.downloads[_2836]=_2828.items[i].download;
var _2837=graph[id];
if(!_2837){
graph[id]=_2837={};
}
_2837[_2836]=true;
}
for(var i=0;i<_2830.length;i++){
var id=_2830[i].getCreator().id;
if(graph[id]){
var g=graph[id];
var _2837=_2830[i].getShareTargets();
for(var j=0;j<_2837.length;j++){
delete g[_2837[j].id];
}
}
}
var fSort=function(a,b){
var userA=users[a];
var userB=users[b];
if(userA.name>userB.name){
return 1;
}
if(userA.name==userB.name){
return 0;
}
return -1;
};
for(var id in graph){
var _2837=graph[id];
var _283f=[];
for(var _2836 in _2837){
_283f.push(_2836);
}
_283f.sort(fSort);
if(_283f.length>0){
graph[id]=_283f;
_282f.push(id);
}else{
delete graph[id];
}
}
_282f.sort(fSort);
}
var _2840=_282f.length>0;
var _2841=_2830&&_2830.length>0;
var _2842=_282b.isOwner(file);
if(_2840||_2841){
if(_2841){
var _2843=d.createElement("div");
el.appendChild(_2843);
var _2844={displayInvolved:true,minimalPaging:true,file:file,_strings:this._strings,_appstrings:this._appstrings,downloads:this.downloads,permissions:_282b,deleteShareAction:_282c,generateLinkToPerson:this.generateLinkToPerson};
var _2845=new quickr.share.scenes.InvolvedSharesStreamRenderer(_2844);
var list=new quickr.widget.Stream({baseClass:"lotusNotifications lotusDiscussion",_strings:this._appstrings.CONTENT,renderer:_2845},_2843);
list.update({xml:_2827});
}
if(_2840){
if(_2841){
var h6=d.createElement("h6");
h6.appendChild(d.createTextNode(this._appstrings.CONTENT.OTHER_PEOPLE_FILE));
el.appendChild(h6);
}
var table=d.createElement("table");
table.className="lotusLayout";
table.cellPadding=table.cellSpacing="0";
var tbody=d.createElement("tbody");
for(var i=0;i<_282f.length;i++){
var id=_282f[i];
var owner=users[id];
if(_2841&&_282a&&_282a.id==id){
continue;
}
var _2837=graph[id];
var tr=d.createElement("tr");
var td=d.createElement("td");
td.className="lotusNowrap";
var a=d.createElement("a");
a.className="lotusPerson";
this.generateLinkToPerson(owner,a);
a.appendChild(d.createTextNode(owner.name));
td.appendChild(a);
tr.appendChild(td);
var td=d.createElement("td");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/iconMoreAppsClosed.gif";
td.appendChild(img);
tr.appendChild(td);
var td=d.createElement("td");
dojo.forEach(_2837,function(_284f){
var user=users[_284f];
if(td.firstChild){
td.appendChild(d.createTextNode(", "));
}
var name=user.name;
var _2852=d.createElement("span");
_2852.className="lotusNowrap";
if(quickr.share.config.detailedDownloads){
var _2853=this.downloads[_284f];
var img=d.createElement("img");
var src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/";
img.style.padding="0 2px";
var nls=this.file.getCategory()=="page"?this._appstrings.SHARE_INFO.PAGE:this._appstrings.SHARE_INFO.FILE;
if(_2853){
var _2857=this.file.getDocumentVersionId()||this.file.getVersionId();
if(_2857&&_2857!=_2853.versionId){
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_OLDER,[name]);
img.src=src+"iconDownloadedOlder.gif";
}else{
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_CURRENT,[name]);
img.src=src+"iconDownloadedCurrent.gif";
}
}else{
img.alt=img.title=dojo.string.substitute(nls.DOWNLOADED_NEVER,[name]);
img.src=src+"iconDownloadedNever.gif";
}
_2852.appendChild(img);
}
var a=d.createElement("a");
a.className="lotusPerson";
this.generateLinkToPerson(user,a);
a.appendChild(d.createTextNode(name));
_2852.appendChild(a);
if(_282c&&_282b.isOwner(file)){
var a=d.createElement("a");
a.href="javascript:;";
a.title=this._appstrings.CONTENT.DELETESHARE_TOOLTIP;
dojo.connect(a,"onclick",dojo.hitch(_282c,_282c.execute,{id:_284f,name:user.name},{file:file}));
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/iconRemove.gif";
a.appendChild(img);
_2852.appendChild(a);
}
td.appendChild(_2852);
},this);
tr.appendChild(td);
tbody.appendChild(tr);
}
table.appendChild(tbody);
el.appendChild(table);
if(!this.shares&&this.user&&users[this.user.id]){
var div=this.involvedNode=d.createElement("div");
div.className="lotusChunk";
var a=d.createElement("a");
a.href="javascript:;";
a.appendChild(d.createTextNode(this._appstrings.SHARE_INFO.SHOW_INVOLVED));
dojo.connect(a,"onclick",this,"showInvolved");
div.appendChild(a);
el.appendChild(div);
}
}
}else{
var div=d.createElement("div");
div.appendChild(d.createTextNode(this._appstrings.SHARE_INFO.NO_SHARES));
el.appendChild(div);
}
}else{
var div=d.createElement("div");
div.className="qkrLoading";
var img=d.createElement("img");
img.src=this.stylesImageUri+"loadingSmall.gif";
img.setAttribute("alt",this._appstrings.LOADING);
div.appendChild(img);
div.appendChild(d.createTextNode(this._appstrings.SHARE_INFO.LOADING));
el.appendChild(div);
}
},onVisible:function(){
if(!this._loaded){
this._loaded=true;
this.load();
}
},showInvolved:function(){
var _285a=this._loader;
if(this.user){
_285a.add(this.urlInvolved,dojo.hitch(this,"handleInvolved"));
_285a.start();
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.WikiPage"]){
dojo._hasResource["quickr.share.wiki.scenes.WikiPage"]=true;
dojo.provide("quickr.share.wiki.scenes.WikiPage");
dojo.declare("quickr.share.wiki.scenes.WikiPage",[quickr.share.wiki.scenes.AbstractPage,quickr.share.wiki.scenes.WikiSidebarPage],{constructor:function constructor(app,_285c){
this.app=app;
this.nls=app.nls;
this.sceneInfo=_285c;
this.baseWidgets=[];
this.widgets=[];
this.expanded={};
this.wikiLabel=_285c.wikiLabel;
this.pageId=_285c.pageId;
this.pageLabel=_285c.pageId;
this.draftId=_285c.draftId;
this.pageName=_285c.pageId;
this.pageTitle=_285c.pageId;
this.versionId=_285c.versionId;
this.compare=_285c.compare;
this.toVersion=_285c.parameters.to;
this.fromVersion=_285c.parameters.from;
this.userId=_285c.userId=app.authenticatedUser?app.authenticatedUser.id:null;
this.mode=_285c.mode||false;
this.commentId=_285c.commentId;
this.parents=[];
this.current=null;
this.mouseDown=false;
this.forceNotification=quickr.share.util.first(_285c.parameters.unsubscribe)=="true"?false:(quickr.share.util.first(_285c.parameters.subscribe)=="true"?true:null);
this.unsubscribe=quickr.share.util.first(_285c.parameters.unsubscribe)=="content";
},begin:function(_285d){
this.end();
if((this.forceNotification==true||this.forceNotification==false||this.unsubscribe)&&!this.app.authenticatedUser){
this.showAuthRequiredError(this.app.nls.PAGECONTENT.ERRORS.AUTH_REQUIRED_ANON);
return;
}
this.document=null;
this.user=null;
if(_285d&&_285d.navStore&&_285d.wikiLabel==this.wikiLabel){
this.navStore=_285d.navStore;
}else{
this.navStore=null;
}
if(_285d&&_285d.wiki&&_285d.wikiLabel==this.wikiLabel){
this.wiki=_285d.wiki;
}
if(_285d&&_285d.declaredClass=="quickr.share.wiki.scenes.WikiPage"){
if(_285d.parents){
this.parents=_285d.parents;
}
}
var _285e=[];
if(_285d&&_285d.declaredClass==this.declaredClass&&(_285d.wikiLabel==this.wikiLabel)&&((_285d.pageId&&_285d.pageId==this.pageId)||(_285d.pageName&&_285d.pageName==this.pageName))){
this.expanded=_285d.expanded;
if(_285d.versionsSectionOpen&&!(_285d.versionReverted||_285d.saved)){
this.versions=_285d.versions;
this.versionsSectionOpen=true;
}
if(_285d.attachmentsSectionOpen){
this.attachments=_285d.attachments;
this.attachmentsSectionOpen=true;
}
if(_285d.tagger){
this.tagger=_285d.tagger;
}
if(_285d.rater){
this.rater=_285d.rater;
}
if(_285d.notify){
this.notify=_285d.notify;
}
if(_285d.downloads){
this.downloads=_285d.downloads;
}
}
if(!this.wiki){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
_285e.push([url,"loadWiki"]);
}
if(!this.document&&!this.draftId){
var opts={fetchAcl:true,includeNotification:this.app.authenticatedUser,includeRecommendation:true,includeTags:true,inline:!this.mode||!!this.versionId,includeWorkingDraftInfo:true};
var url=this.versionId?this.app.routes.getWikiPageVersionInfoServiceUrl(this.wikiLabel,this.pageName,this.versionId,opts):this.app.routes.getWikiPageInfoServiceUrl(this.wikiLabel,this.pageName,opts);
_285e.push([url,"loadDocument"]);
}
if(!this.comparison&&this.mode=="compare"){
var url=this.app.routes.getWikiComparisonServiceUrl(this.pageId,this.wikiLabel,this.toVersion,this.fromVersion);
_285e.push([url,"loadComparison"]);
}
if(!this.document&&this.draftId){
var opts={fetchAcl:true,inline:true,includeDocumentModifiedInfo:true,includeDocumentAuthorInfo:true};
var url=this.app.routes.getWikiPageDraftInfoServiceUrl(this.libraryId,this.draftId,opts);
_285e.push([url,"loadDraft"]);
}
if(_285e.length>0){
this.request(_285e);
}else{
this.show();
}
},loadWiki:function(_2861,_2862){
var error;
if(_2861 instanceof Error){
error={type:"wiki"};
error.code=quickr.share.util.getAtomErrorCode(_2861,_2862);
}else{
this.wiki=new quickr.share.wiki.bean.Wiki(_2861.documentElement);
}
return error;
},loadDocument:function(_2864,_2865){
var error;
if(_2864 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2864,_2865);
}else{
var _2867;
var e=_2864.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2869=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_2869=="page"||(_2869=="version"&&this.versionId)){
_2867=new quickr.share.bean.Page(e);
}
}
var _286a=quickr.share.util.getElementsByTagNameNS(_2867.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
var _286b=this.libraryId=quickr.share.util.getChildElementTextContentNS(_286a,"libraryUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var _286c=new quickr.share.wiki.bean.WikiLinks(e);
var _286d=_286c.getForwardLinkIds();
if(_2867){
this.document=_2867;
this.pageId=_2867.getId();
this.pageTitle=_2867.getTitle();
this.pageName=_2867.getName();
this.currentDraftId=_2867.getDraftId();
this.wikiLinkIds=_286d;
}else{
error={type:"page"};
}
}
return error;
},syncDocument:function(){
var url=this.app.routes.getFileInfoServiceUrl(this.userId,this.pageId,null);
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.syncDocumentComplete),sync:true});
},syncDocumentComplete:function(_286f,_2870){
if(_286f instanceof Error){
}else{
var _2871;
var e=_286f.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2873=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_2873=="page"){
_2871=new quickr.share.bean.Page(e);
}
}
if(_2871){
this.syncAuxDocumentProperties(_2871,this.document);
this.document=_2871;
this.currentDraftId=_2871.getDraftId();
this.fileLastUpdated=_2871.getUpdated();
}else{
}
}
},_onPageViewCompleted:function(){
},onNavigationLoaded:function(){
},_navigationDidLoad:function(d,div,doc,opt){
var _2878=dojo.byId("pageDetails");
if(_2878){
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyChildList(d,div,doc,opt);
quickr.share.util.insertBefore(_2878,div,_2878.lastChild);
}
},loadComparison:function(_2879,_287a){
var error;
if(_2879 instanceof Error){
error={type:"page"};
}else{
var _287c;
_287c=new quickr.share.bean.Comparison(_2879.documentElement);
if(_287c){
this.comparison=_287c;
}else{
if(quickr.util.dom.isNamedNS(_2879.documentElement,"error",quickr.util.dom.NAMESPACES.DOCUMENTS_ATOM)){
error={type:"wikiConversion"};
error.failed=new Array();
var _287d=_2879.documentElement.getElementsByTagName("failedRevisionNumber");
for(var i=0;i<_287d.length;i++){
error.failed.push(quickr.share.util.xmlText(_287d[i]));
}
if(error.failed.length==0){
error.type="page";
}
}else{
error={type:"page"};
}
}
}
return error;
},loadDraft:function(_287f,_2880){
var error;
if(_287f instanceof Error){
error={type:"page"};
}else{
var _2882;
if(quickr.util.dom.isNamedNS(_287f.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2883=quickr.share.util.getChildElementAttribute(_287f.documentElement,"category","term");
if(_2883=="draft"){
_2882=new quickr.share.bean.Draft(_287f.documentElement);
}
}
if(_2882){
this.document=_2882;
}else{
error={type:"page"};
}
}
return error;
},showConfirmNewPage:function(){
if(!this.sceneInfo.pageId){
this.sceneInfo.pageId=this.app.nls.CREATE_PAGE.ACTION;
}
var scene=new quickr.share.wiki.scenes.ConfirmNewPage(this.app,this.sceneInfo);
this.app.load(scene);
},onRequestsCompleted:function(_2885){
if(dojo.some(_2885,function(e){
return e.type=="wiki";
})){
this.showWikiError(dojo.filter(_2885,function(e){
return e.type=="wiki";
})[0]);
}else{
if(dojo.some(_2885,function(e){
return e.type=="page"&&e.code!="cancel";
})){
this.showPageError(dojo.filter(_2885,function(e){
return e.type=="page";
})[0]);
}else{
this.show();
}
}
},onRequestCompleted:function(error){
return (error.type=="wiki");
},show:function(){
var d=this.app.document;
var _288c=this.app.authenticatedUser;
var _288d=this.document;
if(this.draftId){
this.fileLastUpdated=_288d.getDocumentUpdated();
}else{
this.fileLastUpdated=_288d.getUpdated();
}
var app=this.app;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_288c?_288c.id:null)});
d.title=dojo.string.substitute(app.nls.WINDOWTITLE.WIKIPAGE,[this.wiki.getTitle(),this.pageTitle]);
quickr.share.wiki.scenes.applyHomeTemplate(d,app.authenticatedUser,app,app.routes,{logout:dojo.hitch(this,this._beforeLogout),defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.document,this.app.authenticatedUser,null,this.wiki.getTitle(),this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.WikiPage.render(d,_288d,null,_288c,null,app,app.routes,this);
var _288f=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_288f,this.app,this,this.app.authenticatedUser,false);
d.body.style.visibility="visible";
},showWikiError:function(error){
var app=this.app;
var _2892=app.routes;
var _2893=this.app.authenticatedUser;
var d=this.app.document;
d.title=this.nls.WINDOWTITLE.WIKIPAGEERROR;
var _2895=[];
if(!_2893){
_2895.push([dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.ERRORS.LOGIN),this.app.getUrl(),"login"]);
}
var _2896=false;
var text=this.app.nls.WIKIPAGE.ERROR.DEFAULT;
if(error){
if(error.code=="AccessDenied"){
if(!_2893){
this.clearBeforeNavigate=true;
this.app.login();
}else{
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED;
}
_2896=true;
}else{
if(error.code=="ItemNotFound"){
text=this.app.nls.WIKIPAGE.ERROR.WIKI;
}
}
}
if(_2896){
quickr.share.scenes.applyGenericWarning(this.app,text.TITLE,text.MESSAGES,_2895);
}else{
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,_2895);
}
d.body.style.visibility="visible";
},showPageError:function(error){
var app=this.app;
var _289a=app.routes;
var _289b=this.app.authenticatedUser;
var d=this.app.document;
d.title=this.nls.WINDOWTITLE.WIKIPAGEERROR;
var _289d=[];
if(!_289b){
_289d.push([dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.ERRORS.LOGIN),this.app.getUrl(),"login"]);
}
var _289e=false;
var text=this.app.nls.WIKIPAGE.ERROR.DEFAULT;
if(error){
if(error.code=="AccessDenied"){
if(!_289b){
this.clearBeforeNavigate=true;
this.app.login();
}else{
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED;
}
_289e=true;
}else{
if(error.code=="ItemNotFound"){
if(this.wiki.getPermissions().AddChild){
this.showConfirmNewPage();
return;
}
}
}
}
if(_289e){
quickr.share.scenes.applyGenericWarning(this.app,text.TITLE,text.MESSAGES,_289d);
}else{
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,_289d);
}
d.body.style.visibility="visible";
},getWikiEntry:function(){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.getWikiEntryComplete),sync:true});
},getWikiEntryComplete:function(_28a1,_28a2){
var error;
if(_28a1 instanceof Error){
error={type:"wiki"};
error.code=quickr.share.util.getAtomErrorCode(_28a1,_28a2);
this.showPageError(error);
}else{
var _28a4=this.app.authenticatedUser;
var _28a5;
var e=_28a1.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _28a7=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_28a7=="wiki"){
_28a5=new quickr.share.wiki.bean.Wiki(e);
}
}
if(_28a5){
this.wikidoc=_28a5;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_28a4?_28a4.id:null)});
if(this.permissions.canAdd(_28a5)){
this.showPageError({type:"page",code:"ForwardLink"});
}else{
this.showPageError({type:"wiki",code:"AccessDenied"});
}
}
}
},showAuthRequiredError:function(text){
var app=this.app;
var d=app.document;
d.title=app.nls.WINDOWTITLE.LOGIN;
var _28ab=[[dojo.string.substitute(app.nls.PAGECONTENT.ERRORS.LOGIN),app.getUrl(),"login"]];
var _28ac=true;
var _28ad=true;
quickr.share.scenes.applyGenericWarning(app,text.TITLE,text.MESSAGES,_28ab);
d.body.style.visibility="visible";
this.clearBeforeNavigate=true;
app.login();
},showError:function(){
var _28ae=this.app.authenticatedUser;
var d=this.app.document;
d.title=this.nls.WINDOWTITLE.WIKIPAGEERROR;
quickr.share.scenes.applyGenericError(this.app,this.nls.ERROR_IN_APP_TITLE,this.nls.WIKIPAGE.ERROR.GENERAL.MESSAGES,[]);
d.body.style.visibility="visible";
},end:function(_28b0){
this.cancelRequests();
quickr.share.util.destroy(this.baseWidgets);
quickr.share.util.destroy(this.widgets);
quickr.share.util.destroy(this.actions);
if(this.editor){
this.editor.destroy();
}
this.widgets=this.actions=[];
quickr.share.util.destroy(this.deleteShareAction);
this.deleteShareAction=null;
quickr.share.util.destroy(this.changePropagationAction);
this.changePropagationAction=null;
},editWikiPage:function(app,user,_28b3){
dojo.hitch(app,app.navigate(app.routes.getWikiPageEditUrl(user,_28b3)));
},expand:function(s){
this.expanded[s]=true;
},collapse:function(s){
this.expanded[s]=false;
},onnavigate:function(){
return false;
},ontagchange:function(){
if(this.taglist){
this.taglist.reload();
}
},_beforeLogout:function(){
if(this.editor){
if(this.editor.isDirty()||this.isTitleEdited||this.isDescriptionEdited){
if(confirm(this.nls.PAGEEDIT.NAVIGATE_AWAY_CHOICE)){
this._stopAutoSaveTimer();
this._deleteExistingDraft();
this.isLoggedOut=true;
this.app.logout();
}
}else{
this.app.logout();
}
}else{
this.app.logout();
}
},_deleteExistingDraft:function(){
if(!this.draftId&&this.currentDraftId){
var _28b6=new quickr.share.wiki.action.DiscardDraft(this.app,this);
_28b6.execute({id:this.currentDraftId,docAuthor:this.user},{doConfirm:false,libraryId:this.libraryId});
this.currentDraftId=null;
this.editor.updateEditorInfoArea(this.app.document.createTextNode(""));
}
},_deleteFile:function(title,_28b8,e){
if(confirm(dojo.string.substitute(this.nls.CONTENT.DELETECONFIRM,[title]))){
this.app.net.deleteXml({url:_28b8,handle:dojo.hitch(this,this._deleteComplete)});
}
if(e){
dojo.stopEvent(e);
}
},_deleteComplete:function(_28ba,_28bb){
if(_28ba instanceof Error){
this.ondeleteerror();
}else{
this.ondeletesuccess();
}
},updateBreadcrumbs:function(d,_28bd,_28be,scene,app,_28c1){
var _28c2=dojo.query("div#wikiBreadcrumbs p.lotusTiny",d)[0];
if(_28c1){
var _28c3=dojo.byId("wikiBreadcrumbs");
while(_28c3.firstChild){
_28c3.removeChild(_28c3.firstChild);
}
quickr.share.wiki.scenes.AbstractPage.createBreadcrumbs(scene.pageId,scene.libraryId,d,app,scene);
}else{
if(_28c2){
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,scene.app,scene.app.routes.getWikiPageUrl(_28bd,_28be,null));
a.appendChild(d.createTextNode(_28be));
a.className="lotusLink";
_28c2.replaceChild(a,_28c2.childNodes[_28c2.childNodes.length-3]);
}
}
},ondeletesuccess:function(){
this.app.navigate(this.app.routes.getUserChannelUrl(this.user.id));
},ondeleteerror:function(){
alert(this.nls.CONTENT.DELETEERROR);
},generateIfMatchETag:function(_28c5){
return _28c5+":modified="+this.fileLastUpdated.getTime();
},syncAuxDocumentProperties:function(_28c6,_28c7){
_28c6.content=_28c7.content;
_28c6.tags=_28c7.tags;
_28c6.urlRecommendation=_28c7.urlRecommendation;
_28c6.notificationEnabled=_28c7.notificationEnabled;
},oncommentcountupdate:function(w){
var d=this.app.document;
var span=d.getElementById("commentHeader");
while(span.firstChild){
span.removeChild(span.firstChild);
}
span.appendChild(d.createTextNode(dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.COMMENTS,[w])));
this.document.commentCount=w;
},onattachmentcountupdate:function(count,_28cc){
if(count||count==0){
var _28cd=parseInt(this.attachmentHeader.childNodes[2].nodeValue);
this.attachmentHeader.removeChild(this.attachmentHeader.childNodes[2]);
this.attachmentHeader.insertBefore(this.app.document.createTextNode(dojo.number.format(count)),this.attachmentHeader.childNodes[2]);
}
},updateVersionCount:function(){
if(this.versions&&this.versions.versions&&this.versions.versions.total>=0){
var count=this.versions.versions.total;
quickr.share.util.removeChildren(this.versionHeader);
this.versionHeader.appendChild(this.app.document.createTextNode(this.app.nls.DOCUMENTCONTENT.VERSIONS+"("+dojo.number.format(count)+")"));
}
},onrevertversion:function(){
this.versionReverted=true;
},toggleAttachmentsSection:function(){
if(!this.attachmentsLoaded){
this.attachments.load();
this.attachmentsLoaded=true;
}
this.attachmentsSectionOpen=!(this.attachmentsSectionOpen==true);
},toggleVersionsSection:function(){
if(!this.versionsLoaded){
this.versions.load();
this.versionsLoaded=true;
}
this.versionsSectionOpen=!(this.versionsSectionOpen==true);
},onenablenotification:function(){
this.document.notificationEnabled=true;
},ondisablenotification:function(){
this.document.notificationEnabled=false;
},modemap:{comments:"app.nls.WIKIPAGE.MODE.COMMENTS",info:"app.nls.WIKIPAGE.MODE.INFO",versions:"app.nls.WIKIPAGE.MODE.VERSIONS",compare:"app.nls.WIKIPAGE.MODE.COMPARE",attachments:"app.nls.WIKIPAGE.MODE.ATTACHMENTS",undefined:""}});
quickr.share.wiki.scenes.WikiPage.loadBreadcrumbs=function(_28cf,d,app,scene){
var json={"identifier":"id","label":"name","items":_28cf};
var data={data:json};
var _28d5=new dojo.data.ItemFileReadStore(data);
var _28d6=[];
var root=null;
var _28d8=null;
_28d5.fetch({query:{root:"true"},onItem:function(item,_28da){
_28d8=item;
root=new quickr.share.wiki.bean.Navigation(_28d5.getValue(item,"name"),null,_28d5.getValue(item,"id"));
_28d6.unshift(root);
}});
if(root!=null){
var _28db=_28d5.getValues(_28d8,"children");
var _28dc=root;
while(_28db.length>0){
_28d5.fetch({query:{name:_28d5.getValue(_28db[0],"name")},onItem:function(item,_28de){
_28d8=item;
_28dc=new quickr.share.wiki.bean.Navigation(_28d5.getValue(item,"name"),_28dc,_28d5.getValue(item,"id"));
_28d6.unshift(_28dc);
}});
var _28db=_28d5.getValues(_28d8,"children");
}
}
scene.parents=_28d6.reverse();
var _28df=dojo.byId("wikiBreadcrumbs");
quickr.share.wiki.scenes.WikiPage.applyBreadcrumbs(d,_28df,scene.parents,app,scene);
var _28e0=null;
if((_28e0=dojo.byId("hierarchyBreadcrumbs"))!=null){
quickr.share.wiki.scenes.WikiPage.applyBreadcrumbs(d,_28e0,scene.parents,app,scene,true);
}
};
quickr.share.wiki.scenes.WikiPage.applyBreadcrumbs=function(d,el,_28e3,app,scene,_28e6){
var crmbs=quickr.share.wiki.util.shallowClone(_28e3);
if(scene.mode&&!_28e6){
crmbs.push(dojo.getObject(scene.modemap[scene.mode],false,scene));
}
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,el,crmbs,app,scene);
};
quickr.share.wiki.scenes.WikiPage.applyRecommendation=function(d,el,doc,opt){
var app=opt.app;
var scene=opt.scene;
var _28ee=d.createElement("div");
var _28ef=opt.permissions||opt.scene.permissions;
var rater=scene.rater=new quickr.widget.Recommend({baseClass:"lotusRecommend lotusTiny lotusRight",editable:_28ef.canRate(doc),timesRated:scene.rater?scene.rater.timesRated:doc.getRatingCount(),userRecommended:scene.rater?scene.rater.userRecommended:doc.isUserRecommended(),urlRecommendation:app.routes.getRecommendServiceUrl(doc.getAuthor().id,doc.getId()),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),_strings:app.nls.RECOMMEND.PAGE,showText:false,net:app.net},_28ee);
scene.widgets.push(rater);
el.appendChild(_28ee);
};
quickr.share.wiki.scenes.WikiPage.applyTags=function(d,el,doc,opt){
var app=opt.app;
var scene=opt.scene;
var opts={tag:opt.tag,wikiLabel:opt.wikiLabel,pageId:opt.pageId};
var _28f8=d.createElement("span");
var _28f9=opt.scene.tagger=new quickr.widget.Tagger({baseClass:"lotusTags",labelText:app.nls.CONTENT.TAGS_LABEL,editable:scene.wiki&&scene.wiki.getPermissions().AddChild,tags:scene.tagger?scene.tagger.tags:doc.getTags(),docId:doc.getAtomId(),url:doc.getUrlEntry(),urlFeed:doc.getUrlFeed(),urlAllTags:app.routes.getTagServiceUrl(),tagStore:app.getTagTypeAheadStore(),renderPopup:dojo.hitch(null,quickr.share.scenes.applyGenericPopup,app),generateTagLink:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,app,app.routes,app.authenticatedUser?app.authenticatedUser.id:null,opts,true,false,false),_strings:app.nls.TAGGER,_astrings:app.nls,net:app.net},_28f8);
scene.widgets.push(_28f9);
el.appendChild(_28f8);
dojo.connect(_28f9,"ontagchange",scene,"ontagchange");
};
quickr.share.wiki.scenes.WikiPage.applyActionBar=function(d,el,doc,opt){
var app=opt.app;
var scene=opt.scene;
var _2900=dojo.getObject("quickr.share.config.actions.wikiPageView");
var _2901=this.wikiActions=(_2900)?_2900(app,scene,{}):[];
var adiv=d.createElement("div");
adiv.className="lotusActionBar";
var _2903=new dijit.Menu({style:"display:none"});
for(var i=0;i<_2901.length;i++){
var _2905=_2901[i];
if(_2905.isValid(app.authenticatedUser,opt)){
var _2906=new dijit.MenuItem({label:_2905.getName(doc,opt)});
dojo.connect(_2906,"onClick",dojo.hitch(_2905,_2905.execute));
_2903.addChild(_2906);
}
}
var _2907=new quickr.share.wiki.action.EditWikiPage(app,scene);
if(_2907.isValid(app.authenticatedUser,opt)){
span=d.createElement("span");
span.className="lotusBtn";
var a=d.createElement("a");
a.href=_2907.getUrlResource(app.authenticatedUser,opt)||"javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_2907,_2907.execute));
a.appendChild(d.createTextNode(_2907.getName(doc,opt)));
a.title=_2907.getTooltip(doc,opt);
span.appendChild(a);
adiv.appendChild(span);
}
var span=d.createElement("span");
span.className="lotusBtn";
var a=d.createElement("a");
a.appendChild(d.createTextNode(app.nls.WIKIPAGE.ACTIONS.TEXT));
a.href="javascript:;";
a.title=scene.wiki.getPermissions().AddChild?app.nls.WIKIPAGE.ACTIONS.TOOLTIP.EDITOR:app.nls.WIKIPAGE.ACTIONS.TOOLTIP.READER;
var img=d.createElement("img");
img.className="qkrDropDownArrow";
img.setAttribute("alt","");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/btnDropDown2.gif";
a.appendChild(img);
var aSpan=d.createElement("span");
aSpan.className="lotusAltText";
aSpan.appendChild(d.createTextNode("▼"));
a.appendChild(aSpan);
span.appendChild(a);
dojo.connect(a,"onclick",function(e){
try{
menuUtility.openMenu(e,_2903.id,a);
dojo.stopEvent(e);
}
catch(e){
console.log(e);
}
});
adiv.appendChild(span);
el.appendChild(adiv);
};
quickr.share.wiki.scenes.WikiPage.applyTitle=function(d,el,doc,opt){
var user=opt.user;
var app=opt.app;
var scene=opt.scene;
if(scene.currentDraftId){
var div=d.createElement("div");
div.className="lotusMessage lotusWarning";
div.style.marginTop="5px";
if(dojo.isIE<7){
div.style.width="98%";
}
var _2915=quickr.share.config.actions.draftList(app,scene);
var img=d.createElement("img");
img.alt=app.nls.WARNING;
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/iconWarning.gif";
div.appendChild(img);
var df=new quickr.share.util.DateFormat(doc.getDraftModified());
var _2918=df.formatByAge(app.nls.UNSAVED_CHANGES.PAGE_AUTOSAVED);
div.appendChild(d.createTextNode(_2918));
var _2919=d.createElement("div");
_2919.style.marginLeft="22px";
var ul=d.createElement("ul");
ul.className="lotusActions lotusInlinelist";
for(var i=0;i<_2915.length;i++){
var _291c=_2915[i];
if(true){
var li=d.createElement("li");
if(!ul.firstChild){
li.className="lotusFirst";
}
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_291c,_291c.execute,doc,opt));
a.appendChild(d.createTextNode(_291c.getName(doc,opt)));
a.title=_291c.getTooltip(doc,opt);
li.appendChild(a);
ul.appendChild(li);
}
}
if(ul.firstChild){
_2919.appendChild(ul);
}
div.appendChild(_2919);
el.appendChild(div);
}
var bdiv=d.createElement("div");
bdiv.id="wikiBreadcrumbs";
el.appendChild(bdiv);
var _2920=(scene.modemap[scene.mode])?" : "+dojo.getObject(scene.modemap[scene.mode],false,opt.scene):"";
var div=d.createElement("div");
div.className="lotusHeader";
div.style.marginTop="4px";
div.style.paddingTop="4px";
if(!scene.mode){
quickr.share.wiki.scenes.WikiPage.applyRecommendation(d,div,doc,opt);
}
var h1=d.createElement("h1");
h1.className="qkrWideInner";
h1.title=doc.getTitle();
h1.appendChild(d.createTextNode(doc.getTitle()+_2920));
div.appendChild(h1);
if(!scene.mode){
var _2922=d.createElement("div");
_2922.className="lotusMeta lotusTiny";
var df=new quickr.share.util.DateFormat(doc.getUpdated());
var _2923=df.formatByAge(app.nls.DATE.UPDATED);
var _2924=doc.getModifier();
var _2925=d.createElement("span");
_2925.appendChild(d.createTextNode(_2923+" "+app.nls.VERSIONS.BY+" "));
var a=d.createElement("a");
a.className="lotusPerson";
quickr.share.scenes.generateUserLink(app,app.routes,_2924,a);
a.appendChild(d.createTextNode(_2924.name));
_2925.appendChild(a);
_2925.appendChild(d.createTextNode(" "));
_2922.appendChild(_2925);
var dspan=document.createElement("span");
dspan.className="lotusDivider";
dspan.appendChild(d.createTextNode("|"));
_2925.appendChild(dspan);
quickr.share.wiki.scenes.WikiPage.applyTags(d,_2922,doc,opt);
div.appendChild(_2922);
quickr.share.wiki.scenes.WikiPage.applyActionBar(d,div,doc,opt);
}
el.appendChild(div);
};
quickr.share.wiki.scenes.WikiPage.applyPageView=function(d,el,doc,opt){
var user=opt.user;
var app=opt.app;
var _292d=opt.routes;
var _292e=opt.actions||opt.scene.actions;
var _292f=opt.permissions||opt.scene.permissions;
var scene=opt.scene;
var _2931=doc.getModifier();
var _2932=scene.permissions.canEdit(doc);
var _2933=doc.getContent();
var div=scene.displayArea=d.createElement("div");
if(_2933&&_2933.length==0){
var em=d.createElement("em");
em.appendChild(d.createTextNode(app.nls.PAGECONTENT.NO_CONTENT));
div.appendChild(em);
}else{
if(scene.versionId){
div.className="qkrWikiVersion";
var df=new quickr.share.util.DateFormat(doc.getUpdated());
var _2937=df.formatByAge(app.nls.DATE.RELATIVE_TIME);
var _2938=d.createElement("div");
_2938.className="qkrVersionInfo";
while(_2938.firstChild){
_2938.removeChild(_2938.firstChild);
}
_2938.appendChild(d.createTextNode(dojo.string.substitute(app.nls.VERSIONS.INFO,[doc.getVersionLabel(),_2937])));
var a=d.createElement("a");
a.className="lotusPerson";
quickr.share.scenes.generateUserLink(app,_292d,_2931,a);
a.appendChild(d.createTextNode(" "+_2931.name));
_2938.appendChild(a);
div.appendChild(_2938);
var ul=d.createElement("ul");
ul.className="lotusInlinelist lotusLinks qkrVersionActions";
if(scene.wiki&&scene.wiki.getPermissions().AddChild){
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.revertVersion,app,null,doc));
a.appendChild(d.createTextNode(app.nls.CONTENT.REVERT));
li.appendChild(a);
ul.appendChild(li);
}
var li=d.createElement("li");
if(!(scene.wiki&&scene.wiki.getPermissions().AddChild)){
li.className="lotusFirst";
}
var a=d.createElement("a");
a.href="javascript:;";
var temp2=function(app,scene,doc){
app.navigate(app.routes.getWikiComparisonUrl(scene.wikiLabel,scene.pageLabel,{to:doc.getLatestVersionLabel(),from:doc.getCurrentVersionLabel()}));
};
dojo.connect(a,"onclick",dojo.hitch(null,temp2,app,scene,doc));
a.appendChild(d.createTextNode(app.nls.VERSIONS.COMPARE_RECENT));
li.appendChild(a);
ul.appendChild(li);
var li=d.createElement("li");
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,app.routes.getWikiPageUrl(scene.wikiLabel,scene.pageLabel));
a.appendChild(d.createTextNode(app.nls.VERSIONS.VIEW_MOST_RECENT));
li.appendChild(a);
ul.appendChild(li);
div.appendChild(ul);
var _2940=d.createElement("div");
_2940.className="qkrWikiPreview";
_2940.innerHTML=doc.getContent();
div.appendChild(_2940);
}else{
div.className="qkrWikiPreview";
div.id="wikiContentDiv";
div.innerHTML=doc.getContent();
}
}
var _2941=quickr.share.util.generateiWidgetEnablerCodeIfRequired(doc.getContent(),d);
if(_2941){
el.appendChild(_2941);
}
el.appendChild(div);
if(scene.versionId){
quickr.share.pageutil.parsePreviewContent(_2940,app);
}else{
quickr.share.pageutil.parsePreviewContent(div,app);
}
if(opt.scene.wikiLinkIds){
var links=div.getElementsByTagName("a");
for(var i=0;i<links.length;i++){
var a=links[i];
if(opt.scene.wikiLinkIds[a.id]){
a.setAttribute("class","redLink");
a.style.color="#FF0000";
}
}
}
var df=new quickr.share.util.DateFormat(doc.getUpdated());
var _2944=df.formatByAge(app.nls.DATE.UPDATED);
if(!scene.versionId){
var _2945=d.createElement("div");
_2945.id="wikiFooter";
if(app.authenticatedUser){
var _2946=document.createElement("div");
_2946.className="lotusRight";
var _2947=d.createElement("span");
var _2948=d.createElement("span");
var span=d.createElement("span");
span.className="lotusNotifications";
span.appendChild(d.createTextNode(app.nls.NOTIFY_FILE.LABEL));
_2946.appendChild(span);
_2946.appendChild(_2947);
_2946.appendChild(_2948);
var _294a=scene.ncontents=new quickr.widget.NotifyContents({baseClass:"lotusNotifications",available:!!(app.authenticatedUser.hasEmail),enabled:doc.getNotifications().media,url:doc.getUrlEntry(),_strings:app.nls.NOTIFY_CONTENT,net:app.net},_2947);
var _294b=scene.ncomments=new quickr.widget.NotifyComments({baseClass:"lotusNotifications",available:!!(app.authenticatedUser.hasEmail),enabled:doc.getNotifications().comment,url:doc.getUrlEntry(),_strings:app.nls.NOTIFY_COMMENT,net:app.net},_2948);
_2945.appendChild(_2946);
}
var _294c=d.createElement("p");
_294c.className="lotusTiny lotusMeta";
_294c.appendChild(d.createTextNode(_2944+" "+app.nls.VERSIONS.BY+" "));
var a=d.createElement("a");
a.className="lotusPerson";
quickr.share.scenes.generateUserLink(app,_292d,_2931,a);
a.appendChild(d.createTextNode(_2931.name));
_294c.appendChild(a);
_294c.appendChild(d.createTextNode(" "));
if(doc.getVersionCount()>1){
var a=d.createElement("a");
a.className="lotusAction";
a.appendChild(d.createTextNode(app.nls.WIKI_UPDATED.SHOW));
quickr.share.scenes.setOnClick(a,app,app.routes.getWikiComparisonUrl(scene.wikiLabel,scene.pageName,{from:doc.getLatestVersionLabel(),to:doc.getLatestVersionLabel()-1}));
_294c.appendChild(a);
}
_2945.appendChild(_294c);
var _294d=d.createElement("ul");
_294d.className="lotusInlinelist";
var li=d.createElement("li");
li.className="lotusFirst";
var a=d.createElement("a");
a.className="lotusAction";
a.appendChild(d.createTextNode(app.nls.FILTERS.EVENT.COMMENTS+" ("+doc.getCommentCount()+")"));
quickr.share.scenes.setOnClick(a,app,_292d.getWikiPageCommentUrl(scene.wikiLabel,scene.pageName));
li.appendChild(a);
_294d.appendChild(li);
li=d.createElement("li");
var a=d.createElement("a");
a.className="lotusAction";
quickr.share.scenes.setOnClick(a,app,_292d.getWikiPageVersionsUrl(scene.wikiLabel,scene.pageName));
a.appendChild(d.createTextNode(app.nls.WIKI_DETAILS.HISTORY));
li.appendChild(a);
_294d.appendChild(li);
li=d.createElement("li");
var a=d.createElement("a");
a.className="lotusAction";
quickr.share.scenes.setOnClick(a,app,_292d.getWikiPageAttachmentsUrl(scene.wikiLabel,scene.pageName));
a.appendChild(d.createTextNode(app.nls.WIKI_DETAILS.ATTACHMENTS));
li.appendChild(a);
_294d.appendChild(li);
li=d.createElement("li");
var a=d.createElement("a");
a.className="lotusAction";
quickr.share.scenes.setOnClick(a,app,_292d.getWikiPageInfoUrl(scene.wikiLabel,scene.pageName));
a.appendChild(d.createTextNode(app.nls.WIKI_DETAILS.ABOUT));
li.appendChild(a);
_294d.appendChild(li);
_2945.appendChild(_294d);
var _294e=d.createElement("div");
_294e.className="lotusFeeds";
var a=d.createElement("a");
a.className="lotusFeed lotusAction";
a.href=_292d.getVersionListServiceUrl(scene.libraryId,doc.getId(),{basicAuth:true,category:"version"});
a.title=app.nls.SUBSCRIBE_TO_PAGE_TOOLTIP;
dojo.connect(a,"onclick",null,dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.checkSubscribe,app.nls));
a.appendChild(d.createTextNode(app.nls.SUBSCRIBE_TO_PAGE));
_294e.appendChild(a);
_2945.appendChild(_294e);
el.appendChild(_2945);
}
if(typeof (scene._onPageViewCompleted)=="function"){
scene._onPageViewCompleted();
}
};
quickr.share.wiki.scenes.WikiPage.applyPageCompareView=function(d,el,comp,opt){
var user=opt.user;
var app=opt.app;
var _2955=opt.routes;
var _2956=opt.actions||opt.scene.actions;
var _2957=opt.permissions||opt.scene.permissions;
var scene=opt.scene;
var df=new quickr.share.util.DateFormat(comp.getFromUpdated());
var _295a=df.formatByAge(app.nls.DATE.CREATED);
df=new quickr.share.util.DateFormat(comp.getFromUpdated());
var _295b=df.formatByAge(app.nls.DATE.RELATIVE_TIME);
df=new quickr.share.util.DateFormat(comp.getToUpdated());
var _295c=df.formatByAge(app.nls.DATE.CREATED);
df=new quickr.share.util.DateFormat(comp.getToUpdated());
var _295d=df.formatByAge(app.nls.DATE.RELATIVE_TIME);
var _295e=true;
var _295f=comp.getToMostRecentVersion();
var div=scene.displayArea=d.createElement("div");
if(comp.getComparison()==""){
var i=d.createElement("i");
i.appendChild(d.createTextNode(app.nls.PAGECONTENT.NO_CONTENT));
div.appendChild(i);
}else{
var _2962=quickr.share.util.parseInt(scene.document.getVersionCount());
var _2963=quickr.share.util.parseInt(scene.document.getLatestVersionLabel());
var tonum=scene.tonum=+(comp.getToVersionLabel());
fromnum=scene.fromnum=+(comp.getFromVersionLabel());
var start=scene.start=_2963-_2962+1;
var j=0;
div.className="qkrWikiComparison";
var txt=d.createElement("div");
txt.style.textAlign="center";
txt.style.fontWeight="bold";
txt.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.COMPARE));
div.appendChild(txt);
var table=d.createElement("table");
table.className="qkrComparisonInfo";
table.cellSpacing="3px;";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
td=d.createElement("td");
td.className="qkrVersionInfoBox";
td.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.VERSION+"  "));
var sel=scene.tsel=d.createElement("select");
sel.className="wikiSelect";
for(j=_295f;j>=start+1;j--){
var _296c=d.createElement("option");
_296c.appendChild(d.createTextNode(j+""));
_296c.value=j+"";
if(j==comp.getToVersionLabel()){
_296c.selected="selected";
}
sel.appendChild(_296c);
}
td.appendChild(sel);
td.appendChild(d.createElement("br"));
td.appendChild(d.createTextNode(_295c));
td.appendChild(d.createTextNode(" "+app.nls.VERSIONS.BY+" "));
var a=d.createElement("a");
a.className="lotusPerson";
quickr.share.scenes.generateUserLink(app,_2955,comp.getToModifier(),a);
a.appendChild(d.createTextNode(comp.getToModifier().name));
td.appendChild(a);
td.appendChild(d.createElement("br"));
if(_295f!=comp.getToVersionLabel()&&scene.permissions.canEdit(comp)){
var a=d.createElement("a");
a.href="javascript:;";
var temp=function(scene,comp){
var opts={documentId:scene.pageId,versionId:comp.getToVersionId(),revisionNum:comp.getToVersionLabel(),updated:comp.getToUpdated(),modifier:comp.getToModifier().name};
quickr.share.wiki.scenes.WikiPage.revertVersion(app,null,null,opts);
};
dojo.connect(a,"onclick",dojo.hitch(null,temp,scene,comp));
a.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.RESTORE));
td.appendChild(a);
}
tr.appendChild(td);
td=d.createElement("td");
td.className="qkrVert";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(scene,this.refreshCompare));
a.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.REFRESH));
td.appendChild(a);
td.appendChild(d.createElement("br"));
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(scene,this.refreshCompare));
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"images/refresh.gif";
img.alt=app.nls.WIKIPAGE.SECTION.REFRESH;
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
td=d.createElement("td");
td.className="qkrVersionInfoBox";
td.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.VERSION+"  "));
var sel=scene.fsel=d.createElement("select");
sel.className="wikiSelect";
for(j=tonum-1;j>=start;j--){
var _296c=d.createElement("option");
_296c.appendChild(d.createTextNode(j+""));
_296c.value=j+"";
if(j==comp.getFromVersionLabel()){
_296c.selected="selected";
}
sel.appendChild(_296c);
}
td.appendChild(sel);
td.appendChild(d.createElement("br"));
td.appendChild(d.createTextNode(_295a));
td.appendChild(d.createTextNode(" "+app.nls.VERSIONS.BY+" "));
var a=d.createElement("a");
a.className="lotusPerson";
quickr.share.scenes.generateUserLink(app,_2955,comp.getFromModifier(),a);
a.appendChild(d.createTextNode(comp.getFromModifier().name));
td.appendChild(a);
td.appendChild(d.createElement("br"));
if(_295f!=comp.getFromVersionLabel()&&scene.permissions.canEdit(comp)){
var a=d.createElement("a");
a.href="javascript:;";
var temp=function(scene,comp){
var opts={documentId:scene.pageId,versionId:comp.getFromVersionId(),revisionNum:comp.getFromVersionLabel(),updated:comp.getFromUpdated(),modifier:comp.getFromModifier().name};
quickr.share.wiki.scenes.WikiPage.revertVersion(app,null,null,opts);
};
dojo.connect(a,"onclick",dojo.hitch(null,temp,scene,comp));
a.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.RESTORE));
td.appendChild(a);
}
tr.appendChild(td);
tbody.appendChild(tr);
dojo.connect(scene.tsel,"onchange",scene,function(){
var sel=this.fsel;
var _2977=parseInt(sel.value);
var tonum=parseInt(scene.tsel.value);
while(sel.firstChild){
sel.removeChild(sel.firstChild);
}
for(j=tonum-1;j>=this.start;j--){
var _2979=d.createElement("option");
_2979.appendChild(d.createTextNode(j+""));
_2979.value=j+"";
if(j==_2977){
_2979.selected="selected";
}
sel.appendChild(_2979);
}
});
var tr=d.createElement("tr");
td=d.createElement("td");
td.className="qkrVersionKeyBox";
td.colSpan=3;
td.appendChild(d.createTextNode(app.nls.VERSIONS.KEY));
var span=d.createElement("span");
span.className="qkrVersionDeletedExample";
span.appendChild(d.createTextNode(app.nls.VERSIONS.DELETED));
td.appendChild(span);
span=d.createElement("span");
span.className="qkrVersionInsertedExample";
span.appendChild(d.createTextNode(app.nls.VERSIONS.NEW_CHANGED));
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
div.appendChild(table);
var _297b=d.createElement("div");
_297b.className="qkrWikiPreview";
_297b.innerHTML=comp.getComparison();
div.appendChild(_297b);
}
el.appendChild(div);
};
quickr.share.wiki.scenes.WikiPage.applyVersions=function(d,div,doc,opt){
var user=opt.user;
var app=opt.app;
var _2982=opt.routes;
var scene=opt.scene;
var _2984=app.authenticatedUser;
scene.confirmDialog=new quickr.share.wiki.action.ConfirmDialogAction();
var h2=d.createElement("h2");
var span=d.createElement("span");
span.appendChild(d.createTextNode(app.nls.DOCUMENTCONTENT.VERSIONS));
span.appendChild(d.createTextNode(" ("));
scene.versionHeader=span;
var _2987=d.createTextNode(dojo.number.format(doc.getVersionCount()?doc.getVersionCount():0));
span.appendChild(_2987);
span.appendChild(d.createTextNode(")"));
h2.appendChild(span);
div.appendChild(h2);
var _2988=d.createElement("div");
div.appendChild(_2988);
var _2989=((scene.versionId)?doc.getDocumentVersionLabel():doc.getVersionLabel());
var _298a=scene.versions=new quickr.widget.Versions({id:"pageVersions",baseClass:"lotusChunk lotusVersions",url:dojo.hitch(_2982,_2982.getVersionListServiceUrl,scene.libraryId,doc.getId()),app:app,_strings:app.nls.VERSIONS,msgNoData:app.nls.VERSIONS.NO_VERSIONS,ownerId:scene.libraryId,docId:scene.pageId,canRevert:scene.wiki&&scene.wiki.getPermissions().AddChild,canDelete:scene.wiki&&scene.wiki.getPermissions().GrantAccess,displayVersionSummary:true,displayCompareVersions:true,displayRevertVersion:scene.wiki&&scene.wiki.getPermissions().AddChild,displayDeletePriorVersions:scene.wiki&&scene.wiki.getPermissions().GrantAccess,versions:null,loadOnStartup:true,currentVersionId:scene.compare?null:doc.getCurrentVersionId(),currentVersionLabel:scene.compare?null:doc.getCurrentVersionLabel(),latestVersionLabel:doc.getLatestVersionLabel(),latestVersionId:doc.getLatestVersionId(),generateUserLink:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,_2982),generateViewLink:dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.generateViewLink,app),generateRevertLink:dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.generateRevertLink,app),compareVersions:dojo.hitch(scene,quickr.share.wiki.scenes.WikiPage.compareVersions,app),compareFrom:scene.compare?Math.max(scene.fromVersion,scene.toVersion):null,compareTo:scene.compare?Math.min(scene.fromVersion,scene.toVersion):null,net:app.net},_2988);
dojo.connect(_298a,"onUpdate",scene,"updateVersionCount");
dojo.connect(_298a,"onRevertVersion",dojo.hitch(app,"navigate",app.routes.getWikiPageUrl(scene.wikiLabel,scene.pageLabel)));
dojo.connect(_298a,"onDeletePriorVersions",dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.checkDeleteRequiresReload,scene,doc));
};
quickr.share.wiki.scenes.WikiPage.generateViewLink=function(app,a,_298d,docId,_298f){
quickr.share.scenes.setOnClick(a,app,app.routes.getWikiPageVersionUrl(app.scene.wikiLabel,app.scene.pageLabel,_298f,{}));
};
quickr.share.wiki.scenes.WikiPage.generateRevertLink=function(app,_2991,a){
a.href="javascript:;";
dojo.connect(a,"onclick",dojo,"stopEvent");
dojo.connect(a,"onclick",null,dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.revertVersion,app,_2991));
};
quickr.share.wiki.scenes.WikiPage.revertVersion=function(app,_2994,doc,opts){
var _2997=app.nls.VERSIONS;
var _2998,_2999,_299a,df,_299c,_299d,_299e;
if(_2994){
_2998=_2994.getDocumentId();
_2999=_2994.getId();
_299a=_2994.getVersionLabel();
df=new quickr.share.util.DateFormat(_2994.getUpdated());
_299c=df.formatByAge(_2997.DATE.RELATIVE_TIME);
_299d=_2994.getModifier().name;
}else{
if(doc){
_2998=doc.getId();
_2999=doc.getVersionId();
_299a=doc.getVersionLabel();
df=new quickr.share.util.DateFormat(doc.getUpdated());
_299c=df.formatByAge(_2997.DATE.RELATIVE_TIME);
_299d=doc.getModifier().name;
}else{
_2998=opts.documentId;
_2999=opts.versionId;
_299a=opts.revisionNum;
df=new quickr.share.util.DateFormat(opts.updated);
_299c=df.formatByAge(_2997.DATE.RELATIVE_TIME);
_299d=opts.modifier;
}
}
var _299f={CANCEL:app.nls.CANCEL,HEADING:dojo.string.substitute(_2997.REVERT_VERSION,[_299a]),MESSAGE:dojo.string.substitute(_2997.REVERT_CONFIRM,[_299a,_299c,_299d]),OK:_2997.CONTENT.REVERT,BUSY:app.nls.EDIT_FILE.BUSY};
var _29a0=dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.doRevert,app,_2997,_2998,_2999,_299a,df,_299c,_299d);
app.scene.confirmDialog.execute(null,{onSubmit:_29a0,strings:_299f});
};
quickr.share.wiki.scenes.WikiPage.doRevert=function(app,_29a2,_29a3,_29a4,_29a5,df,_29a7,_29a8){
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _29ab=quickr.share.util.createElementNS(doc,"changeSummary",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_29ab.appendChild(doc.createTextNode(dojo.string.substitute(_29a2.REVERT_DESCRIPTION,[dojo.number.format(_29a5)])));
entry.appendChild(_29ab);
var _29ac=quickr.share.util.createElementNS(doc,"versionUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_29ac.appendChild(doc.createTextNode(_29a4));
entry.appendChild(_29ac);
var _29ad=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
var _29ae=app.routes.getFileInfoServiceUrl(app.scene.libraryId,_29a3,{submit:true,createVersion:true});
app.net.putXml({url:_29ae,timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:_29ad,headers:{"Content-Type":"application/atom+xml; charset=\"UTF-8\""},handle:dojo.hitch(app.scene.versions,function(){
app.scene.confirmDialog.cancelDialog();
app.scene.versions.handleRevertVersion.apply(this,arguments);
})});
};
quickr.share.wiki.scenes.WikiPage.refreshCompare=function(){
var to=quickr.share.util.parseInt(this.tsel.value);
var from=quickr.share.util.parseInt(this.fsel.value);
this.app.navigate(this.app.routes.getWikiComparisonUrl(this.wikiLabel,this.pageName,{to:to,from:from}));
};
quickr.share.wiki.scenes.WikiPage.compareVersions=function(app,_29b2,_29b3,to,from){
var to=typeof (to)=="function"?to():to;
var from=typeof (from)=="function"?from():from;
app.navigate(app.routes.getWikiComparisonUrl(this.wikiLabel,this.pageLabel,{to:to,from:from}));
};
quickr.share.wiki.scenes.WikiPage.checkDeleteRequiresReload=function(scene,doc,_29b8){
if((doc.getVersionLabel()<=_29b8)||doc.getVersionCount()<2){
scene.app.navigate(scene.app.routes.getWikiPageUrl(scene.wikiLabel,scene.pageLabel));
}
};
quickr.share.wiki.scenes.WikiPage.generateCompareActionLink=function(app,_29ba,_29bb,_29bc,_29bd,_29be,a){
dojo.connect(a,"onclick",dojo.hitch(null,_29ba,app,_29bb,_29bc,_29bd,_29be));
};
quickr.share.wiki.scenes.WikiPage.generateSetOnClick=function(app,a,_29c2,docId,objId){
quickr.share.scenes.setOnClick(a,app,app.routes.getPageSummaryUrl(_29c2,docId,objId));
};
quickr.share.wiki.scenes.WikiPage.applyAttachments=function(d,div,doc,opt){
var app=opt.app;
var _29ca=opt.routes;
var scene=opt.scene;
var _29cc=app.authenticatedUser;
var h2=d.createElement("h2");
var span=d.createElement("span");
span.appendChild(d.createTextNode(app.nls.DOCUMENTCONTENT.ATTACHMENTS));
span.appendChild(d.createTextNode(" ("));
scene.attachmentHeader=span;
var _29cf=d.createTextNode(dojo.number.format(doc.getAttachmentCount()?doc.getAttachmentCount():0));
span.appendChild(_29cf);
span.appendChild(d.createTextNode(")"));
h2.appendChild(span);
div.appendChild(h2);
var _29d0=d.createElement("div");
div.appendChild(_29d0);
var _29d1=scene.attachments=new quickr.widget.Attachments({id:"wikiPageAttachments",url:dojo.hitch(_29ca,_29ca.getAttachmentListServiceUrl,scene.libraryId,scene.document.getId()),generateUserLink:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,_29ca),parentUrl:doc.getUrlRelated(),userId:(_29cc?_29cc.id:null),canEdit:scene.permissions.canEdit(doc),assumeNoEntries:false,app:app,loadOnStartup:true,attachments:null,_strings:app.nls.ATTACHMENTS,msgNoData:app.nls.ATTACHMENTS.NO_ATTACHMENTS,_appstrings:app.nls,onattachmentcountupdate:dojo.hitch(scene,scene.onattachmentcountupdate),baseClass:"lotusChunk lotusVersions",getUploadAttachmentObj:dojo.hitch(this,this.getUploadAttachmentObj,app),getEditAttachmentObj:dojo.hitch(this,this.getEditAttachmentObj,app),isAttachmentSecOpen:dojo.hitch(this,this.isAttachmentSecOpen,scene),getFileTypeImage:dojo.hitch(scene.app.routes,scene.app.routes.getFileTypeImageUrl)},_29d0);
scene.widgets.push(_29d1);
};
quickr.share.wiki.scenes.WikiPage.isAttachmentSecOpen=function(scene){
return true;
};
quickr.share.wiki.scenes.WikiPage.getEditAttachmentObj=function(app,url){
var _29d5=new quickr.share.action.EditAttachment(app,{url:url,replace:true});
return _29d5;
};
quickr.share.wiki.scenes.WikiPage.getUploadAttachmentObj=function(app,url){
var _29d8=new quickr.share.action.UploadAttachment(app,{url:url});
return _29d8;
};
quickr.share.wiki.scenes.WikiPage.applyComments=function(d,div,doc,opt){
var app=opt.app;
var scene=app.scene;
dojo.addClass(div,"lotusBoard");
div.appendChild(d.createElement("h2"));
var _29df=d.createElement("div");
div.appendChild(_29df);
var _29e0=new quickr.share.wiki.widget.Comments({id:"wikiPageComments",additionalClasses:"lotusSectionBody",url:quickr.share.util.rewriteUri(doc.getUrlFeed(),{sK:"published",sO:"asc",pageSize:20}),assumeNoEntries:doc.getCommentCount()==0,authenticatedUser:app.authenticatedUser,isManager:scene.wiki&&scene.wiki.getPermissions().GrantAccess,commentCount:doc.getCommentCount(),scrollTo:opt.scene.commentId,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,opt.routes),generateLinkToComment:opt.generateCommentLink,getUserImageUrl:dojo.hitch(opt.routes,opt.routes.getUserPhotoUrl),_strings:app.nls.COMMENTS,net:app.net,_initWidgetStyle:"overflow:hidden"},_29df);
var _29e1=d.createElement("div");
_29e1.className="lotusFeeds";
var a=d.createElement("a");
a.className="lotusFeed lotusAction";
a.href=opt.routes.getCommentListServiceUrl(opt.scene.libraryId,doc.getId(),{basicAuth:true});
a.title=opt.app.nls.COMMENTS.SUBSCRIBE_TO_COMMENTS_TOOLTIP;
a.appendChild(d.createTextNode(opt.app.nls.COMMENTS.SUBSCRIBE_TO_COMMENTS));
dojo.connect(a,"onclick",dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.checkSubscribe,opt.app.nls));
_29e1.appendChild(a);
div.appendChild(_29e1);
};
quickr.share.wiki.scenes.WikiPage.checkSubscribe=function(nls,e){
if(dojo.isIE==6){
if(confirm(nls.FEEDS.IE6SUBSCRIBE)){
return true;
}
dojo.stopEvent(e);
}
return true;
};
quickr.share.wiki.scenes.WikiPage.applyChildList=function(d,div,doc,opt){
var app=opt.app;
var _29ea=opt.routes;
var scene=opt.scene;
var _29ec=app.authenticatedUser;
var page=null;
if(scene.navStore){
scene.navStore.fetchItemByIdentity({identity:scene.pageId,onItem:function(item,_29ef){
page=item;
}});
}
if(page){
var _29f0=scene.navStore.getValues(page,"children");
var h2=d.createElement("h2");
var span=d.createElement("span");
span.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.CHILDREN.TITLE));
span.appendChild(d.createTextNode(" ("));
scene.numChildren=d.createTextNode(_29f0.length);
span.appendChild(scene.numChildren);
span.appendChild(d.createTextNode(")"));
h2.appendChild(span);
div.appendChild(h2);
var divcl=d.createElement("div");
divcl.id="childList";
if(_29f0.length>0){
dojo.forEach(_29f0,function(child){
var _29f5=d.createElement("div");
_29f5.className="lotusLink";
var a=d.createElement("a");
var linkT=child.name[0];
linkT=linkT.replace(/\+/g,"_");
quickr.share.scenes.setOnClick(a,app,_29ea.getWikiPageUrl(scene.wikiLabel,linkT));
var c=d.createTextNode(child.name);
a.appendChild(c);
_29f5.appendChild(a);
divcl.appendChild(_29f5);
});
}else{
var _29f9=d.createElement("div");
var c=d.createTextNode(app.nls.WIKIPAGE.SECTION.CHILDREN.NONE);
_29f9.appendChild(c);
_29f9.style.fontStyle="italic";
divcl.appendChild(_29f9);
}
var _29fb=new quickr.share.wiki.action.CreateChildPage(app,scene,opt);
var _29ec=app.authenticatedUser;
if(scene.permissions.canEdit(doc)){
var _29f9=d.createElement("div");
var a=d.createElement("a");
a.className="lotusAction";
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_29fb,_29fb.execute));
var c=d.createTextNode(app.nls.WIKIPAGE.SECTION.CHILDREN.LINK);
a.appendChild(c);
_29f9.appendChild(a);
divcl.appendChild(_29f9);
}
}
div.appendChild(divcl);
};
quickr.share.wiki.scenes.WikiPage.updateChildList=function(d,app,scene){
childs=scene.current.getChildren();
scene.numChildren.parentNode.replaceChild(d.createTextNode(childs.length),scene.numChildren);
div=dojo.byId("childList");
if(!childs){
return;
}
var table=d.createElement("table");
table.className="lotusVertTable";
var tbody=d.createElement("tbody");
for(var i=0;i<childs.length;i++){
var tr=d.createElement("tr");
if(i%2){
tr.className="lotusAltRow";
}
var th=d.createElement("th");
th.scope="row";
th.appendChild(d.createTextNode(i+1+":"));
tr.appendChild(th);
var td=d.createElement("td");
var a=d.createElement("a");
a.appendChild(d.createTextNode(childs[i].getLabel()));
quickr.share.scenes.setOnClick(a,app,app.routes.getWikiPageUrl(scene.wikiLabel,childs[i].getLabel()));
td.appendChild(a);
tr.appendChild(td);
tbody.appendChild(tr);
}
table.appendChild(tbody);
div.appendChild(table);
var ldiv=d.createElement("div");
var a=d.createElement("a");
a.appendChild(d.createTextNode(app.nls.WIKIPAGE.SECTION.CHILDREN.LINK));
quickr.share.scenes.setOnClick(a,app,app.routes.getUserCreatePagesUrl(scene.wikiLabel,null,[]));
ldiv.appendChild(a);
div.appendChild(ldiv);
};
quickr.share.wiki.scenes.WikiPage.applyInfo=function(d,div,doc,opt){
var user=opt.user;
var app=opt.app;
var _2a0e=opt.routes;
var scene=opt.scene;
var _2a10=app.nls.DOCUMENTCONTENT.ABOUTFILE;
var h2=d.createElement("h2");
var span=d.createElement("span");
span.appendChild(d.createTextNode(_2a10));
h2.appendChild(span);
div.appendChild(h2);
var table=d.createElement("table");
table.className="lotusVertTable";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var th=d.createElement("th");
th.scope="row";
th.appendChild(d.createTextNode(app.nls.DOCUMENTCONTENT.UPDATED));
tr.appendChild(th);
var td=d.createElement("td");
var s=new quickr.share.util.DateFormat(doc.getUpdated()).format(app.nls.DOCUMENTCONTENT.TIMESTAMP);
quickr.share.util.html.substitute(d,td,s,{user:function(){
if(doc.getModifier()){
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(doc.getModifier().name));
quickr.share.scenes.generateUserLink(app,_2a0e,doc.getModifier(),a);
return a;
}
}});
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
var th=d.createElement("th");
th.scope="row";
th.appendChild(d.createTextNode(app.nls.DOCUMENTCONTENT.ADDED));
tr.appendChild(th);
var td=d.createElement("td");
var s=new quickr.share.util.DateFormat(doc.getPublished()).format(app.nls.DOCUMENTCONTENT.TIMESTAMP);
quickr.share.util.html.substitute(d,td,s,{user:function(){
var a=d.createElement("a");
a.className="lotusPerson";
a.appendChild(d.createTextNode(doc.getAuthor().name));
quickr.share.scenes.generateUserLink(app,_2a0e,doc.getAuthor(),a);
return a;
}});
tr.appendChild(td);
tbody.appendChild(tr);
var _2a1b=doc.getSize();
var _2a1c=doc.getTotalSize();
var tr=d.createElement("tr");
var th=d.createElement("th");
th.scope="row";
th.appendChild(d.createTextNode(app.nls.DOCUMENTCONTENT.SIZE));
tr.appendChild(th);
var td=d.createElement("td");
var span=d.createElement("span");
if(_2a1b==_2a1c){
span.appendChild(d.createTextNode(quickr.share.util.formatSize(_2a1b)));
}else{
span.appendChild(d.createTextNode(dojo.string.substitute(app.nls.WIKIPAGE.SECTION.INFOSIZE,[quickr.share.util.formatSize(_2a1b),quickr.share.util.formatSize(_2a1c)])));
}
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
var _2a1d=doc.getTimesDownloaded();
var _2a1e=doc.getTimesDownloadedAnonymously();
var _2a1f=_2a1d-_2a1e;
var _2a20=doc.getCategory()=="page"?app.nls.DOCUMENTCONTENT.PAGE:app.nls.DOCUMENTCONTENT.FILE;
var tr=d.createElement("tr");
var th=d.createElement("th");
th.scope="row";
th.appendChild(d.createTextNode(_2a20.TIMES_DOWNLOADED));
tr.appendChild(th);
var td=d.createElement("td");
if(_2a1e==0||!quickr.share.config.detailedDownloads){
td.appendChild(d.createTextNode(dojo.number.format(_2a1d)));
}else{
var _2a21=dojo.string.substitute(_2a20.DOWNLOADS,[dojo.number.format(_2a1d),dojo.number.format(_2a1e)]);
td.appendChild(d.createTextNode(_2a21));
}
tr.appendChild(td);
tbody.appendChild(tr);
if(_2a1f>0&&quickr.share.config.detailedDownloads){
var tr=d.createElement("tr");
var th=d.createElement("th");
th.scope="row";
th.appendChild(d.createTextNode(_2a20.DOWNLOADED_BY));
th.className="lotusNowrap";
tr.appendChild(th);
var td=d.createElement("td");
var _2a22=dojo.getObject("quickr.share.config.services.downloads.pageSize")||100;
var _2a23=scene.downloads=new quickr.widget.DownloadInfo({file:doc,url:_2a0e.getFileDownloadInfoServiceUrl(scene.libraryId,doc.getId(),{pageSize:_2a22}),user:app.authenticatedUser,loadOnStartup:true,generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,_2a0e),additionalClasses:"lotusChunk",_strings:doc.getCategory()=="page"?app.nls.DOWNLOAD_INFO.PAGE:app.nls.DOWNLOAD_INFO.FILE,_appstrings:app.nls,net:app.net},td);
tr.appendChild(td);
tbody.appendChild(tr);
}
table.appendChild(tbody);
div.appendChild(table);
};
quickr.share.wiki.scenes.WikiPage.applyHierarchy=function(d,div,doc,opt){
var user=opt.user;
var app=opt.app;
var _2a2a=opt.routes;
var scene=opt.scene;
var _2a2c=app.nls.WIKIPAGE.SECTION.HIERARCHY.TITLE;
var _2a2d=quickr.share.util.getElementsByTagNameNS(doc.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
var _2a2e=scene.libraryId=quickr.share.util.getChildElementTextContentNS(_2a2d,"libraryUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var h2=d.createElement("h2");
var span=d.createElement("span");
span.appendChild(d.createTextNode(_2a2c));
h2.appendChild(span);
div.appendChild(h2);
var bdiv=d.createElement("div");
bdiv.id="hierarchyBreadcrumbs";
div.appendChild(bdiv);
};
quickr.share.wiki.scenes.WikiPage.generateCommentLink=function(app,_2a33,doc,_2a35,a){
var _2a37=app.scene.wikiLabel;
var _2a38=doc.getName();
var _2a39=_2a35.getId();
quickr.share.scenes.setOnClick(a,app,_2a33.getWikiPageCommentUrl(_2a37,_2a38,null,_2a39));
};
quickr.share.wiki.scenes.WikiPage.render=function(d,doc,_2a3c,_2a3d,user,app,_2a40,scene){
var opt={app:app,routes:app.routes,authenticatedUser:_2a3d,scene:scene,user:user,libraryId:scene.libraryId,wikiLabel:scene.wikiLabel,pageId:scene.pageId,aboutTitle:app.nls.DOCUMENTCONTENT.ABOUTPAGE,documentId:doc.getId(),documentFeedUrl:scene.draftId?null:doc.getUrlFeed(),generateCommentLink:dojo.hitch(null,quickr.share.wiki.scenes.WikiPage.generateCommentLink,app,app.routes,doc),generateUserLink:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),getUserInfoUrl:dojo.hitch(app.routes,app.routes.getUserInfoServiceUrl),renderTipPopup:dojo.hitch(null,quickr.share.scenes.applyTipPopup,app),aboutTitle:app.nls.DOCUMENTCONTENT.ABOUTPAGE};
var c=d.getElementById("lotusMain");
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
scene.applyTagsSection(d,el,doc,app,scene);
scene.applyPageListNav(d,el,doc,app,scene);
scene.applyToolsNav(d,el,doc,app,scene);
scene.applyBusinessCard(d,el,doc,app,scene);
c.appendChild(el);
c.appendChild(scene.resizeBar(d,scene,app,true));
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var div=d.createElement("div");
div.className="wikiHeader";
quickr.share.wiki.scenes.WikiPage.applyTitle(d,div,doc,opt);
el.appendChild(div);
c.appendChild(el);
var nav=d.getElementById("lotusColLeft");
scene.applySideNav(d,nav,doc,opt);
quickr.share.wiki.scenes.WikiPage.applyContent(d,el,doc,opt);
};
quickr.share.wiki.scenes.WikiPage.applyContent=function(d,nav,doc,opt){
var app=opt.app;
var scene=app.scene;
var c=d.getElementById("lotusMain");
var el=d.getElementById("lotusContent");
var _2a50=d.createElement("div");
_2a50.id="pageDetails";
if(scene.mode=="compare"){
quickr.share.wiki.scenes.WikiPage.applyPageCompareView(d,_2a50,scene.comparison,opt);
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyVersions(d,div,doc,opt);
_2a50.appendChild(div);
}else{
if(scene.mode=="comments"){
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyComments(d,div,doc,opt);
_2a50.appendChild(div);
}else{
if(scene.mode=="info"){
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyInfo(d,div,doc,opt);
_2a50.appendChild(div);
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyHierarchy(d,div,doc,opt);
_2a50.appendChild(div);
scene.onNavigationLoaded=dojo.hitch(scene,scene._navigationDidLoad,d,div,doc,opt);
}else{
if(scene.mode=="attachments"){
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyAttachments(d,div,doc,opt);
_2a50.appendChild(div);
}else{
if(scene.mode=="versions"){
if(scene.versionId){
quickr.share.wiki.scenes.WikiPage.applyPageView(d,_2a50,doc,opt);
}
var div=d.createElement("div");
div.className="lotusSection";
quickr.share.wiki.scenes.WikiPage.applyVersions(d,div,doc,opt);
_2a50.appendChild(div);
}else{
quickr.share.wiki.scenes.WikiPage.applyPageView(d,_2a50,doc,opt);
}
}
}
}
}
el.appendChild(_2a50);
c.appendChild(el);
if(scene.unsubscribe){
scene.ncontents.disable();
scene.ncomments.disable();
}
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.ConfirmNewPage"]){
dojo._hasResource["quickr.share.wiki.scenes.ConfirmNewPage"]=true;
dojo.provide("quickr.share.wiki.scenes.ConfirmNewPage");
dojo.declare("quickr.share.wiki.scenes.ConfirmNewPage",[quickr.share.wiki.scenes.WikiPage,quickr.share.wiki.scenes.WikiSidebarPage],{constructor:function constructor(app,_2a53){
this.app=app;
this.nls=app.nls;
this.sceneInfo=_2a53;
this.baseWidgets=[];
this.widgets=[];
this.expanded={};
this.wikiLabel=_2a53.wikiLabel;
this.pageId=_2a53.pageId;
this.draftId=_2a53.draftId;
this.pageName=_2a53.pageId;
this.versionId=_2a53.versionId;
this.compare=_2a53.compare;
this.toVersion=_2a53.parameters.to;
this.fromVersion=_2a53.parameters.from;
this.userId=_2a53.userId=app.authenticatedUser?app.authenticatedUser.id:null;
this.mode=_2a53.mode||false;
this.commentId=_2a53.commentId;
this.current=null;
this.title=app.nls.WIKI_BREADCRUMBS.CONFIRMNEWPAGE;
this.forceNotification=quickr.share.util.first(_2a53.parameters.unsubscribe)=="true"?false:(quickr.share.util.first(_2a53.parameters.subscribe)=="true"?true:null);
},begin:function(_2a54){
this.wikiLabel=_2a54.wikiLabel;
if(_2a54&&_2a54.navStore&&_2a54.wikiLabel==this.wikiLabel){
this.navStore=_2a54.navStore;
}
if(_2a54&&_2a54.declaredClass=="quickr.share.wiki.scenes.WikiPage"){
this.parents=_2a54.parents;
if(this.parents.length<1){
this.parentId=null;
}else{
this.parentId=this.parents[this.parents.length-1].id;
}
}
this.app=_2a54.app;
this.end();
this.user=null;
var _2a55=[];
if(_2a54&&_2a54.wiki&&_2a54.wikiLabel==this.wikiLabel){
this.wiki=_2a54.wiki;
}else{
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
_2a55.push([url,"loadWiki"]);
}
if(_2a55.length>0){
this.request(_2a55);
}else{
this.show();
}
},show:function(){
var d=this.app.document;
var _2a58=this.app.authenticatedUser;
var app=this.app;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_2a58?_2a58.id:null)});
d.title=dojo.string.substitute(app.nls.WINDOWTITLE.WIKIPAGE,[this.wiki.getTitle(),this.pageId]);
quickr.share.wiki.scenes.applyHomeTemplate(d,app.authenticatedUser,app,app.routes,{logout:dojo.hitch(this,this._beforeLogout),defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.wiki,app.authenticatedUser,null,this.wiki.getTitle(),app,app.routes,this,true);
quickr.share.wiki.scenes.ConfirmNewPage.render(d,this.wiki,null,_2a58,null,app,app.routes,this);
quickr.share.wiki.scenes.ConfirmNewPage.applySideNav(d,dojo.byId("lotusColLeft"),document,app,app.scene);
var _2a5a=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_2a5a,this.app,this,this.app.authenticatedUser,false);
d.body.style.visibility="visible";
var c=d.getElementById("lotusContent");
var h=dojo.style(c,"height");
c=d.getElementById("lotusCollapseBar");
c.style.height=h+"px";
},end:function(_2a5d){
this.cancelRequests();
},loadNavigation:function(d,el,doc,app,scene,_2a63,_2a64){
var error;
if(_2a63 instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2a63,_2a64);
}else{
var div=d.createElement("div");
div.id="lotusSidenav";
div.className="navDiv";
var sideW=app.prefs.get("sww");
if(sideW){
div.style.width=sideW+"px";
}
if(_2a63==null){
var data={identifier:"id",label:"name",items:[]};
var _2a69=new quickr.share.wiki.util.NavigationStore({data:data,curApp:app,curScene:scene});
this.navStore=_2a69;
}else{
if(!this.navStore){
var _2a69=new quickr.share.wiki.util.NavigationStore({data:_2a63,curApp:app,curScene:scene});
this.navStore=_2a69;
}else{
var _2a69=this.navStore;
}
}
if(this.parents.length<1){
quickr.share.wiki.scenes.AbstractPage.loadBreadcrumbs(this.parents,d,app,scene);
var p=null;
_2a69.fetchItemByIdentity({identity:"tree",onItem:function(item,_2a6c){
p=item;
},onError:function(item,_2a6e){
console.log("error");
}});
if(p==null){
var p=_2a69.newItem({id:"tree",name:"tree",type:"item",root:"true"},{});
}
_2a69.save();
var item=_2a69.newItem({id:"newpage",name:this.pageName,type:"item"},{parent:p,attribute:"children"});
_2a69.save();
var c=_2a69.getValue(p,"childSize");
_2a69.setValue(p,"childSize",c+1);
_2a69.save();
}else{
var _2a71=quickr.share.wiki.util.shallowClone(this.parents);
if(scene.title){
_2a71.push(scene.title);
}
var _2a72=dojo.byId("wikiBreadcrumbs");
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,_2a72,_2a71,app,scene);
var p=null;
_2a69.fetchItemByIdentity({identity:this.parentId,onItem:function(item,_2a74){
p=item;
},onError:function(item,_2a76){
console.log("error");
}});
var item=_2a69.newItem({id:"newpage",name:this.pageName,type:"item"},{parent:p,attribute:"children"});
_2a69.save();
var c=_2a69.getValue(p,"childSize");
_2a69.setValue(p,"childSize",c+1);
_2a69.save();
}
var _2a77=new quickr.share.wiki.util.NavigationStoreModel({store:_2a69,query:{root:"true"},rootId:"tree",rootLabel:"tree",childrenAttrs:["children"],page:this.pageName});
_2a77.breadcrumbs=this.parents;
var _2a78=new quickr.share.wiki.util.NavigationTree({id:"navTree",model:_2a77,showRoot:false,persist:true,openOnClick:false,onClick:dojo.hitch(scene,function(item,_2a7a){
var str=item.id.toString();
if(item.id!="tree"&&item.id!="newpage"&&str.indexOf("...")==-1){
var page=_2a69.getLabel(item);
page=page.replace(/\+/g,"_");
app.navigate(app.routes.getWikiPageUrl(scene.wikiLabel,page));
_2a78.destroy();
}
})});
if(_2a77.breadcrumbs){
for(var i=0;i<_2a77.breadcrumbs.length;i++){
var _2a7e=null;
_2a69.fetchItemByIdentity({identity:_2a77.breadcrumbs[i].id,onItem:function(item,_2a80){
_2a7e=item;
_2a78.expandNode(_2a7e);
},onError:function(item,_2a82){
console.log("error");
}});
}
}
var inner=d.createElement("div");
inner.className="lotusNavTree";
inner.appendChild(_2a78.domNode);
var cdiv=d.createElement("div");
cdiv.className="lotusChunk lotusTiny";
cdiv.style.textAlign="right";
var opt={};
opt={rel:"root"};
var _2a86=dojo.getObject("quickr.share.config.actions.myWikiCreatePage");
var _2a87=this.wikiActions=(_2a86)?_2a86(app,this,opt):[];
var _2a88=app.authenticatedUser;
for(var i=0;i<_2a87.length;i++){
var _2a89=_2a87[i];
var e=d.createElement("a");
e.href=_2a89.getUrlResource(_2a88,opt)||"javascript:;";
dojo.connect(e,"onclick",dojo.hitch(_2a89,_2a89.execute));
e.appendChild(d.createTextNode("+ "+_2a89.getName(_2a88,opt)));
e.className="lotusAction";
e.href="javascript:;";
cdiv.appendChild(e);
if(i+1!=_2a87.length){
cdiv.appendChild(d.createElement("br"));
}
}
inner.appendChild(cdiv);
div.appendChild(inner);
quickr.share.util.insertBefore(el,div,el.firstChild);
_2a78.startup();
scene.updateSidebarHeight();
}
},createPage:function(){
this.app.navigate(this.app.routes.getUserCreatePagesUrl(this.wikiLabel,null,{pageId:this.pageId}));
},end:function(){
if(this.navStore){
var p;
this.navStore.fetchItemByIdentity({identity:"newpage",onItem:function(item,_2a8d){
p=item;
}});
if(p){
this.navStore.deleteItem(p);
this.navStore.save();
}
var p;
this.navStore.fetchItemByIdentity({identity:this.parentId,onItem:function(item,_2a8f){
p=item;
}});
if(p){
var c=this.navStore.getValue(p,"childSize");
if(c>0){
this.navStore.setValue(p,"childSize",c-1);
this.navStore.save();
}
}
}
}});
quickr.share.wiki.scenes.ConfirmNewPage.applyBreadcrumbs=function(d,el,_2a93,app,scene,_2a96){
var crmbs=quickr.share.wiki.util.shallowClone(_2a93);
if(scene.mode&&!_2a96){
crmbs.push(dojo.getObject(scene.modemap[scene.mode],false,scene));
}
quickr.share.wiki.scenes.AbstractPage.doBreadcrumbs(d,el,crmbs,app,scene);
};
quickr.share.wiki.scenes.ConfirmNewPage.doBreadcrumbs=function(d,el,_2a9a,app,scene){
var _2a9d=app.routes;
var p=d.createElement("p");
p.className="lotusTiny";
p.appendChild(d.createTextNode(app.nls.WIKI_BREADCRUMBS.YOUAREHERE));
p.appendChild(d.createTextNode(" "));
_2a9a.unshift({title:scene.wikiLabel,url:app.routes.getWikiUrl(scene.wikiLabel,null)});
for(var i=0;i<_2a9a.length-1;i++){
if(typeof (_2a9a[i])!="string"){
if(typeof (_2a9a[i].getLabel)=="function"){
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_2a9d.getWikiPageUrl(scene.wikiLabel,_2a9a[i].getLabel()));
dojo.connect(a,"onClick",dojo.hitch(scene,scene.removeNewPage));
a.appendChild(d.createTextNode(_2a9a[i].getLabel()));
a.className="lotusLink";
p.appendChild(a);
}else{
if(_2a9a[i].url&&_2a9a[i].title){
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_2a9a[i].url);
dojo.connect(a,"onClick",dojo.hitch(scene,scene.removeNewPage));
a.appendChild(d.createTextNode(_2a9a[i].title));
a.className="lotusLink";
p.appendChild(a);
}else{
p.appendChild(d.createTextNode(_2a9a[i]));
}
}
}else{
p.appendChild(d.createTextNode(_2a9a[i]));
}
if(i<_2a9a.length-1){
p.appendChild(d.createTextNode(" > "));
}
}
if(typeof (_2a9a[_2a9a.length-1].getLabel)=="function"){
p.appendChild(d.createTextNode(_2a9a[_2a9a.length-1].getLabel()));
}else{
p.appendChild(d.createTextNode(_2a9a[_2a9a.length-1]));
}
el.appendChild(p);
};
quickr.share.wiki.scenes.ConfirmNewPage.render=function(d,doc,_2aa3,_2aa4,user,app,_2aa7,scene){
var opt={app:app,routes:app.routes,authenticatedUser:_2aa4,scene:scene,user:user,aboutTitle:app.nls.DOCUMENTCONTENT.ABOUTPAGE,onattachmentcountupdate:dojo.hitch(scene,scene.onattachmentcountupdate),generateCommentLink:dojo.hitch(null,quickr.share.scenes.generatePageCommentLink,app,app.routes,doc),generateUserLink:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),getUserInfoUrl:dojo.hitch(app.routes,app.routes.getUserInfoServiceUrl),renderTipPopup:dojo.hitch(null,quickr.share.scenes.applyTipPopup,app)};
var c=d.getElementById("lotusMain");
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
scene.applyTagsSection(d,el,doc,app,scene);
scene.applyPageListNav(d,el,doc,app,scene);
scene.applyToolsNav(d,el,doc,app,scene);
c.appendChild(el);
c.appendChild(scene.resizeBar(d,scene,app,true));
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var div=d.createElement("div");
div.className="wikiHeader";
quickr.share.wiki.scenes.ConfirmNewPage.applyTitle(d,div,opt);
el.appendChild(div);
var div=d.createElement("div");
div.id="pageDetails";
quickr.share.wiki.scenes.ConfirmNewPage.applyPageView(d,div,opt);
el.appendChild(div);
c.appendChild(el);
};
quickr.share.wiki.scenes.ConfirmNewPage.applyTitle=function(d,div,opt){
var bdiv=d.createElement("div");
bdiv.id="wikiBreadcrumbs";
div.appendChild(bdiv);
};
quickr.share.wiki.scenes.ConfirmNewPage.applySideNav=function(d,el,doc,app,scene){
if(scene.parents.length<1){
var url=app.routes.getPageNavigationUrl({page:scene.pageId,library:scene.wikiLabel});
}else{
var url=app.routes.getPageNavigationUrl({page:scene.parentId,library:scene.wikiLabel});
}
app.net.getJson({url:url,handle:dojo.hitch(scene,scene.loadNavigation,d,el,doc,app,scene)});
};
quickr.share.wiki.scenes.ConfirmNewPage.applyPageView=function(d,el,opt){
var app=opt.app;
var scene=opt.scene;
var frm=d.createElement("form");
frm.className="lotusForm";
frm.setAttribute("action","#");
frm.setAttribute("method","post");
frm.onsubmit=function(e){
dojo.stopEvent(e);
};
var _2abf=d.createElement("fieldset");
var tbl2=d.createElement("table");
tbl2.setAttribute("cellspacing",0);
tbl2.setAttribute("cellpadding",0);
tbl2.setAttribute("border",0);
tbl2.setAttribute("summary","");
tbl2.setAttribute("id","find");
tbl2.className="lotusTable lotusClear lotusFormTable";
var _2ac1=d.createElement("tbody");
var tr2=d.createElement("tr");
var td2=d.createElement("td");
td2.setAttribute("colspan",3);
td2.className="lotusFormTitle";
var h2=d.createElement("h2");
h2.innerHTML=quickr.share.wiki.util.wrapWithQuotes(opt.scene.pageId);
h2.appendChild(d.createTextNode(" "));
var spn=d.createElement("span");
spn.style.color="#999999";
spn.appendChild(d.createTextNode(app.nls.WIKI_CONFIRMNEWPAGE.HASNOTBEENCREATED));
h2.appendChild(spn);
td2.appendChild(h2);
tr2.appendChild(td2);
_2ac1.appendChild(tr2);
var tr2=d.createElement("tr");
var td2=d.createElement("td");
td2.setAttribute("colspan",3);
td2.className="lotusFormFieldRow";
var p=d.createElement("p");
p.appendChild(d.createTextNode(app.nls.WIKI_CONFIRMNEWPAGE.FOLLOWEDLINK));
td2.appendChild(p);
tr2.appendChild(td2);
_2ac1.appendChild(tr2);
var tr2=d.createElement("tr");
var td2=d.createElement("td");
td2.setAttribute("colspan",3);
td2.className="lotusFormFooter";
var inp=d.createElement("input");
inp.setAttribute("type","submit");
inp.className="lotusFormButton";
inp.setAttribute("value",app.nls.WIKI_CONFIRMNEWPAGE.CREATETHISPAGE);
td2.appendChild(inp);
var a=d.createElement("a");
a.className="lotusAction";
a.href="#";
a.onclick=function(e){
window.history.back();
return false;
};
a.appendChild(d.createTextNode(app.nls.WIKI_CONFIRMNEWPAGE.NOTHANKS));
td2.appendChild(a);
tr2.appendChild(td2);
_2ac1.appendChild(tr2);
tbl2.appendChild(_2ac1);
_2abf.appendChild(tbl2);
frm.appendChild(_2abf);
el.appendChild(frm);
dojo.connect(inp,"onclick",dojo.hitch(scene,scene.createPage));
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.Editor"]){
dojo._hasResource["quickr.share.wiki.scenes.Editor"]=true;
dojo.provide("quickr.share.wiki.scenes.Editor");
dojo.declare("quickr.share.wiki.scenes.Editor",null,{wikiTextEnabled:quickr.share.config.wikiTextEnabled,wikiTextChanged:false,convertedToWikiTextOnce:false,previewedCurrentContent:false,isEditorDirty:false,isEditorDirtySinceLastSave:false,currentMode:"rt",nextMode:"rt",constructor:function constructor(_2aca,_2acb,app,opt){
this.pageId=_2aca;
this.ownerUserName=_2acb;
this.app=app;
this.plugins=[];
if(opt&&opt.getCurrentDraftId){
this.getCurrentDraftId=opt.getCurrentDraftId;
}
if(opt&&opt.libraryId){
this.libraryId=opt.libraryId;
}
if(opt&&opt.wikiTitle){
this.wikiTitle=opt.wikiTitle;
}
},getDraftId:function(){
this.draftId=this.getCurrentDraftId();
return this.draftId;
},isEditingRichText:function(){
return (this.currentMode=="rt");
},isEditingWikiText:function(){
return (this.currentMode=="wt");
},isPreviewing:function(){
return (this.currentMode=="p");
},isEditingHTMLSource:function(){
return (this.currentMode=="ht");
},isEditingRichTextNext:function(){
return (this.nextMode=="rt");
},isEditingWikiTextNext:function(){
return (this.nextMode=="wt");
},isPreviewingNext:function(){
return (this.nextMode=="p");
},isEditingHTMLNext:function(){
return (this.nextMode=="ht");
},focusEditor:function(){
},toggleRefCol:function(_2ace,_2acf){
this.wikiRefDiv.style.display="none";
this.htmlRefDiv.style.display="none";
dojo.addClass(this.mainTable,"wikiFixedTable");
if(_2ace){
this.refCol.style.width="270px";
_2acf.style.display="";
}else{
this.refCol.style.width="0px";
}
},_previousMode:function(){
if(this.isPreviewing()){
this.nextMode="p";
dojo.addClass(this.previewTab,"lotusSelected");
dojo.removeClass(this.currentTab,"lotusSelected");
this.currentTab=this.previewTab;
this.editorParent.style.display="none";
this.wikiTextEditor.style.display="none";
this.htmlSourceEditor.style.display="none";
this.previewArea.style.display="";
this.currentMode="p";
this.toggleRefCol(false);
}else{
if(this.isEditingRichText()){
this.nextMode="rt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.richTextTab,"lotusSelected");
this.currentTab=this.richTextTab;
this.wikiTextEditor.style.display="none";
this.previewArea.style.display="none";
this.htmlSourceEditor.style.display="none";
this.editorParent.style.display="";
this.currentMode="rt";
this.toggleRefCol(false);
}else{
if(this.isEditingWikiText()){
this.nextMode="wt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.wikiTextTab,"lotusSelected");
this.currentTab=this.wikiTextTab;
this.editorParent.style.display="none";
this.previewArea.style.display="none";
this.htmlSourceEditor.style.display="none";
this.wikiTextEditor.style.display="";
this.currentMode="wt";
this.toggleRefCol(true,this.wikiRefDiv);
}else{
if(this.isEditingHTMLSource()){
this.nextMode="ht";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.htmlSourceTab,"lotusSelected");
this.currentTab=this.htmlSourceTab;
this.editorParent.style.display="none";
this.previewArea.style.display="none";
this.wikiTextEditor.style.display="none";
this.htmlSourceEditor.style.display="";
this.currentMode="ht";
this.toggleRefCol(true,this.htmlRefDiv);
}
}
}
}
},isDirty:function(){
return this.isEditorDirty||this._fckIsDirty();
},isDirtySinceLastSave:function(){
return this.isEditorDirtySinceLastSave;
},resetIsDirtySinceLastSave:function(){
this.isEditorDirtySinceLastSave=false;
},resetIsDirty:function(){
},getFckInstance:function(){
},_fckIsDirty:function(){
},getXHTML:function(){
},getHTML:function(){
},setHTML:function(html){
},getWikiText:function(){
return this.wikiTextEditor.value;
},destroy:function(){
quickr.share.util.destroy(this.plugins);
if(this._onSelectionChangeConnection){
dojo.disconnect(this._onSelectionChangeConnection);
}
},richText:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isEditingRichText()){
this.nextMode="rt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.richTextTab,"lotusSelected");
this.currentTab=this.richTextTab;
if(this.isEditingWikiText()){
this.wikiTextEditor.style.display="none";
if(this.wikiTextChanged){
this._convertToRichText();
}else{
this.editorParent.style.display="";
this.currentMode="rt";
this.onChangeToRichText();
this.focusEditor();
}
}
if(this.isEditingHTMLSource()){
var _2ad2=this.htmlSourceEditor.value;
this.htmlSourceEditor.style.display="none";
this.editorParent.style.display="";
this.htmlSourceEditor.value="";
this.currentMode="rt";
this.onChangeToRichText();
this.setHTML(_2ad2);
this.focusEditor();
}else{
this.previewArea.style.display="none";
this.editorParent.style.display="";
this.currentMode="rt";
this.focusEditor();
}
this.toggleRefCol(false);
}
},preview:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isPreviewing()){
this.nextMode="p";
dojo.addClass(this.previewTab,"lotusSelected");
dojo.removeClass(this.currentTab,"lotusSelected");
this.currentTab=this.previewTab;
var _2ad4=quickr.share.util.generateiWidgetEnablerCodeIfRequired(this.getHTML(),this.previewArea.ownerDocument);
if(_2ad4){
this.previewArea.appendChild(_2ad4);
}
if(this.isEditingRichText()){
this.editorParent.style.display="none";
if(!this.previewedCurrentContent||this._fckIsDirty()){
this.previewArea.innerHTML=this.getHTML();
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
}
this.previewArea.style.display="";
this.currentMode="p";
}else{
if(this.isEditingHTMLSource()){
this.previewArea.innerHTML=this.htmlSourceEditor.value;
this.setHTML(this.htmlSourceEditor.value);
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
this.previewArea.style.display="";
this.currentMode="p";
this.htmlSourceEditor.style.display="none";
}else{
this.wikiTextEditor.style.display="none";
if(this.wikiTextChanged){
this._convertToRichText();
}else{
if(!this.previewedCurrentContent||this._fckIsDirty()){
this.previewArea.innerHTML=this.getHTML();
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
}
this.previewArea.style.display="";
this.currentMode="p";
this.onChangeToPreview();
}
}
}
if(dojo.isIE){
var d=this.app.document;
var inp=d.createElement("input");
var _2ad7=d.getElementsByTagName("body")[0];
_2ad7.appendChild(inp);
inp.focus();
_2ad7.removeChild(inp);
}
}
this.toggleRefCol(false);
},wikiText:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isEditingWikiText()){
this.nextMode="wt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.wikiTextTab,"lotusSelected");
this.currentTab=this.wikiTextTab;
this.editorParent.style.display="none";
this.previewArea.style.display="none";
if(this.isEditingHTMLSource()){
newHtml=this.getXHTMLFromSource();
this._convertToWikiFromHtmlSource(newHtml);
this.wikiTextChanged=true;
this.htmlSourceEditor.style.display="none";
}else{
if(!this.convertedToWikiTextOnce||this._fckIsDirty()){
this._convertToWiki();
}else{
this.htmlSourceEditor.style.display="none";
this.wikiTextEditor.style.display="";
this.currentMode="wt";
this.onChangeToWikiText();
this.wikiTextEditor.focus();
}
}
}
this.toggleRefCol(true,this.wikiRefDiv);
},getXHTMLFromSource:function(){
var html=this.htmlSourceEditor.value;
var _2ada=html;
_2ada=this.getXHTML(_2ada);
return _2ada;
},htmlSource:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isEditingHTMLSource()){
this.nextMode="ht";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.htmlSourceTab,"lotusSelected");
this.currentTab=this.htmlSourceTab;
this.htmlSourceEditor.style.display="";
if(this.isEditingRichText()){
this.editorParent.style.display="none";
this.htmlSourceEditor.value=this.getHTML();
}else{
if(this.isEditingWikiText()){
this.wikiTextEditor.style.display="none";
this._convertToHTMLSource();
}else{
if(this.isPreviewing()){
this.previewArea.style.display="none";
this.htmlSourceEditor.value=this.getHTML();
}
}
}
this.currentMode="ht";
this.onChangeToHTMLSource();
this.htmlSourceEditor.focus();
}
this.toggleRefCol(true,this.htmlRefDiv);
},wikitextonchange:function(e){
this.wikiTextChanged=true;
this.isEditorDirty=true;
this.isEditorDirtySinceLastSave=true;
this.onContentChange();
},htmlsourceonchange:function(e){
this.isEditorDirty=true;
this.isEditorDirtySinceLastSave=true;
this.onContentChange();
},convertHTMLSourceToXHTML:function(html){
alert("convertHTMLSourceToXHTML() not implemented for FCKEditor");
return html;
},onChangeToWikiText:function(e){
if(e){
dojo.stopEvent(e);
}
},onChangeToRichText:function(e){
if(e){
dojo.stopEvent(e);
}
},onChangeToPreview:function(e){
if(e){
dojo.stopEvent(e);
}
},onChangeToHTMLSource:function(e){
if(e){
dojo.stopEvent(e);
}
},_convertToWikiFromHtmlSource:function(HTML){
this._postConversionBody(HTML,"text/html",dojo.hitch(this,this._convertToWikiComplete));
},_convertToWiki:function(){
var HTML=this.getXHTML();
this._postConversionBody(HTML,"text/html",dojo.hitch(this,this._convertToWikiComplete));
},_convertToWikiComplete:function(_2ae5,_2ae6){
this.editorProgress.style.display="none";
if(_2ae5 instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_2ae5,_2ae6));
this._previousMode();
}else{
var d=_2ae5;
if(d.documentElement&&quickr.util.dom.isNamedNS(d.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var e=d.documentElement;
var _2ae9=quickr.share.util.getChildElementTextContent(e,"content");
this.wikiTextEditor.value=_2ae9;
if(this._fckIsDirty()){
this.isEditorDirty=true;
this.isEditorDirtySinceLastSave=true;
this.previewedCurrentContent=false;
this.resetIsDirty();
}
this.convertedToWikiTextOnce=true;
this.wikiTextEditor.style.display="";
this.currentMode="wt";
this.onChangeToWikiText();
this.wikiTextEditor.focus();
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_WIKIMARKUP_ERROR);
this._previousMode();
}
}
},onerror:function(error){
if(error=="InvalidXhtml"){
alert(this.app.nls.PAGEEDIT.INVALID_XHTML);
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_WIKIMARKUP_ERROR);
}
},_convertToRichText:function(_2aeb,_2aec){
var _2aed=this.wikiTextEditor.value;
this._postConversionBody(_2aed,"text/creole",dojo.hitch(this,this._convertToRichTextComplete));
},_convertToHTMLSource:function(_2aee,_2aef){
var _2af0=this.wikiTextEditor.value;
this._postConversionBody(_2af0,"text/creole",dojo.hitch(this,this._convertToHTMLSourceComplete));
},_postConversionBody:function(_2af1,_2af2,_2af3){
this.editorProgress.style.display="";
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _2af6=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_2af6.setAttribute("term","content_conversion");
_2af6.setAttribute("label","content_conversion");
_2af6.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_2af6);
if(this.pageId){
var _2af7=quickr.share.util.createElementNS(doc,"documentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2af7.appendChild(doc.createTextNode(this.pageId));
entry.appendChild(_2af7);
}else{
if(this.draftId){
var _2af8=quickr.share.util.createElementNS(doc,"draftUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2af8.appendChild(doc.createTextNode(this.draftId));
entry.appendChild(_2af8);
}
}
var _2af9=quickr.share.util.createElementNS(doc,"documentOwner",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var _2afa=quickr.share.util.createElementNS(doc,"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2afa.appendChild(doc.createTextNode(this.ownerUserName));
_2af9.appendChild(_2afa);
entry.appendChild(_2af9);
var _2afb=quickr.share.util.createElementNS(doc,"libraryTitle",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2afb.appendChild(doc.createTextNode(this.wikiTitle));
entry.appendChild(_2afb);
var _2afc=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_2afc.setAttribute("type",_2af2);
_2afc.appendChild(doc.createTextNode(_2af1));
entry.appendChild(_2afc);
var _2afd=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.app.net.postXml({url:this.app.routes.getWikiConversionServiceUrl(),timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,postData:_2afd,headers:{"Content-Type":"application/atom+xml; charset=\"UTF-8\""},handle:_2af3});
},_convertToHTMLSourceComplete:function(_2afe,_2aff){
this.editorProgress.style.display="none";
if(_2afe instanceof Error){
alert(this.app.nls.PAGEEDIT.CONVERT_TO_RICHTEXT_ERROR);
this._previousMode();
}else{
var d=_2afe;
if(d.documentElement&&quickr.util.dom.isNamedNS(d.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var e=d.documentElement;
var _2b02=quickr.share.util.getChildElementTextContent(e,"content");
this.wikiTextChanged=false;
this.htmlSourceEditor.value=_2b02;
this.currentMode="ht";
this.onChangeToHTMLSource();
this.htmlSourceEditor.focus();
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_RICHTEXT_ERROR);
this._previousMode();
}
}
},_convertToRichTextComplete:function(_2b03,_2b04){
this.editorProgress.style.display="none";
if(_2b03 instanceof Error){
alert(this.app.nls.PAGEEDIT.CONVERT_TO_RICHTEXT_ERROR);
this._previousMode();
}else{
var d=_2b03;
if(d.documentElement&&quickr.util.dom.isNamedNS(d.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var e=d.documentElement;
var _2b07=quickr.share.util.getChildElementTextContent(e,"content");
this.setHTML(_2b07);
this.wikiTextChanged=false;
if(this.isPreviewingNext()){
this.previewArea.innerHTML=_2b07;
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
this.previewArea.style.display="";
this.currentMode="p";
this.onChangeToPreview();
}else{
this.editorParent.style.display="";
this.currentMode="rt";
this.onChangeToRichText();
this.focusEditor();
}
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_RICHTEXT_ERROR);
this._previousMode();
}
}
},updateEditorInfoArea:function(el){
var span=this.editorInfoArea;
while(span.firstChild){
span.removeChild(span.firstChild);
}
span.appendChild(el);
},render:function(d,el,opt,html){
var app=this.app;
var _2b0f=this.mainTable=d.createElement("table");
_2b0f.style.width="99%";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
td.style.height="99%";
td.style.verticalAlign="top";
tr.appendChild(td);
tbody.appendChild(tr);
_2b0f.appendChild(tbody);
el.appendChild(_2b0f);
var _2b13=d.createElement("div");
_2b13.style.height="100%";
td.appendChild(_2b13);
var idiv=this.editorInfoArea=d.createElement("div");
idiv.style.marginTop="15px";
idiv.style.width="99%";
_2b13.appendChild(idiv);
var div=d.createElement("div");
div.className="lotusTabContainer";
div.style.height="3em";
div.style.marginBottom="0px";
div.style.width="99%";
td.appendChild(div);
var ul=d.createElement("ul");
ul.className="lotusTabs";
ul.style.width="50%";
var li=d.createElement("li");
li.className="lotusSelected";
var span=d.createElement("span");
var _2b19=d.createElement("a");
_2b19.href="javascript:;";
_2b19.onclick=function(){
return false;
};
_2b19.appendChild(d.createTextNode(app.nls.PAGEEDIT.RICH_TEXT));
span.appendChild(_2b19);
li.appendChild(span);
this.richTextTab=this.currentTab=li;
ul.appendChild(li);
var li=d.createElement("li");
var span=d.createElement("span");
var _2b1a=d.createElement("a");
_2b1a.href="javascript:;";
_2b1a.onclick=function(){
return false;
};
_2b1a.appendChild(d.createTextNode(app.nls.PAGEEDIT.HTML_SOURCE));
span.appendChild(_2b1a);
li.appendChild(span);
this.htmlSourceTab=li;
ul.appendChild(li);
if(this.wikiTextEnabled){
var li=d.createElement("li");
var span=d.createElement("span");
var _2b1b=d.createElement("a");
_2b1b.href="javascript:;";
_2b1b.onclick=function(){
return false;
};
_2b1b.appendChild(d.createTextNode(app.nls.PAGEEDIT.WIKI_MARKUP));
span.appendChild(_2b1b);
li.appendChild(span);
this.wikiTextTab=li;
ul.appendChild(li);
}
var li=d.createElement("li");
var span=d.createElement("span");
var _2b1c=d.createElement("a");
_2b1c.href="javascript:;";
_2b1c.onclick=function(){
return false;
};
_2b1c.appendChild(d.createTextNode(app.nls.PAGEEDIT.PREVIEW));
span.appendChild(_2b1c);
li.appendChild(span);
this.previewTab=li;
ul.appendChild(li);
div.appendChild(ul);
_2b13.appendChild(div);
var td2=this.refCol=d.createElement("td");
td2.style.verticalAlign="top";
td2.style.width="0px";
tr.appendChild(td2);
var _2b1e=this.wikiRefDiv=d.createElement("div");
_2b1e.id="wikiRefDiv";
_2b1e.style.marginBottom="0px";
_2b1e.style.marginRight="10px";
_2b1e.style.marginTop="3em";
_2b1e.style.width="260px";
_2b1e.style.display="none";
_2b1e.className="lotusInfoBox";
_2b1e.id="wikiReference";
var h3=d.createElement("h3");
h3.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.MARKUP_REFERENCE));
_2b1e.appendChild(h3);
var _2b20=d.createElement("div");
_2b20.className="lotusReferenceBox";
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.HEADINGS));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.H1));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.H2));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.H3));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.TEXTFORMATTING));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.BOLD));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.ITALICS));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.UNDERLINE));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.STRIKE));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.INDENT_ONCE));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.INDENT_TWICE));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.CENTERED_PARAGRAPH));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.HORIZONTAL));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.LINKING));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.LINK.PAGE));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.LINK.URL));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.LINK.IMAGE));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.LISTS));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.BULLETED.FIRST));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.BULLETED.SUB));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.NUMBERED.FIRST));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.NUMBERED.SUB));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.TABLES));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.TABLE.HEADER));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.TABLE.CELL));
_2b20.appendChild(d.createElement("br"));
_2b1e.appendChild(_2b20);
td2.appendChild(_2b1e);
var _2b21=this.htmlRefDiv=d.createElement("div");
_2b21.id="htmlRefDiv";
_2b21.dir=quickr.share.config.dir;
_2b21.style.marginBottom="0px";
_2b21.style.marginRight="10px";
_2b21.style.marginTop="3em";
_2b21.style.width="260px";
_2b21.style.display="none";
_2b21.className="lotusInfoBox";
_2b21.id="htmlReference";
var h3=d.createElement("h3");
h3.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.MARKUP_REFERENCE));
_2b21.appendChild(h3);
var _2b20=d.createElement("div");
_2b20.textAlign="left";
_2b20.className="lotusReferenceBox";
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.HEADINGS));
var _2b22=d.createElement("div");
_2b22.dir="ltr";
_2b22.style.textAlign="left";
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.H1));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.H2));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.H3));
_2b20.appendChild(_2b22);
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.TEXTFORMATTING));
_2b22=d.createElement("div");
_2b22.dir="ltr";
_2b22.style.textAlign="left";
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.BOLD));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.ITALICS));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.UNDERLINE));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.STRIKE));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.INDENT_ONCE));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.INDENT_TWICE));
_2b22.appendChild(d.createElement("br"));
_2b22.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.CENTERED_PARAGRAPH));
_2b20.appendChild(_2b22);
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.LISTS));
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.LIST.ORDERED.TITLE));
_2b20.appendChild(d.createElement("br"));
_2b22=d.createElement("div");
_2b22.dir="ltr";
_2b22.style.textAlign="left";
var pre=d.createElement("pre");
_2b22.appendChild(pre);
pre.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.LIST.ORDERED.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.LIST.NUMBER.FIRST));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.LIST.NUMBER.SECOND));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.LIST.ORDERED.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("    "+app.nls.HTML.REFERENCE.LIST.NUMBER.SUB1));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("    "+app.nls.HTML.REFERENCE.LIST.NUMBER.SUB2));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.LIST.ORDERED.CLOSE));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.LIST.CLOSE));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.LIST.NUMBER.THIRD));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.LIST.ORDERED.CLOSE));
_2b20.appendChild(_2b22);
_2b20.appendChild(d.createElement("br"));
_2b20.appendChild(d.createTextNode(app.nls.WIKI.REFERENCE.TABLES));
_2b22=d.createElement("div");
_2b22.dir="ltr";
_2b22.style.textAlign="left";
pre=d.createElement("pre");
_2b22.appendChild(pre);
pre.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.TABLE.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.TABLE.TBODY.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("    "+app.nls.HTML.REFERENCE.TABLE.TR.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("      "+app.nls.HTML.REFERENCE.TABLE.HEADER1));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("      "+app.nls.HTML.REFERENCE.TABLE.HEADER2));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("    "+app.nls.HTML.REFERENCE.TABLE.TR.CLOSE));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("    "+app.nls.HTML.REFERENCE.TABLE.TR.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("      "+app.nls.HTML.REFERENCE.TABLE.CELL1));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("      "+app.nls.HTML.REFERENCE.TABLE.CELL2));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("    "+app.nls.HTML.REFERENCE.TABLE.TR.CLOSE));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode("  "+app.nls.HTML.REFERENCE.TABLE.TBODY.OPEN));
pre.appendChild(d.createElement("br"));
pre.appendChild(d.createTextNode(app.nls.HTML.REFERENCE.TABLE.CLOSE));
pre.appendChild(d.createElement("br"));
_2b20.appendChild(_2b22);
_2b21.appendChild(_2b20);
td2.appendChild(_2b21);
var div=this.editorParent=d.createElement("div");
div.className="qkrPageEditor";
div.style.width="99%";
var _2b24=this.editorLocation=d.createElement("div");
_2b24.id="thisisatestid";
div.appendChild(_2b24);
_2b13.appendChild(div);
var _2b25=this.previewArea=d.createElement("div");
_2b25.style.display="none";
_2b25.style.width="99%";
_2b25.style.overflowX="auto";
_2b25.className="qkrPageEditor qkrWikiPreview";
_2b13.appendChild(_2b25);
var _2b26=this.htmlSourceEditor=d.createElement("textarea");
_2b26.style.display="none";
_2b26.style.width="99%";
_2b26.style.height="425px";
_2b26.className="qkrPageEditor";
_2b13.appendChild(_2b26);
var _2b27=this.wikiTextEditor=d.createElement("textarea");
_2b27.style.display="none";
_2b27.style.width="99%";
_2b27.style.height="425px";
_2b27.className="qkrPageEditor";
_2b13.appendChild(_2b27);
var _2b28=this.editorProgress=d.createElement("div");
_2b28.style.display="none";
_2b28.className="qkrPageEditor";
var _2b29=d.createElement("img");
_2b29.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/loadingSmall.gif";
_2b29.setAttribute("alt",app.nls.LOADING);
_2b29.height=16;
_2b29.width=16;
_2b29.style.margin="auto";
_2b29.style.display="block";
_2b28.appendChild(_2b29);
_2b13.appendChild(_2b28);
opt.html=html;
if(!this._onSelectionChangeConnection){
this._onSelectionChangeConnection=dojo.connect(quickr.share.wiki.scenes.Editor,"onSelectionChange",this,"onContentChange");
}
this.createEditor(opt);
if(this.wikiTextEnabled){
dojo.connect(_2b27,"onkeypress",dojo.hitch(this,this.wikitextonchange));
dojo.connect(_2b27,"onclick",dojo.hitch(this,this.wikitextonchange));
}
dojo.connect(_2b26,"onkeypress",dojo.hitch(this,this.htmlsourceonchange));
dojo.connect(_2b26,"onclick",dojo.hitch(this,this.htmlsourceonchange));
dojo.connect(_2b19,"onclick",dojo.hitch(this,this.richText));
if(this.wikiTextEnabled){
dojo.connect(_2b1b,"onclick",dojo.hitch(this,this.wikiText));
}
dojo.connect(_2b1c,"onclick",dojo.hitch(this,this.preview));
dojo.connect(_2b1a,"onclick",dojo.hitch(this,this.htmlSource));
},createEditor:function(opt){
},onContentChange:function(){
this.isEditorDirtySinceLastSave=this.isEditorDirty||this._fckIsDirty();
}});
quickr.share.wiki.scenes.Editor.onSelectionChange=function(_2b2b){
};
}
if(!dojo._hasResource["quickr.share.wiki.action.InsertWidget"]){
dojo._hasResource["quickr.share.wiki.action.InsertWidget"]=true;
dojo.provide("quickr.share.wiki.action.InsertWidget");
dojo.declare("quickr.share.wiki.action.InsertWidget",[quickr.share.action.DialogAction],{wInput:"578px",wDialog:"720px",constructor:function(_2b2c,_2b2d,_2b2e,_2b2f,_2b30,_2b31,_2b32,_2b33,app,_2b35){
this.app=app;
this.nls=app.nls;
},destroy:function(){
this.inherited(arguments);
},updateDialog:function(item,opt,_2b38){
},createDialog:function(item,opt,_2b3b){
var d=document;
var _2b3d=d.createElement("div");
_2b3d.className="lotusDialogBorder";
_2b3d.style.width=this.wDialog;
var el=_2b3b.formNode=d.createElement("form");
dojo.connect(el,"onsubmit",dojo.hitch(this,function(e){
dojo.stopEvent(e);
}));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.TITLE));
el.appendChild(h1);
var _2b44=d.createElement("div");
_2b44.className="lotusDialogContent";
p=d.createElement("div");
p.appendChild(d.createTextNode(this.nls.CAPTION));
_2b44.appendChild(p);
var br=d.createElement("br");
_2b44.appendChild(br);
var _2b46=d.createElement("textarea");
_2b46.id="textareaScript";
_2b46.style.width="600px";
_2b46.style.height="60px";
_2b44.appendChild(_2b46);
var input=_2b3b.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value="Load...";
dojo.connect(input,"onclick",this,"loadWidget");
input.style.display="inline";
input.style.verticalAlign="top";
_2b44.appendChild(input);
var _2b48=d.createElement("iframe");
_2b48.title=_2b48.id="sandboxIframe";
_2b48.width="600px";
_2b48.height="3px";
_2b48.marginHeight="0px";
_2b48.marginWidth="0px";
_2b44.appendChild(_2b48);
var _2b49=d.createElement("div");
_2b49.id="newIframe";
_2b49.width="600px";
_2b49.height="400px";
_2b44.appendChild(_2b49);
el.appendChild(_2b44);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_2b3b.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(this.nls.BUSY));
div.appendChild(span);
var input=_2b3b.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.app.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_2b3d.appendChild(el);
dojo.connect(_2b3b.saveNode,"onclick",dojo.hitch(this,this.insertWidget));
_2b3b.setContent(_2b3d);
this.updateDialog(item,opt,_2b3b);
},insertWidget:function(){
var _2b4b=window.document.getElementById("newIWIDGET");
if(_2b4b){
var el=new CKEDITOR.dom.element("iframe",this.editor.document);
el.setAttribute("src",_2b4b.src);
el.setAttribute("frameBorder",_2b4b.frameBorder);
el.setAttribute("height",_2b4b.height);
el.setAttribute("width",_2b4b.width);
el.setAttribute("marginHeight",_2b4b.marginHeight);
el.setAttribute("marginWidth",_2b4b.marginWidth);
el.setAttribute("scrolling",_2b4b.scrolling);
this.editor.insertElement(el);
this.cancelDialog();
}
},loadWidget:function(){
var _2b4d=window.document.getElementById("textareaScript");
var valid=this.checkInput(_2b4d.value);
if(!valid){
alert(this.app.nls.INSERT_WIDGET.NOTASCRIPT);
return;
}
var _2b4f=_2b4d.value;
var _2b50=window.document.getElementById("sandboxIframe");
_2b50.style.display="block";
var doc=_2b50.contentWindow||_2b50.contentDocument;
if(doc.document){
doc=doc.document;
}
doc.write(_2b4f);
doc.close();
setTimeout(dojo.hitch(this,this.getWidgetIframe),3000);
},getWidgetIframe:function(){
var _2b52=window.document.getElementById("sandboxIframe");
_2b52.style.display="block";
var doc=_2b52.contentWindow||_2b52.contentDocument;
if(doc.document){
doc=doc.document;
}
var _2b54=doc.getElementsByTagName("iframe")[0];
_2b52.style.display="none";
var _2b55=window.document.getElementById("newIframe");
var _2b56=window.document.createElement("iframe");
_2b56.id="newIWIDGET";
_2b56.frameBorder=_2b54.frameBorder;
_2b56.height=_2b54.height;
_2b56.width=_2b54.width;
_2b56.longDesc=_2b54.longDesc;
_2b56.marginHeight=_2b54.marginHeight;
_2b56.marginWidth=_2b54.marginWidth;
_2b56.scrolling=_2b54.scrolling;
_2b56.src=_2b54.src;
_2b55.appendChild(_2b56);
},checkInput:function(value){
var _2b58=value.toLowerCase();
var _2b59=_2b58.length;
if(_2b58.indexOf("<script")==0&&(_2b58.lastIndexOf("</script>")==(_2b59-9)||_2b58.lastIndexOf("/>")==(_2b59-2))){
return true;
}else{
return false;
}
},cleanup:function(){
},cancelDialog:function(){
this.inherited(arguments);
this.cleanup();
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.QuickLinkVerify"]){
dojo._hasResource["quickr.share.wiki.action.QuickLinkVerify"]=true;
dojo.provide("quickr.share.wiki.action.QuickLinkVerify");
dojo.declare("quickr.share.wiki.action.QuickLinkVerify",[quickr.share.action.DialogAction],{wInput:"578px",wDialog:"650px",constructor:function(_2b5a,_2b5b,_2b5c,_2b5d,_2b5e,_2b5f,_2b60,_2b61,app,_2b63){
this.app=app;
this.nls=app.nls;
this.selection="";
this.INVALID_CHARS=/[\\\/\:\*\?\<\>\|\[\]\"\+]/g;
},destroy:function(){
this.inherited(arguments);
},updateDialog:function(item,opt,_2b66){
var sel=document.getElementById("selectionSpan");
sel.innerHTML=this.selection;
var _2b68=document.getElementById("replacedText");
var _2b69=this.selection.replace(this.INVALID_CHARS,"");
_2b68.value=_2b69+"";
},createDialog:function(item,opt,_2b6c){
var d=document;
var _2b6e=d.createElement("div");
_2b6e.className="lotusDialogBorder";
_2b6e.style.width=this.wDialog;
var el=_2b6c.formNode=d.createElement("form");
dojo.connect(el,"onsubmit",dojo.hitch(this,function(e){
dojo.stopEvent(e);
}));
el.className="lotusDialog lotusForm";
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.app.nls.CLOSE;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.app.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.INSERTLINK.QUICK_LINK_DIALOG_TITLE));
el.appendChild(h1);
var _2b75=d.createElement("div");
_2b75.className="lotusDialogContent";
var p=d.createElement("div");
p.id="infoMessage";
p.style.display="block";
p.style.color="red";
p.style.fontWeight="bold";
p.appendChild(d.createTextNode(" "));
_2b75.appendChild(p);
p=d.createElement("div");
p.appendChild(d.createTextNode(this.nls.INSERTLINK.QUICK_LINK_ALTERNATIVE_MESSAGE));
_2b75.appendChild(p);
p=d.createElement("div");
p.appendChild(d.createTextNode(this.nls.INSERTLINK.INVALID_CHARS_MESSAGE_PART1));
var span=d.createElement("span");
span.appendChild(d.createTextNode(this.nls.INSERTLINK.INVALID_CHARS_LIST));
span.style.fontWeight="bold";
span.style.paddingLeft="5px";
p.appendChild(span);
_2b75.appendChild(p);
var br=d.createElement("br");
_2b75.appendChild(br);
var table=d.createElement("table");
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
td.className="lotusFormLabel";
var label=d.createElement("label");
label.setAttribute("for","selectionSpan");
var _2b7d=d.createTextNode(this.nls.INSERTLINK.CURRENT_SELECTION);
label.appendChild(_2b7d);
label.style.fontWeight="bold";
td.appendChild(label);
tr.appendChild(td);
td=d.createElement("td");
span=d.createElement("span");
span.id="selectionSpan";
span.innerHTML=this.selection;
td.appendChild(span);
tr.appendChild(td);
tbody.appendChild(tr);
tr=d.createElement("tr");
td=d.createElement("td");
td.className="lotusFormLabel";
label=d.createElement("label");
label.setAttribute("for","replacedText");
var _2b7d=d.createTextNode(this.nls.INSERTLINK.NEW_LINK_NAME);
label.appendChild(_2b7d);
td.appendChild(label);
tr.appendChild(td);
td=d.createElement("td");
td.style.width="80%";
var input=d.createElement("input");
input.id="replacedText";
input.style.width="90%";
dojo.connect(input,"onkeyup",this,"validateInput");
td.appendChild(input);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2b75.appendChild(table);
el.appendChild(_2b75);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_2b6c.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(this.nls.BUSY));
div.appendChild(span);
var input=_2b6c.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.app.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_2b6e.appendChild(el);
dojo.connect(_2b6c.saveNode,"onclick",dojo.hitch(this,this.createLink));
_2b6c.setContent(_2b6e);
this.updateDialog(item,opt,_2b6c);
},validateInput:function(){
var _2b80=window.document.getElementById("replacedText");
this.INVALID_CHARS.lastIndex=0;
if(this.INVALID_CHARS.exec(_2b80.value)!=null){
var _2b81=document.getElementById("infoMessage");
_2b81.innerHTML=this.nls.INSERTLINK.CURRENT_LINK_NAME_NOT_VALID;
}else{
var _2b81=document.getElementById("infoMessage");
_2b81.innerHTML=" ";
}
},cancelDialog:function(){
this.inherited(arguments);
},createLink:function(opt){
var _2b83=window.document.getElementById("replacedText");
this.INVALID_CHARS.lastIndex=0;
if(this.INVALID_CHARS.test(_2b83.value)==true){
return false;
}else{
if(dojo.isIE){
var b=this.savedSelection;
this.savedSelection=null;
this.editor.focus();
this.editor.getSelection().selectRanges(b);
}
var _2b85=window.parent.pe.routes.getWikiPageUrl(this.currentWiki,_2b83.value,null,true);
var str="<a href=\""+_2b85+"\">"+_2b83.value+"</a>";
var el=new CKEDITOR.dom.element("a",this.editor.document);
el.setAttribute("href",_2b85);
var txt=new CKEDITOR.dom.text(_2b83.value,this.editor.document);
txt.appendTo(el);
this.editor.insertElement(el);
this.cancelDialog();
}
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.CKEditor"]){
dojo._hasResource["quickr.share.wiki.scenes.CKEditor"]=true;
dojo.provide("quickr.share.wiki.scenes.CKEditor");
dojo.declare("quickr.share.wiki.scenes.CKEditor",[quickr.share.wiki.scenes.Editor],{editorInstance:null,constructor:function constructor(_2b89,_2b8a,app,opt){
if(typeof (window.CKEDITOR)=="undefined"){
dojo.io.script.attach("RTEScript",quickr.share.config.ckeditorScript);
}
},checkIfRTELoaded:function(){
if(typeof (window.CKEDITOR)!="undefined"){
if(window.CKEDITOR.status&&window.CKEDITOR.status!="unloaded"&&window.CKEDITOR.status!="loading"){
return true;
}
}
return false;
},resetIsDirty:function(){
this.editorInstance.resetDirty();
this.isEditorDirty=false;
},getFckInstance:function(){
return this.editorInstance;
},_fckIsDirty:function(){
return this.editorInstance.checkDirty();
},focusEditor:function(){
this.getFckInstance().focus();
},getHTML:function(){
return this.getFckInstance().getData();
},setHTML:function(html){
return this.getFckInstance().setData(html);
},createEditor:function(opt){
if(!this.checkIfRTELoaded()){
setTimeout(dojo.hitch(this,this.createEditor,opt),200);
return;
}
var _2b8f=new quickr.share.wiki.action.InsertLink(this.wikiTitle,this.libraryId,opt.user.id,opt.isNewPage?opt.documentId:opt.scene.pageId,opt.isNewPage,opt.documentFeedUrl,opt.onattachmentcountupdate?dojo.hitch(opt.scene,opt.onattachmentcountupdate):null,false,opt.app,dojo.hitch(this,this.getDraftId));
this.app.insertLinkDialog=_2b8f;
this.plugins.push(_2b8f);
var _2b90=new quickr.share.wiki.action.InsertLink(this.wikiTitle,this.libraryId,opt.user.id,opt.isNewPage?opt.documentId:opt.scene.pageId,opt.isNewPage,opt.documentFeedUrl,opt.onattachmentcountupdate?dojo.hitch(opt.scene,opt.onattachmentcountupdate):null,true,opt.app,dojo.hitch(this,this.getDraftId));
this.app.insertImageLinkDialog=_2b90;
this.plugins.push(_2b90);
var _2b91=new quickr.share.wiki.action.QuickLinkVerify(this.wikiTitle,this.libraryId,opt.user.id,opt.documentId,!opt.documentId,opt.documentFeedUrl,opt.onattachmentcountupdate?dojo.hitch(opt.scene,opt.onattachmentcountupdate):null,false,opt.app,dojo.hitch(this,this.getDraftId));
this.app.quickLinkVerifyDialog=_2b91;
this.plugins.push(_2b91);
var _2b92=new quickr.share.wiki.action.InsertWidget(this.wikiTitle,this.libraryId,opt.user.id,opt.documentId,!opt.documentId,opt.documentFeedUrl,opt.onattachmentcountupdate?dojo.hitch(opt.scene,opt.onattachmentcountupdate):null,false,opt.app,dojo.hitch(this,this.getDraftId));
this.app.widgetInsertDialog=_2b92;
this.plugins.push(_2b92);
this.editorInstance=CKEDITOR.appendTo(this.editorLocation,{on:{instanceReady:function(ev){
ev.editor.on("contentDom",function(evt){
evt.removeListener();
ev.editor.resetDirty();
ev.editor.resetUndo();
});
ev.editor.addCss("body {height: 90%;width: 90%;}");
if(!opt.html){
ev.editor.setData("<p>&nbsp;</p>");
}else{
ev.editor.setData(opt.html);
}
}}});
this.editorInstance.on("selectionChange",quickr.share.wiki.scenes.Editor.onSelectionChange);
this.editorInstance.on("key",quickr.share.wiki.scenes.Editor.onSelectionChange);
},destroy:function(){
this.getFckInstance().destroy();
editorInstance=null;
quickr.share.util.destroy(this.plugins);
if(this._onSelectionChangeConnection){
dojo.disconnect(this._onSelectionChangeConnection);
}
},getXHTML:function(data){
var ck=this.getFckInstance();
var _2b97=(data)?data:ck.getData();
_2b97=_2b97.replace(/^\s+|\s+$/g,"");
var xhtml=null;
if(_2b97.length>0){
var doc=this.getDOMFromString(_2b97);
var _2b9a=false;
if(dojo.isSafari){
_2b9a=doc.documentElement.innerHTML?true:false;
if(!_2b9a){
if(doc.childNodes[0]&&doc.childNodes[0].childNodes.length>1){
var _2b9b=0;
var node=doc.childNodes[0].childNodes[0];
while(node){
if(node.nodeType!==3){
_2b9b++;
}
node=node.nextSibling;
}
if(doc.childNodes[0].childNodes.length==2||_2b9b>1){
_2b9a=true;
}
}
}
}
if((doc.childNodes.length>1)||(doc.childNodes.length==0)||(_2b9a)||(doc.childNodes.length==1&&doc.childNodes[0].nodeName==="parsererror")||(doc.childNodes.length==1&&doc.childNodes[0].nodeType==3)){
xhtml=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+"<div>"+_2b97+"</div>";
}else{
xhtml=_2b97;
}
}else{
xhtml=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+"<div></div>";
}
return xhtml;
},getDOMFromString:function(_2b9d){
var _2b9e;
if(dojo.isIE){
_2b9e=new ActiveXObject("Microsoft.XMLDOM");
_2b9e.async="false";
_2b9e.loadXML(_2b9d);
}else{
parser=new DOMParser();
_2b9e=parser.parseFromString(_2b9d,"text/xml");
}
return _2b9e;
},convertHTMLSourceToXHTML:function(html){
var _2ba0=new CKEDITOR.htmlWriter();
var _2ba1=CKEDITOR.htmlParser.fragment.fromHtml(html);
_2ba1.writeHtml(_2ba0);
var _2ba2=_2ba0.getHtml(true);
return _2ba2;
}});
}
if(!dojo._hasResource["quickr.share.wiki.util.EditorFactory"]){
dojo._hasResource["quickr.share.wiki.util.EditorFactory"]=true;
dojo.provide("quickr.share.wiki.util.EditorFactory");
quickr.share.wiki.util.EditorFactory.newEditor=function(_2ba3,_2ba4,app,opt){
if(quickr.share.config.editorType=="fck"){
return new quickr.share.wiki.scenes.Editor(_2ba3,_2ba4,app,opt);
}else{
return new quickr.share.wiki.scenes.CKEditor(_2ba3,_2ba4,app,opt);
}
};
}
if(!dojo._hasResource["quickr.share.wiki.widget.Tagger"]){
dojo._hasResource["quickr.share.wiki.widget.Tagger"]=true;
dojo.provide("quickr.share.wiki.widget.Tagger");
dojo.declare("quickr.share.wiki.widget.Tagger",[quickr.widget.Tagger],{createTags:function(e){
if(this.docId){
this.inherited(arguments);
return;
}else{
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
this.errNode.style.display="none";
quickr.share.util.removeChildren(this.errNode);
this.tagCombo.staticClass="lotusText";
dojo.removeClass(this.inputField,"lotusFormErrorField");
var _2ba8=this.formNode.firstChild.value;
var tags=this.validateTags(_2ba8);
if(!this.validateTagLength(tags)){
return;
}
if(tags&&tags.length>0){
this.currentHostTags=this.getCurrentHostTags();
this.currentHostTags=this.currentHostTags.concat(tags);
this.handleNewTags(tags);
}else{
this.cancelEdit();
}
this.ontagchange(this.currentHostTags);
}
},handleNewTags:function(_2baa){
if(this.docId){
this.inherited(arguments);
return;
}else{
var _2bab=this.tags||[];
var _2bac=this.tags=this.currentHostTags.sort();
var _2bad=[];
var _2bae=[];
var i=0;
var j=0;
var _2bb1=_2bab[i];
var _2bb2=_2bac[j];
while(_2bb1||_2bb2){
if(_2bb1&&(!_2bb2||_2bb2>_2bb1)){
_2bae.push(_2bb1);
i++;
}else{
if(_2bb2&&(!_2bb1||_2bb1>_2bb2)){
_2bad.push(_2bb2);
j++;
}else{
i++;
j++;
}
}
_2bb1=_2bab[i];
_2bb2=_2bac[j];
}
var _2bb3=this.highlightTags={};
dojo.forEach(_2bad,function(tag){
_2bb3[tag]=1;
});
dojo.forEach(_2baa,function(tag){
_2bb3[tag]=1;
});
if(this.tagStore){
this.tagStore.clear();
}
this.cancelEdit();
}
},deleteTag:function(tag,e){
if(this.docId){
this.inherited(arguments);
return;
}else{
if(e){
dojo.stopEvent(e);
}
if(!this.editable){
return;
}
if(confirm(dojo.string.substitute(this._strings.REMOVECONFIRM,[tag]))){
this.tags=dojo.filter(this.tags,function(a){
return a!=tag;
});
this.update(true);
this.currentHostTags=this.tags||[];
this.handleDeleteTag(this.currentHostTags);
}
}
},handleDeleteTag:function(tag){
if(this.docId){
this.inherited(arguments);
return;
}else{
if(this.tagStore){
this.tagStore.clear();
}
this.ontagchange(tag);
}
}});
}
if(!dojo._hasResource["dojox.uuid._base"]){
dojo._hasResource["dojox.uuid._base"]=true;
dojo.provide("dojox.uuid._base");
dojox.uuid.NIL_UUID="00000000-0000-0000-0000-000000000000";
dojox.uuid.version={UNKNOWN:0,TIME_BASED:1,DCE_SECURITY:2,NAME_BASED_MD5:3,RANDOM:4,NAME_BASED_SHA1:5};
dojox.uuid.variant={NCS:"0",DCE:"10",MICROSOFT:"110",UNKNOWN:"111"};
dojox.uuid.assert=function(_2bba,_2bbb){
if(!_2bba){
if(!_2bbb){
_2bbb="An assert statement failed.\n"+"The method dojox.uuid.assert() was called with a 'false' value.\n";
}
throw new Error(_2bbb);
}
};
dojox.uuid.generateNilUuid=function(){
return dojox.uuid.NIL_UUID;
};
dojox.uuid.isValid=function(_2bbc){
_2bbc=_2bbc.toString();
var valid=(dojo.isString(_2bbc)&&(_2bbc.length==36)&&(_2bbc==_2bbc.toLowerCase()));
if(valid){
var _2bbe=_2bbc.split("-");
valid=((_2bbe.length==5)&&(_2bbe[0].length==8)&&(_2bbe[1].length==4)&&(_2bbe[2].length==4)&&(_2bbe[3].length==4)&&(_2bbe[4].length==12));
var _2bbf=16;
for(var i in _2bbe){
var part=_2bbe[i];
var _2bc2=parseInt(part,_2bbf);
valid=valid&&isFinite(_2bc2);
}
}
return valid;
};
dojox.uuid.getVariant=function(_2bc3){
if(!dojox.uuid._ourVariantLookupTable){
var _2bc4=dojox.uuid.variant;
var _2bc5=[];
_2bc5[0]=_2bc4.NCS;
_2bc5[1]=_2bc4.NCS;
_2bc5[2]=_2bc4.NCS;
_2bc5[3]=_2bc4.NCS;
_2bc5[4]=_2bc4.NCS;
_2bc5[5]=_2bc4.NCS;
_2bc5[6]=_2bc4.NCS;
_2bc5[7]=_2bc4.NCS;
_2bc5[8]=_2bc4.DCE;
_2bc5[9]=_2bc4.DCE;
_2bc5[10]=_2bc4.DCE;
_2bc5[11]=_2bc4.DCE;
_2bc5[12]=_2bc4.MICROSOFT;
_2bc5[13]=_2bc4.MICROSOFT;
_2bc5[14]=_2bc4.UNKNOWN;
_2bc5[15]=_2bc4.UNKNOWN;
dojox.uuid._ourVariantLookupTable=_2bc5;
}
_2bc3=_2bc3.toString();
var _2bc6=_2bc3.charAt(19);
var _2bc7=16;
var _2bc8=parseInt(_2bc6,_2bc7);
dojox.uuid.assert((_2bc8>=0)&&(_2bc8<=16));
return dojox.uuid._ourVariantLookupTable[_2bc8];
};
dojox.uuid.getVersion=function(_2bc9){
var _2bca="dojox.uuid.getVersion() was not passed a DCE Variant UUID.";
dojox.uuid.assert(dojox.uuid.getVariant(_2bc9)==dojox.uuid.variant.DCE,_2bca);
_2bc9=_2bc9.toString();
var _2bcb=_2bc9.charAt(14);
var _2bcc=16;
var _2bcd=parseInt(_2bcb,_2bcc);
return _2bcd;
};
dojox.uuid.getNode=function(_2bce){
var _2bcf="dojox.uuid.getNode() was not passed a TIME_BASED UUID.";
dojox.uuid.assert(dojox.uuid.getVersion(_2bce)==dojox.uuid.version.TIME_BASED,_2bcf);
_2bce=_2bce.toString();
var _2bd0=_2bce.split("-");
var _2bd1=_2bd0[4];
return _2bd1;
};
dojox.uuid.getTimestamp=function(_2bd2,_2bd3){
var _2bd4="dojox.uuid.getTimestamp() was not passed a TIME_BASED UUID.";
dojox.uuid.assert(dojox.uuid.getVersion(_2bd2)==dojox.uuid.version.TIME_BASED,_2bd4);
_2bd2=_2bd2.toString();
if(!_2bd3){
_2bd3=null;
}
switch(_2bd3){
case "string":
case String:
return dojox.uuid.getTimestamp(_2bd2,Date).toUTCString();
break;
case "hex":
var _2bd5=_2bd2.split("-");
var _2bd6=_2bd5[0];
var _2bd7=_2bd5[1];
var _2bd8=_2bd5[2];
_2bd8=_2bd8.slice(1);
var _2bd9=_2bd8+_2bd7+_2bd6;
dojox.uuid.assert(_2bd9.length==15);
return _2bd9;
break;
case null:
case "date":
case Date:
var _2bda=3394248;
var _2bdb=16;
var _2bdc=_2bd2.split("-");
var _2bdd=parseInt(_2bdc[0],_2bdb);
var _2bde=parseInt(_2bdc[1],_2bdb);
var _2bdf=parseInt(_2bdc[2],_2bdb);
var _2be0=_2bdf&4095;
_2be0<<=16;
_2be0+=_2bde;
_2be0*=4294967296;
_2be0+=_2bdd;
var _2be1=_2be0/10000;
var _2be2=60*60;
var _2be3=_2bda;
var _2be4=_2be3*_2be2;
var _2be5=_2be4*1000;
var _2be6=_2be1-_2be5;
var _2be7=new Date(_2be6);
return _2be7;
break;
default:
dojox.uuid.assert(false,"dojox.uuid.getTimestamp was not passed a valid returnType: "+_2bd3);
break;
}
};
}
if(!dojo._hasResource["dojox.uuid"]){
dojo._hasResource["dojox.uuid"]=true;
dojo.provide("dojox.uuid");
}
if(!dojo._hasResource["dojox.uuid.Uuid"]){
dojo._hasResource["dojox.uuid.Uuid"]=true;
dojo.provide("dojox.uuid.Uuid");
dojox.uuid.Uuid=function(input){
this._uuidString=dojox.uuid.NIL_UUID;
if(input){
dojox.uuid.assert(dojo.isString(input));
this._uuidString=input.toLowerCase();
dojox.uuid.assert(this.isValid());
}else{
var _2be9=dojox.uuid.Uuid.getGenerator();
if(_2be9){
this._uuidString=_2be9();
dojox.uuid.assert(this.isValid());
}
}
};
dojox.uuid.Uuid.compare=function(_2bea,_2beb){
var _2bec=_2bea.toString();
var _2bed=_2beb.toString();
if(_2bec>_2bed){
return 1;
}
if(_2bec<_2bed){
return -1;
}
return 0;
};
dojox.uuid.Uuid.setGenerator=function(_2bee){
dojox.uuid.assert(!_2bee||dojo.isFunction(_2bee));
dojox.uuid.Uuid._ourGenerator=_2bee;
};
dojox.uuid.Uuid.getGenerator=function(){
return dojox.uuid.Uuid._ourGenerator;
};
dojox.uuid.Uuid.prototype.toString=function(){
return this._uuidString;
};
dojox.uuid.Uuid.prototype.compare=function(_2bef){
return dojox.uuid.Uuid.compare(this,_2bef);
};
dojox.uuid.Uuid.prototype.isEqual=function(_2bf0){
return (this.compare(_2bf0)==0);
};
dojox.uuid.Uuid.prototype.isValid=function(){
return dojox.uuid.isValid(this);
};
dojox.uuid.Uuid.prototype.getVariant=function(){
return dojox.uuid.getVariant(this);
};
dojox.uuid.Uuid.prototype.getVersion=function(){
if(!this._versionNumber){
this._versionNumber=dojox.uuid.getVersion(this);
}
return this._versionNumber;
};
dojox.uuid.Uuid.prototype.getNode=function(){
if(!this._nodeString){
this._nodeString=dojox.uuid.getNode(this);
}
return this._nodeString;
};
dojox.uuid.Uuid.prototype.getTimestamp=function(_2bf1){
if(!_2bf1){
_2bf1=null;
}
switch(_2bf1){
case "string":
case String:
return this.getTimestamp(Date).toUTCString();
break;
case "hex":
if(!this._timestampAsHexString){
this._timestampAsHexString=dojox.uuid.getTimestamp(this,"hex");
}
return this._timestampAsHexString;
break;
case null:
case "date":
case Date:
if(!this._timestampAsDate){
this._timestampAsDate=dojox.uuid.getTimestamp(this,Date);
}
return this._timestampAsDate;
break;
default:
dojox.uuid.assert(false,"The getTimestamp() method dojox.uuid.Uuid was passed a bogus returnType: "+_2bf1);
break;
}
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.PageCreate"]){
dojo._hasResource["quickr.share.wiki.scenes.PageCreate"]=true;
dojo.provide("quickr.share.wiki.scenes.PageCreate");
dojo.declare("quickr.share.wiki.scenes.PageCreate",[quickr.share.scenes.AsyncScene],{defaultSearchScope:"thiswiki",constructor:function constructor(app,_2bf3){
this.app=app;
this.wikiLabel=_2bf3.wikiLabel;
this.nls=app.nls;
this.userId=_2bf3.userId=app.authenticatedUser?app.authenticatedUser.id:null;
this.sceneInfo=_2bf3;
this.currentTags=[];
this.tagStore=app.getTagTypeAheadStore();
this.currentDraftId=_2bf3.draftId;
this.draftId=_2bf3.draftId;
this.saveAndClose=false;
this.parentList=[];
this.pageId=_2bf3.parameters.pageId;
this.rel=_2bf3.parameters.rel;
this.isDraft=false;
this.newPageName=null;
},begin:function(_2bf4){
if(_2bf4&&_2bf4.navStore&&_2bf4.wikiLabel==this.wikiLabel){
this.navStore=_2bf4.navStore;
}else{
this.navStore=null;
}
if(!_2bf4||(_2bf4.declaredClass=="quickr.share.wiki.scenes.WikiPage"||_2bf4.declaredClass=="quickr.share.wiki.scenes.ConfirmNewPage")){
if(_2bf4){
this.parentList=_2bf4.parents;
}else{
if(dojo.cookie("pvp")){
this.parentList=dojo.fromJson(dojo.cookie("pvp"));
if(this.rel=="sibling"){
this.parentId=this.parentList.length>1?this.parentList[this.parentList.length-2]:null;
}else{
if(dojo.cookie("pvc")){
this.parentId=dojo.cookie("pvc");
}
}
dojo.cookie("pvc",null,{path:"/"});
dojo.cookie("pvp",null,{path:"/"});
}
}
if(this.rel=="root"){
this.parent=null;
this.parentId=null;
this.parentList=[];
}else{
if(this.rel=="sibling"){
this.parentList.pop();
if(this.parentList.length>0){
this.parent=this.parentList[this.parentList.length-1];
this.parentId=this.parentList[this.parentList.length-1].id||this.parentList[this.parentList.length-1].getId();
}else{
this.parent=null;
this.parentId=null;
}
}else{
if(_2bf4){
if(_2bf4.declaredClass=="quickr.share.wiki.scenes.ConfirmNewPage"){
this.newPageName=_2bf4.pageName;
if(this.parentList.length>0){
this.parent=this.parentList[this.parentList.length-1];
this.parentId=this.parentList[this.parentList.length-1].getId();
}
}else{
this.parent=_2bf4.current;
this.parentId=_2bf4.pageId;
}
}
}
}
}
if(!this.app.authenticatedUser){
this.showUnauthenticatedWarning();
return;
}
var _2bf5=[];
if(!this.currentDraftId&&!this.draftId){
this._createDraft();
}
if(this.draftId){
_2bf5.push([this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.currentDraftId,{inline:true}),"loadDraft"]);
}
if(this.wikiLabel){
_2bf5.push([this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true}),"loadWiki"]);
}
if(_2bf5.length>0){
this.request(_2bf5);
}else{
this.show();
}
},loadWiki:function(_2bf6,_2bf7){
var error;
if(_2bf6 instanceof Error||!_2bf6){
var code=quickr.share.util.getAtomErrorCode(_2bf6,_2bf7);
if(code=="unauthenticated"){
error={type:"unauthenticated"};
}else{
if(code=="AccessDenied"){
error={type:"unauthorized",perm:"View"};
}else{
error={type:"user"};
}
}
}else{
var wiki=this.wiki=new quickr.share.wiki.bean.Wiki(_2bf6.documentElement);
var _2bfb=wiki.getPermissions();
if(!(_2bfb&&_2bfb.AddChild)){
error={type:"unauthorized",perm:"AddChild"};
}
}
return error;
},loadDraft:function(_2bfc,_2bfd){
var error;
if(_2bfc instanceof Error){
error={type:"page"};
}else{
this.isDraft=true;
var _2bff;
if(quickr.util.dom.isNamedNS(_2bfc.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2c00=quickr.share.util.getChildElementAttribute(_2bfc.documentElement,"category","term");
if(_2c00=="draft"){
_2bff=new quickr.share.bean.Draft(_2bfc.documentElement);
}
}
if(_2bff){
this.document=_2bff;
this.pageId=_2bff.getName();
var _2c01=quickr.share.util.getElementsByTagNameNS(_2bff.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
this.wikiTitle=quickr.share.util.getChildElementTextContentNS(_2c01,"libraryTitle",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
this.wikiLabel=quickr.share.util.getChildElementTextContentNS(_2c01,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
this.libraryId=quickr.share.util.getChildElementTextContentNS(_2c01,"libraryUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
this.parentId=quickr.share.util.getChildElementTextContentNS(_2bff.e,"parentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadWiki),sync:true});
}else{
error={type:"page"};
}
}
return error;
},show:function(){
var d=this.app.document;
var _2c04=this.app.authenticatedUser;
var _2c05=null;
d.title=this.nls.PAGEEDIT.CREATE_PAGE;
quickr.share.wiki.scenes.applyHomeTemplate(d,_2c04,this.app,this.app.routes,{defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.applyPlaceBar(d,this.document,_2c04,this.user,this.wiki.getTitle(),this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.PageCreate.render(d,this.document,_2c04,this.user,this.app,this.app.routes,this);
d.body.style.visibility="visible";
},showError:function(){
var d=this.app.document;
d.title=dojo.string.substitute(this.nls.WINDOWTITLE.PAGEERROR,[this.user?this.user.name:this.userId]);
quickr.share.scenes.applyGenericError(this.app,this.nls.ERROR_IN_APP_TITLE,this.nls.ERROR_IN_APP_MESSAGES,[[dojo.string.substitute(this.nls.DOCUMENTCONTENT.BROWSE_OTHER,[user.name]),this.app.routes.getUserChannelUrl(user.id)]]);
d.body.style.visibility="visible";
},showUnauthorizedWarning:function(err){
var app=this.app;
var _2c09=[];
if(err&&err.perm&&err.perm!="View"){
_2c09=[[app.nls.APP.ERRORS.CANTCREATEPAGE.ACT,app.routes.getWikiPageUrl(this.wikiLabel,this.pageId)]];
}
quickr.share.scenes.applyGenericWarning(app,app.nls.APP.ERRORS.CANTCREATEPAGE.TITLE,app.nls.APP.ERRORS.CANTCREATEPAGE.MESSAGES,_2c09);
},showUnauthenticatedWarning:function(){
var app=this.app;
quickr.share.wiki.scenes.showUnauthenticatedWarning(app);
},onRequestsCompleted:function(_2c0b){
if(dojo.some(_2c0b,function(e){
return e.type=="unauthorized";
})){
this.showUnauthorizedWarning(dojo.filter(_2c0b,function(e){
return e.type=="unauthorized";
})[0]);
}else{
if(dojo.some(_2c0b,function(e){
return e.type=="unauthenticated";
})){
this.showUnauthenticatedWarning();
}else{
if(_2c0b.length>0){
this.showError(_2c0b[0]);
}else{
this.show();
}
}
}
},onRequestCompleted:function(error){
return (error.type=="unauthorized");
},end:function(_2c10){
this.cancelRequests();
if(this.editor){
this.editor.destroy();
}
this.editor=null;
this.tagStore=null;
if(this.tagCombo){
quickr.share.util.destroy(this.tagCombo);
this.tagCombo=null;
}
},trimPagename:function(_2c11){
var el=this.title;
var _2c13;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.FILENAME_LENGTH);
if(i!=-1){
_2c13=el.value.substring(0,i);
if(_2c11){
el.value=_2c13;
}
}
if(_2c11){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
return _2c13;
},fixFilenameCharacters:function(){
var el=this.title;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
},validatePagename:function(){
var el=this.title;
var d=document;
var valid=true;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.FILENAME_LENGTH)){
var _2c19=[d.createTextNode(this.nls.PAGEEDIT.ERROR_NAME_TOO_LONG)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.trimPagename,true));
a.appendChild(d.createTextNode(this.nls.PAGEEDIT.ERROR_SHORTEN_PAGE_NAME));
_2c19.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_2c19);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
quickr.share.validation.INVALID_FILENAME_CHARS.lastIndex=0;
var _2c19=[d.createTextNode(this.nls.PAGEEDIT.WARN_INVALID_CHARS_IN_NAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixFilenameCharacters");
a.appendChild(d.createTextNode(this.nls.PAGEEDIT.FIX_INVALID_CHARS_IN_NAME));
_2c19.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_2c19);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
return valid;
},_savePage:function(opt){
var _2c1c=opt?opt.makeDraft:null;
var sync=opt?opt.sync:null;
quickr.share.validation.removeFormErrors(this.form);
if(!_2c1c&&quickr.share.util.trim(this.title.value).length==0){
quickr.share.validation.addInlineErrorRow(this.title.parentNode.parentNode,this.title,"length",this.nls.PAGEEDIT.ERROR_EMPTY_NAME);
window.scrollTo(0,0);
this.title.focus();
return;
}
var _2c1e=null;
var _2c1f=null;
if(!this.validatePagename()){
if(_2c1c){
_2c1e=this.trimPagename(false);
}else{
window.scrollTo(0,0);
this.title.focus();
return;
}
}else{
this.pageName=this.title.value;
}
var _2c20;
var _2c21;
if(this.editor.isEditingWikiText()){
_2c20=this.editor.getWikiText();
_2c21="text/creole";
}else{
if(this.editor.isEditingHTMLSource()){
_2c20=this.editor.getXHTMLFromSource();
}else{
_2c20=this.editor.getXHTML();
}
_2c21="text/html";
_2c1f="";
}
if(this.currentTags.length>0){
this.tagStore.clear();
}
var tags=this.currentTags;
var _2c23=true;
var _2c24=false;
var _2c25=true;
var users=[];
var _2c27="";
var _2c28=quickr.share.wiki.util.getPagePostBodyWithParent(null,_2c20,_2c1e?_2c1e:this.title.value,"",null,_2c23,_2c24,_2c21,_2c1c,this.currentDraftId,this.parentId?this.parentId:null);
var _2c29=false;
var url;
if(_2c1c&&this.currentDraftId){
_2c29=true;
url=this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.currentDraftId);
url=quickr.share.util.rewriteUri(url,{source:"external"});
}else{
if(_2c1c){
url=this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.wikiLabel);
url=quickr.share.util.rewriteUri(url,{draft:true,source:"external"});
}else{
if(!_2c1c&&this.currentDraftId){
_2c29=true;
url=this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.currentDraftId);
url=quickr.share.util.rewriteUri(url,{submit:true,source:"external",tag:tags});
}else{
url=this.app.routes.getWikiDocumentsFeedServiceUrl(this.wikiLabel,{createVersion:true,source:"external",visibility:"public",tag:tags});
}
}
}
var opts={url:quickr.share.util.makeAtomUrlIESafe(url),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:_2c28,headers:{"Content-Type":"application/atom+xml; charset=\"UTF-8\""},handle:dojo.hitch(this,_2c1c?this._autoSaveComplete:this._saveComplete),sync:sync,preventLogin:_2c1c};
if(_2c29){
this.app.net.putXml(opts);
}else{
this.app.net.postXml(opts);
}
},_createDraft:function(){
this.isInitialAutosave=true;
var _2c2c=true;
var sync=true;
var _2c2e=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+"<div></div>";
var _2c2f="text/html";
var _2c30="";
var tags=this.currentTags;
var _2c32=true;
var _2c33=false;
var _2c34=true;
var _2c35=null;
var _2c30=null;
var users=[];
var _2c37="";
var _2c38=quickr.share.wiki.util.getPagePostBodyWithParent(null,_2c2e,this.app.nls.CREATE_PAGE.ACTION,"",null,_2c32,_2c33,_2c2f,true,this.currentDraftId,this.parentId?this.parentId:null);
var url=this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.wikiLabel);
url=quickr.share.util.rewriteUri(url,{draft:true,source:"external"});
var opts={url:quickr.share.util.makeAtomUrlIESafe(url),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:_2c38,headers:{"Content-Type":"application/atom+xml; charset=\"UTF-8\""},handle:dojo.hitch(this,this._autoSaveComplete),sync:sync,preventLogin:_2c2c};
this.app.net.postXml(opts);
},onerror:function(error){
if(typeof error=="string"){
error={code:error};
}
if(error.code=="ItemExists"){
quickr.share.wiki.validation.setFormError(this.form,this.nls.CONTENT.CREATE_PAGE_EXISTS_ERROR);
}else{
if(error.code=="QuotaViolation"){
var _2c3c=quickr.share.util.parseInt(error.uploadSize-(error.libraryQuota-error.librarySize),"??");
quickr.share.wiki.validation.setFormError(this.form,dojo.string.substitute(this.nls.PAGECREATE.ERROR_QUOTA_VIOLATION,[quickr.share.util.formatSize(_2c3c)]));
}else{
if(error.code=="AccessDenied"){
quickr.share.wiki.validation.setFormError(this.form,this.nls.PAGECREATE.ERROR_ACCESS_DENIED);
}else{
if(error.code=="InvalidTagCharacters"){
quickr.share.wiki.validation.setFormError(this.form,error.message);
}else{
if(error.code=="cancel"){
quickr.share.wiki.validation.setFormError(this.form,this.nls.PAGECREATE.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
quickr.share.wiki.validation.setFormError(this.form,this.nls.PAGECREATE.ERROR_TIMEOUT);
}else{
if(error.code=="unauthenticated"){
quickr.share.wiki.validation.setFormError(this.form,this.nls.PAGECREATE.ERROR_NOT_LOGGED_IN);
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this.nls.PAGECREATE.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxPageSize)]);
quickr.share.wiki.validation.setFormError(this.form,text);
}else{
quickr.share.wiki.validation.setFormError(this.form,this.nls.CONTENT.CREATE_PAGE_ERROR);
}
}
}
}
}
}
}
}
window.scrollTo(0,0);
},onautosaveerror:function(_2c3e,_2c3f){
this.editor.updateEditorInfoArea(this.app.document.createTextNode(this.nls.AUTOSAVE.FAILED));
},onsuccess:function(_2c40){
this._stopAutoSaveTimer();
this.isTitleEdited=false;
this.isTitleEditedSinceLastSave=false;
this.isDescriptionEdited=false;
this.isDescriptionEditedSinceLastSave=false;
this.editor.resetIsDirty();
this.highlightItems={};
this.highlightItems[_2c40.getId()]=true;
if(this.saveAndClose){
this.app.navigate(this.app.routes.getWikiPageUrl(this.wikiLabel,_2c40.getLabel(),null));
}else{
this.app.navigate(this.app.routes.getWikiPageEditUrl(this.wikiLabel,this.title.value));
}
},_saveComplete:function(_2c41,_2c42){
var error=quickr.share.util.getAtomError(_2c41,_2c42);
if(error){
this.onerror(error);
}else{
if(this.currentDraftId){
if(this.app.resetUnsavedChanges){
this.app.resetUnsavedChanges();
}
this.currentDraftId=null;
}
var page=new quickr.share.bean.Page(_2c41.documentElement);
this.onsuccess(page);
}
},onnavigate:function(){
if(this.editor){
if(!this.isLoggedOut&&(this.editor.isDirty()||this.isTitleEdited||this.isDescriptionEdited||(!this.isInitialAutosave&&this.currentDraftId))){
if(!confirm(this.nls.PAGEEDIT.NAVIGATE_AWAY_CHOICE)){
return true;
}else{
this._stopAutoSaveTimer();
this._deleteExistingDraft();
}
}else{
if(this.isInitialAutosave&&this.currentDraftId){
this._stopAutoSaveTimer();
this._deleteExistingDraft();
}
}
return false;
}
return false;
},_beforeLogout:function(){
if(this.editor){
if(this.editor.isDirty()||this.isTitleEdited||this.isDescriptionEdited){
if(confirm(this.nls.PAGEEDIT.NAVIGATE_AWAY_CHOICE)){
this._stopAutoSaveTimer();
this._deleteExistingDraft();
this.isLoggedOut=true;
this.app.logout();
}
}else{
this.app.logout();
}
}
},_deleteExistingDraft:function(){
var _2c45=this.draftId?this.draftId:this.currentDraftId;
if(_2c45){
var _2c46=new quickr.share.wiki.action.DiscardDraft(this.app,this);
_2c46.execute({id:_2c45,docAuthor:this.app.authenticatedUser},{doConfirm:false,libraryId:this.libraryId});
this.draftId=null;
this.currentDraftId=null;
this.editor.updateEditorInfoArea(this.app.document.createTextNode(""));
}
},_autoSave:function(){
this.onPauseAutoSaveTimer.stop();
if(!this._isAutoSaving){
this._isAutoSaving=true;
if(this.editor.isDirty()||this.editor.isDirtySinceLastSave()||this.isTitleEditedSinceLastSave||this.isDescriptionEditedSinceLastSave){
this._savePage({makeDraft:true});
if(this.isInitialAutosave==true){
this.isInitialAutosave=false;
}
}
}
},_startAutoSaveTimer:function(){
this.autoSaveTimer.start();
},_stopAutoSaveTimer:function(){
if(this.autoSaveTimer){
this.autoSaveTimer.stop();
}
if(this.onPauseAutoSaveTimer){
this.onPauseAutoSaveTimer.stop();
}
},_restartOnPauseAutoSaveTimer:function(){
this.onPauseAutoSaveTimer.stop();
this.onPauseAutoSaveTimer.start();
},_autoSaveComplete:function(_2c47,_2c48){
if(_2c47 instanceof Error||_2c47==null){
this.onautosaveerror(_2c47,_2c48);
}else{
var _2c49;
if(quickr.util.dom.isNamedNS(_2c47.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
_2c49=new quickr.share.bean.Draft(_2c47.documentElement);
if(_2c49){
this.currentDraftId=_2c49.getId();
if(!this.document){
this.document=_2c49;
}
if(this.editor){
this.editor.resetIsDirtySinceLastSave();
}
this.isTitleEditedSinceLastSave=false;
this.isDescriptionEditedSinceLastSave=false;
var df=new quickr.share.util.DateFormat(_2c49.getUpdated());
var _2c4b=df.formatByAge(this.app.nls.DATE.AUTOSAVED_SHORT);
var d=this.app.document;
var span=d.createElement("span");
span.appendChild(d.createTextNode(_2c4b+" "));
quickr.share.scenes.createHelpLink(this.app,span,"editpage.autosave");
if(this.editor){
this.editor.updateEditorInfoArea(span);
}
}else{
this.onautosaveerror(_2c47,_2c48);
}
}
}
this._isAutoSaving=false;
},_titleChanged:function(){
this.isTitleEdited=true;
this.isTitleEditedSinceLastSave=true;
this._restartOnPauseAutoSaveTimer();
},_descriptionChanged:function(){
this.isDescriptionEdited=true;
this.isDescriptionEditedSinceLastSave=true;
this._restartOnPauseAutoSaveTimer();
},createDraft:function(){
this._savePage({makeDraft:true,sync:true});
return this.currentDraftId;
},saveNoClose:function(opt){
this.saveAndClose=false;
this._savePage(opt);
},saveClose:function(opt){
this.saveAndClose=true;
this._savePage(opt);
}});
quickr.share.wiki.scenes.PageCreate.showWikiTextReference=function(scene){
if(scene.wikiTextReference){
scene.wikiTextReference.style.display="";
}
};
quickr.share.wiki.scenes.PageCreate.hideWikiTextReference=function(scene){
if(scene.wikiTextReference){
scene.wikiTextReference.style.display="none";
}
};
quickr.share.wiki.scenes.PageCreate.applyTags=function(d,el,doc,opt,scene){
var app=opt.app;
var span=d.createElement("span");
span.className="lotusMeta lotusLeft";
var _2c59=d.createElement("div");
span.appendChild(_2c59);
var _2c5a=scene.tagger=new quickr.share.wiki.widget.Tagger({id:"pageTags",currentHostTags:scene.currentTags,baseClass:"lotusTags lotusTiny",labelText:app.nls.CONTENT.TAGS_LABEL,editable:true,tags:[],docId:null,url:null,urlFeed:null,urlAllTags:app.routes.getTagServiceUrl(),tagStore:app.getTagTypeAheadStore(),renderPopup:dojo.hitch(null,quickr.share.scenes.applyGenericPopup,app),generateTagLink:dojo.hitch(null,quickr.share.scenes.generateTagLink,app,app.routes,scene.user?scene.user.id:null,{}),getCurrentHostTags:dojo.hitch(scene,quickr.share.wiki.scenes.PageCreate.getCurrentHostTags),ontagchange:dojo.hitch(scene,quickr.share.wiki.scenes.PageCreate.updateSceneTags),_strings:app.nls.TAGGER,net:app.net},_2c59);
el.appendChild(span);
};
quickr.share.wiki.scenes.PageCreate.getCurrentHostTags=function(){
return this.currentTags;
};
quickr.share.wiki.scenes.PageCreate.updateSceneTags=function(_2c5b){
this.currentTags=_2c5b||[];
};
quickr.share.wiki.scenes.PageCreate.applyActions=function(d,el,doc,opt,_2c60,user,_2c62){
var app=opt.app;
var div=d.createElement("div");
div.className="lotusActionBar lotusBtnContainer";
div.style.width="99%";
div.style.bottom="-10px";
var span=d.createElement("span");
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("a");
dojo.connect(a,"onclick",dojo.hitch(_2c62,_2c62.saveNoClose));
dojo.connect(a,"onclick",dojo.hitch(_2c62,_2c62._stopAutoSaveTimer));
a.href="javascript:;";
a.appendChild(d.createTextNode(app.nls.PAGEEDIT.SAVE_LABEL));
span.appendChild(a);
div.appendChild(span);
var span=d.createElement("span");
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("a");
dojo.connect(a,"onclick",dojo.hitch(_2c62,_2c62.saveClose));
a.href="javascript:;";
a.appendChild(d.createTextNode(app.nls.PAGEEDIT.SAVE_AND_CLOSE_LABEL));
span.appendChild(a);
div.appendChild(span);
var span=d.createElement("span");
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,app,_2c60.getWikiUrl(_2c62.wikiLabel));
a.href="javascript:;";
a.appendChild(d.createTextNode(app.nls.PAGEEDIT.CANCEL_LABEL));
span.appendChild(a);
div.appendChild(span);
el.insertBefore(div,el.firstChild);
};
quickr.share.wiki.scenes.PageCreate.applyBreadcrumbs=function(d,el,opt,_2c6a){
var _2c6b=opt.scene.parentList;
_2c6b.push(opt.app.nls.PAGECREATE.BREADCRUMBS.LAST);
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,el,opt.scene.parentList,opt.app,opt.scene);
};
quickr.share.wiki.scenes.PageCreate.applyLocation=function(d,el,doc,opt,scene){
var app=opt.app;
if(!scene.parent){
return;
}
var div=d.createElement("div");
div.className="lotusMeta wikiPageTable";
div.appendChild(d.createTextNode(dojo.string.substitute(app.nls.WILLBECHILDOF,[scene.parent.getLabel()])));
el.appendChild(div);
};
quickr.share.wiki.scenes.PageCreate.applyTitle=function(d,el,doc,opt,_2c77,user,_2c79){
var user=opt.user;
var app=opt.app;
var scene=opt.scene;
var table=d.createElement("table");
table.cellPadding="0";
table.cellSpacing="0";
table.border="0";
table.summary="";
table.style.width="99%";
table.className="wikiPageTable";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
var title=_2c79.title=d.createElement("input");
title.type="text";
title.id="name";
title.className="lotusText wikiPageTitle";
title.style.width="350px";
if(_2c79.pageId){
title.value=_2c79.pageId;
}else{
if(_2c79.newPageName!=null){
title.value=_2c79.newPageName;
}else{
title.value=app.nls.CREATE_PAGE.ACTION;
}
}
dojo.connect(title,"onchange",_2c79,"validatePagename");
dojo.connect(title,"onkeypress",dojo.hitch(_2c79,_2c79._titleChanged));
td.appendChild(title);
tr.appendChild(td);
tbody.appendChild(tr);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
var div=d.createElement("div");
div.className="lotusHeader";
div.style.borderTop="1px solid rgb(204,204,204)";
div.style.marginTop="4px";
div.style.paddingTop="4px";
quickr.share.wiki.scenes.PageCreate.applyTags(d,div,doc,opt,_2c79);
td.appendChild(div);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
el.appendChild(table);
};
quickr.share.wiki.scenes.PageCreate.render=function(d,_2c83,_2c84,user,app,_2c87,_2c88){
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="documentsummary"){
this.favoritePlaces=app.scene.favoritePlaces;
if(this.favoritePlaces){
dojo.connect(this.favoritePlaces,"selectUser",this.favoritePlaces,"hideUser");
}
while(c.firstChild){
c.removeChild(c.firstChild);
}
var opt={app:_2c88.app,routes:_2c88.app.routes,scene:_2c88,user:_2c84,document:_2c83,documentId:_2c83.getId(),isNewPage:true};
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var bdiv=d.createElement("div");
bdiv.id="wikiBreadcrumbs";
el.appendChild(bdiv);
if(opt.scene.isDraft){
var _2c8d=dojox.uuid.isValid(opt.scene.parentId);
if(_2c8d){
quickr.share.wiki.scenes.AbstractPage.createBreadcrumbs(opt.scene.parentId,opt.scene.libraryId,d,opt.app,opt.scene);
}else{
if(!opt.scene.parentId){
var _2c8e=[];
_2c8e.push(opt.scene.pageId);
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,bdiv,_2c8e,opt.app,opt.scene);
}else{
var _2c8e=opt.scene.parentList;
_2c8e.push(opt.scene.pageId);
quickr.share.wiki.scenes.AbstractPage.applyBreadcrumbs(d,bdiv,opt.scene.parentList,opt.app,opt.scene);
}
}
}else{
quickr.share.wiki.scenes.PageCreate.applyBreadcrumbs(d,bdiv,opt,_2c88);
}
var form=_2c88.form=d.createElement("form");
form.className="lotusForm";
form.onsubmit=function(e){
dojo.stopEvent(e);
};
var _2c91=d.createElement("fieldset");
var div=d.createElement("div");
div.className="wikiHeader";
quickr.share.wiki.scenes.PageCreate.applyTitle(d,div,_2c83,opt,_2c87,user,_2c88);
_2c91.appendChild(div);
var table=d.createElement("table");
table.cellPadding="0";
table.cellSpacing="0";
table.border="0";
table.summary="";
table.style.width="99%";
table.className="wikiPageTable";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
var _2c97=d.createElement("div");
_2c88.editor=quickr.share.wiki.util.EditorFactory.newEditor(null,_2c88.userId,app,{wikiTitle:_2c88.wikiLabel,libraryId:_2c88.wiki.getId(),getCurrentDraftId:dojo.hitch(_2c88,_2c88.createDraft)});
dojo.connect(_2c88.editor,"onChangeToWikiText",dojo.hitch(null,quickr.share.wiki.scenes.PageCreate.showWikiTextReference,_2c88));
dojo.connect(_2c88.editor,"onChangeToRichText",dojo.hitch(null,quickr.share.wiki.scenes.PageCreate.hideWikiTextReference,_2c88));
dojo.connect(_2c88.editor,"onChangeToPreview",dojo.hitch(null,quickr.share.wiki.scenes.PageCreate.hideWikiTextReference,_2c88));
td.appendChild(_2c97);
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2c91.appendChild(table);
form.appendChild(_2c91);
el.appendChild(form);
c.appendChild(el);
_2c88.editor.render(d,_2c97,opt,_2c83?_2c83.getContent():null);
var nel=dojo.query(".lotusTabContainer",_2c97)[0];
quickr.share.wiki.scenes.PageCreate.applyActions(d,nel,_2c83,opt,_2c87,user,_2c88);
var _2c99=_2c88.autoSaveTimer=new dojox.timing.Timer(quickr.share.config.autosave.regularTimerLength);
dojo.connect(_2c99,"onTick",_2c88,"_autoSave");
_2c88._startAutoSaveTimer();
var _2c9a=_2c88.onPauseAutoSaveTimer=new dojox.timing.Timer(quickr.share.config.autosave.onPauseTimerLength);
dojo.connect(_2c9a,"onTick",_2c88,"_autoSave");
dojo.connect(_2c88.editor,"onContentChange",dojo.hitch(_2c88,_2c88._restartOnPauseAutoSaveTimer));
if(_2c88.title){
_2c88.title.select();
_2c88.title.focus();
}
}
};
}
if(!dojo._hasResource["quickr.share.wiki.scenes.WikiPageEdit"]){
dojo._hasResource["quickr.share.wiki.scenes.WikiPageEdit"]=true;
dojo.provide("quickr.share.wiki.scenes.WikiPageEdit");
dojo.declare("quickr.share.wiki.scenes.WikiPageEdit",[quickr.share.scenes.AsyncScene],{editor:null,editorLocation:null,constructor:function constructor(app,_2c9c){
this.app=app;
this.nls=app.nls;
this.baseWidgets=["searchFor","userWatchlist"];
this.widgets=[];
this.expanded={};
this.wikiLabel=_2c9c.wikiLabel;
this.pageId=_2c9c.pageId;
this.userId=app.authenticatedUser?app.authenticatedUser.id:null;
this.draftId=_2c9c.draftId;
this.pageName=_2c9c.pageId;
this.originalPageName=_2c9c.pageId;
this.versionId=_2c9c.versionId;
this.activeComment=quickr.share.util.first(_2c9c.parameters.comment);
this.compare=_2c9c.compare;
this.toVersion=_2c9c.parameters.to;
this.fromVersion=_2c9c.parameters.from;
this.parentList=[];
this.title=app.nls.PAGEEDIT.BREADCRUMBS.LAST;
this.saveAndClose=false;
this.forceNotification=quickr.share.util.first(_2c9c.parameters.unsubscribe)=="true"?false:(quickr.share.util.first(_2c9c.parameters.subscribe)=="true"?true:null);
if(!this.activeComment&&!(this.forceNotification==true||this.forceNotification==false)&&!this.compare){
this.section=quickr.share.util.first(_2c9c.parameters.section);
}
},begin:function(_2c9d){
if(_2c9d&&_2c9d.navStore&&_2c9d.wikiLabel==this.wikiLabel){
this.navStore=_2c9d.navStore;
}else{
this.navStore=null;
}
if(!this.app.authenticatedUser){
this.showUnauthenticatedWarning();
return;
}
if(_2c9d&&_2c9d.declaredClass=="quickr.share.wiki.scenes.WikiPage"){
this.parentList=_2c9d.parents;
}else{
if(_2c9d&&_2c9d.declaredClass=="quickr.share.wiki.scenes.WikiPageEdit"){
this.parentList=_2c9d.parentList;
}
}
if((this.forceNotification==true||this.forceNotification==false)&&!this.app.authenticatedUser){
this.showAuthRequiredError(this.app.nls.PAGECONTENT.ERRORS.AUTH_REQUIRED_ANON);
return;
}
this.document=null;
this.user=null;
var _2c9e=[];
if(this.app.authenticatedUser&&this.userId==this.app.authenticatedUser.id){
this.user=this.app.authenticatedUser;
}else{
if(_2c9d&&_2c9d.user&&_2c9d.user.id==this.userId){
this.user=_2c9d.user;
}
}
if(_2c9d&&_2c9d.declaredClass==this.declaredClass&&(_2c9d.wikiLabel==this.wikiLabel)&&((_2c9d.pageId&&_2c9d.pageId==this.pageId)||(_2c9d.pageName&&_2c9d.pageName==this.pageName))){
this.expanded=_2c9d.expanded;
if(_2c9d.versionsSectionOpen&&!(_2c9d.versionReverted||_2c9d.saved)){
this.versions=_2c9d.versions;
this.versionsSectionOpen=true;
}
if(_2c9d.attachmentsSectionOpen){
this.attachments=_2c9d.attachments;
this.attachmentsSectionOpen=true;
}
if(_2c9d.comments){
this.comments=_2c9d.comments;
}
if(_2c9d.tagger){
this.tagger=_2c9d.tagger;
}
if(_2c9d.rater){
this.rater=_2c9d.rater;
}
if(_2c9d.notify){
this.notify=_2c9d.notify;
}
if(_2c9d.downloads){
this.downloads=_2c9d.downloads;
}
}
if(!this.document&&!this.draftId){
var opts={fetchAcl:true,includeRecommendation:true,includeTags:true,inline:true,includeWorkingDraftInfo:true,dontLogDownload:true};
var url=this.versionId?this.app.routes.getVersionInfoServiceUrl(this.wikiLabel,this.pageId?this.pageId:this.pageName,this.versionId,opts):this.app.routes.getWikiPageInfoServiceUrl(this.wikiLabel,this.pageName?this.pageName:this.pageId,opts);
_2c9e.push([url,"loadDocument"]);
}
if(!this.comparison&&this.compare){
var url=this.app.routes.getWikiComparisonServiceUrl(this.pageId?this.pageId:this.pageName,this.toVersion,this.fromVersion);
_2c9e.push([url,"loadComparison"]);
}
if(!this.document&&this.draftId){
var opts={fetchAcl:true,inline:true,includeDocumentModifiedInfo:true,includeDocumentAuthorInfo:true};
var url=this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.draftId,opts);
_2c9e.push([url,"loadDraft"]);
}
if(this.wikiLabel){
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
_2c9e.push([url,"loadWiki"]);
}
if(_2c9e.length>0){
this.request(_2c9e);
}else{
this.show();
}
},loadWiki:function(_2ca1,_2ca2){
var error;
if(_2ca1 instanceof Error||!_2ca1){
var code=quickr.share.util.getAtomErrorCode(_2ca1,_2ca2);
if(code=="unauthenticated"){
error={type:"unauthenticated"};
}else{
if(code=="AccessDenied"){
error={type:"unauthorized",perm:"View"};
}else{
error={type:"user"};
}
}
}else{
var wiki=this.wiki=new quickr.share.wiki.bean.Wiki(_2ca1.documentElement);
var _2ca6=wiki.getPermissions();
if(!(_2ca6&&_2ca6.AddChild)){
error={type:"unauthorized",perm:"AddChild"};
}
}
return error;
},loadUser:function(_2ca7,_2ca8){
var error;
if(_2ca7 instanceof Error||!_2ca7||!_2ca7.items||_2ca7.items.length<1){
error={type:"user"};
}else{
var user=this.user=quickr.share.scenes.createUser(this.app,_2ca7.items[0]);
}
return error;
},loadDocument:function(_2cab,_2cac){
var error;
if(_2cab instanceof Error){
error={type:"page"};
error.code=quickr.share.util.getAtomErrorCode(_2cab,_2cac);
}else{
var _2cae;
var e=_2cab.documentElement;
if(quickr.util.dom.isNamedNS(e,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2cb0=quickr.share.util.getChildElementAttribute(e,"category","term");
if(_2cb0=="page"||(_2cb0=="version"&&this.versionId)){
_2cae=new quickr.share.bean.Page(e);
}
var _2cb1=quickr.share.util.getElementsByTagNameNS(_2cae.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
this.libraryId=quickr.share.util.getChildElementTextContentNS(_2cb1,"libraryUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
}
if(_2cae){
var _2cb2=_2cae.getPermissions();
if(!(_2cb2&&_2cb2.AddChild)){
error={type:"unauthorized"};
}else{
this.document=_2cae;
this.pageId=_2cae.getId();
this.pageName=_2cae.getName();
this.currentDraftId=_2cae.getDraftId();
}
}else{
error={type:"page"};
}
}
return error;
},loadDraft:function(_2cb3,_2cb4){
var error;
if(_2cb3 instanceof Error){
error={type:"page"};
}else{
var _2cb6;
if(quickr.util.dom.isNamedNS(_2cb3.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var _2cb7=quickr.share.util.getChildElementAttribute(_2cb3.documentElement,"category","term");
if(_2cb7=="draft"){
_2cb6=new quickr.share.bean.Draft(_2cb3.documentElement);
}
}
}
if(_2cb6){
this.document=_2cb6;
this.pageName=_2cb6.getName();
var _2cb8=quickr.share.util.getElementsByTagNameNS(_2cb6.e,"library",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE)[0];
this.wikiTitle=quickr.share.util.getChildElementTextContentNS(_2cb8,"libraryTitle",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
this.wikiLabel=quickr.share.util.getChildElementTextContentNS(_2cb8,"label",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
this.libraryId=quickr.share.util.getChildElementTextContentNS(_2cb8,"libraryUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
this.pageId=quickr.share.util.getChildElementTextContentNS(_2cb6.e,"documentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.loadWiki),sync:true});
}
return error;
},showUnauthenticatedWarning:function(){
var app=this.app;
quickr.share.wiki.scenes.showUnauthenticatedWarning(app);
},onRequestsCompleted:function(_2cbb){
if(dojo.some(_2cbb,function(e){
return e.type=="user";
})){
this.showUserError(dojo.filter(_2cbb,function(e){
return e.type=="user";
})[0]);
}else{
if(dojo.some(_2cbb,function(e){
return e.type=="unauthorized";
})){
this.showUnauthorizedWarning(dojo.filter(_2cbb,function(e){
return e.type=="unauthorized";
})[0]);
}else{
if(dojo.some(_2cbb,function(e){
return e.type=="page";
})){
this.showPageError(dojo.filter(_2cbb,function(e){
return e.type=="page";
})[0]);
}else{
if(dojo.some(_2cbb,function(e){
return e.type=="wikiConversion";
})){
this.showWikiConversionError(dojo.filter(_2cbb,function(e){
return e.type=="wikiConversion";
})[0]);
}else{
if(_2cbb.length>0){
this.showError(_2cbb[0]);
}else{
this.show();
}
}
}
}
}
},onRequestCompleted:function(error){
return (error.type=="unauthorized");
},show:function(){
var d=this.app.document;
var _2cc6=this.app.authenticatedUser;
var _2cc7=this.document;
if(this.draftId){
this.fileLastUpdated=_2cc7.getDocumentUpdated();
}else{
this.fileLastUpdated=_2cc7.getUpdated();
}
var app=this.app;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_2cc6?_2cc6.id:null)});
d.title=dojo.string.substitute(app.nls.WINDOWTITLE.WIKIPAGE,[this.wiki.getTitle()?this.wiki.getTitle():app.nls.PAGEEDIT.DRAFT,_2cc7.getTitle()]);
quickr.share.wiki.scenes.applyHomeTemplate(d,app.authenticatedUser,app,app.routes,{logout:dojo.hitch(this,this._beforeLogout),defaultSearchScope:this.defaultSearchScope});
quickr.share.wiki.scenes.WikiPageEdit.render(d,_2cc7,null,_2cc6,null,app,app.routes,this);
d.body.style.visibility="visible";
},showUserError:function(){
var d=this.app.document;
d.title=dojo.string.substitute(this.nls.WINDOWTITLE.PAGEERROR,[this.userId]);
quickr.share.scenes.applyGenericError(this.app,this.nls.CONTENT.USERERROR_TITLE,this.nls.CONTENT.USERERROR_MESSAGES,[[this.nls.USERSEARCH.ERROR_LINK,this.app.routes.getUserSearchUrl()]]);
d.body.style.visibility="visible";
},showPageError:function(error){
var app=this.app;
var _2ccc=app.routes;
var _2ccd=this.app.authenticatedUser;
var d=this.app.document;
var user=this.user;
var _2cd0=(_2ccd&&_2ccd.id==user.id);
d.title=dojo.string.substitute(this.nls.WINDOWTITLE.PAGEERROR,[user?user.name:this.userId]);
var _2cd1=[];
if(!_2ccd){
_2cd1.push([dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.ERRORS.LOGIN),this.app.getUrl(),"login"]);
}
var _2cd2=false;
var _2cd3=false;
var text=this.app.nls.PAGECONTENT.ERRORS.DEFAULT;
if(error){
if(error.code=="AccessDenied"){
if(!_2ccd){
text=this.app.nls.PAGECONTENT.ERRORS.ACCESS_DENIED_ANON;
_2cd3=true;
}else{
text=this.app.nls.PAGECONTENT.ERRORS.ACCESS_DENIED;
}
_2cd2=true;
}else{
if(error.code=="ItemNotFound"){
text=(_2cd0)?this.app.nls.PAGECONTENT.ERRORS.OWNER_NOT_FOUND:(_2ccd?this.app.nls.PAGECONTENT.ERRORS.NOT_FOUND:this.app.nls.PAGECONTENT.ERRORS.NOT_FOUND_ANON);
}
}
}
if(_2cd2){
quickr.share.scenes.applyGenericWarning(this.app,text.TITLE,text.MESSAGES,_2cd1);
}else{
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,_2cd1);
}
d.body.style.visibility="visible";
if(_2cd3){
this.clearBeforeNavigate=true;
this.app.login();
}
},showAuthRequiredError:function(text){
var app=this.app;
var d=app.document;
d.title=app.nls.WINDOWTITLE.LOGIN;
var _2cd8=[[dojo.string.substitute(app.nls.PAGECONTENT.ERRORS.LOGIN),app.getUrl(),"login"]];
var _2cd9=true;
var _2cda=true;
quickr.share.scenes.applyGenericWarning(app,text.TITLE,text.MESSAGES,_2cd8);
d.body.style.visibility="visible";
this.clearBeforeNavigate=true;
app.login();
},showWikiConversionError:function(error){
var app=this.app;
var _2cdd=app.routes;
var _2cde=this.app.authenticatedUser;
var d=this.app.document;
var user=this.user;
var _2ce1=(_2cde&&_2cde.id==user.id);
d.title=dojo.string.substitute(this.nls.WINDOWTITLE.PAGEERROR,[user?user.name:this.userId]);
var text=this.nls.VERSIONCOMPARISON.ERRORS.DEFAULT;
if(error.failed.length==2){
text=this.nls.VERSIONCOMPARISON.ERRORS.TWO;
text.MESSAGES=dojo.string.substitute(text.MESSAGES,[error.failed[0],error.failed[1]]);
}else{
text.MESSAGES=dojo.string.substitute(text.MESSAGES,[error.failed[0]]);
}
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,[[this.nls.BACK_TO_PAGE,this.app.routes.getPageSummaryUrl(user.id,this.document.getId())]]);
d.body.style.visibility="visible";
},showError:function(){
var _2ce3=this.app.authenticatedUser;
var d=this.app.document;
var user=this.user||{id:this.userId,name:this.userId};
d.title=dojo.string.substitute(this.nls.WINDOWTITLE.PAGEERROR,[user.name]);
quickr.share.scenes.applyGenericError(this.app,this.nls.ERROR_IN_APP_TITLE,this.nls.ERROR_IN_APP_MESSAGES,[[dojo.string.substitute(this.nls.DOCUMENTCONTENT.BROWSE_OTHER,[user.name]),this.app.routes.getUserChannelUrl(user.id)]]);
d.body.style.visibility="visible";
},end:function(_2ce6){
this.cancelRequests();
quickr.share.util.destroy(this.baseWidgets);
quickr.share.util.destroy(this.widgets);
quickr.share.util.destroy(this.actions);
if(this.editor){
this.editor.destroy();
}
this.widgets=this.actions=[];
quickr.share.util.destroy(this.deleteShareAction);
this.deleteShareAction=null;
quickr.share.util.destroy(this.changePropagationAction);
this.changePropagationAction=null;
},expand:function(s){
this.expanded[s]=true;
},collapse:function(s){
this.expanded[s]=false;
},onnavigate:function(){
if(this.editor){
if(!this.isLoggedOut&&(this.editor.isDirty()||this.isTitleEdited||this.isDescriptionEdited||this.draftId)){
if(!confirm(this.nls.PAGEEDIT.NAVIGATE_AWAY_CHOICE)){
return true;
}else{
this._stopAutoSaveTimer();
this._deleteExistingDraft();
}
}
return false;
}else{
return false;
}
},_beforeLogout:function(){
if(this.editor){
if(this.editor.isDirty()||this.isTitleEdited||this.isDescriptionEdited){
if(confirm(this.nls.PAGEEDIT.NAVIGATE_AWAY_CHOICE)){
this._stopAutoSaveTimer();
this._deleteExistingDraft();
this.isLoggedOut=true;
this.app.logout();
}
}else{
this.app.logout();
}
}else{
this.app.logout();
}
},_deleteExistingDraft:function(){
var _2ce9=this.draftId?this.draftId:this.currentDraftId;
if(_2ce9){
var _2cea=new quickr.share.wiki.action.DiscardDraft(this.app,this);
_2cea.execute({id:_2ce9,docAuthor:this.user},{doConfirm:false,libraryId:this.libraryId});
this.currentDraftId=null;
this.draftId=null;
this.editor.updateEditorInfoArea(this.app.document.createTextNode(""));
}
},_deleteFile:function(title,_2cec,e){
if(confirm(dojo.string.substitute(this.nls.CONTENT.DELETECONFIRM,[title]))){
this.app.net.deleteXml({url:_2cec,handle:dojo.hitch(this,this._deleteComplete)});
}
if(e){
dojo.stopEvent(e);
}
},_autoSave:function(){
this.onPauseAutoSaveTimer.stop();
if(!this._isAutoSaving){
this._isAutoSaving=true;
if(this.editor.isDirty()||this.editor.isDirtySinceLastSave()||this.isTitleEditedSinceLastSave||this.isDescriptionEditedSinceLastSave){
this._savePage({makeDraft:true});
}
}
},_startAutoSaveTimer:function(){
this.autoSaveTimer.start();
},_stopAutoSaveTimer:function(){
this.autoSaveTimer.stop();
this.onPauseAutoSaveTimer.stop();
},_restartOnPauseAutoSaveTimer:function(){
this.onPauseAutoSaveTimer.stop();
this.onPauseAutoSaveTimer.start();
},_deleteComplete:function(_2cee,_2cef){
if(_2cee instanceof Error){
this.ondeleteerror();
}else{
this.ondeletesuccess();
}
},ondeletesuccess:function(){
this.app.navigate(this.app.routes.getUserChannelUrl(this.user.id));
},ondeleteerror:function(){
alert(this.nls.CONTENT.DELETEERROR);
},_cancelPage:function(e){
if(e){
dojo.stopEvent(e);
}
this.autoSaveTimer.stop();
if(this.concurrentModification){
this.document=null;
}
if(this.draftId){
this.app.navigate(this.app.routes.getWikiPageUrl(this.wikiLabel,null,null));
}else{
this.app.navigate(this.app.routes.getWikiPageUrl(this.app.scene.wikiLabel,this.app.scene.originalPageName,null));
}
},onediterror:function(error){
if(typeof error=="string"){
error={code:error};
}
if(error.code=="AccessDenied"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.ERROR_ACCESS_DENIED);
}else{
if(error.code=="QuotaViolation"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.ERROR_QUOTA_VIOLATION);
}else{
if(error.code=="ItemNotFound"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.ERROR_NOT_FOUND);
}else{
if(error.code=="ItemExists"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.CONTENT.CREATE_PAGE_EXISTS_ERROR);
}else{
if(error.code=="cancel"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.ERROR_CANCEL);
}else{
if(error.code=="timeout"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.ERROR_TIMEOUT);
}else{
if(error.code=="unauthenticated"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.ERROR_NOT_LOGGED_IN);
}else{
if(error.code=="ContentMaxSizeExceeded"){
var text=dojo.string.substitute(this.nls.PAGEEDIT.ERROR_MAX_CONTENT_SIZE,[quickr.share.util.formatSize(quickr.share.config.services.maxPageSize)]);
quickr.share.wiki.validation.setFormError(this.app.document,text);
}else{
if(error.code=="ConcurrentModification"){
var date=error.date;
var user=error.user;
this.fileLastUpdated=date;
var d=document;
var span=d.createElement("span");
var text=new quickr.share.util.DateFormat(date).format(this.nls.PAGEEDIT.ERROR_CONCURRENT_MODIFICATION);
var app=this.app;
quickr.share.util.html.substitute(d,span,text,{user:function(){
var a=d.createElement("a");
a.appendChild(d.createTextNode(user.name));
quickr.share.scenes.generateUserLink(app,app.routes,user,a);
return a;
}});
quickr.share.wiki.validation.setFormError(this.app.document,span);
this.concurrentModification=true;
}else{
if(error.code=="InvalidXhtml"){
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.PAGEEDIT.INVALID_XHTML);
}else{
quickr.share.wiki.validation.setFormError(this.app.document,this.nls.CONTENT.EDIT_PAGE_ERROR);
}
}
}
}
}
}
}
}
}
}
window.scrollTo(0,0);
},generateIfMatchETag:function(_2cf9){
if(!this.concurrentModification){
var _2cfa=this.draftId?this.document.getDocumentUpdated().getTime():this.document.getUpdated().getTime();
return _2cf9+":modified="+_2cfa;
}else{
return _2cf9;
}
},oneditsuccess:function(_2cfb){
if(this.saveAndClose){
this.app.navigate(this.app.routes.getWikiPageUrl(this.app.scene.wikiLabel,this.app.scene.pageName,null));
}else{
this.app.navigate(this.app.routes.getWikiPageEditUrl(this.app.scene.wikiLabel,this.app.scene.pageName));
}
},_savePage:function(opt){
var _2cfd=opt?opt.makeDraft:null;
var sync=opt?opt.sync:null;
quickr.share.validation.removeFormErrors(this.app.document);
if(!_2cfd&&quickr.share.util.trim(this.pageTitle?this.pageTitle.value:this.pageName).length==0){
quickr.share.validation.addInlineErrorRow(this.pageTitle.parentNode.parentNode,this.pageTitle,"length",this.nls.PAGEEDIT.ERROR_EMPTY_NAME);
window.scrollTo(0,0);
this.pageTitle.focus();
return;
}
if(this.originalPageName==null){
this.originalPageName=this.pageName.replace(/\+/g,"_");
}
var _2cff=null;
if(this.pageTitle){
if(!this.validatePagename()){
if(_2cfd){
_2cff=this.trimPagename(false);
}else{
window.scrollTo(0,0);
this.pageTitle.focus();
return;
}
}else{
this.pageName=this.pageTitle.value.replace(/\+/g,"_");
}
}
var _2d00=this.editor.isDirty();
var _2d01;
var _2d02;
this.saved=true;
this.description={value:""};
if(this.editor.isEditingWikiText()){
_2d01=this.editor.getWikiText();
_2d02="text/creole";
this.wikiTextSaved=true;
}else{
if(this.editor.isEditingHTMLSource()){
_2d01=this.editor.getXHTMLFromSource();
}else{
_2d01=this.editor.getXHTML();
}
_2d02="text/html";
if(!_2cfd){
this.document.content=_2d01;
}
this.description.value="";
}
var _2d03=quickr.share.wiki.util.getPagePostBody(this.document.getId(),_2d01,_2cff?_2cff:this.pageTitle.value,"","","public",false,_2d02,_2cfd,null);
var _2d04=this.saveAndClose+"";
var _2d05=true;
var _2d06;
if(_2cfd){
if(this.draftId){
_2d06=quickr.share.util.rewriteUri(this.document.getUrlEntry(),{source:"external"});
}else{
if(this.currentDraftId){
_2d06=this.app.routes.getWikiPageDraftInfoServiceUrl(this.libraryId,this.currentDraftId,{source:"external"});
}else{
_2d06=quickr.share.util.rewriteUri(this.document.getUrlEntry(),{draft:true,source:"external"});
}
}
}else{
if(this.draftId){
_2d06=this.app.routes.getWikiPageCreateDraftInfoServiceUrl(this.draftId);
_2d06=quickr.share.util.rewriteUri(_2d06,{submit:true,createVersion:_2d05,acls:true,inline:this.editor.isEditingWikiText(),includeNotification:true,source:"external",sendNotification:_2d04});
}else{
var _2d07={identifier:"label",submit:true,createVersion:_2d05,acls:true,inline:this.editor.isEditingWikiText(),includeNotification:true,source:"external",sendNotification:_2d04};
_2d06=this.app.routes.getWikiPageInfoServiceUrl(this.wikiLabel,this.originalPageName,_2d07);
}
}
var _2d08={"Content-Type":"application/atom+xml; charset=\"UTF-8\"","If-Match":this.generateIfMatchETag(this.draftId?this.document.getDocumentId():this.pageId)};
if(!_2cfd){
this.draftId=null;
}
this.app.net.putXml({url:quickr.share.util.makeAtomUrlIESafe(_2d06),timeout:(dojo.getObject("quickr.share.config.services.timeout.update")||10)*1000,postData:_2d03,headers:_2d08,handle:_2cfd?dojo.hitch(this,this._autoSaveComplete):dojo.hitch(this,this._saveComplete),preventLogin:_2cfd});
},_autoSaveComplete:function(_2d09,_2d0a){
if(_2d09 instanceof Error||_2d09==null){
this.onautosaveerror(_2d09,_2d0a);
}else{
var _2d0b;
if(quickr.util.dom.isNamedNS(_2d09.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
_2d0b=new quickr.share.bean.Draft(_2d09.documentElement);
if(_2d0b){
this.currentDraftId=_2d0b.getId();
this.editor.resetIsDirtySinceLastSave();
this.isTitleEditedSinceLastSave=false;
this.isDescriptionEditedSinceLastSave=false;
var df=new quickr.share.util.DateFormat(_2d0b.getUpdated());
var _2d0d=df.formatByAge(this.nls.DATE.AUTOSAVED_SHORT);
var d=this.app.document;
var span=d.createElement("span");
span.appendChild(d.createTextNode(_2d0d+" "));
quickr.share.scenes.createHelpLink(this.app,span,"editpage.autosave");
this.editor.updateEditorInfoArea(span);
}else{
this.onautosaveerror(_2d09,_2d0a);
}
}
}
this._isAutoSaving=false;
},onautosaveerror:function(_2d10,_2d11){
this.editor.updateEditorInfoArea(this.app.document.createTextNode(this.app.nls.AUTOSAVE.FAILED));
},_saveComplete:function(_2d12,_2d13){
var error;
if(error=quickr.share.util.getConcurrentModificationError(_2d12,_2d13)){
this.onediterror(error);
}else{
if(_2d12 instanceof Error||!_2d12||!_2d12.documentElement){
this.onediterror(quickr.share.util.getAtomErrorCode(_2d12,_2d13));
}else{
var _2d15;
if(quickr.util.dom.isNamedNS(_2d12.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
this.isTitleEdited=false;
this.isDescriptionEdited=false;
this.isTitleEditedSinceLastSave=false;
this.isDescriptionEditedSinceLastSave=false;
this.editor.resetIsDirty();
this._stopAutoSaveTimer();
_2d15=new quickr.share.bean.Page(_2d12.documentElement);
if(_2d15){
if(this.wikiTextSaved){
this.document.content=_2d15.getContent();
}
this.syncAuxDocumentProperties(_2d15,this.document);
this.document=_2d15;
}else{
this.document=null;
}
if(this.draftId||this.currentDraftId){
if(this.app.resetUnsavedChanges){
this.app.resetUnsavedChanges();
}
this.currentDraftId=null;
}
}
this.oneditsuccess(_2d15);
}
}
},syncAuxDocumentProperties:function(_2d16,_2d17){
_2d16.content=_2d17.content;
_2d16.tags=_2d17.tags;
_2d16.urlRecommendation=_2d17.urlRecommendation;
_2d16.notificationEnabled=_2d17.notificationEnabled;
},ontagchange:function(){
},onenablenotification:function(){
this.document.notificationEnabled=true;
},ondisablenotification:function(){
this.document.notificationEnabled=false;
},_titleChanged:function(){
this.isTitleEdited=true;
this.isTitleEditedSinceLastSave=true;
this._restartOnPauseAutoSaveTimer();
},_descriptionChanged:function(){
this.isDescriptionEdited=true;
this.isDescriptionEditedSinceLastSave=true;
this._restartOnPauseAutoSaveTimer();
},trimPagename:function(_2d18){
var el=this.pageTitle;
var _2d1a;
var i=quickr.share.util.getCharIndexForUtf8Index(el.value,quickr.share.validation.FILENAME_LENGTH);
if(i!=-1){
_2d1a=el.value.substring(0,i);
if(_2d18){
el.value=_2d1a;
}
}
if(_2d18){
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
return _2d1a;
},fixFilenameCharacters:function(){
var el=this.pageTitle;
el.value=el.value.replace(quickr.share.validation.INVALID_FILENAME_CHARS,"_");
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
},validatePagename:function(){
var el=this.pageTitle;
var d=document;
var valid=true;
if(!quickr.share.validation.validateTextLength(el.value,quickr.share.validation.FILENAME_LENGTH)){
var _2d20=[d.createTextNode(this.nls.PAGEEDIT.ERROR_NAME_TOO_LONG)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(this,this.trimPagename,true));
a.appendChild(d.createTextNode(this.nls.PAGEEDIT.ERROR_SHORTEN_PAGE_NAME));
_2d20.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"length",_2d20);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"length");
}
if(quickr.share.validation.INVALID_FILENAME_CHARS.exec(el.value)){
quickr.share.validation.INVALID_FILENAME_CHARS.lastIndex=0;
var _2d20=[d.createTextNode(this.nls.PAGEEDIT.WARN_INVALID_CHARS_IN_NAME)];
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",this,"fixFilenameCharacters");
a.appendChild(d.createTextNode(this.nls.PAGEEDIT.FIX_INVALID_CHARS_IN_NAME));
_2d20.push(a);
quickr.share.validation.addInlineErrorRow(el.parentNode.parentNode,el,"chars",_2d20);
valid=false;
}else{
quickr.share.validation.removeInlineErrorRow(el.parentNode.parentNode,el,"chars");
}
return valid;
},showUnauthorizedWarning:function(){
this.end();
var app=this.app;
quickr.share.scenes.applyGenericWarning(app,app.nls.APP.ERRORS.CANTEDITPAGE.TITLE,app.nls.APP.ERRORS.CANTEDITPAGE.MESSAGES,[[app.nls.APP.ERRORS.CANTEDITPAGE.ACT,app.routes.getWikiPageUrl(this.wikiLabel,this.pageName)]]);
},disableButtons:function(){
},enableButtons:function(){
},saveNoClose:function(opt){
this.saveAndClose=false;
this._savePage(opt);
},saveClose:function(opt){
this.saveAndClose=true;
this._savePage(opt);
},updateBreadcrumbs:function(d,_2d26,_2d27,scene,app,_2d2a){
var _2d2b=dojo.query("div#wikiBreadcrumbs p.lotusTiny",d)[0];
if(_2d2a){
var _2d2c=dojo.byId("wikiBreadcrumbs");
while(_2d2c.firstChild){
_2d2c.removeChild(_2d2c.firstChild);
}
quickr.share.wiki.scenes.AbstractPage.createBreadcrumbs(scene.pageId,scene.libraryId,d,app,scene);
}else{
if(_2d2b){
var a=d.createElement("a");
quickr.share.scenes.setOnClick(a,scene.app,scene.app.routes.getWikiPageUrl(_2d26,_2d27,null));
a.appendChild(d.createTextNode(_2d27));
a.className="lotusLink";
_2d2b.replaceChild(a,_2d2b.childNodes[_2d2b.childNodes.length-3]);
}
}
}});
quickr.share.wiki.scenes.WikiPageEdit.applyTags=function(d,el,doc,opt){
var app=opt.app;
var span=d.createElement("span");
span.className="lotusMeta lotusLeft";
var _2d34=(doc.getTags().length)?(app.nls.WIKI_TAGS.WHATTAGS+" "+doc.getTags().join(",")):app.nls.WIKI_TAGS.NOTAGS;
span.appendChild(d.createTextNode(_2d34));
el.appendChild(span);
};
quickr.share.wiki.scenes.WikiPageEdit.applyEditTitle=function(d,el,doc,opt,scene){
var user=opt.user;
var app=opt.app;
var scene=opt.scene;
var div=d.createElement("div");
var table=d.createElement("table");
dojo.addClass(table,"wikiPageTable");
table.setAttribute("cellPadding","0");
table.setAttribute("border","0");
table.setAttribute("width","100%");
if(dojo.isFF==2){
table.style.display="-moz-inline-block";
}else{
if(dojo.isFF||dojo.isSafari){
table.style.display="inline-table";
}
}
var tbody=d.createElement("tbody");
table.appendChild(tbody);
var tr=d.createElement("tr");
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
var _2d41=d.createElement("input");
_2d41.className="lotusText";
_2d41.id="title";
_2d41.type="text";
_2d41.name="title";
_2d41.className=("lotusText wikiPageTitle");
_2d41.style.width="350px";
_2d41.value=doc.getTitle();
dojo.connect(_2d41,"onchange",this,scene.validateTitle);
dojo.connect(_2d41,"onkeypress",dojo.hitch(scene,scene._titleChanged));
td.appendChild(_2d41);
tr.appendChild(td);
tbody.appendChild(tr);
div.appendChild(table);
el.appendChild(div);
scene.pageTitle=_2d41;
var div=d.createElement("div");
div.className="lotusHeader";
div.style.borderTop="1px solid rgb(204,204,204)";
div.style.marginTop="4px";
div.style.paddingTop="4px";
quickr.share.wiki.scenes.WikiPage.applyTags(d,div,doc,opt);
el.appendChild(div);
};
quickr.share.wiki.scenes.WikiPageEdit.applyActionLinks=function(d,el,doc,opt){
var app=opt.app;
var div=this.wikiActionList=d.createElement("div");
div.className="lotusActionBar lotusBtnContainer";
div.style.width="99%";
div.style.bottom="-10px";
var span=d.createElement("span");
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(app.scene,app.scene.saveNoClose));
dojo.connect(a,"onclick",dojo.hitch(app.scene,app.scene._stopAutoSaveTimer));
a.appendChild(d.createTextNode(app.nls.PAGEEDIT.SAVE_LABEL));
a.title=app.nls.PAGEEDIT.SAVE_LABEL;
span.appendChild(a);
div.appendChild(span);
var span=d.createElement("span");
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("a");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(opt.scene,opt.scene.saveClose));
dojo.connect(a,"onclick",dojo.hitch(opt.scene,opt.scene._stopAutoSaveTimer));
a.appendChild(d.createTextNode(app.nls.PAGEEDIT.SAVE_AND_CLOSE));
a.title=app.nls.PAGEEDIT.SAVE_AND_CLOSE;
span.appendChild(a);
div.appendChild(span);
var span=d.createElement("span");
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("a");
dojo.connect(a,"onclick",dojo.hitch(app.scene,app.scene._cancelPage));
a.href="javascript:;";
a.appendChild(d.createTextNode(app.nls.PAGEEDIT.CANCEL_LABEL));
a.title=app.nls.PAGEEDIT.CANCEL_LABEL;
span.appendChild(a);
div.appendChild(span);
el.insertBefore(div,el.firstChild);
};
quickr.share.wiki.scenes.WikiPageEdit.applyEditPageView=function(d,el,doc,opt){
var user=opt.user=opt.app.authenticatedUser;
var app=opt.app;
var _2d50=opt.routes;
var _2d51=opt.actions||opt.scene.actions;
var _2d52=opt.permissions||opt.scene.permissions;
var scene=opt.scene;
var _2d54=scene.autoSaveTimer=new dojox.timing.Timer(quickr.share.config.autosave.regularTimerLength);
scene.widgets.push(_2d54);
dojo.connect(_2d54,"onTick",scene,"_autoSave");
scene._startAutoSaveTimer();
var _2d55=scene.onPauseAutoSaveTimer=new dojox.timing.Timer(quickr.share.config.autosave.onPauseTimerLength);
scene.widgets.push(_2d55);
dojo.connect(_2d55,"onTick",scene,"_autoSave");
scene.editor=quickr.share.wiki.util.EditorFactory.newEditor(scene.pageId,doc.getAuthor().id,app,{wikiTitle:scene.wikiLabel,libraryId:scene.libraryId});
dojo.connect(scene.editor,"onChangeToWikiText",dojo.hitch(null,quickr.share.wiki.scenes.WikiPageEdit.showWikiTextReference,scene));
dojo.connect(scene.editor,"onChangeToRichText",dojo.hitch(null,quickr.share.wiki.scenes.WikiPageEdit.hideWikiTextReference,scene));
dojo.connect(scene.editor,"onChangeToPreview",dojo.hitch(null,quickr.share.wiki.scenes.WikiPageEdit.hideWikiTextReference,scene));
scene.editor.render(d,el,opt,doc.getContent());
var nel=dojo.query(".lotusTabContainer",el)[0];
quickr.share.wiki.scenes.WikiPageEdit.applyActionLinks(d,nel,doc,opt);
dojo.connect(scene.editor,"onContentChange",dojo.hitch(scene,scene._restartOnPauseAutoSaveTimer));
};
quickr.share.wiki.scenes.WikiPageEdit.generateSetOnClick=function(app,a,_2d59,docId,objId){
quickr.share.scenes.setOnClick(a,app,app.routes.getPageSummaryUrl(_2d59,docId,objId));
};
quickr.share.wiki.scenes.WikiPageEdit.showWikiTextReference=function(scene){
if(scene.wikiTextReference){
scene.wikiTextReference.style.display="";
}
};
quickr.share.wiki.scenes.WikiPageEdit.hideWikiTextReference=function(scene){
if(scene.wikiTextReference){
scene.wikiTextReference.style.display="none";
}
};
quickr.share.wiki.scenes.WikiPageEdit.move=function(app,scene){
if(scene.wikiLabel||scene.sceneInfo&&scene.sceneInfo.wikiLabel){
var _2d60=new quickr.share.wiki.action.MoveWikiPage(app,scene,scene.pageName,scene.wikiLabel,scene.userId,scene.pageId);
_2d60.execute();
}
};
quickr.share.wiki.scenes.WikiPageEdit.render=function(d,doc,_2d63,_2d64,user,app,_2d67,scene){
var opt={app:app,routes:app.routes,authenticatedUser:_2d64,scene:scene,user:user,aboutTitle:app.nls.DOCUMENTCONTENT.ABOUTPAGE,documentId:doc.getId(),documentFeedUrl:scene.draftId?null:doc.getUrlFeed(),generateCommentLink:dojo.hitch(null,quickr.share.scenes.generatePageCommentLink,app,app.routes,doc),generateUserLink:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),getUserInfoUrl:dojo.hitch(app.routes,app.routes.getUserInfoServiceUrl),renderTipPopup:dojo.hitch(null,quickr.share.scenes.applyTipPopup,app)};
quickr.share.wiki.scenes.applyPlaceBar(d,doc,_2d64,user,scene.wiki.getTitle(),app,_2d67,null,true);
var c=d.getElementById("lotusMain");
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
var _2d6c=d.createElement("span");
var _2d6d=d.createElement("span");
_2d6d.id="wikiBreadcrumbs";
_2d6c.appendChild(_2d6d);
quickr.share.wiki.scenes.AbstractPage.createBreadcrumbs(scene.pageId,scene.libraryId,d,app,scene);
var _2d6e=d.createElement("span");
var p=d.createElement("span");
p.className="lotusTiny";
var _2d70=quickr.share.wiki.scenes.WikiPageEdit.move;
var a=d.createElement("a");
a.className="qkrWikiInline";
a.appendChild(d.createTextNode(app.nls.MOVEPAGE.TITLE));
quickr.share.scenes.setOnClick(a,app,"javascript:;",dojo.hitch(null,_2d70,app,scene));
p.appendChild(a);
_2d6e.appendChild(p);
_2d6c.appendChild(_2d6e);
_2d6c.style.marginBottom="4px";
_2d6c.style.paddingBottom="4px";
el.appendChild(_2d6c);
var div=d.createElement("div");
div.className="wikiHeader";
quickr.share.wiki.scenes.WikiPageEdit.applyEditTitle(d,div,doc,opt,scene);
el.appendChild(div);
var div=d.createElement("div");
div.id="pageDetails";
el.appendChild(div);
c.appendChild(el);
quickr.share.wiki.scenes.WikiPageEdit.applyEditPageView(d,div,doc,opt);
};
}
if(!dojo._hasResource["quickr.share.wiki.action.AddMembers"]){
dojo._hasResource["quickr.share.wiki.action.AddMembers"]=true;
dojo.provide("quickr.share.wiki.action.AddMembers");
dojo.declare("quickr.share.wiki.action.AddMembers",[quickr.share.action.DialogAction],{wDialog:"470px",wInput:"auto",wInputUser:"320px",constructor:function(app,scene,opt){
this.app=app;
this.nls=(app&&app.nls)?app.nls:null;
this.name=this.nls.ADD_MEMBERS.ACTION;
this.libraryId=scene.libraryId;
this.wikiLabel=scene.wikiLabel;
this.peopleStore=app.getUserTypeAheadStore();
this.groupStore=app.getGroupTypeAheadStore();
scene.widgets=(scene.widgets||[]).push(this);
this.users=[];
this.groups=[];
},isValid:function(user,opt){
var _2d78=opt.permissions;
return (this.app.authenticatedUser&&_2d78.GrantAccess);
},validate:function(){
return this.validateMembers();
},validateMembers:function(){
var valid=true;
if(this.membershipOptions){
var d=document;
var _2d7b=this.membershipOptions;
var users=_2d7b.getUsers();
var _2d7d=_2d7b.getGroups();
var count=this._count(users)+this._count(_2d7d);
if(count==0){
quickr.share.validation.addInlineErrorRow(_2d7b.peopleCombo.domNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode,_2d7b.peopleCombo.domNode,"noMembers",this.nls.ADD_MEMBERS.NO_MEMBERS_ERROR);
valid=false;
}
}
return valid;
},removeValidationErrors:function(){
var _2d7f=this.dialog;
quickr.share.validation.removeFormErrors(_2d7f.formNode);
},_count:function(map){
var count=0;
for(var id in map){
count++;
}
return count;
},cancelDialog:function(e){
if(e){
dojo.stopEvent(e);
}
var _2d84=this.dialog;
if(_2d84){
_2d84.onCancel();
this.destroy();
}
},save:function(e){
this.disableInput();
var _2d86=this.membershipOptions;
var users=this.users=_2d86.getUsers();
var _2d88=this.groups=_2d86.getGroups();
var roles={};
for(var i in users){
if(!roles[users[i][1]]){
roles[users[i][1]]=[];
}
roles[users[i][1]].push({id:i,type:"user"});
}
for(var i in _2d88){
if(!roles[_2d88[i][1]]){
roles[_2d88[i][1]]=[];
}
roles[_2d88[i][1]].push({id:i,type:_2d88[i][2]?"virtual":"group"});
}
var opts={};
var _2d8c=this.app.routes.getApplicationRolesServiceUrl(this.libraryId,opts);
this.removeValidationErrors();
if(!this.validate()){
this.enableInput();
return;
}
var doc=quickr.share.util.newXMLDocument("feed",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE,quickr.share.wiki.util.CA_NAMESPACE]);
var feed=doc.documentElement;
var id=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
id.appendChild(doc.createTextNode("ca:/applications/{libraryId}/roles".replace("{libraryId}",this.libraryId)));
feed.appendChild(id);
for(var role in roles){
var entry=quickr.share.util.createElementNS(doc,"entry",quickr.share.util.ATOM_NAMESPACE);
var eid=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
eid.appendChild(doc.createTextNode("ca:/applications/{libraryId}/roles/{role}".replace("{libraryId}",this.libraryId).replace("{role}",role)));
entry.appendChild(eid);
var _2d93=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_2d93.setAttribute("type","application/xml");
var _2d94=roles[role];
var _2d95=quickr.share.util.createElementNS(doc,"role",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2d95,this._w("id"),role+"@"+this.libraryId,quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2d95,this._w("type"),role,quickr.share.wiki.util.CA_NAMESPACE);
for(var i=0;i<_2d94.length;i++){
var _2d96=quickr.share.util.createElementNS(doc,"member",quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2d96,this._w("id"),_2d94[i].id,quickr.share.wiki.util.CA_NAMESPACE);
quickr.share.util.setAttributeNS(_2d96,this._w("type"),_2d94[i].type,quickr.share.wiki.util.CA_NAMESPACE);
_2d95.appendChild(_2d96);
}
_2d93.appendChild(_2d95);
entry.appendChild(_2d93);
feed.appendChild(entry);
}
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.app.net.postXml({url:_2d8c,postData:text,headers:{"Content-Type":"application/atom+xml;charset=\"UTF-8\""},handle:dojo.hitch(this,this.complete)});
},_w:function(name){
return dojo.isIE?name:(quickr.share.wiki.util.CA_NAMESPACE.SHORT+":"+name);
},createDialog:function(item,opt,_2d9b){
var app=this.app;
var d=app.document;
var _2d9e=d.createElement("div");
_2d9e.className="lotusDialogBorder";
_2d9e.style.width=this.wDialog;
var el=_2d9b.formNode=d.createElement("form");
el.className="lotusDialog lotusForm";
dojo.connect(el,"onsubmit",function(e){
if(e){
dojo.stopEvent(e);
}
});
var h1=d.createElement("h1");
var a=this.closeButton=d.createElement("a");
a.title=this.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.ADD_MEMBERS.TITLE));
el.appendChild(h1);
var _2da5=d.createElement("div");
_2da5.className="lotusDialogContent";
var table=d.createElement("table");
table.className="lotusTable lotusClear lotusFormTable";
table.cellPadding=table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=this.tr=d.createElement("tr");
tbody.appendChild(tr);
var _2da9=this.membershipOptions=new quickr.share.wiki.widget.MembershipOptions(this.getMembershipOptions(),tr);
dojo.connect(_2da9,"selectUser",this,"removeValidationErrors");
dojo.connect(_2da9,"selectGroup",this,"removeValidationErrors");
table.appendChild(tbody);
_2da5.appendChild(table);
el.appendChild(_2da5);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var span=_2d9b.progressNode=d.createElement("span");
span.style.display="none";
span.className="lotusRight qkrStatus";
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
img.setAttribute("alt",this.nls.LOADING);
span.appendChild(img);
span.appendChild(d.createTextNode(this.nls.ADD_MEMBERS.BUSY));
div.appendChild(span);
var input=_2d9b.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_2d9e.appendChild(el);
_2d9b.setContent(_2d9e);
_2d9b.initialFocusNode=_2da9.peopleCombo.textbox;
dojo.connect(_2d9b.saveNode,"onclick",dojo.hitch(this,this.save));
},updateDialog:function(item,opt,_2dae){
var d=document;
this.membershipOptions.reset(this.getMembershipOptions());
if(_2dae.userTooltip){
_2dae.userTooltip.destroyRecursive();
}
quickr.share.validation.removeFormErrors(_2dae.formNode);
this.enableInput(_2dae);
},onDialogCancel:function(){
},destroy:function(){
if(this.dialog){
this.dialog.destroyRecursive();
}
this.dialog=null;
if(this.membershipOptions){
this.membershipOptions.destroy();
}
this.membershipOptions=null;
},complete:function(_2db0,_2db1){
if(_2db0 instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_2db0,_2db1));
}else{
this.onsuccess(this.users,this.groups);
}
},onerror:function(code){
quickr.share.validation.setFormError(this.dialog.formNode,this.nls.ERROR_OCCURRED);
this.enableInput();
},onsuccess:function(users,_2db4){
this.cancelDialog();
},getMembershipOptions:function(){
return {canChangeVisibility:false,canShareWithEdit:false,canPropagate:false,ownerId:null,authenticatedUser:this.app.authenticatedUser,startCollapsed:false,renderTip:dojo.partial(quickr.share.scenes.createHelpLink,this.app),topicShareWith:"wiki.addmembers",wInput:this.wInput,wInputUser:this.wInputUser,_strings:this.app.nls.WIKI_MEMBERSHIP,_userstrings:this.app.nls.USERSEARCH,peopleStore:this.peopleStore,groupStore:this.groupStore,defaultUsers:{},defaultGroups:{},defaultRole:"editor",app:this.app};
}});
}
if(!dojo._hasResource["quickr.share.wiki.bean.Role"]){
dojo._hasResource["quickr.share.wiki.bean.Role"]=true;
dojo.provide("quickr.share.wiki.bean.Role");
dojo.declare("quickr.share.wiki.bean.Role",null,{constructor:function(entry){
this.e=entry;
},getRoleTitle:function(){
return quickr.share.util.getChildElementTextContent(this.e,"title");
},getMembers:function(){
if(!this.members){
this.members=[];
var c;
var arr;
var XMLNS=quickr.share.wiki.util.CA_NAMESPACE;
if(dojo.isIE){
arr=this.e.getElementsByTagName(XMLNS.SHORT+":"+"role")[0];
if(arr){
arr=arr.childNodes;
for(var i=0;i<arr.length;i++){
c=arr[i];
var _2dba={};
if(c.tagName==(XMLNS.SHORT+":"+"member")){
this.members.push({id:c.getAttribute(XMLNS.SHORT+":"+"id"),type:c.getAttribute(XMLNS.SHORT+":"+"type"),name:c.getAttribute(XMLNS.SHORT+":"+"display-name")});
}
}
}
}else{
arr=this.e.getElementsByTagNameNS(XMLNS.LONG,"member");
for(var i=0;c=arr[i];i++){
c=arr[i];
this.members.push({id:c.getAttributeNS(XMLNS.LONG,"id"),type:c.getAttributeNS(XMLNS.LONG,"type"),name:c.getAttributeNS(XMLNS.LONG,"display-name")});
}
}
}
return this.members;
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.RoleOptions"]){
dojo._hasResource["quickr.share.wiki.widget.RoleOptions"]=true;
dojo.provide("quickr.share.wiki.widget.RoleOptions");
dojo.declare("quickr.share.wiki.widget.RoleOptions",[dijit._Widget],{roleSet:null,_roleOptions:null,buildRendering:function(){
this.memberNode=null;
var d=document;
var tr=this.memberNode=this.domNode=this.srcNodeRef;
tr.className="lotusFormFieldRow";
var td=d.createElement("td");
var lbl=d.createElement("label");
lbl.appendChild(d.createTextNode(this.nls.ROLE_OPTIONS.ROLE));
td.appendChild(lbl);
tr.appendChild(td);
td=this.rolesNode=d.createElement("td");
td.setAttribute("id","roles_list");
lbl.setAttribute("for",td.getAttribute("id"));
for(role in this.roleSet){
var _2dbf=this.id+"_role_"+role;
var lbl=d.createElement("label");
lbl.setAttribute("for",_2dbf);
lbl.appendChild(d.createTextNode(this.roleSet[role]));
var inp=null;
try{
var rhtml="<input id=\""+_2dbf+"\" type=\"radio\" name=\""+this.id+"_role\""+(role==this.currentRole?" checked=\"checked\"":"")+">";
inp=d.createElement(rhtml);
}
catch(e){
}
if(!inp||inp.nodeName!="INPUT"){
inp=d.createElement("input");
inp.setAttribute("type","radio");
inp.setAttribute("name",this.id+"_role");
inp.checked=(role==this.currentRole);
inp.id=_2dbf;
}
td.appendChild(inp);
td.appendChild(lbl);
if(!this._roleOptions){
this._roleOptions={};
}
this._roleOptions[role]=inp;
var br=d.createElement("br");
td.appendChild(br);
}
tr.appendChild(td);
var td=d.createElement("td");
var a=d.createElement("a");
a.className="lotusRight";
quickr.share.scenes.createHelpLink(this.app,a,"roleoptions.roles");
td.appendChild(a);
tr.appendChild(td);
},setRole:function(role){
if(this._roleOptions[role]){
this._roleOptions[role].checked=true;
}
},getRole:function(){
if(this._roleOptions){
for(var role in this._roleOptions){
if(this._roleOptions[role].checked){
return role;
}
}
}
return null;
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.EditMember"]){
dojo._hasResource["quickr.share.wiki.action.EditMember"]=true;
dojo.provide("quickr.share.wiki.action.EditMember");
dojo.declare("quickr.share.wiki.action.EditMember",[quickr.share.action.DialogAction],{wDialog:"370px",wInput:"120px",wInputUser:"100px",alwaysRecreate:true,constructor:function(app,scene,opt){
this.nls=(app&&app.nls)?app.nls:null;
this.name=this.nls.EDIT_MEMBER.ACTION;
this.app=app;
this.scene=scene;
this.member=opt.member||{id:"",name:"",type:""};
this.libraryId=scene.libraryId;
this.url=quickr.share.util.makeAtomUrlIESafe(app.routes.getApplicationRolesServiceUrl(this.libraryId));
},isValid:function(user,opt){
var _2dcb=opt.permissions;
return (this.app.authenticatedUser&&user.id!=this.app.authenticatedUser.id&&_2dcb.GrantAccess&&this.scene.wiki.author.id!=user.id);
},createDialog:function(item,opt,_2dce){
var app=this.app;
var d=app.document;
var _2dd1=d.createElement("div");
_2dd1.className="lotusDialogBorder";
_2dd1.style.width=this.wDialog;
var el=_2dce.formNode=d.createElement("form");
el.className="lotusDialog lotusForm";
dojo.connect(el,"onsubmit",function(e){
if(e){
dojo.stopEvent(e);
}
});
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.EDIT_MEMBER.TITLE));
el.appendChild(h1);
var _2dd8=d.createElement("div");
_2dd8.className="lotusDialogContent";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=this.rolesTr=d.createElement("tr");
tbody.appendChild(tr);
table.appendChild(tbody);
_2dd8.appendChild(table);
el.appendChild(_2dd8);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var input=_2dce.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_2dd1.appendChild(el);
_2dce.setContent(_2dd1);
this.disableInput(_2dce);
dojo.connect(_2dce.saveNode,"onclick",dojo.hitch(this,this.save));
this.app.net.getXml({url:this.url,handle:dojo.hitch(this,this.createLoadedDialog,item,opt,_2dce)});
},createLoadedDialog:function(item,opt,_2de0,_2de1,_2de2){
var _2de3=_2de1.documentElement.getElementsByTagName("entry");
var _2de4="reader";
for(var i=0;i<_2de3.length;i++){
var role=new quickr.share.wiki.bean.Role(_2de3[i]);
var _2de7=role.getMembers();
for(var j=0;j<_2de7.length;j++){
if(_2de7[j].type==this.member.type&&_2de7[j].id==this.member.id){
_2de4=role.getRoleTitle();
break;
}
}
}
var tr=this.rolesTr;
this.roleOptions=new quickr.share.wiki.widget.RoleOptions({roleSet:{reader:this.app.nls.WIKI_MEMBERSHIP.READER,editor:this.app.nls.WIKI_MEMBERSHIP.EDITOR,manager:this.app.nls.WIKI_MEMBERSHIP.MANAGER},nls:this.app.nls,currentRole:_2de4,app:this.app},tr);
this.enableInput();
},save:function(e){
quickr.share.validation.removeFormErrors(this.dialog.formNode);
var role=this.roleOptions.getRole();
var _2dec=this.member.id;
var _2ded=this.app.routes.getApplicationRoleMembersServiceUrl(this.libraryId,role);
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE);
var entry=doc.documentElement;
var id=quickr.share.util.createElementNS(doc,"id",quickr.share.util.ATOM_NAMESPACE);
id.appendChild(doc.createTextNode(_2dec));
entry.appendChild(id);
var text=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.disableInput();
this.app.net.postXml({url:_2ded,postData:text,headers:{"Content-Type":"application/atom+xml;charset=\"UTF-8\""},handle:dojo.hitch(this,this.complete)});
},updateDialog:function(item,opt,_2df4){
},onDialogCancel:function(){
},destroy:function(){
if(this.dialog){
this.dialog.destroyRecursive();
}
this.dialog=null;
if(this.roleOptions){
this.roleOptions.destroy();
}
this.roleOptions=null;
},complete:function(_2df5,_2df6){
this.enableInput();
if(_2df5 instanceof Error){
var code=quickr.share.util.getAtomErrorCode(_2df5,_2df6);
this.onerror(code);
}else{
this.onsuccess();
}
},onerror:function(code){
var msg=this.nls.CONTENT.ERROR_REQUEST_UNKNOWN;
switch(code){
case "ItemNotFound":
msg=this.nls.EDIT_MEMBER.NOSUCHMEMBER;
break;
case "AccessDenied":
msg=this.nls.EDIT_MEMBER.UNAUTHORIZED;
break;
case "ConstraintViolation":
msg=this.nls.EDIT_MEMBER.CANTEDITROLE;
break;
}
quickr.share.validation.addInlineErrorRow(this.rolesTr,this.roleOptions.rolesNode,"error",msg);
},onsuccess:function(){
this.cancelDialog();
this.destroy();
}});
}
if(!dojo._hasResource["quickr.share.wiki.action.RemoveMember"]){
dojo._hasResource["quickr.share.wiki.action.RemoveMember"]=true;
dojo.provide("quickr.share.wiki.action.RemoveMember");
dojo.declare("quickr.share.wiki.action.RemoveMember",[quickr.share.action.DialogAction],{wDialog:"370px",constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.nls=app.nls;
this.name=this.app.nls.REMOVE_MEMBER.ACTION;
this.tooltip=this.app.nls.REMOVE_MEMBER.ACTION_TOOLTIP;
this.libraryId=scene.libraryId;
this.member=opt.member;
dojo.mixin(this,opt||{});
},isValid:function(user,opt){
var _2dff=opt.permissions;
return (this.app.authenticatedUser&&user.id!=this.app.authenticatedUser.id&&_2dff.GrantAccess&&this.scene.wiki.author.id!=user.id);
},createDialog:function(item,opt,_2e02){
var app=this.app;
var d=app.document;
var _2e05=d.createElement("div");
_2e05.className="lotusDialogBorder";
_2e05.style.width=this.wDialog;
var el=_2e02.formNode=d.createElement("form");
el.className="lotusDialog lotusForm";
dojo.connect(el,"onsubmit",dojo.hitch(this,this.performDelete));
var h1=d.createElement("h1");
var a=d.createElement("a");
a.title=this.nls.CANCEL;
a.className="lotusBtnImg lotusClose";
a.href="javascript:;";
dojo.connect(a,"onclick",this,"cancelDialog");
var img=d.createElement("img");
img.src=(dojo.getObject("quickr.share.config.baseCommonUri")||"/")+"styles/images/blank.gif";
img.setAttribute("alt",this.nls.CLOSE);
a.appendChild(img);
var span=d.createElement("span");
span.className="lotusAltText";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
h1.appendChild(a);
h1.appendChild(d.createTextNode(" "));
h1.appendChild(d.createTextNode(this.nls.REMOVE_MEMBER.TITLE));
el.appendChild(h1);
var _2e0b=d.createElement("div");
_2e0b.className="lotusDialogContent";
var table=d.createElement("table");
table.className="lotusFormTable";
table.cellPadding=table.cellPadding=0;
var tbody=d.createElement("tbody");
var tr=this.confirmNodeRow=d.createElement("tr");
var td=this.confirmNode=d.createElement("td");
td.appendChild(d.createTextNode(dojo.string.substitute(this.nls.REMOVE_MEMBER.CONFIRM,[this.member.name])));
tr.appendChild(td);
tbody.appendChild(tr);
table.appendChild(tbody);
_2e0b.appendChild(table);
el.appendChild(_2e0b);
var div=d.createElement("div");
div.className="lotusDialogFooter";
var input=_2e02.saveNode=d.createElement("input");
input.className="lotusFormButton";
input.type="submit";
input.value=this.nls.OK;
div.appendChild(input);
var a=d.createElement("A");
a.className="lotusAction";
a.href="javascript:;";
a.appendChild(d.createTextNode(this.nls.CANCEL));
dojo.connect(a,"onclick",this,"cancelDialog");
div.appendChild(a);
el.appendChild(div);
_2e05.appendChild(el);
_2e02.setContent(_2e05);
this.enableInput(_2e02);
},updateDialog:function(item,opt,_2e14){
},performDelete:function(e){
if(e){
dojo.stopEvent(e);
}
var _2e16=this.member;
var url=this.app.routes.getApplicationRolesServiceUrl(this.libraryId,{memberId:_2e16.id});
this.app.net.deleteXml({url:url,handle:dojo.hitch(this,this.complete)});
},complete:function(_2e18,_2e19){
if(_2e18 instanceof Error){
var code=quickr.share.util.getAtomErrorCode(_2e18,_2e19);
this.onerror(code);
}else{
this.onsuccess();
}
},onerror:function(code){
var msg=this.nls.CONTENT.ERROR_REQUEST_UNKNOWN;
switch(code){
case "ItemNotFound":
msg=this.nls.REMOVE_MEMBER.NOSUCHMEMBER;
break;
case "AccessDenied":
msg=this.nls.REMOVE_MEMBER.UNAUTHORIZED;
break;
}
quickr.share.validation.addInlineErrorRow(this.confirmNodeRow,this.confirmNode.firstChild,"error",msg);
}});
}
if(!dojo._hasResource["quickr.share.wiki.widget.MembersStreamRenderer"]){
dojo._hasResource["quickr.share.wiki.widget.MembersStreamRenderer"]=true;
dojo.provide("quickr.share.wiki.widget.MembersStreamRenderer");
dojo.declare("quickr.share.wiki.widget.MembersStreamPaging",[quickr.widget.StreamPaging],{detect:function(url,data,type){
var uri,p,_2e22=-1,_2e23=0;
if(url){
uri=quickr.share.util.parseUri(url);
p=uri.queryParameters;
if(p.page){
_2e22=quickr.share.util.parseInt(p["max-entries"],10);
_2e23=(quickr.share.util.parseInt(p.page,1)-1)*_2e22;
}else{
if(p["start-index"]){
_2e22=quickr.share.util.parseInt(p["max-entries"],-1);
_2e23=quickr.share.util.parseInt(p["start-index"],1);
}else{
_2e22=quickr.share.util.parseInt(p["max-entries"],-1);
}
}
}
var _2e24,_2e25,_2e26,_2e27;
if(type=="json"){
_2e24=(data.items)?data.items.length:0;
_2e25=-1;
if(typeof data.totalItems=="number"){
_2e25=data.totalItems;
}else{
if(typeof data.totalSize=="number"){
_2e25=data.totalSize;
}
}
_2e26=data.previousUrl;
_2e27=data.nextUrl;
}else{
_2e24=data.getElementsByTagName("entry").length;
_2e25=quickr.share.util.parseInt(quickr.share.util.getChildElementTextContentNS(data,"totalResults",quickr.share.util.OPENSEARCH_NAMESPACE),-1);
_2e26=quickr.share.util.getChildElementAttributeMatching(data,"link","rel","prev","href");
_2e27=quickr.share.util.getChildElementAttributeMatching(data,"link","rel","next","href");
}
this.items=_2e24;
if(data){
if(_2e25!=-1){
this.mode="index";
this.total=(_2e23==0&&_2e24<_2e22)?_2e24:_2e25;
this.startIndex=_2e23;
this.uri=uri;
}else{
if(_2e23==0){
this.mode="index";
this.total=(_2e24<_2e22)?_2e24:-1;
this.startIndex=0;
this.uri=uri;
}
}
if(!this.mode){
if(_2e26||_2e27){
this.mode="url";
this.next=_2e27;
this.previous=_2e26;
this.startIndex=-1;
this.total=-1;
}else{
this.mode="index";
this.total=(_2e24<_2e22)?(_2e23+_2e24):-1;
this.startIndex=_2e23;
this.uri=uri;
}
}
if(!this.mode){
this.mode="unpaged";
this.startIndex=0;
this.total=-1;
}
this.hasMore=(this.total!=-1&&(this.startIndex+_2e24)<this.total)||this.next||(this.total==-1&&_2e24==_2e22);
this.pastEnd=(_2e24==0&&(this.total>0||this.startIndex>0));
if(_2e22==-1){
_2e22=_2e24;
}else{
if(this.checkForMore&&_2e22>0){
_2e22=_2e22-1;
}
}
this.size=_2e22;
}else{
if(_2e22!=-1){
if(this.checkForMore){
_2e22=_2e22-1;
}
this.mode="index";
this.startIndex=_2e23;
this.size=_2e22;
this.parameters=p;
}else{
this.mode="unpaged";
this.startIndex=0;
this.size=-1;
}
this.total=-1;
this.visible=0;
}
},getNextUrl:function(){
if(this.mode=="index"){
var _2e28=this.uri.queryParameters;
var p=dojo.clone(_2e28);
p["start-index"]=this.startIndex+this.size;
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_2e28;
return url;
}
return this.inherited(arguments);
},getPreviousUrl:function(){
if(this.mode=="index"){
var _2e2b=this.uri.queryParameters;
var p=dojo.clone(_2e2b);
if(this.startIndex<1){
return null;
}
p["start-index"]=Math.max(this.startIndex-this.size,0);
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_2e2b;
return url;
}
return this.inherited(arguments);
},getPageUrl:function(page,_2e2f){
if(this.mode=="index"){
var _2e30=this.uri.queryParameters;
var p=dojo.clone(_2e30);
if(typeof page!="undefined"){
p["start-index"]=this.size*(page-1);
}
if(typeof _2e2f!="undefined"){
p["max-entries"]=_2e2f+(this.checkForMore?1:0);
}
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_2e30;
return url;
}
return this.inherited(arguments);
},getLastPageUrl:function(){
if(this.mode=="index"){
var _2e33;
if(this.total!=-1){
var page=Math.floor((this.total-(this.total%this.size))/this.size);
_2e33=(page-1)*this.size;
}else{
_2e33=this.startIndex-this.size;
}
var _2e35=this.uri.queryParameters;
var p=dojo.clone(_2e35);
p["start-index"]=Math.max(_2e33,0);
this.uri.queryParameters=p;
var url=quickr.share.util.writeUri(this.uri);
this.uri.queryParameters=_2e35;
return url;
}
return this.inherited(arguments);
}});
dojo.declare("quickr.share.wiki.widget.MembersStream",[quickr.widget.Stream],{getPaging:function(){
return new quickr.share.wiki.widget.MembersStreamPaging({checkForMore:this.checkForMore});
}});
dojo.declare("quickr.share.wiki.widget.MembersStreamRenderer",[quickr.widget.StreamRenderer],{permissions:new quickr.share.bean.StreamPermissions(),methods:{},actions:[],animations:[],_strings:{},getDelegate:function(type,def,_2e3a){
var view=this.view||"details";
var name=type+view.substring(0,1).toUpperCase()+view.substring(1);
if(_2e3a){
var _2e3d=name+_2e3a.substring(0,1).toUpperCase()+_2e3a.substring(1);
if(typeof this[_2e3d]=="function"){
return this[_2e3d];
}
}
if(typeof this[name]=="function"){
return this[name];
}else{
var f=this.methods[type];
if(f){
f=f[view]||def;
}else{
f=def;
}
if(typeof f=="string"){
return this[f];
}else{
if(typeof f=="function"){
return f;
}
}
}
return null;
},hasDelegate:function(type,_2e40){
return typeof this.getDelegate(type,null,null,_2e40)=="function";
},delegate:function(type,args,def,_2e44){
var f=this.getDelegate(type,def,_2e44);
if(f){
return f.apply(this,args);
}
},allowMultipleExpand:function(_2e46){
return this.delegate("allowMultipleExpand",arguments,quickr.share.wiki.widget.MembersStreamRenderer.superclass.allowMultipleExpand);
},destroy:function(){
this.actions=[];
quickr.share.wiki.widget.MembersStreamRenderer.superclass.destroy.apply(this,arguments);
},cleanup:function(){
this.delegate("cleanup",arguments);
quickr.share.wiki.widget.MembersStreamRenderer.superclass.cleanup.apply(this,arguments);
},getSorts:function(){
return this.delegate("getSorts",arguments,quickr.share.wiki.widget.MembersStreamRenderer.superclass.getSorts);
},renderItemExpand:function(_2e47,data,item,_2e4a){
this.delegate("renderItemExpand",arguments,null,item._qualifier);
},collapseItem:function(_2e4b,data,item,_2e4e){
this.delegate("collapseItem",arguments,null,item._qualifier);
},expandItem:function(_2e4f,data,item,_2e52){
this.delegate("expandItem",arguments,null,item._qualifier);
},renderActionList:function(){
},render:function(_2e53,el,data,item){
this.cleanup();
data.itemById={};
this.baseUrl=_2e53.baseUrl;
this.animations=[];
this.delegate("render",arguments);
for(var i=0;i<this.animations.length;i++){
this.animations[i].play();
}
},renderSorting:function(_2e58,el,data){
this.delegate("renderSorting",arguments,quickr.share.wiki.widget.MembersStreamRenderer.superclass.renderSorting);
},renderEmpty:function(_2e5b,el,data){
this.delegate("renderEmpty",arguments,quickr.share.wiki.widget.MembersStreamRenderer.superclass.renderEmpty);
},renderItem:function(_2e5e,el,data,item,_2e62){
item=new quickr.share.wiki.bean.Member(item);
data.itemByPosition.push(item);
data.itemById[item.getId()]=item;
arguments[3]=item;
item._position=_2e62;
var _2e63="role";
item._qualifier=_2e63;
this.delegate("renderItem",arguments,null,_2e63);
},renderDetails:function(_2e64,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
var max=(data.paging)?data.paging.size:size;
var _2e6c=(data.paging)?Math.max(data.paging.size,items.length):items.length;
if(size>0){
var table=el.lastChild;
if(table&&(table._view!="details"||table.nodeName!="TABLE"||table.firstChild.childNodes.length!=max*2)){
quickr.share.util.removeChildren(el);
table=null;
}
if(!table){
var a=[];
a.push("<tr style=\"display: none;\">");
for(var i=0;i<2;i++){
a.push("<td width=\"50%\">");
a.push("<table class=\"lotusLayout\" width=\"100%\"><tbody><tr class=\"lotusFirst\"><td style=\"width:65px\">");
a.push("<img src=\""+(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/blank.gif\" style=\"width:45px;height:45px\" alt=\"\" />");
a.push("</td><td>");
a.push("<h4></h4><div></div><div class=\"lotusChunk\"></div>");
a.push("</td></tr></tbody></table>");
}
a.push("</tr>");
var t=a.join("");
a=["<table cellpadding=\"0\" cellspacing=\"0\" style=\"display:none;\" class=\"lotusTable lotusClear\"><tbody>"];
for(var i=0;i<max;i++){
a.push(t);
}
a.push("</tbody></table>");
var t=a.join("");
el.innerHTML=t;
table=el.firstChild;
table._view="details";
var tbody=table.firstChild;
dojo.addClass(tbody.firstChild,"lotusFirst");
for(var i=0;i<max;i++){
var td=tbody.childNodes[i].lastChild;
td=td.previousSibling;
}
}
var _2e73=d.createDocumentFragment();
var _2e74=dojo._toArray(arguments);
_2e74[1]=_2e73;
quickr.share.wiki.widget.MembersStreamRenderer.superclass.renderSorting.apply(this,_2e74);
if(el.firstChild!=table){
var old=el.replaceChild(_2e73,el.firstChild);
quickr.share.util.destroyWidgets(old);
}else{
el.insertBefore(_2e73,el.firstChild);
}
table.style.display="";
var tbody=table.firstChild;
for(var i=0;i<size;i++){
var tr=tbody.childNodes[Math.floor((i%_2e6c)/2)];
var _2e77=tr.nextSibling;
this.renderItem(_2e64,tbody,data,items[i],i,i==0,(i==size-1),tr,_2e77);
tr.style.display="";
}
this.updatePaging(_2e64,el,data);
}else{
this.renderEmpty(_2e64,el,data);
}
},renderItemDetails:function(_2e78,el,data,doc,_2e7c,_2e7d,_2e7e,_2e7f,_2e80){
var d=document;
var _2e82=data.paging.size;
var _2e83=(_2e7c%_2e82)%2;
var td=_2e7f[_2e83?"lastChild":"firstChild"];
var _2e85=td.firstChild.firstChild.firstChild.firstChild;
var _2e86=_2e85.firstChild;
var _2e87=_2e85.nextSibling.firstChild;
var _2e88=_2e87.nextSibling;
var _2e89=_2e88.nextSibling;
var vcard=document.createElement("span");
var _2e8b=d.createElement("a");
var _2e8c=d.createElement("span");
vcard.className="vcard";
_2e8b.href="javascript:void(0);";
_2e8b.className="fn url";
_2e8b.appendChild(d.createTextNode(doc.getTitle()));
vcard.appendChild(_2e8b);
_2e8c.className="x-lconn-userid";
_2e8c.style.display="none";
_2e8c.appendChild(d.createTextNode(doc.getDirectoryId()));
vcard.appendChild(_2e8c);
_2e87.appendChild(vcard);
if(window.SemTagSvc&&window.SemTagSvc.add){
SemTagSvc.add(vcard);
}
_2e88.appendChild(d.createTextNode(this.getMemberIconTitle(doc.getType())));
this.applyMemberActions(_2e89,doc);
_2e86.src=this.getMemberPhoto({id:doc.getDirectoryId()});
_2e86.setAttribute("alt",doc.getTitle());
if(this.highlightItems&&this.highlightItems[doc.getDirectoryId()]){
this.highlight(td);
delete this.highlightItems[doc.getDirectoryId()];
}
},renderItemExpandDetails:function(_2e8d,data,item,_2e90){
},expandItemDetails:function(_2e91,data,item,_2e94){
},collapseItemDetails:function(_2e95,data,item,_2e98){
},renderItemExpand:function(_2e99,data,item,_2e9c){
this.delegate("renderItemExpand",arguments,null,item._qualifier);
},collapseItem:function(_2e9d,data,item,_2ea0){
this.delegate("collapseItem",arguments,null,item._qualifier);
},expandItem:function(_2ea1,data,item,_2ea4){
this.delegate("expandItem",arguments,null,item._qualifier);
},renderSummary:function(_2ea5,el,data){
var d=document;
data.itemByPosition=[];
var items=(data.json)?data.json.items:dojo.filter(data.xml.getElementsByTagName("entry"),function(e){
return e.parentNode==data.xml;
});
var size=(data.paging)?Math.min(data.paging.size,items.length):items.length;
if(size>0){
var _2eac=d.createDocumentFragment();
var _2ead=dojo._toArray(arguments);
_2ead[1]=_2eac;
var table=d.createElement("TABLE");
table.className="lotusTable";
table.cellSpacing=table.cellPadding=0;
var _2eaf=this.getSortInfo();
if(_2eaf){
var sorts=_2eaf.list;
var _2eb1=_2eaf.active;
var _2eb2=_2eaf.reversed;
var a_t=d.createElement("a");
var th_t=d.createElement("th");
var thead=d.createElement("THEAD");
var tr=d.createElement("TR");
tr.className="lotusSort";
var th=th_t.cloneNode(true);
th.style.width="20px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
for(var i=0,sort;sort=sorts[i];i++){
var th=th_t.cloneNode(true);
if(sort.className){
th.className=sort.className;
}
if(sort.width){
th.style.width=sort.width;
}
if(sort.isSortable!=false){
var a=a_t.cloneNode(true);
if(sort==_2eb1){
var asc=(sort.lowToHigh)?!_2eb2:_2eb2;
dojo.addClass(a,asc?"lotusAscending":"lotusDescending");
var _2ebc=d.createElement("span");
_2ebc.className="lotusAltText";
_2ebc.appendChild(d.createTextNode(asc?" ▴ ":" ▾ "));
a.appendChild(_2ebc);
}
this.generateSortLink(_2ea5,sort,(_2eb1.id!=sort.id||_2eb2)?true:false,a);
a.appendChild(d.createTextNode(sort.name));
th.appendChild(a);
}else{
th.appendChild(d.createTextNode(sort.name));
}
tr.appendChild(th);
}
var th=d.createElement("TH");
th.style.width="80px";
th.appendChild(d.createTextNode(" "));
tr.appendChild(th);
thead.appendChild(tr);
table.appendChild(thead);
}
var tbody=d.createElement("TBODY");
for(var i=0;i<size;i++){
this.renderItem(_2ea5,tbody,data,items[i],i,i==0,(i==size-1));
}
table.appendChild(tbody);
_2eac.appendChild(table);
this.updatePaging(_2ea5,el,data);
var _2ebe=dojo._toArray(el.childNodes);
for(var child,i=0;child=_2ebe[i];i++){
child.style.display="none";
}
el.replaceChild(_2eac,_2ebe[0]);
for(var child,i=0;child=_2ebe[i];i++){
quickr.share.util.destroyWidgets(child);
if(child.parentNode){
child.parentNode.removeChild(child);
}
}
}else{
this.renderEmpty(_2ea5,el,data);
}
},renderSortingSummary:function(_2ec0,el,data){
},renderItemSummaryPage:function(_2ec3,el,data,doc,_2ec7,_2ec8,_2ec9,_2eca,_2ecb){
var d=document;
var aMore;
var _2ece=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _2ed1=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_2eca)?_2eca:d.createElement("TR");
tr.className="hentry";
if(_2ec8){
dojo.addClass(tr,"lotusFirst");
}
if(_2ec7%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _2ed6=div_t.cloneNode(true);
_2ed6.style.display="none";
var span=_2ed1.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_2ed6.appendChild(span);
var span=_2ed1.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_2ed6.appendChild(span);
var span=_2ed1.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_2ed6.appendChild(span);
td.appendChild(_2ed6);
var a=a_t.cloneNode(true);
this.generateLinkToPerson({name:doc.getTitle()},a);
var img=img_t.cloneNode(true);
img.src=this.getPageImage(16);
img.setAttribute("alt",this._appstrings.CONTENT.OPEN_PAGE);
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getTitle()));
adoc.className="lotusPerson";
adoc.rel="bookmark";
adoc.title=doc.getTitle();
this.generateLinkToPerson({name:doc.getTitle()},adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
this.applyMemberActions(td,doc);
tr.appendChild(td);
if(!_2eca){
el.appendChild(tr);
}
doc.element=tr;
var _2edc=tr.childNodes.length;
var tr=(_2ecb)?_2ecb:d.createElement("TR");
tr.className="lotusDetails";
if(_2ec7%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_2edc-1;
tr.appendChild(td);
if(!_2ecb){
el.appendChild(tr);
}
doc.elementExtra=tr;
},renderItemSummary:function(_2edd,el,data,doc,_2ee1,_2ee2,_2ee3,_2ee4,_2ee5){
var d=document;
var aMore;
var _2ee8=this.permissions;
var td_t=d.createElement("td");
var a_t=d.createElement("a");
var _2eeb=d.createElement("span");
var img_t=d.createElement("img");
var div_t=d.createElement("div");
var tr=(_2ee4)?_2ee4:d.createElement("TR");
tr.className="hentry";
tr.itemPosition=_2ee1;
if(_2ee2){
dojo.addClass(tr,"lotusFirst");
}
if(_2ee1%2!=0){
dojo.addClass(tr,"lotusAltRow");
}
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var _2ef0=div_t.cloneNode(true);
_2ef0.style.display="none";
var span=_2eeb.cloneNode(true);
span.className="entry-id";
span.innerHTML=doc.getId();
_2ef0.appendChild(span);
var span=_2eeb.cloneNode(true);
span.className="published";
span.innerHTML=doc.getPublished();
_2ef0.appendChild(span);
var span=_2eeb.cloneNode(true);
span.className="updated";
span.innerHTML=doc.getPublished();
_2ef0.appendChild(span);
td.appendChild(_2ef0);
var a=a_t.cloneNode(true);
var img=img_t.cloneNode(true);
img.src=this.getMemberIcon(doc.getType());
img.setAttribute("alt",this.getMemberIconTitle(doc.getType()));
img.setAttribute("title",this.getMemberIconTitle(doc.getType()));
a.appendChild(img);
td.appendChild(a);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
var h4=d.createElement("H4");
var adoc=a_t.cloneNode(true);
adoc.appendChild(d.createTextNode(doc.getTitle()));
adoc.className="entry-title";
adoc.rel="bookmark";
adoc.title=doc.getTitle();
this.generateLinkToPerson({title:doc.getTitle(),id:doc.getDirectoryId()},adoc);
urlFile=adoc.href;
h4.appendChild(adoc);
td.appendChild(h4);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusNowrap";
td.appendChild(d.createTextNode(this.getMemberIconTitle(doc.getType())));
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.className="lotusAlignRight lotusLastCell lotusTiny";
this.applyMemberActions(td,doc);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.appendChild(d.createTextNode(" "));
tr.appendChild(td);
if(!_2ee4){
el.appendChild(tr);
}
doc.element=tr;
var _2ef6=tr.childNodes.length;
var tr=(_2ee5)?_2ee5:d.createElement("TR");
tr.className="lotusDetails";
if(_2ee1%2!=0){
tr.className+=" lotusAltRow";
}
tr.style.display="none";
var td=td_t.cloneNode(true);
tr.appendChild(td);
var td=td_t.cloneNode(true);
td.colSpan=_2ef6-1;
tr.appendChild(td);
if(!_2ee5){
el.appendChild(tr);
}
doc.elementExtra=tr;
if(this.highlightItems&&this.highlightItems[doc.getDirectoryId()]){
this.highlight(doc.element);
this.highlight(doc.elementExtra);
delete this.highlightItems[doc.getDirectoryId()];
}
},renderItemExpandSummaryPage:function(_2ef7,data,item,_2efa){
var d=document;
var doc=item;
var el=doc.element;
var _2efe=this.permissions;
var div_t=d.createElement("div");
var extra=el.nextSibling.childNodes[1];
this.renderActionList(extra,_2ef7,data,item);
this.renderHideLink(el);
el.nextSibling.style.display="";
},renderItemExpandSummary:function(_2f01,data,item,_2f04){
},expandItemSummary:function(_2f05,data,item,_2f08){
},collapseItemSummary:function(_2f09,data,item,_2f0c){
},getSortsSummary:function(_2f0d,_2f0e){
var arr=[{id:"name",name:this._strings.COLUMN_NAME,isSortable:false},{id:"type",name:this._strings.COLUMN_TYPE,isSortable:false}];
return arr;
},getSortsDetails:function(_2f10,_2f11){
return [];
},renderHideLink:function(tr){
},renderShowLink:function(tr,trd){
},renderDivider:function(d,el){
var span=d.createElement("span");
span.className="lotusDivider";
span.appendChild(d.createTextNode("|"));
el.appendChild(span);
},getActions:function(item){
if(item&&item._qualifier=="page"){
return this.pageActions;
}
return this.actions;
},generateLinkToPerson:function(user,a){
var id=(typeof user=="object")?user.id:user;
a.href=this.baseUrl+"public/people/"+encodeURIComponent(id);
},getMemberIconTitle:function(type){
switch(type){
case "group":
return this._nls.GROUP_TITLE;
case "virtual":
return this._nls.VIRTUAL_TITLE;
case "user":
default:
return this._nls.USER_TITLE;
}
},getMemberIcon:function(type){
return (dojo.getObject("quickr.share.config.baseUri")||"/")+(type=="user"?"nav/common/styles/images/iconVisitor.gif":"nav/common/styles/images/iconGroup.gif");
},getMemberPhoto:function(user){
return this.app.routes.getUserPhotoUrl(user);
},onrecommend:function(data,_2f20,_2f21,_2f22,_2f23){
if(data&&data.itemByPosition&&data.itemByPosition[_2f20]){
var item=data.itemByPosition[_2f20];
if(item._ratingImage){
item._ratingImage.src=_2f21+"nav/common/styles/images/"+((_2f23>0)?"iconRating1.gif":"iconRating0.gif");
}
if(item._ratingText){
quickr.share.util.removeChildren(item._ratingText);
item._ratingText.appendChild(document.createTextNode(" "));
item._ratingText.appendChild(document.createTextNode(_2f23));
item._ratingText.parentNode.title=dojo.string.substitute(((_2f23!=1)?this._appstrings.RECOMMEND.RECOMMEND_COUNT_MANY:this._appstrings.RECOMMEND.RECOMMEND_COUNT_ONE),[dojo.number.format(_2f23)]);
}
}
},highlight:function(el){
var p={duration:this.highlightDuration||2000,rate:this.highlightRate||100,node:el,properties:{backgroundColor:{start:this.highlightColorStart||"#FFFF75",defEnd:this.highlightColorEnd||"white",node:el,end:function(){
return dojo.getComputedStyle(this.node).backgroundColor||this.defEnd;
}}},onEnd:function(){
this.node.style.backgroundColor="";
}};
}});
}
if(!dojo._hasResource["quickr.share.wiki.scenes.Members"]){
dojo._hasResource["quickr.share.wiki.scenes.Members"]=true;
dojo.provide("quickr.share.wiki.scenes.Members");
dojo.declare("quickr.share.wiki.scenes.Members",[quickr.share.scenes.AbstractList,quickr.share.wiki.scenes.WikiSidebarPage],{views:quickr.share.wiki.scenes.MEMBER_VIEWS,typeFilters:quickr.share.wiki.scenes.MEMBER_FILTERS.TYPE,highlightItems:{},sorts:[{id:"name",sK:"display-name"},{id:"type",sK:"type"}],constructor:function(app,_2f28){
this.app=app;
this.sceneInfo=_2f28;
this.init(app,_2f28);
this.wikiLabel=_2f28.wikiLabel;
this.libraryId=_2f28.libraryId;
this.widgets=[];
},begin:function(_2f29){
if(_2f29&&_2f29.navStore&&_2f29.wikiLabel==this.wikiLabel){
this.navStore=_2f29.navStore;
}else{
this.navStore=null;
}
var _2f2a=this.app.authenticatedUser;
if(!_2f2a){
this.showUnauthenticatedWarning();
return;
}
this.checkPermissions(_2f29);
},end:function(_2f2b){
quickr.share.util.destroy(this.widgets);
if(this.actions){
quickr.share.util.destroy(this.actions);
}
this.widgets=this.actions=[];
},show:function(){
var d=this.app.document;
var app=this.app;
var _2f2e=this.wiki&&this.wiki.isCommunityWiki();
d.title=dojo.string.substitute(this.app.nls.WINDOWTITLE.MEMBERS,[this.wiki.getTitle()]);
var _2f2f=app.authenticatedUser;
this.permissions=new quickr.share.bean.StreamPermissions({owner:false,authenticatedId:(_2f2f?_2f2f.id:null)});
var _2f30=dojo.getObject("quickr.share.config.actions.members");
var _2f31=this.actions=(_2f30)?_2f30(app,this,{}):[];
for(var i=0;i<_2f31.length;i++){
if(typeof _2f31[i].onsuccess=="function"){
dojo.connect(_2f31[i],"onsuccess",this,"onmemberschanged");
}
}
quickr.share.wiki.scenes.applyHomeTemplate(d,this.app.authenticatedUser,this.app,this.app.routes);
quickr.share.wiki.scenes.applyPlaceBar(d,this.wiki,this.app.authenticatedUser,null,this.wiki.getTitle(),this.app,this.app.routes,this,true);
quickr.share.wiki.scenes.Members.render(d,this.app,this);
var _2f33=dojo.byId("tagCloudContainer");
quickr.share.wiki.scenes.applyTagCloud(d,_2f33,this.app,this,this.app.authenticatedUser,false);
if(!_2f2e){
var _2f34={_strings:app.nls.CONTENT,_appstrings:app.nls,permissions:this.permissions,highlightItems:this.highlightItems,tagStore:app.getTagTypeAheadStore(),urlAllTags:app.routes.getTagServiceUrl(),generateLinkToPerson:dojo.hitch(null,quickr.share.scenes.generateUserLink,app,app.routes),generateLinkToPage:dojo.hitch(null,function(app,_2f36,_2f37,doc,link,_2f3a){
var _2f3a=_2f3a||{};
quickr.share.scenes.setOnClick(link,app,_2f36.getWikiPageUrl(_2f37,doc.getModifiedItem()));
},app,app.routes),generateLinkToWiki:dojo.hitch(null,function(app,_2f3c,_2f3d,link){
quickr.share.scenes.setOnClick(link,app,_2f3c.getWikiUrl(_2f3d.title));
},this.app,this.app.routes),generateLinkToTag:dojo.hitch(null,quickr.share.wiki.scenes.generateTagLink,this.app,this.app.routes,this.authenticatedUser?this.authenticatedUser.id:null,{},true,true,true),getUserRecommendationUrl:dojo.hitch(app.routes,app.routes.getRecommendServiceUrl),generateSortLink:dojo.hitch(null,quickr.share.wiki.scenes.Members.generateSortLink,app,app.routes,this.app.authenticatedUser.id,this.params),getUnsavedChangesList:dojo.hitch(app,app.getUnsavedChangesList),sortId:this.sortId,sortReversed:this.sortReversed,app:app,routes:app.routes,applyMemberActions:dojo.hitch(this,quickr.share.wiki.scenes.Members.applyMemberActions,app,app.routes,this),view:this.activeView.id,_nls:app.nls.FILTERS.MEMBER_TYPE};
var _2f3f=new quickr.share.wiki.widget.MembersStreamRenderer(_2f34);
var list=this.list=new quickr.share.wiki.widget.MembersStream({id:"list",baseClass:"lotusStream",renderer:_2f3f,msgNoData:app.nls.WIKI_HOME.SIDEBAR.NO_ITEMS,_strings:app.nls.CONTENT,url:this.getListUrl(this.app.authenticatedUser,{pageSize:10}),net:app.net},d.getElementById("scene-list"));
list.update();
}
d.body.style.visibility="visible";
},initFilters:function(p){
p=p||{};
if(p.tag){
var tags=dojo.isArray(p.tag)?p.tag:[p.tag];
var _2f43=this.activeTags={};
var _2f44=this.activeFilters;
var _2f45=this.app.nls.CONTENT.FILTERED_BY;
dojo.forEach(tags,function(tag){
_2f44.push({id:"tags",longName:dojo.string.substitute(_2f45,[tag]),setServiceOptions:function(_2f47){
(_2f47.tag=_2f47.tag||[]).push(tag);
},removeAppParams:function(_2f48){
if(_2f48.tag){
var index=dojo.indexOf(_2f48.tag,tag);
if(index!=-1){
delete _2f48.tag[index];
}
}
}});
_2f43[tag]=1;
});
this.params.tag=tags;
}
if(p.memberType){
var _2f4a=this._byId(this.typeFilters,p.memberType);
if(_2f4a){
this.activeFilters.push(_2f4a);
}
this.params.memberType=p.memberType;
}
},getListUrl:function(_2f4b,opts){
var p={start:0,pageSize:10,memberType:this.params.memberType||["user","group"]};
opts=opts||{};
if(this.activeSort){
p.sortKey=this.activeSort.sK;
var _2f4e=!this.activeSort.lowToHigh;
if(this.sortReversed){
_2f4e=!_2f4e;
}
p.sortDescending=_2f4e;
}
for(var i=0;i<this.activeFilters.length;i++){
var _2f50=this.activeFilters[i];
if(_2f50.setServiceOptions){
_2f50.setServiceOptions(p);
}
}
var url=this.app.routes.getWikiMembersServiceUrl(this.wikiLabel,p);
return url;
},showUnauthenticatedWarning:function(){
var app=this.app;
quickr.share.wiki.scenes.showUnauthenticatedWarning(app);
},checkPermissions:function(_2f53){
if(_2f53&&_2f53.wiki){
this.wiki=_2f53.wiki;
this.show();
}else{
var url=this.app.routes.getWikiEntryServiceUrl(this.wikiLabel,{fetchAcl:true});
this.app.net.getXml({url:url,handle:dojo.hitch(this,this.getWikiEntryComplete)});
}
},getWikiEntryComplete:function(_2f55,_2f56){
var error;
if(_2f55 instanceof Error){
error={};
error.code=quickr.share.util.getAtomErrorCode(_2f55,_2f56);
this.showError(error);
}else{
this.wiki=new quickr.share.wiki.bean.Wiki(_2f55.documentElement);
this.show();
}
},_show:function(){
var _2f58=this.wiki.getPermissions();
if(_2f58&&_2f58.GrantAccess){
this.show();
}else{
this.showError();
}
},showError:function(error){
var app=this.app;
var _2f5b=app.routes;
var _2f5c=this.app.authenticatedUser;
var d=this.app.document;
d.title=app.nls.WINDOWTITLE.WIKIPAGEERROR;
var _2f5e=[];
if(!_2f5c){
_2f5e.push([dojo.string.substitute(this.app.nls.DOCUMENTCONTENT.ERRORS.LOGIN),this.app.getUrl(),"login"]);
}
var _2f5f=false;
var _2f60=false;
var text=app.nls.APP.ERRORS.CANTMANAGEMEMBERS;
if(error){
if(error.code=="AccessDenied"){
if(!_2f5c){
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED_ANON;
}else{
text=this.app.nls.WIKIPAGE.ERROR.ACCESS_DENIED;
}
_2f5f=true;
}else{
if(error.code=="ItemNotFound"){
app.navigate(_2f5b.getWelcomeUrl());
return;
}
}
}
if(_2f5f){
quickr.share.scenes.applyGenericWarning(this.app,text.TITLE,text.MESSAGES,_2f5e);
}else{
quickr.share.scenes.applyGenericError(this.app,text.TITLE,text.MESSAGES,_2f5e);
}
d.body.style.visibility="visible";
if(_2f60){
this.clearBeforeNavigate=true;
this.app.login();
}
},onmemberschanged:function(users,_2f63){
var h=this.highlightItems;
for(var i in h){
delete h[i];
}
if(users){
for(var user in users){
h[user]=true;
}
}
if(_2f63){
for(var group in _2f63){
h[group]=true;
}
}
this.app.reload();
}});
quickr.share.wiki.scenes.Members.applyMemberActions=function(app,_2f69,scene,node,doc){
var _2f6d={id:doc.getDirectoryId(),name:doc.getDisplayName(),type:doc.getType()};
var _2f6e=dojo.getObject("quickr.share.config.actions.memberItem");
var _2f6f=scene.memberAction=(_2f6e)?_2f6e(app,scene,{member:_2f6d}):[];
var d=app.document;
var _2f71=app.authenticatedUser;
var opt={};
var ul=d.createElement("ul");
ul.className="lotusInlinelist lotusLeft lotusActions";
for(var i=0;i<_2f6f.length;i++){
var _2f75=_2f6f[i];
if(_2f75.isValid(_2f6d,{permissions:scene.wiki.getPermissions()})){
var li=d.createElement("li");
if(i==0){
li.className="lotusFirst";
}
var a=d.createElement("A");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_2f75,_2f75.execute,doc,opt));
a.appendChild(d.createTextNode(_2f75.getName(_2f71,opt)));
if(typeof _2f75.onsuccess=="function"){
dojo.connect(_2f75,"onsuccess",scene,"onmemberschanged");
}
li.appendChild(a);
ul.appendChild(li);
}
}
node.appendChild(ul);
};
quickr.share.wiki.scenes.Members.render=function(d,app,scene){
var opt={app:app,routes:app.routes,scene:scene,libraryId:scene.libraryId,wikiLabel:scene.wikiLabel};
var _2f7c=scene.wiki&&scene.wiki.isCommunityWiki();
var _2f7d=app.routes;
var _2f7e=app.authenticatedUser;
var _2f7f=scene.activeFilters;
var _2f80=scene.actions;
var _2f81=scene.params;
var c=d.getElementById("lotusMain");
if(c.activeTemplate!="members"){
quickr.share.util.removeChildren(c);
var el=d.createElement("div");
el.id="lotusColLeft";
el.className="lotusColLeft";
el.setAttribute("role","navigation");
var accessibilitySubNavigationLink = d.createElement("a");
accessibilitySubNavigationLink.id = accessibilitySubNavigationLink.name = "subNavigation";
el.appendChild(accessibilitySubNavigationLink);
var sideW=app.prefs.get("sww");
if(sideW){
el.style.width=sideW+"px";
}
scene.applyTagsSection(d,el,scene.wiki,app,scene);
scene.applyPageListNav(d,el,scene.wiki,app,scene);
if(!_2f7c){
var _2f85=dojo.filter(scene.typeFilters,function(_2f86){
if(_2f86.isValid){
return _2f86.isValid(app,scene);
}
return true;
});
var _2f87=quickr.share.scenes.findFilter(scene.activeFilters,_2f85);
var f=dojo.hitch(null,this.createPageLink,app,app.routes,scene.params,"memberType");
quickr.share.scenes.createFilterSection(app,el,app.nls.FILTERS.MEMBER_TYPE.TITLE,"wiki.filter.membertype",_2f85,f,_2f87,false);
}
scene.applyToolsNav(d,el,scene.wiki,app,scene);
if(el.firstChild){
dojo.addClass(el.firstChild,"lotusFirst");
}
c.appendChild(el);
c.appendChild(scene.resizeBar(d,scene,app,true));
var el=d.createElement("div");
el.id="lotusContent";
el.className="lotusContent";
el.setAttribute("role","main");
var accessibilityMainContentLink = d.createElement("a");
accessibilityMainContentLink.id = accessibilityMainContentLink.name = "mainContent";
el.appendChild(accessibilityMainContentLink);
quickr.share.wiki.scenes.applyBackToWikiLink(d,el,app,scene);
var _2f89=d.createElement("table");
_2f89.className="lotusLayout lotusHeader";
var tbody=d.createElement("tbody");
var tr=d.createElement("tr");
var td=d.createElement("td");
td.className="qkrWide";
var h1=d.createElement("h1");
h1.className="qkrWideInner";
h1.appendChild(d.createTextNode(dojo.string.substitute(app.nls.HEADER.MEMBERS,[scene.wiki.getTitle()])));
td.appendChild(h1);
var div=d.createElement("div");
if(_2f7f.length>0){
div.className="lotusFilters";
div.appendChild(d.createTextNode(app.nls.CONTENT.FILTERED_BY));
for(var i=0;i<_2f7f.length;i++){
var args;
if(_2f7f[i]&&_2f7f[i].removeAppParams){
args=dojo.clone(_2f81);
_2f7f[i].removeAppParams(args);
}else{
args={};
}
div.appendChild(d.createTextNode(" "));
var a=d.createElement("a");
a.className="lotusFilter";
a.title=app.nls.CONTENT.REMOVE_FILTER_TOOLTIP;
a.appendChild(d.createTextNode(_2f7f[i].longName));
quickr.share.scenes.setOnClick(a,app,_2f7d.getManageMembersUrl(scene.wikiLabel,scene.libraryId,args));
var span=d.createElement("span");
span.className="lotusClose";
span.appendChild(d.createTextNode("X"));
a.appendChild(span);
div.appendChild(a);
}
}
td.appendChild(div);
tr.appendChild(td);
tbody.appendChild(tr);
_2f89.appendChild(tbody);
el.appendChild(_2f89);
if(_2f7c){
var p=d.createElement("p");
p.appendChild(d.createTextNode(app.nls.WIKI_MEMBERSHIP.COMMUNITY_INFO));
el.appendChild(p);
}else{
var div=d.createElement("div");
div.className="lotusBtnContainer lotusActionBar";
scene.renderView(d,div);
var obj={};
for(var i=0;i<_2f80.length;i++){
var _2f95=_2f80[i];
if(_2f95.isValid(app.authenticatedUser,{permissions:scene.wiki.getPermissions()})){
var span=d.createElement("SPAN");
span.id="newButton";
span.className="lotusBtn lotusBtnAction lotusLeft";
var a=d.createElement("A");
a.href="javascript:;";
dojo.connect(a,"onclick",dojo.hitch(_2f95,_2f95.execute));
a.appendChild(d.createTextNode(_2f95.getName(_2f7e,obj)));
span.appendChild(a);
div.appendChild(span);
}
}
var clear=d.createElement("div");
clear.className="lotusClear";
clear.innerHTML="<!-- IE -->";
div.appendChild(clear);
el.appendChild(div);
var div=d.createElement("div");
div.id="scene-list";
el.appendChild(div);
}
c.appendChild(el);
c.activeTemplate="members";
var nav=d.getElementById("lotusColLeft");
scene.applySideNav(d,nav,scene.wiki,opt);
}
};
quickr.share.wiki.scenes.Members.generateSortLink=function(app,_2f99,_2f9a,_2f9b,_2f9c,sort,_2f9e,a){
var p=dojo.clone(_2f9b);
p.sort=sort.id;
p.sortReversed=!_2f9e;
delete p.page;
var url=_2f99.getManageMembersUrl(app.scene.wikiLabel,app.scene.libraryId,p);
quickr.share.scenes.setOnClick(a,app,url);
if(sort.tooltips){
a.title=(_2f9e)?sort.tooltips.normalOrder:a.title=sort.tooltips.reverseOrder;
}
};
quickr.share.wiki.scenes.Members.createPageLink=function(app,_2fa3,_2fa4,type,el,item){
var p=dojo.clone(_2fa4);
p[type]=(item)?item.id:null;
var url=_2fa3.getManageMembersUrl(app.scene.wikiLabel,app.scene.libraryId,p);
quickr.share.scenes.setOnClick(el,app,url);
};
}
if(!dojo._hasResource["quickr.share.scenes.Editor"]){
dojo._hasResource["quickr.share.scenes.Editor"]=true;
dojo.provide("quickr.share.scenes.Editor");
dojo.declare("quickr.share.scenes.Editor",null,{wikiTextEnabled:quickr.share.config.wikiTextEnabled,wikiTextChanged:false,convertedToWikiTextOnce:false,previewedCurrentContent:false,isEditorDirty:false,isEditorDirtySinceLastSave:false,currentMode:"rt",nextMode:"rt",constructor:function constructor(_2faa,_2fab,app,opt){
this.pageId=_2faa;
this.ownerUserName=_2fab;
this.app=app;
this.plugins=[];
if(opt&&opt.getCurrentDraftId){
this.getCurrentDraftId=opt.getCurrentDraftId;
}
},getDraftId:function(){
this.draftId=this.getCurrentDraftId();
return this.draftId;
},isEditingRichText:function(){
return (this.currentMode=="rt");
},isEditingWikiText:function(){
return (this.currentMode=="wt");
},isPreviewing:function(){
return (this.currentMode=="p");
},isEditingRichTextNext:function(){
return (this.nextMode=="rt");
},isEditingWikiTextNext:function(){
return (this.nextMode=="wt");
},isPreviewingNext:function(){
return (this.nextMode=="p");
},_previousMode:function(){
if(this.isPreviewing()){
this.nextMode="p";
dojo.addClass(this.previewTab,"lotusSelected");
dojo.removeClass(this.currentTab,"lotusSelected");
this.currentTab=this.previewTab;
this.editorParent.style.display="none";
this.wikiTextEditor.style.display="none";
this.previewArea.style.display="";
this.currentMode="p";
}else{
if(this.isEditingRichText()){
this.nextMode="rt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.richTextTab,"lotusSelected");
this.currentTab=this.richTextTab;
this.wikiTextEditor.style.display="none";
this.previewArea.style.display="none";
this.editorParent.style.display="";
this.currentMode="rt";
}else{
if(this.isEditingWikiText()){
this.nextMode="wt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.wikiTextTab,"lotusSelected");
this.currentTab=this.wikiTextTab;
this.editorParent.style.display="none";
this.previewArea.style.display="none";
this.wikiTextEditor.style.display="";
this.currentMode="wt";
}
}
}
},isDirty:function(){
return this.isEditorDirty||this._fckIsDirty();
},isDirtySinceLastSave:function(){
return this.isEditorDirtySinceLastSave;
},resetIsDirtySinceLastSave:function(){
this.isEditorDirtySinceLastSave=false;
},resetIsDirty:function(){
this.getFckInstance().ResetIsDirty();
this.isEditorDirty=false;
},getFckInstance:function(){
return FCKeditorAPI.GetInstance("fck");
},_fckIsDirty:function(){
return this.getFckInstance().IsDirty();
},getXHTML:function(){
var fck=this.getFckInstance();
var _2faf=true;
if(fck.EditMode==FCK_EDITMODE_WYSIWYG&&fck.EditorDocument){
var _2fb0=fck.EditorDocument.firstChild.lastChild.childNodes;
_2faf=_2fb0.length>1||(_2fb0.length==1&&_2fb0[0].nodeType==3);
}else{
}
var xhtml;
if(_2faf){
xhtml=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+"<div>"+fck.GetXHTML()+"</div>";
}else{
var _2fb2=fck.GetXHTML();
if(_2fb2.length>0){
xhtml=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+_2fb2;
}else{
xhtml=quickr.share.util.XML_DECLARATION_WITH_ENTITIES+"<div></div>";
}
}
return xhtml;
},getHTML:function(){
return this.getFckInstance().GetHTML();
},setHTML:function(html){
return this.getFckInstance().SetHTML(html);
},getWikiText:function(){
return this.wikiTextEditor.value;
},destroy:function(){
quickr.share.util.destroy(this.plugins);
if(this._onSelectionChangeConnection){
dojo.disconnect(this._onSelectionChangeConnection);
}
},richText:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isEditingRichText()){
this.nextMode="rt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.richTextTab,"lotusSelected");
this.currentTab=this.richTextTab;
if(this.isEditingWikiText()){
this.wikiTextEditor.style.display="none";
if(this.wikiTextChanged){
this._convertToRichText();
}else{
this.editorParent.style.display="";
this.currentMode="rt";
this.onChangeToRichText();
this.getFckInstance().Focus();
}
}else{
this.previewArea.style.display="none";
this.editorParent.style.display="";
this.currentMode="rt";
this.getFckInstance().Focus();
}
}
},preview:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isPreviewing()){
this.nextMode="p";
dojo.addClass(this.previewTab,"lotusSelected");
dojo.removeClass(this.currentTab,"lotusSelected");
this.currentTab=this.previewTab;
var _2fb6=quickr.share.util.generateiWidgetEnablerCodeIfRequired(this.getHTML(),this.previewArea.ownerDocument);
if(_2fb6){
this.previewArea.appendChild(_2fb6);
}
if(this.isEditingRichText()){
this.editorParent.style.display="none";
if(!this.previewedCurrentContent||this._fckIsDirty()){
this.previewArea.innerHTML=this.getHTML();
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
}
this.previewArea.style.display="";
this.currentMode="p";
}else{
this.wikiTextEditor.style.display="none";
if(this.wikiTextChanged){
this._convertToRichText();
}else{
if(!this.previewedCurrentContent||this._fckIsDirty()){
this.previewArea.innerHTML=this.getHTML();
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
}
this.previewArea.style.display="";
this.currentMode="p";
this.onChangeToPreview();
}
}
}
},wikiText:function(e){
if(e){
dojo.stopEvent(e);
}
if(!this.isEditingWikiText()){
this.nextMode="wt";
dojo.removeClass(this.currentTab,"lotusSelected");
dojo.addClass(this.wikiTextTab,"lotusSelected");
this.currentTab=this.wikiTextTab;
if(this.isEditingRichText()){
this.editorParent.style.display="none";
}else{
this.previewArea.style.display="none";
}
if(!this.convertedToWikiTextOnce||this._fckIsDirty()){
this._convertToWiki();
}else{
this.wikiTextEditor.style.display="";
this.currentMode="wt";
this.onChangeToWikiText();
this.wikiTextEditor.focus();
}
}
},wikitextonchange:function(e){
this.wikiTextChanged=true;
this.isEditorDirty=true;
this.isEditorDirtySinceLastSave=true;
this.onContentChange();
},onChangeToWikiText:function(e){
if(e){
dojo.stopEvent(e);
}
},onChangeToRichText:function(e){
if(e){
dojo.stopEvent(e);
}
},onChangeToPreview:function(e){
if(e){
dojo.stopEvent(e);
}
},_convertToWiki:function(){
var HTML=this.getXHTML();
this._postConversionBody(HTML,"text/html",dojo.hitch(this,this._convertToWikiComplete));
},_convertToWikiComplete:function(_2fbd,_2fbe){
this.editorProgress.style.display="none";
if(_2fbd instanceof Error){
this.onerror(quickr.share.util.getAtomErrorCode(_2fbd,_2fbe));
this._previousMode();
}else{
var d=_2fbd;
if(d.documentElement&&quickr.util.dom.isNamedNS(d.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var e=d.documentElement;
var _2fc1=quickr.share.util.getChildElementTextContent(e,"content");
this.wikiTextEditor.value=_2fc1;
if(this._fckIsDirty()){
this.isEditorDirty=true;
this.isEditorDirtySinceLastSave=true;
this.previewedCurrentContent=false;
this.getFckInstance().ResetIsDirty();
}
this.convertedToWikiTextOnce=true;
this.wikiTextEditor.style.display="";
this.currentMode="wt";
this.onChangeToWikiText();
this.wikiTextEditor.focus();
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_WIKIMARKUP_ERROR);
this._previousMode();
}
}
},onerror:function(error){
if(error=="InvalidXhtml"){
alert(this.app.nls.PAGEEDIT.INVALID_XHTML);
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_WIKIMARKUP_ERROR);
}
},_convertToRichText:function(_2fc3,_2fc4){
var _2fc5=this.wikiTextEditor.value;
this._postConversionBody(_2fc5,"text/creole",dojo.hitch(this,this._convertToRichTextComplete));
},_postConversionBody:function(_2fc6,_2fc7,_2fc8){
this.editorProgress.style.display="";
var doc=quickr.share.util.newXMLDocument("entry",quickr.share.util.ATOM_NAMESPACE,[quickr.share.util.DOCUMENTS_ATOM_NAMESPACE]);
var entry=doc.documentElement;
var _2fcb=quickr.share.util.createElementNS(doc,"category",quickr.share.util.ATOM_NAMESPACE);
_2fcb.setAttribute("term","content_conversion");
_2fcb.setAttribute("label","content_conversion");
_2fcb.setAttribute("scheme","tag:ibm.com,2006:td/type");
entry.appendChild(_2fcb);
if(this.pageId){
var _2fcc=quickr.share.util.createElementNS(doc,"documentUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2fcc.appendChild(doc.createTextNode(this.pageId));
entry.appendChild(_2fcc);
}else{
if(this.draftId){
var _2fcd=quickr.share.util.createElementNS(doc,"draftUuid",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2fcd.appendChild(doc.createTextNode(this.draftId));
entry.appendChild(_2fcd);
}
}
var _2fce=quickr.share.util.createElementNS(doc,"documentOwner",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
var _2fcf=quickr.share.util.createElementNS(doc,"name",quickr.share.util.DOCUMENTS_ATOM_NAMESPACE);
_2fcf.appendChild(doc.createTextNode(this.ownerUserName));
_2fce.appendChild(_2fcf);
entry.appendChild(_2fce);
var _2fd0=quickr.share.util.createElementNS(doc,"content",quickr.share.util.ATOM_NAMESPACE);
_2fd0.setAttribute("type",_2fc7);
_2fd0.appendChild(doc.createTextNode(_2fc6));
entry.appendChild(_2fd0);
var _2fd1=quickr.share.wiki.util.prependXMLDeclaration(quickr.share.util.serializeXMLDocument(doc));
this.app.net.postXml({url:this.app.routes.getWikiConversionServiceUrl(),timeout:(dojo.getObject("quickr.share.config.services.timeout.request")||10)*1000,postData:_2fd1,headers:{"Content-Type":"application/atom+xml; charset=\"UTF-8\""},handle:_2fc8});
},_convertToRichTextComplete:function(_2fd2,_2fd3){
this.editorProgress.style.display="none";
if(_2fd2 instanceof Error){
alert(this.app.nls.PAGEEDIT.CONVERT_TO_RICHTEXT_ERROR);
this._previousMode();
}else{
var d=_2fd2;
if(d.documentElement&&quickr.util.dom.isNamedNS(d.documentElement,"entry",quickr.util.dom.NAMESPACES.ATOM)){
var e=d.documentElement;
var _2fd6=quickr.share.util.getChildElementTextContent(e,"content");
this.setHTML(_2fd6);
this.wikiTextChanged=false;
if(this.isPreviewingNext()){
this.previewArea.innerHTML=_2fd6;
quickr.share.pageutil.parsePreviewContent(this.previewArea,this.app);
this.previewedCurrentContent=true;
this.previewArea.style.display="";
this.currentMode="p";
this.onChangeToPreview();
}else{
this.editorParent.style.display="";
this.currentMode="rt";
this.onChangeToRichText();
this.getFckInstance().Focus();
}
}else{
alert(this.app.nls.PAGEEDIT.CONVERT_TO_RICHTEXT_ERROR);
this._previousMode();
}
}
},updateEditorInfoArea:function(el){
var span=this.editorInfoArea;
while(span.firstChild){
span.removeChild(span.firstChild);
}
span.appendChild(el);
},render:function(d,el,opt,html){
var div=d.createElement("div");
div.className="lotusTabContainer";
div.style.height="3em";
div.style.marginBottom="0px";
div.style.width="99%";
var span=this.editorInfoArea=d.createElement("span");
span.className="lotusRight";
span.style.marginTop="15px";
div.appendChild(span);
var ul=d.createElement("ul");
ul.className="lotusTabs";
var li=d.createElement("li");
li.className="lotusSelected";
var span=d.createElement("span");
var _2fe1=d.createElement("a");
_2fe1.href="javascript:;";
_2fe1.onclick=function(){
return false;
};
_2fe1.appendChild(d.createTextNode(this.app.nls.PAGEEDIT.RICH_TEXT));
span.appendChild(_2fe1);
li.appendChild(span);
this.richTextTab=this.currentTab=li;
ul.appendChild(li);
if(this.wikiTextEnabled){
var li=d.createElement("li");
var span=d.createElement("span");
var _2fe2=d.createElement("a");
_2fe2.href="javascript:;";
_2fe2.onclick=function(){
return false;
};
_2fe2.appendChild(d.createTextNode(this.app.nls.PAGEEDIT.WIKI_MARKUP));
span.appendChild(_2fe2);
li.appendChild(span);
this.wikiTextTab=li;
ul.appendChild(li);
}
var li=d.createElement("li");
var span=d.createElement("span");
var _2fe3=d.createElement("a");
_2fe3.href="javascript:;";
_2fe3.onclick=function(){
return false;
};
_2fe3.appendChild(d.createTextNode(this.app.nls.PAGEEDIT.PREVIEW));
span.appendChild(_2fe3);
li.appendChild(span);
this.previewTab=li;
ul.appendChild(li);
div.appendChild(ul);
el.appendChild(div);
var div=this.editorParent=d.createElement("div");
div.className="qkrPageEditor";
div.style.width="99%";
var _2fe4=this.editorLocation=d.createElement("div");
div.appendChild(_2fe4);
el.appendChild(div);
var _2fe5=this.previewArea=d.createElement("div");
_2fe5.style.display="none";
_2fe5.style.width="99%";
_2fe5.className="qkrPageEditor qkrWikiPreview";
el.appendChild(_2fe5);
var _2fe6=this.wikiTextEditor=d.createElement("textarea");
_2fe6.style.display="none";
_2fe6.style.width="99%";
_2fe6.className="qkrPageEditor";
el.appendChild(_2fe6);
var _2fe7=this.editorProgress=d.createElement("div");
_2fe7.style.display="none";
_2fe7.className="qkrPageEditor";
var _2fe8=d.createElement("img");
_2fe8.src=(dojo.getObject("quickr.share.config.baseUri")||"/")+"nav/common/styles/images/loadingSmall.gif";
_2fe8.setAttribute("alt",this.app.nls.LOADING);
_2fe8.height=16;
_2fe8.width=16;
_2fe8.style.margin="auto";
_2fe8.style.display="block";
_2fe7.appendChild(_2fe8);
el.appendChild(_2fe7);
var fck=new FCKeditor("fck",null,"425","Page",html||"");
fck.BasePath=(dojo.getObject("quickr.share.config.baseUri")||"/")+"js/fckeditor/";
fck.Config["CustomConfigurationsPath"]=(dojo.getObject("quickr.share.config.baseUri")||"/")+"js/fckeditor/sharefckconfig.js";
var _2fea=new quickr.share.action.InsertLink(opt.user.id,opt.documentId,!opt.documentId,opt.documentFeedUrl,opt.onattachmentcountupdate?dojo.hitch(opt.scene,opt.onattachmentcountupdate):null,false,opt.app,dojo.hitch(this,this.getDraftId));
this.app.insertLinkDialog=_2fea;
this.plugins.push(_2fea);
var _2feb=new quickr.share.action.InsertLink(opt.user.id,opt.documentId,!opt.documentId,opt.documentFeedUrl,opt.onattachmentcountupdate?dojo.hitch(opt.scene,opt.onattachmentcountupdate):null,true,opt.app,dojo.hitch(this,this.getDraftId));
this.app.insertImageDialog=_2feb;
this.plugins.push(_2feb);
this.editorLocation.innerHTML=fck.CreateHtml();
if(!this._onSelectionChangeConnection){
this._onSelectionChangeConnection=dojo.connect(quickr.share.scenes.Editor,"onSelectionChange",this,"onContentChange");
}
if(this.wikiTextEnabled){
dojo.connect(_2fe6,"onkeypress",dojo.hitch(this,this.wikitextonchange));
dojo.connect(_2fe6,"onclick",dojo.hitch(this,this.wikitextonchange));
}
dojo.connect(_2fe1,"onclick",dojo.hitch(this,this.richText));
if(this.wikiTextEnabled){
dojo.connect(_2fe2,"onclick",dojo.hitch(this,this.wikiText));
}
dojo.connect(_2fe3,"onclick",dojo.hitch(this,this.preview));
},onContentChange:function(){
this.isEditorDirtySinceLastSave=this.isEditorDirty||this._fckIsDirty();
}});
quickr.share.scenes.Editor.onSelectionChange=function(_2fec){
};
FCKeditor_OnComplete=function(_2fed){
_2fed.ResetIsDirty();
_2fed.Events.AttachEvent("OnSelectionChange",quickr.share.scenes.Editor.onSelectionChange);
};
}
if(!dojo._hasResource["quickr.share.action.CreatePage"]){
dojo._hasResource["quickr.share.action.CreatePage"]=true;
dojo.provide("quickr.share.action.CreatePage");
dojo.declare("quickr.share.action.CreatePage",[quickr.share.action.Action],{constructor:function(app,scene,opt){
this.app=app;
this.scene=scene;
this.name=this.app.nls.CREATE_PAGE.ACTION;
this.tooltip=this.app.nls.CREATE_PAGE.ACTION_TOOLTIP;
dojo.mixin(this,opt||{});
},isValid:function(user,opt){
return (this.app.authenticatedUser&&user.id==this.app.authenticatedUser.id)&&!dojo.getObject("quickr.share.config.disablePages");
},execute:function(user,opt,e){
if(e){
dojo.stopEvent(e);
}
this.app.navigate(this.app.routes.getUserCreatePagesUrl(user.id));
}});
}
if(!dojo._hasResource["quickr.share.action.EditPage"]){
dojo._hasResource["quickr.share.action.EditPage"]=true;
dojo.provide("quickr.share.action.EditPage");
dojo.declare("quickr.share.action.EditPage",[quickr.share.action.Action],{constructor:function(app,scene){
this.app=app;
this.scene=scene;
this.name=this.app.nls.CONTENT.EDIT;
this.tooltip=this.app.nls.CONTENT.EDIT_PAGE_TOOLTIP;
},isValid:function(file,opt){
if(opt&&opt.permissions){
return opt.permissions.canEdit(file)||file.getPermissions().Edit;
}
return file.getPermissions().Edit;
},execute:function(file,opt,e){
if(e){
dojo.stopEvent(e);
}
var _2ffd=file.getDraftId();
if(_2ffd!=null&&_2ffd!=""){
if(confirm(this.app.nls.CONTENT.EDIT_PAGE_DRAFT_CONFIRM)){
this.app.navigate(this.app.routes.getEditDraftSummaryUrl(file.getAuthor().id,_2ffd));
}
}else{
if(typeof opt.getUnsavedChangesList=="function"){
var _2ffe=opt.getUnsavedChangesList();
var _2fff=false;
var _2ffd;
for(var i=0;i<_2ffe.length&&!_2fff;i++){
if(_2ffe[i].getDocumentId()==file.getId()){
_2fff=true;
_2ffd=_2ffe[i].getId();
}
}
if(_2fff){
if(confirm(this.app.nls.CONTENT.EDIT_PAGE_DRAFT_CONFIRM)){
this.app.navigate(this.app.routes.getEditDraftSummaryUrl(file.getAuthor().id,_2ffd));
}
}else{
this.app.navigate(this.app.routes.getEditPageSummaryUrl(file.getAuthor().id,file.getId()));
}
}else{
this.app.navigate(this.app.routes.getEditPageSummaryUrl(file.getAuthor().id,file.getId()));
}
}
},complete:function(_3001,_3002){
if(_3001 instanceof Error){
this.onerror("unknown");
}else{
this.onsuccess();
}
},onsuccess:function(){
},ondelete:function(){
},onerror:function(code){
alert(this.app.nls.CONTENT.EDIT_PAGE_ERROR);
}});
}
if(!dojo._hasResource["quickr.share.wiki.WikiCompiler"]){
dojo._hasResource["quickr.share.wiki.WikiCompiler"]=true;
dojo.provide("quickr.share.wiki.WikiCompiler");
dojo.declare("quickr.share.wiki.WikiCompiler",[quickr.share.wiki.Wiki],{});
}
dojo.i18n._preloadLocalizations("dojo.nls.wiki-packaged",["nl","tr","no","ko","el","en","ROOT","zh-cn","hu","es","fi-fi","pt-br","fi","xx","ru","it","fr","iw","cs","de-de","fr-fr","it-it","es-es","ja","da","pl","de","sv","pt","zh-tw","pt-pt","nl-nl","ko-kr","ar","en-us","zh","ja-jp"]);


var def = dojo.getObject("quickr.share.config.templates.base",true);
def.connections="templates/connectionsTemplate.jsp";
def.header=function(d, el, app) {return quickr.share.scenes.applyConnectionsTemplate("header", d, el, app);};
def.footer=function(d, el, app) {return quickr.share.scenes.applyConnectionsTemplate("footer", d, el, app);};

